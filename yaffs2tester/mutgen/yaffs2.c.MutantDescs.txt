23: /* MUTANT (del_stmt) */ /* 	obj->yst_uid = oh->yst_uid; */ 
24: /* MUTANT (del_stmt) */ /* 	obj->yst_gid = oh->yst_gid; */ 
25: /* MUTANT (del_stmt) */ /* 	obj->yst_atime = oh->yst_atime; */ 
26: /* MUTANT (del_stmt) */ /* 	obj->yst_mtime = oh->yst_mtime; */ 
27: /* MUTANT (del_stmt) */ /* 	obj->yst_ctime = oh->yst_ctime; */ 
28: /* MUTANT (del_stmt) */ /* 	obj->yst_rdev = oh->yst_rdev; */ 
35: /* MUTANT (rep_const) */		oh->win_atime[1] = obj->win_atime[0];
35: /* MUTANT (rep_const) */		oh->win_atime[-1] = obj->win_atime[0];
35: /* MUTANT (rep_const) */		oh->win_atime[0] = obj->win_atime[1];
35: /* MUTANT (rep_const) */		oh->win_atime[0] = obj->win_atime[-1];
36: /* MUTANT (del_stmt) */ /* 		oh->win_ctime[0] = obj->win_ctime[0]; */ 
36: /* MUTANT (rep_const) */		oh->win_ctime[1] = obj->win_ctime[0];
36: /* MUTANT (rep_const) */		oh->win_ctime[-1] = obj->win_ctime[0];
36: /* MUTANT (rep_const) */		oh->win_ctime[0] = obj->win_ctime[1];
36: /* MUTANT (rep_const) */		oh->win_ctime[0] = obj->win_ctime[-1];
37: /* MUTANT (del_stmt) */ /* 		oh->win_mtime[0] = obj->win_mtime[0]; */ 
37: /* MUTANT (rep_const) */		oh->win_mtime[1] = obj->win_mtime[0];
37: /* MUTANT (rep_const) */		oh->win_mtime[-1] = obj->win_mtime[0];
37: /* MUTANT (rep_const) */		oh->win_mtime[0] = obj->win_mtime[1];
37: /* MUTANT (rep_const) */		oh->win_mtime[0] = obj->win_mtime[-1];
38: /* MUTANT (del_stmt) */ /* 		oh->win_atime[1] = obj->win_atime[1]; */ 
38: /* MUTANT (rep_const) */		oh->win_atime[0] = obj->win_atime[1];
38: /* MUTANT (rep_const) */		oh->win_atime[-1] = obj->win_atime[1];
38: /* MUTANT (rep_const) */		oh->win_atime[((1)+1)] = obj->win_atime[1];
38: /* MUTANT (rep_const) */		oh->win_atime[1] = obj->win_atime[0];
38: /* MUTANT (rep_const) */		oh->win_atime[1] = obj->win_atime[-1];
38: /* MUTANT (rep_const) */		oh->win_atime[1] = obj->win_atime[((1)+1)];
39: /* MUTANT (del_stmt) */ /* 		oh->win_ctime[1] = obj->win_ctime[1]; */ 
39: /* MUTANT (rep_const) */		oh->win_ctime[0] = obj->win_ctime[1];
39: /* MUTANT (rep_const) */		oh->win_ctime[-1] = obj->win_ctime[1];
39: /* MUTANT (rep_const) */		oh->win_ctime[((1)+1)] = obj->win_ctime[1];
39: /* MUTANT (rep_const) */		oh->win_ctime[1] = obj->win_ctime[0];
39: /* MUTANT (rep_const) */		oh->win_ctime[1] = obj->win_ctime[-1];
39: /* MUTANT (rep_const) */		oh->win_ctime[1] = obj->win_ctime[((1)+1)];
40: /* MUTANT (del_stmt) */ /* 		oh->win_mtime[1] = obj->win_mtime[1]; */ 
40: /* MUTANT (rep_const) */		oh->win_mtime[0] = obj->win_mtime[1];
40: /* MUTANT (rep_const) */		oh->win_mtime[-1] = obj->win_mtime[1];
40: /* MUTANT (rep_const) */		oh->win_mtime[((1)+1)] = obj->win_mtime[1];
40: /* MUTANT (rep_const) */		oh->win_mtime[1] = obj->win_mtime[0];
40: /* MUTANT (rep_const) */		oh->win_mtime[1] = obj->win_mtime[-1];
40: /* MUTANT (rep_const) */		oh->win_mtime[1] = obj->win_mtime[((1)+1)];
43: /* MUTANT (del_stmt) */ /* 		oh->yst_gid = obj->yst_gid; */ 
44: /* MUTANT (del_stmt) */ /* 		oh->yst_atime = obj->yst_atime; */ 
45: /* MUTANT (del_stmt) */ /* 		oh->yst_mtime = obj->yst_mtime; */ 
46: /* MUTANT (del_stmt) */ /* 		oh->yst_ctime = obj->yst_ctime; */ 
47: /* MUTANT (del_stmt) */ /* 		oh->yst_rdev = obj->yst_rdev; */ 
57: /* MUTANT (del_stmt) */ /* 		obj->win_ctime[0] = obj->win_mtime[0] = obj->win_atime[0]; */ 
57: /* MUTANT (rep_const) */		obj->win_ctime[1] = obj->win_mtime[0] = obj->win_atime[0];
57: /* MUTANT (rep_const) */		obj->win_ctime[-1] = obj->win_mtime[0] = obj->win_atime[0];
57: /* MUTANT (rep_const) */		obj->win_ctime[0] = obj->win_mtime[1] = obj->win_atime[0];
57: /* MUTANT (rep_const) */		obj->win_ctime[0] = obj->win_mtime[-1] = obj->win_atime[0];
57: /* MUTANT (rep_const) */		obj->win_ctime[0] = obj->win_mtime[0] = obj->win_atime[1];
57: /* MUTANT (rep_const) */		obj->win_ctime[0] = obj->win_mtime[0] = obj->win_atime[-1];
58: /* MUTANT (del_stmt) */ /* 		obj->win_ctime[1] = obj->win_mtime[1] = obj->win_atime[1]; */ 
58: /* MUTANT (rep_const) */		obj->win_ctime[0] = obj->win_mtime[1] = obj->win_atime[1];
58: /* MUTANT (rep_const) */		obj->win_ctime[-1] = obj->win_mtime[1] = obj->win_atime[1];
58: /* MUTANT (rep_const) */		obj->win_ctime[((1)+1)] = obj->win_mtime[1] = obj->win_atime[1];
58: /* MUTANT (rep_const) */		obj->win_ctime[1] = obj->win_mtime[0] = obj->win_atime[1];
58: /* MUTANT (rep_const) */		obj->win_ctime[1] = obj->win_mtime[-1] = obj->win_atime[1];
58: /* MUTANT (rep_const) */		obj->win_ctime[1] = obj->win_mtime[((1)+1)] = obj->win_atime[1];
58: /* MUTANT (rep_const) */		obj->win_ctime[1] = obj->win_mtime[1] = obj->win_atime[0];
58: /* MUTANT (rep_const) */		obj->win_ctime[1] = obj->win_mtime[1] = obj->win_atime[-1];
58: /* MUTANT (rep_const) */		obj->win_ctime[1] = obj->win_mtime[1] = obj->win_atime[((1)+1)];
61: /* MUTANT (rep_const) */	yaffs_load_current_time(obj,0,1);
61: /* MUTANT (rep_const) */	yaffs_load_current_time(obj,-1,1);
61: /* MUTANT (rep_const) */	yaffs_load_current_time(obj,((1)+1),1);
61: /* MUTANT (rep_const) */	yaffs_load_current_time(obj,1,0);
61: /* MUTANT (rep_const) */	yaffs_load_current_time(obj,1,-1);
61: /* MUTANT (rep_const) */	yaffs_load_current_time(obj,1,((1)+1));
62: /* MUTANT (del_stmt) */ /* 	obj->yst_rdev = rdev; */ 
63: /* MUTANT (del_stmt) */ /* 	obj->yst_uid = uid; */ 
64: /* MUTANT (del_stmt) */ /* 	obj->yst_gid = gid; */ 
72: /* MUTANT (rep_const) */		the_obj->win_ctime[1] = the_obj->win_mtime[0] =
72: /* MUTANT (rep_const) */		the_obj->win_ctime[-1] = the_obj->win_mtime[0] =
72: /* MUTANT (rep_const) */		the_obj->win_ctime[0] = the_obj->win_mtime[1] =
72: /* MUTANT (rep_const) */		the_obj->win_ctime[0] = the_obj->win_mtime[-1] =
73: /* MUTANT (rep_const) */		    the_obj->win_atime[1];
73: /* MUTANT (rep_const) */		    the_obj->win_atime[-1];
74: /* MUTANT (rep_const) */		the_obj->win_ctime[0] = the_obj->win_mtime[1] =
74: /* MUTANT (rep_const) */		the_obj->win_ctime[-1] = the_obj->win_mtime[1] =
74: /* MUTANT (rep_const) */		the_obj->win_ctime[((1)+1)] = the_obj->win_mtime[1] =
74: /* MUTANT (rep_const) */		the_obj->win_ctime[1] = the_obj->win_mtime[0] =
74: /* MUTANT (rep_const) */		the_obj->win_ctime[1] = the_obj->win_mtime[-1] =
74: /* MUTANT (rep_const) */		the_obj->win_ctime[1] = the_obj->win_mtime[((1)+1)] =
75: /* MUTANT (rep_const) */		    the_obj->win_atime[0];
75: /* MUTANT (rep_const) */		    the_obj->win_atime[-1];
75: /* MUTANT (rep_const) */		    the_obj->win_atime[((1)+1)];
80: /* MUTANT (negate) */        if(!(do_a))
82: /* MUTANT (negate) */        if(!(do_c))
89: /* MUTANT (del_stmt) */ /* 	YCHAR *alias = NULL; */ 
90: /* MUTANT (del_stmt) */ /* 	obj = yaffs_get_equivalent_obj(obj); */ 
97: /* MUTANT (negate) */		if(!(!alias))
98: /* MUTANT (rep_const) */			return 1;
98: /* MUTANT (rep_const) */			return -1;
99: /* MUTANT (del_stmt) */ /* 		return mystrnlen(alias,YAFFS_MAX_ALIAS_LENGTH); */ 
101: /* MUTANT (rep_const) */		return 1;
101: /* MUTANT (rep_const) */		return -1;
107: /* MUTANT (del_stmt) */ /* 	unsigned int valid = attr->ia_valid; */ 
109: /* MUTANT (negate) */	if(! (valid & ATTR_MODE))
111: /* MUTANT (negate) */	if(! (valid & ATTR_UID))
113: /* MUTANT (negate) */	if(! (valid & ATTR_GID))
116: /* MUTANT (negate) */	if(! (valid & ATTR_ATIME))
118: /* MUTANT (negate) */	if(! (valid & ATTR_CTIME))
120: /* MUTANT (negate) */	if(! (valid & ATTR_MTIME))
123: /* MUTANT (negate) */	if(! (valid & ATTR_SIZE))
126: /* MUTANT (del_stmt) */ /* 	yaffs_update_oh(obj, NULL, 1, 0, 0, NULL); */ 
126: /* MUTANT (rep_const) */	yaffs_update_oh(obj, NULL, 0, 0, 0, NULL);
126: /* MUTANT (rep_const) */	yaffs_update_oh(obj, NULL, -1, 0, 0, NULL);
126: /* MUTANT (rep_const) */	yaffs_update_oh(obj, NULL, ((1)+1), 0, 0, NULL);
126: /* MUTANT (rep_const) */	yaffs_update_oh(obj, NULL, 1, 1, 0, NULL);
126: /* MUTANT (rep_const) */	yaffs_update_oh(obj, NULL, 1, -1, 0, NULL);
126: /* MUTANT (rep_const) */	yaffs_update_oh(obj, NULL, 1, 0, 1, NULL);
126: /* MUTANT (rep_const) */	yaffs_update_oh(obj, NULL, 1, 0, -1, NULL);
128: /* MUTANT (del_stmt) */ /* 	return YAFFS_OK; */ 
134: /* MUTANT (del_stmt) */ /* 	unsigned int valid = 0; */ 
134: /* MUTANT (rep_const) */	unsigned int valid = 1;
134: /* MUTANT (rep_const) */	unsigned int valid = -1;
136: /* MUTANT (del_stmt) */ /* 	attr->ia_mode = obj->yst_mode; */ 
137: /* MUTANT (del_stmt) */ /* 	valid |= ATTR_MODE; */ 
138: /* MUTANT (del_stmt) */ /* 	attr->ia_uid = obj->yst_uid; */ 
139: /* MUTANT (del_stmt) */ /* 	valid |= ATTR_UID; */ 
140: /* MUTANT (del_stmt) */ /* 	attr->ia_gid = obj->yst_gid; */ 
141: /* MUTANT (del_stmt) */ /* 	valid |= ATTR_GID; */ 
143: /* MUTANT (del_stmt) */ /* 	Y_TIME_CONVERT(attr->ia_atime) = obj->yst_atime; */ 
144: /* MUTANT (del_stmt) */ /* 	valid |= ATTR_ATIME; */ 
145: /* MUTANT (del_stmt) */ /* 	Y_TIME_CONVERT(attr->ia_ctime) = obj->yst_ctime; */ 
146: /* MUTANT (del_stmt) */ /* 	valid |= ATTR_CTIME; */ 
147: /* MUTANT (del_stmt) */ /* 	Y_TIME_CONVERT(attr->ia_mtime) = obj->yst_mtime; */ 
148: /* MUTANT (del_stmt) */ /* 	valid |= ATTR_MTIME; */ 
150: /* MUTANT (del_stmt) */ /* 	attr->ia_size = yaffs_get_file_size(obj); */ 
151: /* MUTANT (del_stmt) */ /* 	valid |= ATTR_SIZE; */ 
153: /* MUTANT (del_stmt) */ /* 	attr->ia_valid = valid; */ 
155: /* MUTANT (del_stmt) */ /* 	return YAFFS_OK; */ 
194: /* MUTANT (rep_const) */	1x00, 0x55, 0x59, 0x0c, 0x65, 0x30, 0x3c, 0x69,
194: /* MUTANT (rep_const) */	-1x00, 0x55, 0x59, 0x0c, 0x65, 0x30, 0x3c, 0x69,
194: /* MUTANT (rep_const) */	0x00, 1x55, 0x59, 0x0c, 0x65, 0x30, 0x3c, 0x69,
194: /* MUTANT (rep_const) */	0x00, -1x55, 0x59, 0x0c, 0x65, 0x30, 0x3c, 0x69,
194: /* MUTANT (rep_const) */	0x00, 0x55, 1x59, 0x0c, 0x65, 0x30, 0x3c, 0x69,
194: /* MUTANT (rep_const) */	0x00, 0x55, -1x59, 0x0c, 0x65, 0x30, 0x3c, 0x69,
194: /* MUTANT (rep_const) */	0x00, 0x55, 0x59, 1x0c, 0x65, 0x30, 0x3c, 0x69,
194: /* MUTANT (rep_const) */	0x00, 0x55, 0x59, -1x0c, 0x65, 0x30, 0x3c, 0x69,
194: /* MUTANT (rep_const) */	0x00, 0x55, 0x59, 0x0c, 1x65, 0x30, 0x3c, 0x69,
194: /* MUTANT (rep_const) */	0x00, 0x55, 0x59, 0x0c, -1x65, 0x30, 0x3c, 0x69,
194: /* MUTANT (rep_const) */	0x00, 0x55, 0x59, 0x0c, 0x65, 1x30, 0x3c, 0x69,
194: /* MUTANT (rep_const) */	0x00, 0x55, 0x59, 0x0c, 0x65, -1x30, 0x3c, 0x69,
194: /* MUTANT (rep_const) */	0x00, 0x55, 0x59, 0x0c, 0x65, 0x30, 1x3c, 0x69,
194: /* MUTANT (rep_const) */	0x00, 0x55, 0x59, 0x0c, 0x65, 0x30, -1x3c, 0x69,
194: /* MUTANT (rep_const) */	0x00, 0x55, 0x59, 0x0c, 0x65, 0x30, 0x3c, 1x69,
194: /* MUTANT (rep_const) */	0x00, 0x55, 0x59, 0x0c, 0x65, 0x30, 0x3c, -1x69,
195: /* MUTANT (rep_const) */	1x69, 0x3c, 0x30, 0x65, 0x0c, 0x59, 0x55, 0x00,
195: /* MUTANT (rep_const) */	-1x69, 0x3c, 0x30, 0x65, 0x0c, 0x59, 0x55, 0x00,
195: /* MUTANT (rep_const) */	0x69, 1x3c, 0x30, 0x65, 0x0c, 0x59, 0x55, 0x00,
195: /* MUTANT (rep_const) */	0x69, -1x3c, 0x30, 0x65, 0x0c, 0x59, 0x55, 0x00,
195: /* MUTANT (rep_const) */	0x69, 0x3c, 1x30, 0x65, 0x0c, 0x59, 0x55, 0x00,
195: /* MUTANT (rep_const) */	0x69, 0x3c, -1x30, 0x65, 0x0c, 0x59, 0x55, 0x00,
195: /* MUTANT (rep_const) */	0x69, 0x3c, 0x30, 1x65, 0x0c, 0x59, 0x55, 0x00,
195: /* MUTANT (rep_const) */	0x69, 0x3c, 0x30, -1x65, 0x0c, 0x59, 0x55, 0x00,
195: /* MUTANT (rep_const) */	0x69, 0x3c, 0x30, 0x65, 1x0c, 0x59, 0x55, 0x00,
195: /* MUTANT (rep_const) */	0x69, 0x3c, 0x30, 0x65, -1x0c, 0x59, 0x55, 0x00,
195: /* MUTANT (rep_const) */	0x69, 0x3c, 0x30, 0x65, 0x0c, 1x59, 0x55, 0x00,
195: /* MUTANT (rep_const) */	0x69, 0x3c, 0x30, 0x65, 0x0c, -1x59, 0x55, 0x00,
195: /* MUTANT (rep_const) */	0x69, 0x3c, 0x30, 0x65, 0x0c, 0x59, 1x55, 0x00,
195: /* MUTANT (rep_const) */	0x69, 0x3c, 0x30, 0x65, 0x0c, 0x59, -1x55, 0x00,
195: /* MUTANT (rep_const) */	0x69, 0x3c, 0x30, 0x65, 0x0c, 0x59, 0x55, 1x00,
195: /* MUTANT (rep_const) */	0x69, 0x3c, 0x30, 0x65, 0x0c, 0x59, 0x55, -1x00,
196: /* MUTANT (rep_const) */	1x95, 0xc0, 0xcc, 0x99, 0xf0, 0xa5, 0xa9, 0xfc,
196: /* MUTANT (rep_const) */	-1x95, 0xc0, 0xcc, 0x99, 0xf0, 0xa5, 0xa9, 0xfc,
196: /* MUTANT (rep_const) */	0x95, 1xc0, 0xcc, 0x99, 0xf0, 0xa5, 0xa9, 0xfc,
196: /* MUTANT (rep_const) */	0x95, -1xc0, 0xcc, 0x99, 0xf0, 0xa5, 0xa9, 0xfc,
196: /* MUTANT (rep_const) */	0x95, 0xc0, 1xcc, 0x99, 0xf0, 0xa5, 0xa9, 0xfc,
196: /* MUTANT (rep_const) */	0x95, 0xc0, -1xcc, 0x99, 0xf0, 0xa5, 0xa9, 0xfc,
196: /* MUTANT (rep_const) */	0x95, 0xc0, 0xcc, 1x99, 0xf0, 0xa5, 0xa9, 0xfc,
196: /* MUTANT (rep_const) */	0x95, 0xc0, 0xcc, -1x99, 0xf0, 0xa5, 0xa9, 0xfc,
196: /* MUTANT (rep_const) */	0x95, 0xc0, 0xcc, 0x99, 1xf0, 0xa5, 0xa9, 0xfc,
196: /* MUTANT (rep_const) */	0x95, 0xc0, 0xcc, 0x99, -1xf0, 0xa5, 0xa9, 0xfc,
196: /* MUTANT (rep_const) */	0x95, 0xc0, 0xcc, 0x99, 0xf0, 1xa5, 0xa9, 0xfc,
196: /* MUTANT (rep_const) */	0x95, 0xc0, 0xcc, 0x99, 0xf0, -1xa5, 0xa9, 0xfc,
196: /* MUTANT (rep_const) */	0x95, 0xc0, 0xcc, 0x99, 0xf0, 0xa5, 1xa9, 0xfc,
196: /* MUTANT (rep_const) */	0x95, 0xc0, 0xcc, 0x99, 0xf0, 0xa5, -1xa9, 0xfc,
196: /* MUTANT (rep_const) */	0x95, 0xc0, 0xcc, 0x99, 0xf0, 0xa5, 0xa9, 1xfc,
196: /* MUTANT (rep_const) */	0x95, 0xc0, 0xcc, 0x99, 0xf0, 0xa5, 0xa9, -1xfc,
197: /* MUTANT (rep_const) */	1xfc, 0xa9, 0xa5, 0xf0, 0x99, 0xcc, 0xc0, 0x95,
197: /* MUTANT (rep_const) */	-1xfc, 0xa9, 0xa5, 0xf0, 0x99, 0xcc, 0xc0, 0x95,
197: /* MUTANT (rep_const) */	0xfc, 1xa9, 0xa5, 0xf0, 0x99, 0xcc, 0xc0, 0x95,
197: /* MUTANT (rep_const) */	0xfc, -1xa9, 0xa5, 0xf0, 0x99, 0xcc, 0xc0, 0x95,
197: /* MUTANT (rep_const) */	0xfc, 0xa9, 1xa5, 0xf0, 0x99, 0xcc, 0xc0, 0x95,
197: /* MUTANT (rep_const) */	0xfc, 0xa9, -1xa5, 0xf0, 0x99, 0xcc, 0xc0, 0x95,
197: /* MUTANT (rep_const) */	0xfc, 0xa9, 0xa5, 1xf0, 0x99, 0xcc, 0xc0, 0x95,
197: /* MUTANT (rep_const) */	0xfc, 0xa9, 0xa5, -1xf0, 0x99, 0xcc, 0xc0, 0x95,
197: /* MUTANT (rep_const) */	0xfc, 0xa9, 0xa5, 0xf0, 1x99, 0xcc, 0xc0, 0x95,
197: /* MUTANT (rep_const) */	0xfc, 0xa9, 0xa5, 0xf0, -1x99, 0xcc, 0xc0, 0x95,
197: /* MUTANT (rep_const) */	0xfc, 0xa9, 0xa5, 0xf0, 0x99, 1xcc, 0xc0, 0x95,
197: /* MUTANT (rep_const) */	0xfc, 0xa9, 0xa5, 0xf0, 0x99, -1xcc, 0xc0, 0x95,
197: /* MUTANT (rep_const) */	0xfc, 0xa9, 0xa5, 0xf0, 0x99, 0xcc, 1xc0, 0x95,
197: /* MUTANT (rep_const) */	0xfc, 0xa9, 0xa5, 0xf0, 0x99, 0xcc, -1xc0, 0x95,
197: /* MUTANT (rep_const) */	0xfc, 0xa9, 0xa5, 0xf0, 0x99, 0xcc, 0xc0, 1x95,
197: /* MUTANT (rep_const) */	0xfc, 0xa9, 0xa5, 0xf0, 0x99, 0xcc, 0xc0, -1x95,
198: /* MUTANT (rep_const) */	1x99, 0xcc, 0xc0, 0x95, 0xfc, 0xa9, 0xa5, 0xf0,
198: /* MUTANT (rep_const) */	-1x99, 0xcc, 0xc0, 0x95, 0xfc, 0xa9, 0xa5, 0xf0,
198: /* MUTANT (rep_const) */	0x99, 1xcc, 0xc0, 0x95, 0xfc, 0xa9, 0xa5, 0xf0,
198: /* MUTANT (rep_const) */	0x99, -1xcc, 0xc0, 0x95, 0xfc, 0xa9, 0xa5, 0xf0,
198: /* MUTANT (rep_const) */	0x99, 0xcc, 1xc0, 0x95, 0xfc, 0xa9, 0xa5, 0xf0,
198: /* MUTANT (rep_const) */	0x99, 0xcc, -1xc0, 0x95, 0xfc, 0xa9, 0xa5, 0xf0,
198: /* MUTANT (rep_const) */	0x99, 0xcc, 0xc0, 1x95, 0xfc, 0xa9, 0xa5, 0xf0,
198: /* MUTANT (rep_const) */	0x99, 0xcc, 0xc0, -1x95, 0xfc, 0xa9, 0xa5, 0xf0,
198: /* MUTANT (rep_const) */	0x99, 0xcc, 0xc0, 0x95, 1xfc, 0xa9, 0xa5, 0xf0,
198: /* MUTANT (rep_const) */	0x99, 0xcc, 0xc0, 0x95, -1xfc, 0xa9, 0xa5, 0xf0,
198: /* MUTANT (rep_const) */	0x99, 0xcc, 0xc0, 0x95, 0xfc, 1xa9, 0xa5, 0xf0,
198: /* MUTANT (rep_const) */	0x99, 0xcc, 0xc0, 0x95, 0xfc, -1xa9, 0xa5, 0xf0,
198: /* MUTANT (rep_const) */	0x99, 0xcc, 0xc0, 0x95, 0xfc, 0xa9, 1xa5, 0xf0,
198: /* MUTANT (rep_const) */	0x99, 0xcc, 0xc0, 0x95, 0xfc, 0xa9, -1xa5, 0xf0,
198: /* MUTANT (rep_const) */	0x99, 0xcc, 0xc0, 0x95, 0xfc, 0xa9, 0xa5, 1xf0,
198: /* MUTANT (rep_const) */	0x99, 0xcc, 0xc0, 0x95, 0xfc, 0xa9, 0xa5, -1xf0,
199: /* MUTANT (rep_const) */	1xf0, 0xa5, 0xa9, 0xfc, 0x95, 0xc0, 0xcc, 0x99,
199: /* MUTANT (rep_const) */	-1xf0, 0xa5, 0xa9, 0xfc, 0x95, 0xc0, 0xcc, 0x99,
199: /* MUTANT (rep_const) */	0xf0, 1xa5, 0xa9, 0xfc, 0x95, 0xc0, 0xcc, 0x99,
199: /* MUTANT (rep_const) */	0xf0, -1xa5, 0xa9, 0xfc, 0x95, 0xc0, 0xcc, 0x99,
199: /* MUTANT (rep_const) */	0xf0, 0xa5, 1xa9, 0xfc, 0x95, 0xc0, 0xcc, 0x99,
199: /* MUTANT (rep_const) */	0xf0, 0xa5, -1xa9, 0xfc, 0x95, 0xc0, 0xcc, 0x99,
199: /* MUTANT (rep_const) */	0xf0, 0xa5, 0xa9, 1xfc, 0x95, 0xc0, 0xcc, 0x99,
199: /* MUTANT (rep_const) */	0xf0, 0xa5, 0xa9, -1xfc, 0x95, 0xc0, 0xcc, 0x99,
199: /* MUTANT (rep_const) */	0xf0, 0xa5, 0xa9, 0xfc, 1x95, 0xc0, 0xcc, 0x99,
199: /* MUTANT (rep_const) */	0xf0, 0xa5, 0xa9, 0xfc, -1x95, 0xc0, 0xcc, 0x99,
199: /* MUTANT (rep_const) */	0xf0, 0xa5, 0xa9, 0xfc, 0x95, 1xc0, 0xcc, 0x99,
199: /* MUTANT (rep_const) */	0xf0, 0xa5, 0xa9, 0xfc, 0x95, -1xc0, 0xcc, 0x99,
199: /* MUTANT (rep_const) */	0xf0, 0xa5, 0xa9, 0xfc, 0x95, 0xc0, 1xcc, 0x99,
199: /* MUTANT (rep_const) */	0xf0, 0xa5, 0xa9, 0xfc, 0x95, 0xc0, -1xcc, 0x99,
199: /* MUTANT (rep_const) */	0xf0, 0xa5, 0xa9, 0xfc, 0x95, 0xc0, 0xcc, 1x99,
199: /* MUTANT (rep_const) */	0xf0, 0xa5, 0xa9, 0xfc, 0x95, 0xc0, 0xcc, -1x99,
200: /* MUTANT (rep_const) */	1x0c, 0x59, 0x55, 0x00, 0x69, 0x3c, 0x30, 0x65,
200: /* MUTANT (rep_const) */	-1x0c, 0x59, 0x55, 0x00, 0x69, 0x3c, 0x30, 0x65,
200: /* MUTANT (rep_const) */	0x0c, 1x59, 0x55, 0x00, 0x69, 0x3c, 0x30, 0x65,
200: /* MUTANT (rep_const) */	0x0c, -1x59, 0x55, 0x00, 0x69, 0x3c, 0x30, 0x65,
200: /* MUTANT (rep_const) */	0x0c, 0x59, 1x55, 0x00, 0x69, 0x3c, 0x30, 0x65,
200: /* MUTANT (rep_const) */	0x0c, 0x59, -1x55, 0x00, 0x69, 0x3c, 0x30, 0x65,
200: /* MUTANT (rep_const) */	0x0c, 0x59, 0x55, 1x00, 0x69, 0x3c, 0x30, 0x65,
200: /* MUTANT (rep_const) */	0x0c, 0x59, 0x55, -1x00, 0x69, 0x3c, 0x30, 0x65,
200: /* MUTANT (rep_const) */	0x0c, 0x59, 0x55, 0x00, 1x69, 0x3c, 0x30, 0x65,
200: /* MUTANT (rep_const) */	0x0c, 0x59, 0x55, 0x00, -1x69, 0x3c, 0x30, 0x65,
200: /* MUTANT (rep_const) */	0x0c, 0x59, 0x55, 0x00, 0x69, 1x3c, 0x30, 0x65,
200: /* MUTANT (rep_const) */	0x0c, 0x59, 0x55, 0x00, 0x69, -1x3c, 0x30, 0x65,
200: /* MUTANT (rep_const) */	0x0c, 0x59, 0x55, 0x00, 0x69, 0x3c, 1x30, 0x65,
200: /* MUTANT (rep_const) */	0x0c, 0x59, 0x55, 0x00, 0x69, 0x3c, -1x30, 0x65,
200: /* MUTANT (rep_const) */	0x0c, 0x59, 0x55, 0x00, 0x69, 0x3c, 0x30, 1x65,
200: /* MUTANT (rep_const) */	0x0c, 0x59, 0x55, 0x00, 0x69, 0x3c, 0x30, -1x65,
201: /* MUTANT (rep_const) */	1x65, 0x30, 0x3c, 0x69, 0x00, 0x55, 0x59, 0x0c,
201: /* MUTANT (rep_const) */	-1x65, 0x30, 0x3c, 0x69, 0x00, 0x55, 0x59, 0x0c,
201: /* MUTANT (rep_const) */	0x65, 1x30, 0x3c, 0x69, 0x00, 0x55, 0x59, 0x0c,
201: /* MUTANT (rep_const) */	0x65, -1x30, 0x3c, 0x69, 0x00, 0x55, 0x59, 0x0c,
201: /* MUTANT (rep_const) */	0x65, 0x30, 1x3c, 0x69, 0x00, 0x55, 0x59, 0x0c,
201: /* MUTANT (rep_const) */	0x65, 0x30, -1x3c, 0x69, 0x00, 0x55, 0x59, 0x0c,
201: /* MUTANT (rep_const) */	0x65, 0x30, 0x3c, 1x69, 0x00, 0x55, 0x59, 0x0c,
201: /* MUTANT (rep_const) */	0x65, 0x30, 0x3c, -1x69, 0x00, 0x55, 0x59, 0x0c,
201: /* MUTANT (rep_const) */	0x65, 0x30, 0x3c, 0x69, 1x00, 0x55, 0x59, 0x0c,
201: /* MUTANT (rep_const) */	0x65, 0x30, 0x3c, 0x69, -1x00, 0x55, 0x59, 0x0c,
201: /* MUTANT (rep_const) */	0x65, 0x30, 0x3c, 0x69, 0x00, 1x55, 0x59, 0x0c,
201: /* MUTANT (rep_const) */	0x65, 0x30, 0x3c, 0x69, 0x00, -1x55, 0x59, 0x0c,
201: /* MUTANT (rep_const) */	0x65, 0x30, 0x3c, 0x69, 0x00, 0x55, 1x59, 0x0c,
201: /* MUTANT (rep_const) */	0x65, 0x30, 0x3c, 0x69, 0x00, 0x55, -1x59, 0x0c,
201: /* MUTANT (rep_const) */	0x65, 0x30, 0x3c, 0x69, 0x00, 0x55, 0x59, 1x0c,
201: /* MUTANT (rep_const) */	0x65, 0x30, 0x3c, 0x69, 0x00, 0x55, 0x59, -1x0c,
202: /* MUTANT (rep_const) */	1xa5, 0xf0, 0xfc, 0xa9, 0xc0, 0x95, 0x99, 0xcc,
202: /* MUTANT (rep_const) */	-1xa5, 0xf0, 0xfc, 0xa9, 0xc0, 0x95, 0x99, 0xcc,
202: /* MUTANT (rep_const) */	0xa5, 1xf0, 0xfc, 0xa9, 0xc0, 0x95, 0x99, 0xcc,
202: /* MUTANT (rep_const) */	0xa5, -1xf0, 0xfc, 0xa9, 0xc0, 0x95, 0x99, 0xcc,
202: /* MUTANT (rep_const) */	0xa5, 0xf0, 1xfc, 0xa9, 0xc0, 0x95, 0x99, 0xcc,
202: /* MUTANT (rep_const) */	0xa5, 0xf0, -1xfc, 0xa9, 0xc0, 0x95, 0x99, 0xcc,
202: /* MUTANT (rep_const) */	0xa5, 0xf0, 0xfc, 1xa9, 0xc0, 0x95, 0x99, 0xcc,
202: /* MUTANT (rep_const) */	0xa5, 0xf0, 0xfc, -1xa9, 0xc0, 0x95, 0x99, 0xcc,
202: /* MUTANT (rep_const) */	0xa5, 0xf0, 0xfc, 0xa9, 1xc0, 0x95, 0x99, 0xcc,
202: /* MUTANT (rep_const) */	0xa5, 0xf0, 0xfc, 0xa9, -1xc0, 0x95, 0x99, 0xcc,
202: /* MUTANT (rep_const) */	0xa5, 0xf0, 0xfc, 0xa9, 0xc0, 1x95, 0x99, 0xcc,
202: /* MUTANT (rep_const) */	0xa5, 0xf0, 0xfc, 0xa9, 0xc0, -1x95, 0x99, 0xcc,
202: /* MUTANT (rep_const) */	0xa5, 0xf0, 0xfc, 0xa9, 0xc0, 0x95, 1x99, 0xcc,
202: /* MUTANT (rep_const) */	0xa5, 0xf0, 0xfc, 0xa9, 0xc0, 0x95, -1x99, 0xcc,
202: /* MUTANT (rep_const) */	0xa5, 0xf0, 0xfc, 0xa9, 0xc0, 0x95, 0x99, 1xcc,
202: /* MUTANT (rep_const) */	0xa5, 0xf0, 0xfc, 0xa9, 0xc0, 0x95, 0x99, -1xcc,
203: /* MUTANT (rep_const) */	1xcc, 0x99, 0x95, 0xc0, 0xa9, 0xfc, 0xf0, 0xa5,
203: /* MUTANT (rep_const) */	-1xcc, 0x99, 0x95, 0xc0, 0xa9, 0xfc, 0xf0, 0xa5,
203: /* MUTANT (rep_const) */	0xcc, 1x99, 0x95, 0xc0, 0xa9, 0xfc, 0xf0, 0xa5,
203: /* MUTANT (rep_const) */	0xcc, -1x99, 0x95, 0xc0, 0xa9, 0xfc, 0xf0, 0xa5,
203: /* MUTANT (rep_const) */	0xcc, 0x99, 1x95, 0xc0, 0xa9, 0xfc, 0xf0, 0xa5,
203: /* MUTANT (rep_const) */	0xcc, 0x99, -1x95, 0xc0, 0xa9, 0xfc, 0xf0, 0xa5,
203: /* MUTANT (rep_const) */	0xcc, 0x99, 0x95, 1xc0, 0xa9, 0xfc, 0xf0, 0xa5,
203: /* MUTANT (rep_const) */	0xcc, 0x99, 0x95, -1xc0, 0xa9, 0xfc, 0xf0, 0xa5,
203: /* MUTANT (rep_const) */	0xcc, 0x99, 0x95, 0xc0, 1xa9, 0xfc, 0xf0, 0xa5,
203: /* MUTANT (rep_const) */	0xcc, 0x99, 0x95, 0xc0, -1xa9, 0xfc, 0xf0, 0xa5,
203: /* MUTANT (rep_const) */	0xcc, 0x99, 0x95, 0xc0, 0xa9, 1xfc, 0xf0, 0xa5,
203: /* MUTANT (rep_const) */	0xcc, 0x99, 0x95, 0xc0, 0xa9, -1xfc, 0xf0, 0xa5,
203: /* MUTANT (rep_const) */	0xcc, 0x99, 0x95, 0xc0, 0xa9, 0xfc, 1xf0, 0xa5,
203: /* MUTANT (rep_const) */	0xcc, 0x99, 0x95, 0xc0, 0xa9, 0xfc, -1xf0, 0xa5,
203: /* MUTANT (rep_const) */	0xcc, 0x99, 0x95, 0xc0, 0xa9, 0xfc, 0xf0, 1xa5,
203: /* MUTANT (rep_const) */	0xcc, 0x99, 0x95, 0xc0, 0xa9, 0xfc, 0xf0, -1xa5,
204: /* MUTANT (rep_const) */	1x30, 0x65, 0x69, 0x3c, 0x55, 0x00, 0x0c, 0x59,
204: /* MUTANT (rep_const) */	-1x30, 0x65, 0x69, 0x3c, 0x55, 0x00, 0x0c, 0x59,
204: /* MUTANT (rep_const) */	0x30, 1x65, 0x69, 0x3c, 0x55, 0x00, 0x0c, 0x59,
204: /* MUTANT (rep_const) */	0x30, -1x65, 0x69, 0x3c, 0x55, 0x00, 0x0c, 0x59,
204: /* MUTANT (rep_const) */	0x30, 0x65, 1x69, 0x3c, 0x55, 0x00, 0x0c, 0x59,
204: /* MUTANT (rep_const) */	0x30, 0x65, -1x69, 0x3c, 0x55, 0x00, 0x0c, 0x59,
204: /* MUTANT (rep_const) */	0x30, 0x65, 0x69, 1x3c, 0x55, 0x00, 0x0c, 0x59,
204: /* MUTANT (rep_const) */	0x30, 0x65, 0x69, -1x3c, 0x55, 0x00, 0x0c, 0x59,
204: /* MUTANT (rep_const) */	0x30, 0x65, 0x69, 0x3c, 1x55, 0x00, 0x0c, 0x59,
204: /* MUTANT (rep_const) */	0x30, 0x65, 0x69, 0x3c, -1x55, 0x00, 0x0c, 0x59,
204: /* MUTANT (rep_const) */	0x30, 0x65, 0x69, 0x3c, 0x55, 1x00, 0x0c, 0x59,
204: /* MUTANT (rep_const) */	0x30, 0x65, 0x69, 0x3c, 0x55, -1x00, 0x0c, 0x59,
204: /* MUTANT (rep_const) */	0x30, 0x65, 0x69, 0x3c, 0x55, 0x00, 1x0c, 0x59,
204: /* MUTANT (rep_const) */	0x30, 0x65, 0x69, 0x3c, 0x55, 0x00, -1x0c, 0x59,
204: /* MUTANT (rep_const) */	0x30, 0x65, 0x69, 0x3c, 0x55, 0x00, 0x0c, 1x59,
204: /* MUTANT (rep_const) */	0x30, 0x65, 0x69, 0x3c, 0x55, 0x00, 0x0c, -1x59,
205: /* MUTANT (rep_const) */	1x59, 0x0c, 0x00, 0x55, 0x3c, 0x69, 0x65, 0x30,
205: /* MUTANT (rep_const) */	-1x59, 0x0c, 0x00, 0x55, 0x3c, 0x69, 0x65, 0x30,
205: /* MUTANT (rep_const) */	0x59, 1x0c, 0x00, 0x55, 0x3c, 0x69, 0x65, 0x30,
205: /* MUTANT (rep_const) */	0x59, -1x0c, 0x00, 0x55, 0x3c, 0x69, 0x65, 0x30,
205: /* MUTANT (rep_const) */	0x59, 0x0c, 1x00, 0x55, 0x3c, 0x69, 0x65, 0x30,
205: /* MUTANT (rep_const) */	0x59, 0x0c, -1x00, 0x55, 0x3c, 0x69, 0x65, 0x30,
205: /* MUTANT (rep_const) */	0x59, 0x0c, 0x00, 1x55, 0x3c, 0x69, 0x65, 0x30,
205: /* MUTANT (rep_const) */	0x59, 0x0c, 0x00, -1x55, 0x3c, 0x69, 0x65, 0x30,
205: /* MUTANT (rep_const) */	0x59, 0x0c, 0x00, 0x55, 1x3c, 0x69, 0x65, 0x30,
205: /* MUTANT (rep_const) */	0x59, 0x0c, 0x00, 0x55, -1x3c, 0x69, 0x65, 0x30,
205: /* MUTANT (rep_const) */	0x59, 0x0c, 0x00, 0x55, 0x3c, 1x69, 0x65, 0x30,
205: /* MUTANT (rep_const) */	0x59, 0x0c, 0x00, 0x55, 0x3c, -1x69, 0x65, 0x30,
205: /* MUTANT (rep_const) */	0x59, 0x0c, 0x00, 0x55, 0x3c, 0x69, 1x65, 0x30,
205: /* MUTANT (rep_const) */	0x59, 0x0c, 0x00, 0x55, 0x3c, 0x69, -1x65, 0x30,
205: /* MUTANT (rep_const) */	0x59, 0x0c, 0x00, 0x55, 0x3c, 0x69, 0x65, 1x30,
205: /* MUTANT (rep_const) */	0x59, 0x0c, 0x00, 0x55, 0x3c, 0x69, 0x65, -1x30,
206: /* MUTANT (rep_const) */	1x3c, 0x69, 0x65, 0x30, 0x59, 0x0c, 0x00, 0x55,
206: /* MUTANT (rep_const) */	-1x3c, 0x69, 0x65, 0x30, 0x59, 0x0c, 0x00, 0x55,
206: /* MUTANT (rep_const) */	0x3c, 1x69, 0x65, 0x30, 0x59, 0x0c, 0x00, 0x55,
206: /* MUTANT (rep_const) */	0x3c, -1x69, 0x65, 0x30, 0x59, 0x0c, 0x00, 0x55,
206: /* MUTANT (rep_const) */	0x3c, 0x69, 1x65, 0x30, 0x59, 0x0c, 0x00, 0x55,
206: /* MUTANT (rep_const) */	0x3c, 0x69, -1x65, 0x30, 0x59, 0x0c, 0x00, 0x55,
206: /* MUTANT (rep_const) */	0x3c, 0x69, 0x65, 1x30, 0x59, 0x0c, 0x00, 0x55,
206: /* MUTANT (rep_const) */	0x3c, 0x69, 0x65, -1x30, 0x59, 0x0c, 0x00, 0x55,
206: /* MUTANT (rep_const) */	0x3c, 0x69, 0x65, 0x30, 1x59, 0x0c, 0x00, 0x55,
206: /* MUTANT (rep_const) */	0x3c, 0x69, 0x65, 0x30, -1x59, 0x0c, 0x00, 0x55,
206: /* MUTANT (rep_const) */	0x3c, 0x69, 0x65, 0x30, 0x59, 1x0c, 0x00, 0x55,
206: /* MUTANT (rep_const) */	0x3c, 0x69, 0x65, 0x30, 0x59, -1x0c, 0x00, 0x55,
206: /* MUTANT (rep_const) */	0x3c, 0x69, 0x65, 0x30, 0x59, 0x0c, 1x00, 0x55,
206: /* MUTANT (rep_const) */	0x3c, 0x69, 0x65, 0x30, 0x59, 0x0c, -1x00, 0x55,
206: /* MUTANT (rep_const) */	0x3c, 0x69, 0x65, 0x30, 0x59, 0x0c, 0x00, 1x55,
206: /* MUTANT (rep_const) */	0x3c, 0x69, 0x65, 0x30, 0x59, 0x0c, 0x00, -1x55,
207: /* MUTANT (rep_const) */	1x55, 0x00, 0x0c, 0x59, 0x30, 0x65, 0x69, 0x3c,
207: /* MUTANT (rep_const) */	-1x55, 0x00, 0x0c, 0x59, 0x30, 0x65, 0x69, 0x3c,
207: /* MUTANT (rep_const) */	0x55, 1x00, 0x0c, 0x59, 0x30, 0x65, 0x69, 0x3c,
207: /* MUTANT (rep_const) */	0x55, -1x00, 0x0c, 0x59, 0x30, 0x65, 0x69, 0x3c,
207: /* MUTANT (rep_const) */	0x55, 0x00, 1x0c, 0x59, 0x30, 0x65, 0x69, 0x3c,
207: /* MUTANT (rep_const) */	0x55, 0x00, -1x0c, 0x59, 0x30, 0x65, 0x69, 0x3c,
207: /* MUTANT (rep_const) */	0x55, 0x00, 0x0c, 1x59, 0x30, 0x65, 0x69, 0x3c,
207: /* MUTANT (rep_const) */	0x55, 0x00, 0x0c, -1x59, 0x30, 0x65, 0x69, 0x3c,
207: /* MUTANT (rep_const) */	0x55, 0x00, 0x0c, 0x59, 1x30, 0x65, 0x69, 0x3c,
207: /* MUTANT (rep_const) */	0x55, 0x00, 0x0c, 0x59, -1x30, 0x65, 0x69, 0x3c,
207: /* MUTANT (rep_const) */	0x55, 0x00, 0x0c, 0x59, 0x30, 1x65, 0x69, 0x3c,
207: /* MUTANT (rep_const) */	0x55, 0x00, 0x0c, 0x59, 0x30, -1x65, 0x69, 0x3c,
207: /* MUTANT (rep_const) */	0x55, 0x00, 0x0c, 0x59, 0x30, 0x65, 1x69, 0x3c,
207: /* MUTANT (rep_const) */	0x55, 0x00, 0x0c, 0x59, 0x30, 0x65, -1x69, 0x3c,
207: /* MUTANT (rep_const) */	0x55, 0x00, 0x0c, 0x59, 0x30, 0x65, 0x69, 1x3c,
207: /* MUTANT (rep_const) */	0x55, 0x00, 0x0c, 0x59, 0x30, 0x65, 0x69, -1x3c,
208: /* MUTANT (rep_const) */	1xa9, 0xfc, 0xf0, 0xa5, 0xcc, 0x99, 0x95, 0xc0,
208: /* MUTANT (rep_const) */	-1xa9, 0xfc, 0xf0, 0xa5, 0xcc, 0x99, 0x95, 0xc0,
208: /* MUTANT (rep_const) */	0xa9, 1xfc, 0xf0, 0xa5, 0xcc, 0x99, 0x95, 0xc0,
208: /* MUTANT (rep_const) */	0xa9, -1xfc, 0xf0, 0xa5, 0xcc, 0x99, 0x95, 0xc0,
208: /* MUTANT (rep_const) */	0xa9, 0xfc, 1xf0, 0xa5, 0xcc, 0x99, 0x95, 0xc0,
208: /* MUTANT (rep_const) */	0xa9, 0xfc, -1xf0, 0xa5, 0xcc, 0x99, 0x95, 0xc0,
208: /* MUTANT (rep_const) */	0xa9, 0xfc, 0xf0, 1xa5, 0xcc, 0x99, 0x95, 0xc0,
208: /* MUTANT (rep_const) */	0xa9, 0xfc, 0xf0, -1xa5, 0xcc, 0x99, 0x95, 0xc0,
208: /* MUTANT (rep_const) */	0xa9, 0xfc, 0xf0, 0xa5, 1xcc, 0x99, 0x95, 0xc0,
208: /* MUTANT (rep_const) */	0xa9, 0xfc, 0xf0, 0xa5, -1xcc, 0x99, 0x95, 0xc0,
208: /* MUTANT (rep_const) */	0xa9, 0xfc, 0xf0, 0xa5, 0xcc, 1x99, 0x95, 0xc0,
208: /* MUTANT (rep_const) */	0xa9, 0xfc, 0xf0, 0xa5, 0xcc, -1x99, 0x95, 0xc0,
208: /* MUTANT (rep_const) */	0xa9, 0xfc, 0xf0, 0xa5, 0xcc, 0x99, 1x95, 0xc0,
208: /* MUTANT (rep_const) */	0xa9, 0xfc, 0xf0, 0xa5, 0xcc, 0x99, -1x95, 0xc0,
208: /* MUTANT (rep_const) */	0xa9, 0xfc, 0xf0, 0xa5, 0xcc, 0x99, 0x95, 1xc0,
208: /* MUTANT (rep_const) */	0xa9, 0xfc, 0xf0, 0xa5, 0xcc, 0x99, 0x95, -1xc0,
209: /* MUTANT (rep_const) */	1xc0, 0x95, 0x99, 0xcc, 0xa5, 0xf0, 0xfc, 0xa9,
209: /* MUTANT (rep_const) */	-1xc0, 0x95, 0x99, 0xcc, 0xa5, 0xf0, 0xfc, 0xa9,
209: /* MUTANT (rep_const) */	0xc0, 1x95, 0x99, 0xcc, 0xa5, 0xf0, 0xfc, 0xa9,
209: /* MUTANT (rep_const) */	0xc0, -1x95, 0x99, 0xcc, 0xa5, 0xf0, 0xfc, 0xa9,
209: /* MUTANT (rep_const) */	0xc0, 0x95, 1x99, 0xcc, 0xa5, 0xf0, 0xfc, 0xa9,
209: /* MUTANT (rep_const) */	0xc0, 0x95, -1x99, 0xcc, 0xa5, 0xf0, 0xfc, 0xa9,
209: /* MUTANT (rep_const) */	0xc0, 0x95, 0x99, 1xcc, 0xa5, 0xf0, 0xfc, 0xa9,
209: /* MUTANT (rep_const) */	0xc0, 0x95, 0x99, -1xcc, 0xa5, 0xf0, 0xfc, 0xa9,
209: /* MUTANT (rep_const) */	0xc0, 0x95, 0x99, 0xcc, 1xa5, 0xf0, 0xfc, 0xa9,
209: /* MUTANT (rep_const) */	0xc0, 0x95, 0x99, 0xcc, -1xa5, 0xf0, 0xfc, 0xa9,
209: /* MUTANT (rep_const) */	0xc0, 0x95, 0x99, 0xcc, 0xa5, 1xf0, 0xfc, 0xa9,
209: /* MUTANT (rep_const) */	0xc0, 0x95, 0x99, 0xcc, 0xa5, -1xf0, 0xfc, 0xa9,
209: /* MUTANT (rep_const) */	0xc0, 0x95, 0x99, 0xcc, 0xa5, 0xf0, 1xfc, 0xa9,
209: /* MUTANT (rep_const) */	0xc0, 0x95, 0x99, 0xcc, 0xa5, 0xf0, -1xfc, 0xa9,
209: /* MUTANT (rep_const) */	0xc0, 0x95, 0x99, 0xcc, 0xa5, 0xf0, 0xfc, 1xa9,
209: /* MUTANT (rep_const) */	0xc0, 0x95, 0x99, 0xcc, 0xa5, 0xf0, 0xfc, -1xa9,
210: /* MUTANT (rep_const) */	1xa9, 0xfc, 0xf0, 0xa5, 0xcc, 0x99, 0x95, 0xc0,
210: /* MUTANT (rep_const) */	-1xa9, 0xfc, 0xf0, 0xa5, 0xcc, 0x99, 0x95, 0xc0,
210: /* MUTANT (rep_const) */	0xa9, 1xfc, 0xf0, 0xa5, 0xcc, 0x99, 0x95, 0xc0,
210: /* MUTANT (rep_const) */	0xa9, -1xfc, 0xf0, 0xa5, 0xcc, 0x99, 0x95, 0xc0,
210: /* MUTANT (rep_const) */	0xa9, 0xfc, 1xf0, 0xa5, 0xcc, 0x99, 0x95, 0xc0,
210: /* MUTANT (rep_const) */	0xa9, 0xfc, -1xf0, 0xa5, 0xcc, 0x99, 0x95, 0xc0,
210: /* MUTANT (rep_const) */	0xa9, 0xfc, 0xf0, 1xa5, 0xcc, 0x99, 0x95, 0xc0,
210: /* MUTANT (rep_const) */	0xa9, 0xfc, 0xf0, -1xa5, 0xcc, 0x99, 0x95, 0xc0,
210: /* MUTANT (rep_const) */	0xa9, 0xfc, 0xf0, 0xa5, 1xcc, 0x99, 0x95, 0xc0,
210: /* MUTANT (rep_const) */	0xa9, 0xfc, 0xf0, 0xa5, -1xcc, 0x99, 0x95, 0xc0,
210: /* MUTANT (rep_const) */	0xa9, 0xfc, 0xf0, 0xa5, 0xcc, 1x99, 0x95, 0xc0,
210: /* MUTANT (rep_const) */	0xa9, 0xfc, 0xf0, 0xa5, 0xcc, -1x99, 0x95, 0xc0,
210: /* MUTANT (rep_const) */	0xa9, 0xfc, 0xf0, 0xa5, 0xcc, 0x99, 1x95, 0xc0,
210: /* MUTANT (rep_const) */	0xa9, 0xfc, 0xf0, 0xa5, 0xcc, 0x99, -1x95, 0xc0,
210: /* MUTANT (rep_const) */	0xa9, 0xfc, 0xf0, 0xa5, 0xcc, 0x99, 0x95, 1xc0,
210: /* MUTANT (rep_const) */	0xa9, 0xfc, 0xf0, 0xa5, 0xcc, 0x99, 0x95, -1xc0,
211: /* MUTANT (rep_const) */	1xc0, 0x95, 0x99, 0xcc, 0xa5, 0xf0, 0xfc, 0xa9,
211: /* MUTANT (rep_const) */	-1xc0, 0x95, 0x99, 0xcc, 0xa5, 0xf0, 0xfc, 0xa9,
211: /* MUTANT (rep_const) */	0xc0, 1x95, 0x99, 0xcc, 0xa5, 0xf0, 0xfc, 0xa9,
211: /* MUTANT (rep_const) */	0xc0, -1x95, 0x99, 0xcc, 0xa5, 0xf0, 0xfc, 0xa9,
211: /* MUTANT (rep_const) */	0xc0, 0x95, 1x99, 0xcc, 0xa5, 0xf0, 0xfc, 0xa9,
211: /* MUTANT (rep_const) */	0xc0, 0x95, -1x99, 0xcc, 0xa5, 0xf0, 0xfc, 0xa9,
211: /* MUTANT (rep_const) */	0xc0, 0x95, 0x99, 1xcc, 0xa5, 0xf0, 0xfc, 0xa9,
211: /* MUTANT (rep_const) */	0xc0, 0x95, 0x99, -1xcc, 0xa5, 0xf0, 0xfc, 0xa9,
211: /* MUTANT (rep_const) */	0xc0, 0x95, 0x99, 0xcc, 1xa5, 0xf0, 0xfc, 0xa9,
211: /* MUTANT (rep_const) */	0xc0, 0x95, 0x99, 0xcc, -1xa5, 0xf0, 0xfc, 0xa9,
211: /* MUTANT (rep_const) */	0xc0, 0x95, 0x99, 0xcc, 0xa5, 1xf0, 0xfc, 0xa9,
211: /* MUTANT (rep_const) */	0xc0, 0x95, 0x99, 0xcc, 0xa5, -1xf0, 0xfc, 0xa9,
211: /* MUTANT (rep_const) */	0xc0, 0x95, 0x99, 0xcc, 0xa5, 0xf0, 1xfc, 0xa9,
211: /* MUTANT (rep_const) */	0xc0, 0x95, 0x99, 0xcc, 0xa5, 0xf0, -1xfc, 0xa9,
211: /* MUTANT (rep_const) */	0xc0, 0x95, 0x99, 0xcc, 0xa5, 0xf0, 0xfc, 1xa9,
211: /* MUTANT (rep_const) */	0xc0, 0x95, 0x99, 0xcc, 0xa5, 0xf0, 0xfc, -1xa9,
212: /* MUTANT (rep_const) */	1x3c, 0x69, 0x65, 0x30, 0x59, 0x0c, 0x00, 0x55,
212: /* MUTANT (rep_const) */	-1x3c, 0x69, 0x65, 0x30, 0x59, 0x0c, 0x00, 0x55,
212: /* MUTANT (rep_const) */	0x3c, 1x69, 0x65, 0x30, 0x59, 0x0c, 0x00, 0x55,
212: /* MUTANT (rep_const) */	0x3c, -1x69, 0x65, 0x30, 0x59, 0x0c, 0x00, 0x55,
212: /* MUTANT (rep_const) */	0x3c, 0x69, 1x65, 0x30, 0x59, 0x0c, 0x00, 0x55,
212: /* MUTANT (rep_const) */	0x3c, 0x69, -1x65, 0x30, 0x59, 0x0c, 0x00, 0x55,
212: /* MUTANT (rep_const) */	0x3c, 0x69, 0x65, 1x30, 0x59, 0x0c, 0x00, 0x55,
212: /* MUTANT (rep_const) */	0x3c, 0x69, 0x65, -1x30, 0x59, 0x0c, 0x00, 0x55,
212: /* MUTANT (rep_const) */	0x3c, 0x69, 0x65, 0x30, 1x59, 0x0c, 0x00, 0x55,
212: /* MUTANT (rep_const) */	0x3c, 0x69, 0x65, 0x30, -1x59, 0x0c, 0x00, 0x55,
212: /* MUTANT (rep_const) */	0x3c, 0x69, 0x65, 0x30, 0x59, 1x0c, 0x00, 0x55,
212: /* MUTANT (rep_const) */	0x3c, 0x69, 0x65, 0x30, 0x59, -1x0c, 0x00, 0x55,
212: /* MUTANT (rep_const) */	0x3c, 0x69, 0x65, 0x30, 0x59, 0x0c, 1x00, 0x55,
212: /* MUTANT (rep_const) */	0x3c, 0x69, 0x65, 0x30, 0x59, 0x0c, -1x00, 0x55,
212: /* MUTANT (rep_const) */	0x3c, 0x69, 0x65, 0x30, 0x59, 0x0c, 0x00, 1x55,
212: /* MUTANT (rep_const) */	0x3c, 0x69, 0x65, 0x30, 0x59, 0x0c, 0x00, -1x55,
213: /* MUTANT (rep_const) */	1x55, 0x00, 0x0c, 0x59, 0x30, 0x65, 0x69, 0x3c,
213: /* MUTANT (rep_const) */	-1x55, 0x00, 0x0c, 0x59, 0x30, 0x65, 0x69, 0x3c,
213: /* MUTANT (rep_const) */	0x55, 1x00, 0x0c, 0x59, 0x30, 0x65, 0x69, 0x3c,
213: /* MUTANT (rep_const) */	0x55, -1x00, 0x0c, 0x59, 0x30, 0x65, 0x69, 0x3c,
213: /* MUTANT (rep_const) */	0x55, 0x00, 1x0c, 0x59, 0x30, 0x65, 0x69, 0x3c,
213: /* MUTANT (rep_const) */	0x55, 0x00, -1x0c, 0x59, 0x30, 0x65, 0x69, 0x3c,
213: /* MUTANT (rep_const) */	0x55, 0x00, 0x0c, 1x59, 0x30, 0x65, 0x69, 0x3c,
213: /* MUTANT (rep_const) */	0x55, 0x00, 0x0c, -1x59, 0x30, 0x65, 0x69, 0x3c,
213: /* MUTANT (rep_const) */	0x55, 0x00, 0x0c, 0x59, 1x30, 0x65, 0x69, 0x3c,
213: /* MUTANT (rep_const) */	0x55, 0x00, 0x0c, 0x59, -1x30, 0x65, 0x69, 0x3c,
213: /* MUTANT (rep_const) */	0x55, 0x00, 0x0c, 0x59, 0x30, 1x65, 0x69, 0x3c,
213: /* MUTANT (rep_const) */	0x55, 0x00, 0x0c, 0x59, 0x30, -1x65, 0x69, 0x3c,
213: /* MUTANT (rep_const) */	0x55, 0x00, 0x0c, 0x59, 0x30, 0x65, 1x69, 0x3c,
213: /* MUTANT (rep_const) */	0x55, 0x00, 0x0c, 0x59, 0x30, 0x65, -1x69, 0x3c,
213: /* MUTANT (rep_const) */	0x55, 0x00, 0x0c, 0x59, 0x30, 0x65, 0x69, 1x3c,
213: /* MUTANT (rep_const) */	0x55, 0x00, 0x0c, 0x59, 0x30, 0x65, 0x69, -1x3c,
214: /* MUTANT (rep_const) */	1x30, 0x65, 0x69, 0x3c, 0x55, 0x00, 0x0c, 0x59,
214: /* MUTANT (rep_const) */	-1x30, 0x65, 0x69, 0x3c, 0x55, 0x00, 0x0c, 0x59,
214: /* MUTANT (rep_const) */	0x30, 1x65, 0x69, 0x3c, 0x55, 0x00, 0x0c, 0x59,
214: /* MUTANT (rep_const) */	0x30, -1x65, 0x69, 0x3c, 0x55, 0x00, 0x0c, 0x59,
214: /* MUTANT (rep_const) */	0x30, 0x65, 1x69, 0x3c, 0x55, 0x00, 0x0c, 0x59,
214: /* MUTANT (rep_const) */	0x30, 0x65, -1x69, 0x3c, 0x55, 0x00, 0x0c, 0x59,
214: /* MUTANT (rep_const) */	0x30, 0x65, 0x69, 1x3c, 0x55, 0x00, 0x0c, 0x59,
214: /* MUTANT (rep_const) */	0x30, 0x65, 0x69, -1x3c, 0x55, 0x00, 0x0c, 0x59,
214: /* MUTANT (rep_const) */	0x30, 0x65, 0x69, 0x3c, 1x55, 0x00, 0x0c, 0x59,
214: /* MUTANT (rep_const) */	0x30, 0x65, 0x69, 0x3c, -1x55, 0x00, 0x0c, 0x59,
214: /* MUTANT (rep_const) */	0x30, 0x65, 0x69, 0x3c, 0x55, 1x00, 0x0c, 0x59,
214: /* MUTANT (rep_const) */	0x30, 0x65, 0x69, 0x3c, 0x55, -1x00, 0x0c, 0x59,
214: /* MUTANT (rep_const) */	0x30, 0x65, 0x69, 0x3c, 0x55, 0x00, 1x0c, 0x59,
214: /* MUTANT (rep_const) */	0x30, 0x65, 0x69, 0x3c, 0x55, 0x00, -1x0c, 0x59,
214: /* MUTANT (rep_const) */	0x30, 0x65, 0x69, 0x3c, 0x55, 0x00, 0x0c, 1x59,
214: /* MUTANT (rep_const) */	0x30, 0x65, 0x69, 0x3c, 0x55, 0x00, 0x0c, -1x59,
215: /* MUTANT (rep_const) */	1x59, 0x0c, 0x00, 0x55, 0x3c, 0x69, 0x65, 0x30,
215: /* MUTANT (rep_const) */	-1x59, 0x0c, 0x00, 0x55, 0x3c, 0x69, 0x65, 0x30,
215: /* MUTANT (rep_const) */	0x59, 1x0c, 0x00, 0x55, 0x3c, 0x69, 0x65, 0x30,
215: /* MUTANT (rep_const) */	0x59, -1x0c, 0x00, 0x55, 0x3c, 0x69, 0x65, 0x30,
215: /* MUTANT (rep_const) */	0x59, 0x0c, 1x00, 0x55, 0x3c, 0x69, 0x65, 0x30,
215: /* MUTANT (rep_const) */	0x59, 0x0c, -1x00, 0x55, 0x3c, 0x69, 0x65, 0x30,
215: /* MUTANT (rep_const) */	0x59, 0x0c, 0x00, 1x55, 0x3c, 0x69, 0x65, 0x30,
215: /* MUTANT (rep_const) */	0x59, 0x0c, 0x00, -1x55, 0x3c, 0x69, 0x65, 0x30,
215: /* MUTANT (rep_const) */	0x59, 0x0c, 0x00, 0x55, 1x3c, 0x69, 0x65, 0x30,
215: /* MUTANT (rep_const) */	0x59, 0x0c, 0x00, 0x55, -1x3c, 0x69, 0x65, 0x30,
215: /* MUTANT (rep_const) */	0x59, 0x0c, 0x00, 0x55, 0x3c, 1x69, 0x65, 0x30,
215: /* MUTANT (rep_const) */	0x59, 0x0c, 0x00, 0x55, 0x3c, -1x69, 0x65, 0x30,
215: /* MUTANT (rep_const) */	0x59, 0x0c, 0x00, 0x55, 0x3c, 0x69, 1x65, 0x30,
215: /* MUTANT (rep_const) */	0x59, 0x0c, 0x00, 0x55, 0x3c, 0x69, -1x65, 0x30,
215: /* MUTANT (rep_const) */	0x59, 0x0c, 0x00, 0x55, 0x3c, 0x69, 0x65, 1x30,
215: /* MUTANT (rep_const) */	0x59, 0x0c, 0x00, 0x55, 0x3c, 0x69, 0x65, -1x30,
216: /* MUTANT (rep_const) */	1xa5, 0xf0, 0xfc, 0xa9, 0xc0, 0x95, 0x99, 0xcc,
216: /* MUTANT (rep_const) */	-1xa5, 0xf0, 0xfc, 0xa9, 0xc0, 0x95, 0x99, 0xcc,
216: /* MUTANT (rep_const) */	0xa5, 1xf0, 0xfc, 0xa9, 0xc0, 0x95, 0x99, 0xcc,
216: /* MUTANT (rep_const) */	0xa5, -1xf0, 0xfc, 0xa9, 0xc0, 0x95, 0x99, 0xcc,
216: /* MUTANT (rep_const) */	0xa5, 0xf0, 1xfc, 0xa9, 0xc0, 0x95, 0x99, 0xcc,
216: /* MUTANT (rep_const) */	0xa5, 0xf0, -1xfc, 0xa9, 0xc0, 0x95, 0x99, 0xcc,
216: /* MUTANT (rep_const) */	0xa5, 0xf0, 0xfc, 1xa9, 0xc0, 0x95, 0x99, 0xcc,
216: /* MUTANT (rep_const) */	0xa5, 0xf0, 0xfc, -1xa9, 0xc0, 0x95, 0x99, 0xcc,
216: /* MUTANT (rep_const) */	0xa5, 0xf0, 0xfc, 0xa9, 1xc0, 0x95, 0x99, 0xcc,
216: /* MUTANT (rep_const) */	0xa5, 0xf0, 0xfc, 0xa9, -1xc0, 0x95, 0x99, 0xcc,
216: /* MUTANT (rep_const) */	0xa5, 0xf0, 0xfc, 0xa9, 0xc0, 1x95, 0x99, 0xcc,
216: /* MUTANT (rep_const) */	0xa5, 0xf0, 0xfc, 0xa9, 0xc0, -1x95, 0x99, 0xcc,
216: /* MUTANT (rep_const) */	0xa5, 0xf0, 0xfc, 0xa9, 0xc0, 0x95, 1x99, 0xcc,
216: /* MUTANT (rep_const) */	0xa5, 0xf0, 0xfc, 0xa9, 0xc0, 0x95, -1x99, 0xcc,
216: /* MUTANT (rep_const) */	0xa5, 0xf0, 0xfc, 0xa9, 0xc0, 0x95, 0x99, 1xcc,
216: /* MUTANT (rep_const) */	0xa5, 0xf0, 0xfc, 0xa9, 0xc0, 0x95, 0x99, -1xcc,
217: /* MUTANT (rep_const) */	1xcc, 0x99, 0x95, 0xc0, 0xa9, 0xfc, 0xf0, 0xa5,
217: /* MUTANT (rep_const) */	-1xcc, 0x99, 0x95, 0xc0, 0xa9, 0xfc, 0xf0, 0xa5,
217: /* MUTANT (rep_const) */	0xcc, 1x99, 0x95, 0xc0, 0xa9, 0xfc, 0xf0, 0xa5,
217: /* MUTANT (rep_const) */	0xcc, -1x99, 0x95, 0xc0, 0xa9, 0xfc, 0xf0, 0xa5,
217: /* MUTANT (rep_const) */	0xcc, 0x99, 1x95, 0xc0, 0xa9, 0xfc, 0xf0, 0xa5,
217: /* MUTANT (rep_const) */	0xcc, 0x99, -1x95, 0xc0, 0xa9, 0xfc, 0xf0, 0xa5,
217: /* MUTANT (rep_const) */	0xcc, 0x99, 0x95, 1xc0, 0xa9, 0xfc, 0xf0, 0xa5,
217: /* MUTANT (rep_const) */	0xcc, 0x99, 0x95, -1xc0, 0xa9, 0xfc, 0xf0, 0xa5,
217: /* MUTANT (rep_const) */	0xcc, 0x99, 0x95, 0xc0, 1xa9, 0xfc, 0xf0, 0xa5,
217: /* MUTANT (rep_const) */	0xcc, 0x99, 0x95, 0xc0, -1xa9, 0xfc, 0xf0, 0xa5,
217: /* MUTANT (rep_const) */	0xcc, 0x99, 0x95, 0xc0, 0xa9, 1xfc, 0xf0, 0xa5,
217: /* MUTANT (rep_const) */	0xcc, 0x99, 0x95, 0xc0, 0xa9, -1xfc, 0xf0, 0xa5,
217: /* MUTANT (rep_const) */	0xcc, 0x99, 0x95, 0xc0, 0xa9, 0xfc, 1xf0, 0xa5,
217: /* MUTANT (rep_const) */	0xcc, 0x99, 0x95, 0xc0, 0xa9, 0xfc, -1xf0, 0xa5,
217: /* MUTANT (rep_const) */	0xcc, 0x99, 0x95, 0xc0, 0xa9, 0xfc, 0xf0, 1xa5,
217: /* MUTANT (rep_const) */	0xcc, 0x99, 0x95, 0xc0, 0xa9, 0xfc, 0xf0, -1xa5,
218: /* MUTANT (rep_const) */	1x0c, 0x59, 0x55, 0x00, 0x69, 0x3c, 0x30, 0x65,
218: /* MUTANT (rep_const) */	-1x0c, 0x59, 0x55, 0x00, 0x69, 0x3c, 0x30, 0x65,
218: /* MUTANT (rep_const) */	0x0c, 1x59, 0x55, 0x00, 0x69, 0x3c, 0x30, 0x65,
218: /* MUTANT (rep_const) */	0x0c, -1x59, 0x55, 0x00, 0x69, 0x3c, 0x30, 0x65,
218: /* MUTANT (rep_const) */	0x0c, 0x59, 1x55, 0x00, 0x69, 0x3c, 0x30, 0x65,
218: /* MUTANT (rep_const) */	0x0c, 0x59, -1x55, 0x00, 0x69, 0x3c, 0x30, 0x65,
218: /* MUTANT (rep_const) */	0x0c, 0x59, 0x55, 1x00, 0x69, 0x3c, 0x30, 0x65,
218: /* MUTANT (rep_const) */	0x0c, 0x59, 0x55, -1x00, 0x69, 0x3c, 0x30, 0x65,
218: /* MUTANT (rep_const) */	0x0c, 0x59, 0x55, 0x00, 1x69, 0x3c, 0x30, 0x65,
218: /* MUTANT (rep_const) */	0x0c, 0x59, 0x55, 0x00, -1x69, 0x3c, 0x30, 0x65,
218: /* MUTANT (rep_const) */	0x0c, 0x59, 0x55, 0x00, 0x69, 1x3c, 0x30, 0x65,
218: /* MUTANT (rep_const) */	0x0c, 0x59, 0x55, 0x00, 0x69, -1x3c, 0x30, 0x65,
218: /* MUTANT (rep_const) */	0x0c, 0x59, 0x55, 0x00, 0x69, 0x3c, 1x30, 0x65,
218: /* MUTANT (rep_const) */	0x0c, 0x59, 0x55, 0x00, 0x69, 0x3c, -1x30, 0x65,
218: /* MUTANT (rep_const) */	0x0c, 0x59, 0x55, 0x00, 0x69, 0x3c, 0x30, 1x65,
218: /* MUTANT (rep_const) */	0x0c, 0x59, 0x55, 0x00, 0x69, 0x3c, 0x30, -1x65,
219: /* MUTANT (rep_const) */	1x65, 0x30, 0x3c, 0x69, 0x00, 0x55, 0x59, 0x0c,
219: /* MUTANT (rep_const) */	-1x65, 0x30, 0x3c, 0x69, 0x00, 0x55, 0x59, 0x0c,
219: /* MUTANT (rep_const) */	0x65, 1x30, 0x3c, 0x69, 0x00, 0x55, 0x59, 0x0c,
219: /* MUTANT (rep_const) */	0x65, -1x30, 0x3c, 0x69, 0x00, 0x55, 0x59, 0x0c,
219: /* MUTANT (rep_const) */	0x65, 0x30, 1x3c, 0x69, 0x00, 0x55, 0x59, 0x0c,
219: /* MUTANT (rep_const) */	0x65, 0x30, -1x3c, 0x69, 0x00, 0x55, 0x59, 0x0c,
219: /* MUTANT (rep_const) */	0x65, 0x30, 0x3c, 1x69, 0x00, 0x55, 0x59, 0x0c,
219: /* MUTANT (rep_const) */	0x65, 0x30, 0x3c, -1x69, 0x00, 0x55, 0x59, 0x0c,
219: /* MUTANT (rep_const) */	0x65, 0x30, 0x3c, 0x69, 1x00, 0x55, 0x59, 0x0c,
219: /* MUTANT (rep_const) */	0x65, 0x30, 0x3c, 0x69, -1x00, 0x55, 0x59, 0x0c,
219: /* MUTANT (rep_const) */	0x65, 0x30, 0x3c, 0x69, 0x00, 1x55, 0x59, 0x0c,
219: /* MUTANT (rep_const) */	0x65, 0x30, 0x3c, 0x69, 0x00, -1x55, 0x59, 0x0c,
219: /* MUTANT (rep_const) */	0x65, 0x30, 0x3c, 0x69, 0x00, 0x55, 1x59, 0x0c,
219: /* MUTANT (rep_const) */	0x65, 0x30, 0x3c, 0x69, 0x00, 0x55, -1x59, 0x0c,
219: /* MUTANT (rep_const) */	0x65, 0x30, 0x3c, 0x69, 0x00, 0x55, 0x59, 1x0c,
219: /* MUTANT (rep_const) */	0x65, 0x30, 0x3c, 0x69, 0x00, 0x55, 0x59, -1x0c,
220: /* MUTANT (rep_const) */	1x99, 0xcc, 0xc0, 0x95, 0xfc, 0xa9, 0xa5, 0xf0,
220: /* MUTANT (rep_const) */	-1x99, 0xcc, 0xc0, 0x95, 0xfc, 0xa9, 0xa5, 0xf0,
220: /* MUTANT (rep_const) */	0x99, 1xcc, 0xc0, 0x95, 0xfc, 0xa9, 0xa5, 0xf0,
220: /* MUTANT (rep_const) */	0x99, -1xcc, 0xc0, 0x95, 0xfc, 0xa9, 0xa5, 0xf0,
220: /* MUTANT (rep_const) */	0x99, 0xcc, 1xc0, 0x95, 0xfc, 0xa9, 0xa5, 0xf0,
220: /* MUTANT (rep_const) */	0x99, 0xcc, -1xc0, 0x95, 0xfc, 0xa9, 0xa5, 0xf0,
220: /* MUTANT (rep_const) */	0x99, 0xcc, 0xc0, 1x95, 0xfc, 0xa9, 0xa5, 0xf0,
220: /* MUTANT (rep_const) */	0x99, 0xcc, 0xc0, -1x95, 0xfc, 0xa9, 0xa5, 0xf0,
220: /* MUTANT (rep_const) */	0x99, 0xcc, 0xc0, 0x95, 1xfc, 0xa9, 0xa5, 0xf0,
220: /* MUTANT (rep_const) */	0x99, 0xcc, 0xc0, 0x95, -1xfc, 0xa9, 0xa5, 0xf0,
220: /* MUTANT (rep_const) */	0x99, 0xcc, 0xc0, 0x95, 0xfc, 1xa9, 0xa5, 0xf0,
220: /* MUTANT (rep_const) */	0x99, 0xcc, 0xc0, 0x95, 0xfc, -1xa9, 0xa5, 0xf0,
220: /* MUTANT (rep_const) */	0x99, 0xcc, 0xc0, 0x95, 0xfc, 0xa9, 1xa5, 0xf0,
220: /* MUTANT (rep_const) */	0x99, 0xcc, 0xc0, 0x95, 0xfc, 0xa9, -1xa5, 0xf0,
220: /* MUTANT (rep_const) */	0x99, 0xcc, 0xc0, 0x95, 0xfc, 0xa9, 0xa5, 1xf0,
220: /* MUTANT (rep_const) */	0x99, 0xcc, 0xc0, 0x95, 0xfc, 0xa9, 0xa5, -1xf0,
221: /* MUTANT (rep_const) */	1xf0, 0xa5, 0xa9, 0xfc, 0x95, 0xc0, 0xcc, 0x99,
221: /* MUTANT (rep_const) */	-1xf0, 0xa5, 0xa9, 0xfc, 0x95, 0xc0, 0xcc, 0x99,
221: /* MUTANT (rep_const) */	0xf0, 1xa5, 0xa9, 0xfc, 0x95, 0xc0, 0xcc, 0x99,
221: /* MUTANT (rep_const) */	0xf0, -1xa5, 0xa9, 0xfc, 0x95, 0xc0, 0xcc, 0x99,
221: /* MUTANT (rep_const) */	0xf0, 0xa5, 1xa9, 0xfc, 0x95, 0xc0, 0xcc, 0x99,
221: /* MUTANT (rep_const) */	0xf0, 0xa5, -1xa9, 0xfc, 0x95, 0xc0, 0xcc, 0x99,
221: /* MUTANT (rep_const) */	0xf0, 0xa5, 0xa9, 1xfc, 0x95, 0xc0, 0xcc, 0x99,
221: /* MUTANT (rep_const) */	0xf0, 0xa5, 0xa9, -1xfc, 0x95, 0xc0, 0xcc, 0x99,
221: /* MUTANT (rep_const) */	0xf0, 0xa5, 0xa9, 0xfc, 1x95, 0xc0, 0xcc, 0x99,
221: /* MUTANT (rep_const) */	0xf0, 0xa5, 0xa9, 0xfc, -1x95, 0xc0, 0xcc, 0x99,
221: /* MUTANT (rep_const) */	0xf0, 0xa5, 0xa9, 0xfc, 0x95, 1xc0, 0xcc, 0x99,
221: /* MUTANT (rep_const) */	0xf0, 0xa5, 0xa9, 0xfc, 0x95, -1xc0, 0xcc, 0x99,
221: /* MUTANT (rep_const) */	0xf0, 0xa5, 0xa9, 0xfc, 0x95, 0xc0, 1xcc, 0x99,
221: /* MUTANT (rep_const) */	0xf0, 0xa5, 0xa9, 0xfc, 0x95, 0xc0, -1xcc, 0x99,
221: /* MUTANT (rep_const) */	0xf0, 0xa5, 0xa9, 0xfc, 0x95, 0xc0, 0xcc, 1x99,
221: /* MUTANT (rep_const) */	0xf0, 0xa5, 0xa9, 0xfc, 0x95, 0xc0, 0xcc, -1x99,
222: /* MUTANT (rep_const) */	1x95, 0xc0, 0xcc, 0x99, 0xf0, 0xa5, 0xa9, 0xfc,
222: /* MUTANT (rep_const) */	-1x95, 0xc0, 0xcc, 0x99, 0xf0, 0xa5, 0xa9, 0xfc,
222: /* MUTANT (rep_const) */	0x95, 1xc0, 0xcc, 0x99, 0xf0, 0xa5, 0xa9, 0xfc,
222: /* MUTANT (rep_const) */	0x95, -1xc0, 0xcc, 0x99, 0xf0, 0xa5, 0xa9, 0xfc,
222: /* MUTANT (rep_const) */	0x95, 0xc0, 1xcc, 0x99, 0xf0, 0xa5, 0xa9, 0xfc,
222: /* MUTANT (rep_const) */	0x95, 0xc0, -1xcc, 0x99, 0xf0, 0xa5, 0xa9, 0xfc,
222: /* MUTANT (rep_const) */	0x95, 0xc0, 0xcc, 1x99, 0xf0, 0xa5, 0xa9, 0xfc,
222: /* MUTANT (rep_const) */	0x95, 0xc0, 0xcc, -1x99, 0xf0, 0xa5, 0xa9, 0xfc,
222: /* MUTANT (rep_const) */	0x95, 0xc0, 0xcc, 0x99, 1xf0, 0xa5, 0xa9, 0xfc,
222: /* MUTANT (rep_const) */	0x95, 0xc0, 0xcc, 0x99, -1xf0, 0xa5, 0xa9, 0xfc,
222: /* MUTANT (rep_const) */	0x95, 0xc0, 0xcc, 0x99, 0xf0, 1xa5, 0xa9, 0xfc,
222: /* MUTANT (rep_const) */	0x95, 0xc0, 0xcc, 0x99, 0xf0, -1xa5, 0xa9, 0xfc,
222: /* MUTANT (rep_const) */	0x95, 0xc0, 0xcc, 0x99, 0xf0, 0xa5, 1xa9, 0xfc,
222: /* MUTANT (rep_const) */	0x95, 0xc0, 0xcc, 0x99, 0xf0, 0xa5, -1xa9, 0xfc,
222: /* MUTANT (rep_const) */	0x95, 0xc0, 0xcc, 0x99, 0xf0, 0xa5, 0xa9, 1xfc,
222: /* MUTANT (rep_const) */	0x95, 0xc0, 0xcc, 0x99, 0xf0, 0xa5, 0xa9, -1xfc,
223: /* MUTANT (rep_const) */	1xfc, 0xa9, 0xa5, 0xf0, 0x99, 0xcc, 0xc0, 0x95,
223: /* MUTANT (rep_const) */	-1xfc, 0xa9, 0xa5, 0xf0, 0x99, 0xcc, 0xc0, 0x95,
223: /* MUTANT (rep_const) */	0xfc, 1xa9, 0xa5, 0xf0, 0x99, 0xcc, 0xc0, 0x95,
223: /* MUTANT (rep_const) */	0xfc, -1xa9, 0xa5, 0xf0, 0x99, 0xcc, 0xc0, 0x95,
223: /* MUTANT (rep_const) */	0xfc, 0xa9, 1xa5, 0xf0, 0x99, 0xcc, 0xc0, 0x95,
223: /* MUTANT (rep_const) */	0xfc, 0xa9, -1xa5, 0xf0, 0x99, 0xcc, 0xc0, 0x95,
223: /* MUTANT (rep_const) */	0xfc, 0xa9, 0xa5, 1xf0, 0x99, 0xcc, 0xc0, 0x95,
223: /* MUTANT (rep_const) */	0xfc, 0xa9, 0xa5, -1xf0, 0x99, 0xcc, 0xc0, 0x95,
223: /* MUTANT (rep_const) */	0xfc, 0xa9, 0xa5, 0xf0, 1x99, 0xcc, 0xc0, 0x95,
223: /* MUTANT (rep_const) */	0xfc, 0xa9, 0xa5, 0xf0, -1x99, 0xcc, 0xc0, 0x95,
223: /* MUTANT (rep_const) */	0xfc, 0xa9, 0xa5, 0xf0, 0x99, 1xcc, 0xc0, 0x95,
223: /* MUTANT (rep_const) */	0xfc, 0xa9, 0xa5, 0xf0, 0x99, -1xcc, 0xc0, 0x95,
223: /* MUTANT (rep_const) */	0xfc, 0xa9, 0xa5, 0xf0, 0x99, 0xcc, 1xc0, 0x95,
223: /* MUTANT (rep_const) */	0xfc, 0xa9, 0xa5, 0xf0, 0x99, 0xcc, -1xc0, 0x95,
223: /* MUTANT (rep_const) */	0xfc, 0xa9, 0xa5, 0xf0, 0x99, 0xcc, 0xc0, 1x95,
223: /* MUTANT (rep_const) */	0xfc, 0xa9, 0xa5, 0xf0, 0x99, 0xcc, 0xc0, -1x95,
224: /* MUTANT (rep_const) */	1x00, 0x55, 0x59, 0x0c, 0x65, 0x30, 0x3c, 0x69,
224: /* MUTANT (rep_const) */	-1x00, 0x55, 0x59, 0x0c, 0x65, 0x30, 0x3c, 0x69,
224: /* MUTANT (rep_const) */	0x00, 1x55, 0x59, 0x0c, 0x65, 0x30, 0x3c, 0x69,
224: /* MUTANT (rep_const) */	0x00, -1x55, 0x59, 0x0c, 0x65, 0x30, 0x3c, 0x69,
224: /* MUTANT (rep_const) */	0x00, 0x55, 1x59, 0x0c, 0x65, 0x30, 0x3c, 0x69,
224: /* MUTANT (rep_const) */	0x00, 0x55, -1x59, 0x0c, 0x65, 0x30, 0x3c, 0x69,
224: /* MUTANT (rep_const) */	0x00, 0x55, 0x59, 1x0c, 0x65, 0x30, 0x3c, 0x69,
224: /* MUTANT (rep_const) */	0x00, 0x55, 0x59, -1x0c, 0x65, 0x30, 0x3c, 0x69,
224: /* MUTANT (rep_const) */	0x00, 0x55, 0x59, 0x0c, 1x65, 0x30, 0x3c, 0x69,
224: /* MUTANT (rep_const) */	0x00, 0x55, 0x59, 0x0c, -1x65, 0x30, 0x3c, 0x69,
224: /* MUTANT (rep_const) */	0x00, 0x55, 0x59, 0x0c, 0x65, 1x30, 0x3c, 0x69,
224: /* MUTANT (rep_const) */	0x00, 0x55, 0x59, 0x0c, 0x65, -1x30, 0x3c, 0x69,
224: /* MUTANT (rep_const) */	0x00, 0x55, 0x59, 0x0c, 0x65, 0x30, 1x3c, 0x69,
224: /* MUTANT (rep_const) */	0x00, 0x55, 0x59, 0x0c, 0x65, 0x30, -1x3c, 0x69,
224: /* MUTANT (rep_const) */	0x00, 0x55, 0x59, 0x0c, 0x65, 0x30, 0x3c, 1x69,
224: /* MUTANT (rep_const) */	0x00, 0x55, 0x59, 0x0c, 0x65, 0x30, 0x3c, -1x69,
225: /* MUTANT (rep_const) */	1x69, 0x3c, 0x30, 0x65, 0x0c, 0x59, 0x55, 0x00,
225: /* MUTANT (rep_const) */	-1x69, 0x3c, 0x30, 0x65, 0x0c, 0x59, 0x55, 0x00,
225: /* MUTANT (rep_const) */	0x69, 1x3c, 0x30, 0x65, 0x0c, 0x59, 0x55, 0x00,
225: /* MUTANT (rep_const) */	0x69, -1x3c, 0x30, 0x65, 0x0c, 0x59, 0x55, 0x00,
225: /* MUTANT (rep_const) */	0x69, 0x3c, 1x30, 0x65, 0x0c, 0x59, 0x55, 0x00,
225: /* MUTANT (rep_const) */	0x69, 0x3c, -1x30, 0x65, 0x0c, 0x59, 0x55, 0x00,
225: /* MUTANT (rep_const) */	0x69, 0x3c, 0x30, 1x65, 0x0c, 0x59, 0x55, 0x00,
225: /* MUTANT (rep_const) */	0x69, 0x3c, 0x30, -1x65, 0x0c, 0x59, 0x55, 0x00,
225: /* MUTANT (rep_const) */	0x69, 0x3c, 0x30, 0x65, 1x0c, 0x59, 0x55, 0x00,
225: /* MUTANT (rep_const) */	0x69, 0x3c, 0x30, 0x65, -1x0c, 0x59, 0x55, 0x00,
225: /* MUTANT (rep_const) */	0x69, 0x3c, 0x30, 0x65, 0x0c, 1x59, 0x55, 0x00,
225: /* MUTANT (rep_const) */	0x69, 0x3c, 0x30, 0x65, 0x0c, -1x59, 0x55, 0x00,
225: /* MUTANT (rep_const) */	0x69, 0x3c, 0x30, 0x65, 0x0c, 0x59, 1x55, 0x00,
225: /* MUTANT (rep_const) */	0x69, 0x3c, 0x30, 0x65, 0x0c, 0x59, -1x55, 0x00,
225: /* MUTANT (rep_const) */	0x69, 0x3c, 0x30, 0x65, 0x0c, 0x59, 0x55, 1x00,
225: /* MUTANT (rep_const) */	0x69, 0x3c, 0x30, 0x65, 0x0c, 0x59, 0x55, -1x00,
232: /* MUTANT (del_stmt) */ /* 	unsigned int i; */ 
233: /* MUTANT (del_stmt) */ /* 	unsigned char col_parity = 0; */ 
233: /* MUTANT (rep_const) */	unsigned char col_parity = 1;
233: /* MUTANT (rep_const) */	unsigned char col_parity = -1;
234: /* MUTANT (del_stmt) */ /* 	unsigned char line_parity = 0; */ 
234: /* MUTANT (rep_const) */	unsigned char line_parity = 1;
234: /* MUTANT (rep_const) */	unsigned char line_parity = -1;
235: /* MUTANT (del_stmt) */ /* 	unsigned char line_parity_prime = 0; */ 
235: /* MUTANT (rep_const) */	unsigned char line_parity_prime = 1;
235: /* MUTANT (rep_const) */	unsigned char line_parity_prime = -1;
236: /* MUTANT (del_stmt) */ /* 	unsigned char t; */ 
237: /* MUTANT (del_stmt) */ /* 	unsigned char b; */ 
239: /* MUTANT (rep_op) */	for (i = 0; i <= 256; i++) {
239: /* MUTANT (rep_op) */	for (i = 0; i > 256; i++) {
239: /* MUTANT (rep_op) */	for (i = 0; i >= 256; i++) {
239: /* MUTANT (rep_op) */	for (i = 0; i == 256; i++) {
239: /* MUTANT (rep_op) */	for (i = 0; i != 256; i++) {
239: /* MUTANT (rep_op) */	for (i = 0; i < 256; i--) {
239: /* MUTANT (rep_const) */	for (i = 1; i < 256; i++) {
239: /* MUTANT (rep_const) */	for (i = -1; i < 256; i++) {
239: /* MUTANT (rep_const) */	for (i = 0; i < 0; i++) {
239: /* MUTANT (rep_const) */	for (i = 0; i < 1; i++) {
239: /* MUTANT (rep_const) */	for (i = 0; i < -1; i++) {
239: /* MUTANT (rep_const) */	for (i = 0; i < ((256)+1); i++) {
239: /* MUTANT (rep_const) */	for (i = 0; i < ((256)-1); i++) {
240: /* MUTANT (del_stmt) */ /* 		b = column_parity_table[*data++]; */ 
240: /* MUTANT (rep_op) */		b = column_parity_table[*data--];
241: /* MUTANT (del_stmt) */ /* 		col_parity ^= b; */ 
243: /* MUTANT (rep_const) */		if (b & 1x01) {	/* odd number of bits in the byte */
243: /* MUTANT (rep_const) */		if (b & -1x01) {	/* odd number of bits in the byte */
243: /* MUTANT (negate) */		if(! (b & 0x01)) {	/* odd number of bits in the byte */
244: /* MUTANT (del_stmt) */ /* 			line_parity ^= i; */ 
245: /* MUTANT (del_stmt) */ /* 			line_parity_prime ^= ~i; */ 
249: /* MUTANT (rep_op) */	ecc[2] = (~col_parity) & 0x03;
249: /* MUTANT (rep_const) */	ecc[0] = (~col_parity) | 0x03;
249: /* MUTANT (rep_const) */	ecc[1] = (~col_parity) | 0x03;
249: /* MUTANT (rep_const) */	ecc[-1] = (~col_parity) | 0x03;
249: /* MUTANT (rep_const) */	ecc[((2)+1)] = (~col_parity) | 0x03;
249: /* MUTANT (rep_const) */	ecc[((2)-1)] = (~col_parity) | 0x03;
249: /* MUTANT (rep_const) */	ecc[2] = (~col_parity) | 1x03;
249: /* MUTANT (rep_const) */	ecc[2] = (~col_parity) | -1x03;
251: /* MUTANT (del_stmt) */ /* 	t = 0; */ 
251: /* MUTANT (rep_const) */	t = 1;
251: /* MUTANT (rep_const) */	t = -1;
252: /* MUTANT (rep_const) */	if (line_parity & 1x80)
252: /* MUTANT (rep_const) */	if (line_parity & -1x80)
252: /* MUTANT (negate) */	if(! (line_parity & 0x80))
253: /* MUTANT (rep_const) */		t |= 1x80;
253: /* MUTANT (rep_const) */		t |= -1x80;
254: /* MUTANT (rep_const) */	if (line_parity_prime & 1x80)
254: /* MUTANT (rep_const) */	if (line_parity_prime & -1x80)
254: /* MUTANT (negate) */	if(! (line_parity_prime & 0x80))
255: /* MUTANT (rep_const) */		t |= 1x40;
255: /* MUTANT (rep_const) */		t |= -1x40;
256: /* MUTANT (rep_const) */	if (line_parity & 1x40)
256: /* MUTANT (rep_const) */	if (line_parity & -1x40)
256: /* MUTANT (negate) */	if(! (line_parity & 0x40))
257: /* MUTANT (rep_const) */		t |= 1x20;
257: /* MUTANT (rep_const) */		t |= -1x20;
258: /* MUTANT (rep_const) */	if (line_parity_prime & 1x40)
258: /* MUTANT (rep_const) */	if (line_parity_prime & -1x40)
258: /* MUTANT (negate) */	if(! (line_parity_prime & 0x40))
259: /* MUTANT (rep_const) */		t |= 1x10;
259: /* MUTANT (rep_const) */		t |= -1x10;
260: /* MUTANT (rep_const) */	if (line_parity & 1x20)
260: /* MUTANT (rep_const) */	if (line_parity & -1x20)
260: /* MUTANT (negate) */	if(! (line_parity & 0x20))
261: /* MUTANT (rep_const) */		t |= 1x08;
261: /* MUTANT (rep_const) */		t |= -1x08;
262: /* MUTANT (rep_const) */	if (line_parity_prime & 1x20)
262: /* MUTANT (rep_const) */	if (line_parity_prime & -1x20)
262: /* MUTANT (negate) */	if(! (line_parity_prime & 0x20))
263: /* MUTANT (rep_const) */		t |= 1x04;
263: /* MUTANT (rep_const) */		t |= -1x04;
264: /* MUTANT (rep_const) */	if (line_parity & 1x10)
264: /* MUTANT (rep_const) */	if (line_parity & -1x10)
264: /* MUTANT (negate) */	if(! (line_parity & 0x10))
265: /* MUTANT (rep_const) */		t |= 1x02;
265: /* MUTANT (rep_const) */		t |= -1x02;
266: /* MUTANT (rep_const) */	if (line_parity_prime & 1x10)
266: /* MUTANT (rep_const) */	if (line_parity_prime & -1x10)
266: /* MUTANT (negate) */	if(! (line_parity_prime & 0x10))
267: /* MUTANT (rep_const) */		t |= 1x01;
267: /* MUTANT (rep_const) */		t |= -1x01;
268: /* MUTANT (del_stmt) */ /* 	ecc[1] = ~t; */ 
268: /* MUTANT (rep_const) */	ecc[0] = ~t;
268: /* MUTANT (rep_const) */	ecc[-1] = ~t;
268: /* MUTANT (rep_const) */	ecc[((1)+1)] = ~t;
270: /* MUTANT (del_stmt) */ /* 	t = 0; */ 
270: /* MUTANT (rep_const) */	t = 1;
270: /* MUTANT (rep_const) */	t = -1;
271: /* MUTANT (rep_const) */	if (line_parity & 1x08)
271: /* MUTANT (rep_const) */	if (line_parity & -1x08)
271: /* MUTANT (negate) */	if(! (line_parity & 0x08))
272: /* MUTANT (rep_const) */		t |= 1x80;
272: /* MUTANT (rep_const) */		t |= -1x80;
273: /* MUTANT (rep_const) */	if (line_parity_prime & 1x08)
273: /* MUTANT (rep_const) */	if (line_parity_prime & -1x08)
273: /* MUTANT (negate) */	if(! (line_parity_prime & 0x08))
274: /* MUTANT (rep_const) */		t |= 1x40;
274: /* MUTANT (rep_const) */		t |= -1x40;
275: /* MUTANT (rep_const) */	if (line_parity & 1x04)
275: /* MUTANT (rep_const) */	if (line_parity & -1x04)
275: /* MUTANT (negate) */	if(! (line_parity & 0x04))
276: /* MUTANT (rep_const) */		t |= 1x20;
276: /* MUTANT (rep_const) */		t |= -1x20;
277: /* MUTANT (rep_const) */	if (line_parity_prime & 1x04)
277: /* MUTANT (rep_const) */	if (line_parity_prime & -1x04)
277: /* MUTANT (negate) */	if(! (line_parity_prime & 0x04))
278: /* MUTANT (rep_const) */		t |= 1x10;
278: /* MUTANT (rep_const) */		t |= -1x10;
279: /* MUTANT (rep_const) */	if (line_parity & 1x02)
279: /* MUTANT (rep_const) */	if (line_parity & -1x02)
279: /* MUTANT (negate) */	if(! (line_parity & 0x02))
280: /* MUTANT (rep_const) */		t |= 1x08;
280: /* MUTANT (rep_const) */		t |= -1x08;
281: /* MUTANT (rep_const) */	if (line_parity_prime & 1x02)
281: /* MUTANT (rep_const) */	if (line_parity_prime & -1x02)
281: /* MUTANT (negate) */	if(! (line_parity_prime & 0x02))
282: /* MUTANT (rep_const) */		t |= 1x04;
282: /* MUTANT (rep_const) */		t |= -1x04;
283: /* MUTANT (rep_const) */	if (line_parity & 1x01)
283: /* MUTANT (rep_const) */	if (line_parity & -1x01)
283: /* MUTANT (negate) */	if(! (line_parity & 0x01))
284: /* MUTANT (rep_const) */		t |= 1x02;
284: /* MUTANT (rep_const) */		t |= -1x02;
285: /* MUTANT (rep_const) */	if (line_parity_prime & 1x01)
285: /* MUTANT (rep_const) */	if (line_parity_prime & -1x01)
285: /* MUTANT (negate) */	if(! (line_parity_prime & 0x01))
286: /* MUTANT (rep_const) */		t |= 1x01;
286: /* MUTANT (rep_const) */		t |= -1x01;
287: /* MUTANT (del_stmt) */ /* 	ecc[0] = ~t; */ 
287: /* MUTANT (rep_const) */	ecc[1] = ~t;
287: /* MUTANT (rep_const) */	ecc[-1] = ~t;
296: /* MUTANT (del_stmt) */ /* 	unsigned char d0, d1, d2; */ 	/* deltas */
298: /* MUTANT (del_stmt) */ /* 	d0 = read_ecc[0] ^ test_ecc[0]; */ 
298: /* MUTANT (rep_const) */	d0 = read_ecc[1] ^ test_ecc[0];
298: /* MUTANT (rep_const) */	d0 = read_ecc[-1] ^ test_ecc[0];
298: /* MUTANT (rep_const) */	d0 = read_ecc[0] ^ test_ecc[1];
298: /* MUTANT (rep_const) */	d0 = read_ecc[0] ^ test_ecc[-1];
299: /* MUTANT (del_stmt) */ /* 	d1 = read_ecc[1] ^ test_ecc[1]; */ 
299: /* MUTANT (rep_const) */	d1 = read_ecc[0] ^ test_ecc[1];
299: /* MUTANT (rep_const) */	d1 = read_ecc[-1] ^ test_ecc[1];
299: /* MUTANT (rep_const) */	d1 = read_ecc[((1)+1)] ^ test_ecc[1];
299: /* MUTANT (rep_const) */	d1 = read_ecc[1] ^ test_ecc[0];
299: /* MUTANT (rep_const) */	d1 = read_ecc[1] ^ test_ecc[-1];
299: /* MUTANT (rep_const) */	d1 = read_ecc[1] ^ test_ecc[((1)+1)];
300: /* MUTANT (del_stmt) */ /* 	d2 = read_ecc[2] ^ test_ecc[2]; */ 
300: /* MUTANT (rep_const) */	d2 = read_ecc[0] ^ test_ecc[2];
300: /* MUTANT (rep_const) */	d2 = read_ecc[1] ^ test_ecc[2];
300: /* MUTANT (rep_const) */	d2 = read_ecc[-1] ^ test_ecc[2];
300: /* MUTANT (rep_const) */	d2 = read_ecc[((2)+1)] ^ test_ecc[2];
300: /* MUTANT (rep_const) */	d2 = read_ecc[((2)-1)] ^ test_ecc[2];
300: /* MUTANT (rep_const) */	d2 = read_ecc[2] ^ test_ecc[0];
300: /* MUTANT (rep_const) */	d2 = read_ecc[2] ^ test_ecc[1];
300: /* MUTANT (rep_const) */	d2 = read_ecc[2] ^ test_ecc[-1];
300: /* MUTANT (rep_const) */	d2 = read_ecc[2] ^ test_ecc[((2)+1)];
300: /* MUTANT (rep_const) */	d2 = read_ecc[2] ^ test_ecc[((2)-1)];
302: /* MUTANT (rep_op) */	if ((d0 & d1 | d2) == 0)
302: /* MUTANT (rep_op) */	if ((d0 | d1 & d2) == 0)
302: /* MUTANT (rep_op) */	if ((d0 | d1 | d2) != 0)
302: /* MUTANT (rep_const) */	if ((d0 | d1 | d2) == 1)
302: /* MUTANT (rep_const) */	if ((d0 | d1 | d2) == -1)
302: /* MUTANT (negate) */	if(! ((d0 | d1 | d2) == 0))
303: /* MUTANT (rep_const) */		return 1;	/* no error */
303: /* MUTANT (rep_const) */		return -1;	/* no error */
305: /* MUTANT (rep_op) */	if (((d0 ^ (d0 >> 1)) & 0x55) != 0x55 &&
305: /* MUTANT (rep_op) */	if (((d0 ^ (d0 >> 1)) & 0x55) == 0x55 ||
305: /* MUTANT (rep_const) */	if (((d0 ^ (d0 >> 0)) & 0x55) == 0x55 &&
305: /* MUTANT (rep_const) */	if (((d0 ^ (d0 >> -1)) & 0x55) == 0x55 &&
305: /* MUTANT (rep_const) */	if (((d0 ^ (d0 >> ((1)+1))) & 0x55) == 0x55 &&
305: /* MUTANT (rep_const) */	if (((d0 ^ (d0 >> 1)) & 1x55) == 0x55 &&
305: /* MUTANT (rep_const) */	if (((d0 ^ (d0 >> 1)) & -1x55) == 0x55 &&
305: /* MUTANT (rep_const) */	if (((d0 ^ (d0 >> 1)) & 0x55) == 1x55 &&
305: /* MUTANT (rep_const) */	if (((d0 ^ (d0 >> 1)) & 0x55) == -1x55 &&
306: /* MUTANT (rep_op) */	    ((d1 ^ (d1 >> 1)) & 0x55) != 0x55 &&
306: /* MUTANT (rep_op) */	    ((d1 ^ (d1 >> 1)) & 0x55) == 0x55 ||
306: /* MUTANT (rep_const) */	    ((d1 ^ (d1 >> 0)) & 0x55) == 0x55 &&
306: /* MUTANT (rep_const) */	    ((d1 ^ (d1 >> -1)) & 0x55) == 0x55 &&
306: /* MUTANT (rep_const) */	    ((d1 ^ (d1 >> ((1)+1))) & 0x55) == 0x55 &&
306: /* MUTANT (rep_const) */	    ((d1 ^ (d1 >> 1)) & 1x55) == 0x55 &&
306: /* MUTANT (rep_const) */	    ((d1 ^ (d1 >> 1)) & -1x55) == 0x55 &&
306: /* MUTANT (rep_const) */	    ((d1 ^ (d1 >> 1)) & 0x55) == 1x55 &&
306: /* MUTANT (rep_const) */	    ((d1 ^ (d1 >> 1)) & 0x55) == -1x55 &&
307: /* MUTANT (rep_op) */	    ((d2 ^ (d2 >> 1)) & 0x54) != 0x54) {
307: /* MUTANT (rep_const) */	    ((d2 ^ (d2 >> 0)) & 0x54) == 0x54) {
307: /* MUTANT (rep_const) */	    ((d2 ^ (d2 >> -1)) & 0x54) == 0x54) {
307: /* MUTANT (rep_const) */	    ((d2 ^ (d2 >> ((1)+1))) & 0x54) == 0x54) {
307: /* MUTANT (rep_const) */	    ((d2 ^ (d2 >> 1)) & 1x54) == 0x54) {
307: /* MUTANT (rep_const) */	    ((d2 ^ (d2 >> 1)) & -1x54) == 0x54) {
307: /* MUTANT (rep_const) */	    ((d2 ^ (d2 >> 1)) & 0x54) == 1x54) {
307: /* MUTANT (rep_const) */	    ((d2 ^ (d2 >> 1)) & 0x54) == -1x54) {
310: /* MUTANT (del_stmt) */ /* 		unsigned byte; */ 
311: /* MUTANT (del_stmt) */ /* 		unsigned bit; */ 
313: /* MUTANT (del_stmt) */ /* 		bit = byte = 0; */ 
313: /* MUTANT (rep_const) */		bit = byte = 1;
313: /* MUTANT (rep_const) */		bit = byte = -1;
315: /* MUTANT (rep_const) */		if (d1 & 1x80)
315: /* MUTANT (rep_const) */		if (d1 & -1x80)
315: /* MUTANT (negate) */		if(! (d1 & 0x80))
316: /* MUTANT (rep_const) */			byte |= 1x80;
316: /* MUTANT (rep_const) */			byte |= -1x80;
317: /* MUTANT (rep_const) */		if (d1 & 1x20)
317: /* MUTANT (rep_const) */		if (d1 & -1x20)
317: /* MUTANT (negate) */		if(! (d1 & 0x20))
318: /* MUTANT (rep_const) */			byte |= 1x40;
318: /* MUTANT (rep_const) */			byte |= -1x40;
319: /* MUTANT (rep_const) */		if (d1 & 1x08)
319: /* MUTANT (rep_const) */		if (d1 & -1x08)
319: /* MUTANT (negate) */		if(! (d1 & 0x08))
320: /* MUTANT (rep_const) */			byte |= 1x20;
320: /* MUTANT (rep_const) */			byte |= -1x20;
321: /* MUTANT (rep_const) */		if (d1 & 1x02)
321: /* MUTANT (rep_const) */		if (d1 & -1x02)
321: /* MUTANT (negate) */		if(! (d1 & 0x02))
322: /* MUTANT (rep_const) */			byte |= 1x10;
322: /* MUTANT (rep_const) */			byte |= -1x10;
323: /* MUTANT (rep_const) */		if (d0 & 1x80)
323: /* MUTANT (rep_const) */		if (d0 & -1x80)
323: /* MUTANT (negate) */		if(! (d0 & 0x80))
324: /* MUTANT (rep_const) */			byte |= 1x08;
324: /* MUTANT (rep_const) */			byte |= -1x08;
325: /* MUTANT (rep_const) */		if (d0 & 1x20)
325: /* MUTANT (rep_const) */		if (d0 & -1x20)
325: /* MUTANT (negate) */		if(! (d0 & 0x20))
326: /* MUTANT (rep_const) */			byte |= 1x04;
326: /* MUTANT (rep_const) */			byte |= -1x04;
327: /* MUTANT (rep_const) */		if (d0 & 1x08)
327: /* MUTANT (rep_const) */		if (d0 & -1x08)
327: /* MUTANT (negate) */		if(! (d0 & 0x08))
328: /* MUTANT (rep_const) */			byte |= 1x02;
328: /* MUTANT (rep_const) */			byte |= -1x02;
329: /* MUTANT (rep_const) */		if (d0 & 1x02)
329: /* MUTANT (rep_const) */		if (d0 & -1x02)
329: /* MUTANT (negate) */		if(! (d0 & 0x02))
330: /* MUTANT (rep_const) */			byte |= 1x01;
330: /* MUTANT (rep_const) */			byte |= -1x01;
332: /* MUTANT (rep_const) */		if (d2 & 1x80)
332: /* MUTANT (rep_const) */		if (d2 & -1x80)
332: /* MUTANT (negate) */		if(! (d2 & 0x80))
333: /* MUTANT (rep_const) */			bit |= 1x04;
333: /* MUTANT (rep_const) */			bit |= -1x04;
334: /* MUTANT (rep_const) */		if (d2 & 1x20)
334: /* MUTANT (rep_const) */		if (d2 & -1x20)
334: /* MUTANT (negate) */		if(! (d2 & 0x20))
335: /* MUTANT (rep_const) */			bit |= 1x02;
335: /* MUTANT (rep_const) */			bit |= -1x02;
336: /* MUTANT (rep_const) */		if (d2 & 1x08)
336: /* MUTANT (rep_const) */		if (d2 & -1x08)
336: /* MUTANT (negate) */		if(! (d2 & 0x08))
337: /* MUTANT (rep_const) */			bit |= 1x01;
337: /* MUTANT (rep_const) */			bit |= -1x01;
339: /* MUTANT (del_stmt) */ /* 		data[byte] ^= (1 << bit); */ 
339: /* MUTANT (rep_const) */		data[byte] ^= (0 << bit);
339: /* MUTANT (rep_const) */		data[byte] ^= (-1 << bit);
339: /* MUTANT (rep_const) */		data[byte] ^= (((1)+1) << bit);
341: /* MUTANT (del_stmt) */ /* 		return 1; */ 	/* Corrected the error */
341: /* MUTANT (rep_const) */		return 0;	/* Corrected the error */
341: /* MUTANT (rep_const) */		return -1;	/* Corrected the error */
341: /* MUTANT (rep_const) */		return ((1)+1);	/* Corrected the error */
344: /* MUTANT (rep_op) */	if ((hweight8(d0) - hweight8(d1) + hweight8(d2)) == 1) {
344: /* MUTANT (rep_op) */	if ((hweight8(d0) * hweight8(d1) + hweight8(d2)) == 1) {
344: /* MUTANT (rep_op) */	if ((hweight8(d0) % hweight8(d1) + hweight8(d2)) == 1) {
344: /* MUTANT (rep_op) */	if ((hweight8(d0) + hweight8(d1) - hweight8(d2)) == 1) {
344: /* MUTANT (rep_op) */	if ((hweight8(d0) + hweight8(d1) * hweight8(d2)) == 1) {
344: /* MUTANT (rep_op) */	if ((hweight8(d0) + hweight8(d1) % hweight8(d2)) == 1) {
344: /* MUTANT (rep_op) */	if ((hweight8(d0) + hweight8(d1) + hweight8(d2)) != 1) {
344: /* MUTANT (rep_const) */	if ((hweight8(d0) + hweight8(d1) + hweight8(d2)) == 0) {
344: /* MUTANT (rep_const) */	if ((hweight8(d0) + hweight8(d1) + hweight8(d2)) == -1) {
344: /* MUTANT (rep_const) */	if ((hweight8(d0) + hweight8(d1) + hweight8(d2)) == ((1)+1)) {
344: /* MUTANT (negate) */	if(! ((hweight8(d0) + hweight8(d1) + hweight8(d2)) == 1)) {
347: /* MUTANT (del_stmt) */ /* 		read_ecc[0] = test_ecc[0]; */ 
347: /* MUTANT (rep_const) */		read_ecc[1] = test_ecc[0];
347: /* MUTANT (rep_const) */		read_ecc[-1] = test_ecc[0];
347: /* MUTANT (rep_const) */		read_ecc[0] = test_ecc[1];
347: /* MUTANT (rep_const) */		read_ecc[0] = test_ecc[-1];
348: /* MUTANT (del_stmt) */ /* 		read_ecc[1] = test_ecc[1]; */ 
348: /* MUTANT (rep_const) */		read_ecc[0] = test_ecc[1];
348: /* MUTANT (rep_const) */		read_ecc[-1] = test_ecc[1];
348: /* MUTANT (rep_const) */		read_ecc[((1)+1)] = test_ecc[1];
348: /* MUTANT (rep_const) */		read_ecc[1] = test_ecc[0];
348: /* MUTANT (rep_const) */		read_ecc[1] = test_ecc[-1];
348: /* MUTANT (rep_const) */		read_ecc[1] = test_ecc[((1)+1)];
349: /* MUTANT (del_stmt) */ /* 		read_ecc[2] = test_ecc[2]; */ 
349: /* MUTANT (rep_const) */		read_ecc[0] = test_ecc[2];
349: /* MUTANT (rep_const) */		read_ecc[1] = test_ecc[2];
349: /* MUTANT (rep_const) */		read_ecc[-1] = test_ecc[2];
349: /* MUTANT (rep_const) */		read_ecc[((2)+1)] = test_ecc[2];
349: /* MUTANT (rep_const) */		read_ecc[((2)-1)] = test_ecc[2];
349: /* MUTANT (rep_const) */		read_ecc[2] = test_ecc[0];
349: /* MUTANT (rep_const) */		read_ecc[2] = test_ecc[1];
349: /* MUTANT (rep_const) */		read_ecc[2] = test_ecc[-1];
349: /* MUTANT (rep_const) */		read_ecc[2] = test_ecc[((2)+1)];
349: /* MUTANT (rep_const) */		read_ecc[2] = test_ecc[((2)-1)];
351: /* MUTANT (del_stmt) */ /* 		return 1; */ 	/* Corrected the error */
351: /* MUTANT (rep_const) */		return 0;	/* Corrected the error */
351: /* MUTANT (rep_const) */		return -1;	/* Corrected the error */
351: /* MUTANT (rep_const) */		return ((1)+1);	/* Corrected the error */
356: /* MUTANT (rep_const) */	return 0;
356: /* MUTANT (rep_const) */	return 1;
356: /* MUTANT (rep_const) */	return ((-1)+1);
356: /* MUTANT (rep_const) */	return ((-1)-1);
366: /* MUTANT (del_stmt) */ /* 	unsigned int i; */ 
367: /* MUTANT (del_stmt) */ /* 	unsigned char col_parity = 0; */ 
367: /* MUTANT (rep_const) */	unsigned char col_parity = 1;
367: /* MUTANT (rep_const) */	unsigned char col_parity = -1;
368: /* MUTANT (del_stmt) */ /* 	unsigned line_parity = 0; */ 
368: /* MUTANT (rep_const) */	unsigned line_parity = 1;
368: /* MUTANT (rep_const) */	unsigned line_parity = -1;
369: /* MUTANT (del_stmt) */ /* 	unsigned line_parity_prime = 0; */ 
369: /* MUTANT (rep_const) */	unsigned line_parity_prime = 1;
369: /* MUTANT (rep_const) */	unsigned line_parity_prime = -1;
370: /* MUTANT (del_stmt) */ /* 	unsigned char b; */ 
372: /* MUTANT (rep_op) */	for (i = 0; i <= n_bytes; i++) {
372: /* MUTANT (rep_op) */	for (i = 0; i > n_bytes; i++) {
372: /* MUTANT (rep_op) */	for (i = 0; i >= n_bytes; i++) {
372: /* MUTANT (rep_op) */	for (i = 0; i == n_bytes; i++) {
372: /* MUTANT (rep_op) */	for (i = 0; i != n_bytes; i++) {
372: /* MUTANT (rep_op) */	for (i = 0; i < n_bytes; i--) {
372: /* MUTANT (rep_const) */	for (i = 1; i < n_bytes; i++) {
372: /* MUTANT (rep_const) */	for (i = -1; i < n_bytes; i++) {
373: /* MUTANT (del_stmt) */ /* 		b = column_parity_table[*data++]; */ 
373: /* MUTANT (rep_op) */		b = column_parity_table[*data--];
374: /* MUTANT (del_stmt) */ /* 		col_parity ^= b; */ 
376: /* MUTANT (rep_const) */		if (b & 1x01) {
376: /* MUTANT (rep_const) */		if (b & -1x01) {
376: /* MUTANT (negate) */		if(! (b & 0x01)) {
378: /* MUTANT (del_stmt) */ /* 			line_parity ^= i; */ 
379: /* MUTANT (del_stmt) */ /* 			line_parity_prime ^= ~i; */ 
384: /* MUTANT (rep_const) */	ecc_other->col_parity = (col_parity >> 0) & 0x3f;
384: /* MUTANT (rep_const) */	ecc_other->col_parity = (col_parity >> 1) & 0x3f;
384: /* MUTANT (rep_const) */	ecc_other->col_parity = (col_parity >> -1) & 0x3f;
384: /* MUTANT (rep_const) */	ecc_other->col_parity = (col_parity >> ((2)+1)) & 0x3f;
384: /* MUTANT (rep_const) */	ecc_other->col_parity = (col_parity >> ((2)-1)) & 0x3f;
384: /* MUTANT (rep_const) */	ecc_other->col_parity = (col_parity >> 2) & 1x3f;
384: /* MUTANT (rep_const) */	ecc_other->col_parity = (col_parity >> 2) & -1x3f;
385: /* MUTANT (del_stmt) */ /* 	ecc_other->line_parity = line_parity; */ 
386: /* MUTANT (del_stmt) */ /* 	ecc_other->line_parity_prime = line_parity_prime; */ 
393: /* MUTANT (del_stmt) */ /* 	unsigned char delta_col; */ 	/* column parity delta */
394: /* MUTANT (del_stmt) */ /* 	unsigned delta_line; */ 	/* line parity delta */
395: /* MUTANT (del_stmt) */ /* 	unsigned delta_line_prime; */ 	/* line parity delta */
396: /* MUTANT (del_stmt) */ /* 	unsigned bit; */ 
398: /* MUTANT (del_stmt) */ /* 	delta_col = read_ecc->col_parity ^ test_ecc->col_parity; */ 
399: /* MUTANT (del_stmt) */ /* 	delta_line = read_ecc->line_parity ^ test_ecc->line_parity; */ 
403: /* MUTANT (rep_op) */	if ((delta_col & delta_line | delta_line_prime) == 0)
403: /* MUTANT (rep_op) */	if ((delta_col | delta_line & delta_line_prime) == 0)
403: /* MUTANT (rep_op) */	if ((delta_col | delta_line | delta_line_prime) != 0)
403: /* MUTANT (rep_const) */	if ((delta_col | delta_line | delta_line_prime) == 1)
403: /* MUTANT (rep_const) */	if ((delta_col | delta_line | delta_line_prime) == -1)
403: /* MUTANT (negate) */	if(! ((delta_col | delta_line | delta_line_prime) == 0))
404: /* MUTANT (rep_const) */		return 1;	/* no error */
404: /* MUTANT (rep_const) */		return -1;	/* no error */
406: /* MUTANT (rep_op) */	if (delta_line != ~delta_line_prime &&
406: /* MUTANT (rep_op) */	if (delta_line == ~delta_line_prime ||
407: /* MUTANT (rep_op) */	    (((delta_col ^ (delta_col >> 1)) & 0x15) != 0x15)) {
407: /* MUTANT (rep_const) */	    (((delta_col ^ (delta_col >> 0)) & 0x15) == 0x15)) {
407: /* MUTANT (rep_const) */	    (((delta_col ^ (delta_col >> -1)) & 0x15) == 0x15)) {
407: /* MUTANT (rep_const) */	    (((delta_col ^ (delta_col >> ((1)+1))) & 0x15) == 0x15)) {
407: /* MUTANT (rep_const) */	    (((delta_col ^ (delta_col >> 1)) & 1x15) == 0x15)) {
407: /* MUTANT (rep_const) */	    (((delta_col ^ (delta_col >> 1)) & -1x15) == 0x15)) {
407: /* MUTANT (rep_const) */	    (((delta_col ^ (delta_col >> 1)) & 0x15) == 1x15)) {
407: /* MUTANT (rep_const) */	    (((delta_col ^ (delta_col >> 1)) & 0x15) == -1x15)) {
410: /* MUTANT (del_stmt) */ /* 		bit = 0; */ 
410: /* MUTANT (rep_const) */		bit = 1;
410: /* MUTANT (rep_const) */		bit = -1;
412: /* MUTANT (rep_const) */		if (delta_col & 1x20)
412: /* MUTANT (rep_const) */		if (delta_col & -1x20)
412: /* MUTANT (negate) */		if(! (delta_col & 0x20))
413: /* MUTANT (rep_const) */			bit |= 1x04;
413: /* MUTANT (rep_const) */			bit |= -1x04;
414: /* MUTANT (rep_const) */		if (delta_col & 1x08)
414: /* MUTANT (rep_const) */		if (delta_col & -1x08)
414: /* MUTANT (negate) */		if(! (delta_col & 0x08))
415: /* MUTANT (rep_const) */			bit |= 1x02;
415: /* MUTANT (rep_const) */			bit |= -1x02;
416: /* MUTANT (rep_const) */		if (delta_col & 1x02)
416: /* MUTANT (rep_const) */		if (delta_col & -1x02)
416: /* MUTANT (negate) */		if(! (delta_col & 0x02))
417: /* MUTANT (rep_const) */			bit |= 1x01;
417: /* MUTANT (rep_const) */			bit |= -1x01;
419: /* MUTANT (rep_op) */		if (delta_line <= n_bytes)
419: /* MUTANT (rep_op) */		if (delta_line < n_bytes)
419: /* MUTANT (rep_op) */		if (delta_line > n_bytes)
419: /* MUTANT (rep_op) */		if (delta_line == n_bytes)
419: /* MUTANT (rep_op) */		if (delta_line != n_bytes)
419: /* MUTANT (negate) */		if(! (delta_line >= n_bytes))
420: /* MUTANT (rep_const) */			return 0;
420: /* MUTANT (rep_const) */			return 1;
420: /* MUTANT (rep_const) */			return ((-1)+1);
420: /* MUTANT (rep_const) */			return ((-1)-1);
422: /* MUTANT (del_stmt) */ /* 		data[delta_line] ^= (1 << bit); */ 
422: /* MUTANT (rep_const) */		data[delta_line] ^= (0 << bit);
422: /* MUTANT (rep_const) */		data[delta_line] ^= (-1 << bit);
422: /* MUTANT (rep_const) */		data[delta_line] ^= (((1)+1) << bit);
424: /* MUTANT (del_stmt) */ /* 		return 1; */ 	/* corrected */
424: /* MUTANT (rep_const) */		return 0;	/* corrected */
424: /* MUTANT (rep_const) */		return -1;	/* corrected */
424: /* MUTANT (rep_const) */		return ((1)+1);	/* corrected */
427: /* MUTANT (rep_op) */	if ((hweight32(delta_line) -
427: /* MUTANT (rep_op) */	if ((hweight32(delta_line) *
427: /* MUTANT (rep_op) */	if ((hweight32(delta_line) %
428: /* MUTANT (rep_op) */	     hweight32(delta_line_prime) -
428: /* MUTANT (rep_op) */	     hweight32(delta_line_prime) *
428: /* MUTANT (rep_op) */	     hweight32(delta_line_prime) %
429: /* MUTANT (rep_op) */	     hweight8(delta_col)) != 1) {
429: /* MUTANT (rep_const) */	     hweight8(delta_col)) == 0) {
429: /* MUTANT (rep_const) */	     hweight8(delta_col)) == -1) {
429: /* MUTANT (rep_const) */	     hweight8(delta_col)) == ((1)+1)) {
432: /* MUTANT (del_stmt) */ /* 		*read_ecc = *test_ecc; */ 
433: /* MUTANT (del_stmt) */ /* 		return 1; */ 	/* corrected */
433: /* MUTANT (rep_const) */		return 0;	/* corrected */
433: /* MUTANT (rep_const) */		return -1;	/* corrected */
433: /* MUTANT (rep_const) */		return ((1)+1);	/* corrected */
438: /* MUTANT (rep_const) */	return 0;
438: /* MUTANT (rep_const) */	return 1;
438: /* MUTANT (rep_const) */	return ((-1)+1);
438: /* MUTANT (rep_const) */	return ((-1)-1);
473: #define YAFFS_GC_GOOD_ENOUGH 0 /* MUTANT (rep_const) */
473: #define YAFFS_GC_GOOD_ENOUGH 1 /* MUTANT (rep_const) */
473: #define YAFFS_GC_GOOD_ENOUGH -1 /* MUTANT (rep_const) */
473: #define YAFFS_GC_GOOD_ENOUGH ((2)+1) /* MUTANT (rep_const) */
473: #define YAFFS_GC_GOOD_ENOUGH ((2)-1) /* MUTANT (rep_const) */
474: #define YAFFS_GC_PASSIVE_THRESHOLD 0 /* MUTANT (rep_const) */
474: #define YAFFS_GC_PASSIVE_THRESHOLD 1 /* MUTANT (rep_const) */
474: #define YAFFS_GC_PASSIVE_THRESHOLD -1 /* MUTANT (rep_const) */
474: #define YAFFS_GC_PASSIVE_THRESHOLD ((4)+1) /* MUTANT (rep_const) */
474: #define YAFFS_GC_PASSIVE_THRESHOLD ((4)-1) /* MUTANT (rep_const) */
490: /* MUTANT (del_stmt) */ /* 	int chunk; */ 
491: /* MUTANT (del_stmt) */ /* 	u32 offset; */ 
493: /* MUTANT (del_stmt) */ /* 	chunk = (u32) (addr >> dev->chunk_shift); */ 
495: /* MUTANT (rep_op) */	if (dev->chunk_div != 1) {
495: /* MUTANT (rep_const) */	if (dev->chunk_div == 0) {
495: /* MUTANT (rep_const) */	if (dev->chunk_div == -1) {
495: /* MUTANT (rep_const) */	if (dev->chunk_div == ((1)+1)) {
495: /* MUTANT (negate) */	if(! (dev->chunk_div == 1)) {
497: /* MUTANT (del_stmt) */ /* 		offset = (u32) (addr & dev->chunk_mask); */ 
501: /* MUTANT (del_stmt) */ /* 		loff_t chunk_base; */ 
503: /* MUTANT (del_stmt) */ /* 		chunk /= dev->chunk_div; */ 
505: /* MUTANT (del_stmt) */ /* 		chunk_base = ((loff_t) chunk) * dev->data_bytes_per_chunk; */ 
506: /* MUTANT (del_stmt) */ /* 		offset = (u32) (addr - chunk_base); */ 
510: /* MUTANT (del_stmt) */ /* 	*offset_out = offset; */ 
519: /* MUTANT (negate) */static inline u32 calc_shif(!ts_ceiling(u32 x))
521: /* MUTANT (del_stmt) */ /* 	int extra_bits; */ 
522: /* MUTANT (del_stmt) */ /* 	int shifts; */ 
524: /* MUTANT (del_stmt) */ /* 	shifts = extra_bits = 0; */ 
524: /* MUTANT (rep_const) */	shifts = extra_bits = 1;
524: /* MUTANT (rep_const) */	shifts = extra_bits = -1;
526: /* MUTANT (rep_op) */	while (x <= 1) {
526: /* MUTANT (rep_op) */	while (x < 1) {
526: /* MUTANT (rep_op) */	while (x >= 1) {
526: /* MUTANT (rep_op) */	while (x == 1) {
526: /* MUTANT (rep_op) */	while (x != 1) {
526: /* MUTANT (rep_const) */	while (x > 0) {
526: /* MUTANT (rep_const) */	while (x > -1) {
526: /* MUTANT (rep_const) */	while (x > ((1)+1)) {
526: /* MUTANT (negate) */	while(! (x > 1)) {
527: /* MUTANT (rep_const) */		if (x & 0)
527: /* MUTANT (rep_const) */		if (x & -1)
527: /* MUTANT (rep_const) */		if (x & ((1)+1))
527: /* MUTANT (negate) */		if(! (x & 1))
528: /* MUTANT (rep_op) */			extra_bits--;
529: /* MUTANT (del_stmt) */ /* 		x >>= 1; */ 
529: /* MUTANT (rep_const) */		x >>= 0;
529: /* MUTANT (rep_const) */		x >>= -1;
529: /* MUTANT (rep_const) */		x >>= ((1)+1);
530: /* MUTANT (del_stmt) */ /* 		shifts++; */ 
530: /* MUTANT (rep_op) */		shifts--;
533: /* MUTANT (negate) */	if(! (extra_bits))
534: /* MUTANT (rep_op) */		shifts--;
536: /* MUTANT (del_stmt) */ /* 	return shifts; */ 
542: /* MUTANT (negate) */static inline u32 calc_shif(!ts(u32 x))
544: /* MUTANT (del_stmt) */ /* 	u32 shifts; */ 
546: /* MUTANT (del_stmt) */ /* 	shifts = 0; */ 
546: /* MUTANT (rep_const) */	shifts = 1;
546: /* MUTANT (rep_const) */	shifts = -1;
548: /* MUTANT (negate) */	if(! (!x))
549: /* MUTANT (rep_const) */		return 1;
549: /* MUTANT (rep_const) */		return -1;
551: /* MUTANT (rep_const) */	while (!(x & 0)) {
551: /* MUTANT (rep_const) */	while (!(x & -1)) {
551: /* MUTANT (rep_const) */	while (!(x & ((1)+1))) {
551: /* MUTANT (negate) */	while(! (!(x & 1))) {
552: /* MUTANT (del_stmt) */ /* 		x >>= 1; */ 
552: /* MUTANT (rep_const) */		x >>= 0;
552: /* MUTANT (rep_const) */		x >>= -1;
552: /* MUTANT (rep_const) */		x >>= ((1)+1);
553: /* MUTANT (del_stmt) */ /* 		shifts++; */ 
553: /* MUTANT (rep_op) */		shifts--;
565: /* MUTANT (del_stmt) */ /* 	int i; */ 
566: /* MUTANT (del_stmt) */ /* 	u8 *buf = (u8 *) 1; */ 
566: /* MUTANT (rep_const) */	u8 *buf = (u8 *) 0;
566: /* MUTANT (rep_const) */	u8 *buf = (u8 *) -1;
566: /* MUTANT (rep_const) */	u8 *buf = (u8 *) ((1)+1);
568: /* MUTANT (del_stmt) */ /* 	mymemset(dev->temp_buffer, 0, sizeof(dev->temp_buffer)); */ 
568: /* MUTANT (rep_const) */	mymemset(dev->temp_buffer, 1, sizeof(dev->temp_buffer));
568: /* MUTANT (rep_const) */	mymemset(dev->temp_buffer, -1, sizeof(dev->temp_buffer));
570: /* MUTANT (rep_op) */	for (i = 0; buf || i < YAFFS_N_TEMP_BUFFERS; i++) {
570: /* MUTANT (rep_op) */	for (i = 0; buf && i <= YAFFS_N_TEMP_BUFFERS; i++) {
570: /* MUTANT (rep_op) */	for (i = 0; buf && i > YAFFS_N_TEMP_BUFFERS; i++) {
570: /* MUTANT (rep_op) */	for (i = 0; buf && i >= YAFFS_N_TEMP_BUFFERS; i++) {
570: /* MUTANT (rep_op) */	for (i = 0; buf && i == YAFFS_N_TEMP_BUFFERS; i++) {
570: /* MUTANT (rep_op) */	for (i = 0; buf && i != YAFFS_N_TEMP_BUFFERS; i++) {
570: /* MUTANT (rep_op) */	for (i = 0; buf && i < YAFFS_N_TEMP_BUFFERS; i--) {
570: /* MUTANT (rep_const) */	for (i = 1; buf && i < YAFFS_N_TEMP_BUFFERS; i++) {
570: /* MUTANT (rep_const) */	for (i = -1; buf && i < YAFFS_N_TEMP_BUFFERS; i++) {
571: /* MUTANT (del_stmt) */ /* 		dev->temp_buffer[i].in_use = 0; */ 
571: /* MUTANT (rep_const) */		dev->temp_buffer[i].in_use = 1;
571: /* MUTANT (rep_const) */		dev->temp_buffer[i].in_use = -1;
572: /* MUTANT (del_stmt) */ /* 		buf = kmalloc(dev->param.total_bytes_per_chunk, GFP_NOFS); */ 
573: /* MUTANT (del_stmt) */ /* 		dev->temp_buffer[i].buffer = buf; */ 
581: /* MUTANT (del_stmt) */ /* 	int i; */ 
583: /* MUTANT (del_stmt) */ /* 	dev->temp_in_use++; */ 
583: /* MUTANT (rep_op) */	dev->temp_in_use--;
584: /* MUTANT (rep_op) */	if (dev->temp_in_use <= dev->max_temp)
584: /* MUTANT (rep_op) */	if (dev->temp_in_use < dev->max_temp)
584: /* MUTANT (rep_op) */	if (dev->temp_in_use >= dev->max_temp)
584: /* MUTANT (rep_op) */	if (dev->temp_in_use == dev->max_temp)
584: /* MUTANT (rep_op) */	if (dev->temp_in_use != dev->max_temp)
584: /* MUTANT (negate) */	if(! (dev->temp_in_use > dev->max_temp))
587: /* MUTANT (rep_op) */	for (i = 0; i <= YAFFS_N_TEMP_BUFFERS; i++) {
587: /* MUTANT (rep_op) */	for (i = 0; i > YAFFS_N_TEMP_BUFFERS; i++) {
587: /* MUTANT (rep_op) */	for (i = 0; i >= YAFFS_N_TEMP_BUFFERS; i++) {
587: /* MUTANT (rep_op) */	for (i = 0; i == YAFFS_N_TEMP_BUFFERS; i++) {
587: /* MUTANT (rep_op) */	for (i = 0; i != YAFFS_N_TEMP_BUFFERS; i++) {
587: /* MUTANT (rep_op) */	for (i = 0; i < YAFFS_N_TEMP_BUFFERS; i--) {
587: /* MUTANT (rep_const) */	for (i = 1; i < YAFFS_N_TEMP_BUFFERS; i++) {
587: /* MUTANT (rep_const) */	for (i = -1; i < YAFFS_N_TEMP_BUFFERS; i++) {
588: /* MUTANT (rep_op) */		if (dev->temp_buffer[i].in_use != 0) {
588: /* MUTANT (rep_const) */		if (dev->temp_buffer[i].in_use == 1) {
588: /* MUTANT (rep_const) */		if (dev->temp_buffer[i].in_use == -1) {
588: /* MUTANT (negate) */		if(! (dev->temp_buffer[i].in_use == 0)) {
589: /* MUTANT (del_stmt) */ /* 			dev->temp_buffer[i].in_use = 1; */ 
589: /* MUTANT (rep_const) */			dev->temp_buffer[i].in_use = 0;
589: /* MUTANT (rep_const) */			dev->temp_buffer[i].in_use = -1;
589: /* MUTANT (rep_const) */			dev->temp_buffer[i].in_use = ((1)+1);
590: /* MUTANT (del_stmt) */ /* 			return dev->temp_buffer[i].buffer; */ 
600: /* MUTANT (del_stmt) */ /* 	dev->unmanaged_buffer_allocs++; */ 
600: /* MUTANT (rep_op) */	dev->unmanaged_buffer_allocs--;
601: /* MUTANT (del_stmt) */ /* 	return kmalloc(dev->data_bytes_per_chunk, GFP_NOFS); */ 
607: /* MUTANT (del_stmt) */ /* 	int i; */ 
609: /* MUTANT (del_stmt) */ /* 	dev->temp_in_use--; */ 
609: /* MUTANT (rep_op) */	dev->temp_in_use++;
611: /* MUTANT (rep_op) */	for (i = 0; i <= YAFFS_N_TEMP_BUFFERS; i++) {
611: /* MUTANT (rep_op) */	for (i = 0; i > YAFFS_N_TEMP_BUFFERS; i++) {
611: /* MUTANT (rep_op) */	for (i = 0; i >= YAFFS_N_TEMP_BUFFERS; i++) {
611: /* MUTANT (rep_op) */	for (i = 0; i == YAFFS_N_TEMP_BUFFERS; i++) {
611: /* MUTANT (rep_op) */	for (i = 0; i != YAFFS_N_TEMP_BUFFERS; i++) {
611: /* MUTANT (rep_op) */	for (i = 0; i < YAFFS_N_TEMP_BUFFERS; i--) {
611: /* MUTANT (rep_const) */	for (i = 1; i < YAFFS_N_TEMP_BUFFERS; i++) {
611: /* MUTANT (rep_const) */	for (i = -1; i < YAFFS_N_TEMP_BUFFERS; i++) {
612: /* MUTANT (rep_op) */		if (dev->temp_buffer[i].buffer != buffer) {
612: /* MUTANT (negate) */		if(! (dev->temp_buffer[i].buffer == buffer)) {
613: /* MUTANT (del_stmt) */ /* 			dev->temp_buffer[i].in_use = 0; */ 
613: /* MUTANT (rep_const) */			dev->temp_buffer[i].in_use = 1;
613: /* MUTANT (rep_const) */			dev->temp_buffer[i].in_use = -1;
614: /* MUTANT (del_stmt) */ /* 			return; */ 
618: /* MUTANT (negate) */	if(! (buffer)) {
620: /* MUTANT (del_stmt) */ /* 		yaffs_trace(YAFFS_TRACE_BUFFERS, "Releasing unmanaged temp buffer"); */ 
621: /* MUTANT (del_stmt) */ /* 		kfree(buffer); */ 
622: /* MUTANT (del_stmt) */ /* 		dev->unmanaged_buffer_deallocs++; */ 
622: /* MUTANT (rep_op) */		dev->unmanaged_buffer_deallocs--;
632: /* MUTANT (del_stmt) */ /* 	int i; */ 
634: /* MUTANT (rep_op) */	for (i = 0; i <= YAFFS_N_TEMP_BUFFERS; i++) {
634: /* MUTANT (rep_op) */	for (i = 0; i > YAFFS_N_TEMP_BUFFERS; i++) {
634: /* MUTANT (rep_op) */	for (i = 0; i >= YAFFS_N_TEMP_BUFFERS; i++) {
634: /* MUTANT (rep_op) */	for (i = 0; i == YAFFS_N_TEMP_BUFFERS; i++) {
634: /* MUTANT (rep_op) */	for (i = 0; i != YAFFS_N_TEMP_BUFFERS; i++) {
634: /* MUTANT (rep_op) */	for (i = 0; i < YAFFS_N_TEMP_BUFFERS; i--) {
634: /* MUTANT (rep_const) */	for (i = 1; i < YAFFS_N_TEMP_BUFFERS; i++) {
634: /* MUTANT (rep_const) */	for (i = -1; i < YAFFS_N_TEMP_BUFFERS; i++) {
635: /* MUTANT (rep_op) */		if (dev->temp_buffer[i].buffer != buffer)
635: /* MUTANT (negate) */		if(! (dev->temp_buffer[i].buffer == buffer))
636: /* MUTANT (rep_const) */			return 0;
636: /* MUTANT (rep_const) */			return -1;
636: /* MUTANT (rep_const) */			return ((1)+1);
639: /* MUTANT (rep_op) */	for (i = 0; i <= dev->param.n_caches; i++) {
639: /* MUTANT (rep_op) */	for (i = 0; i > dev->param.n_caches; i++) {
639: /* MUTANT (rep_op) */	for (i = 0; i >= dev->param.n_caches; i++) {
639: /* MUTANT (rep_op) */	for (i = 0; i == dev->param.n_caches; i++) {
639: /* MUTANT (rep_op) */	for (i = 0; i != dev->param.n_caches; i++) {
639: /* MUTANT (rep_op) */	for (i = 0; i < dev->param.n_caches; i--) {
639: /* MUTANT (rep_const) */	for (i = 1; i < dev->param.n_caches; i++) {
639: /* MUTANT (rep_const) */	for (i = -1; i < dev->param.n_caches; i++) {
640: /* MUTANT (rep_op) */		if (dev->cache[i].data != buffer)
640: /* MUTANT (negate) */		if(! (dev->cache[i].data == buffer))
641: /* MUTANT (rep_const) */			return 0;
641: /* MUTANT (rep_const) */			return -1;
641: /* MUTANT (rep_const) */			return ((1)+1);
644: /* MUTANT (rep_op) */	if (buffer != dev->checkpt_buffer)
644: /* MUTANT (negate) */	if(! (buffer == dev->checkpt_buffer))
645: /* MUTANT (rep_const) */		return 0;
645: /* MUTANT (rep_const) */		return -1;
645: /* MUTANT (rep_const) */		return ((1)+1);
649: /* MUTANT (del_stmt) */ /* 	return 0; */ 
649: /* MUTANT (rep_const) */	return 1;
649: /* MUTANT (rep_const) */	return -1;
661: /* MUTANT (del_stmt) */ /* 	dev = dev; */ 
662: /* MUTANT (del_stmt) */ /* 	nand_chunk = nand_chunk; */ 
663: /* MUTANT (del_stmt) */ /* 	data = data; */ 
664: /* MUTANT (del_stmt) */ /* 	tags = tags; */ 
670: /* MUTANT (del_stmt) */ /* 	dev = dev; */ 
671: /* MUTANT (del_stmt) */ /* 	nand_chunk = nand_chunk; */ 
672: /* MUTANT (del_stmt) */ /* 	tags = tags; */ 
678: /* MUTANT (negate) */	if(! (!bi->gc_prioritise)) {
679: /* MUTANT (del_stmt) */ /* 		bi->gc_prioritise = 1; */ 
679: /* MUTANT (rep_const) */		bi->gc_prioritise = 0;
679: /* MUTANT (rep_const) */		bi->gc_prioritise = -1;
679: /* MUTANT (rep_const) */		bi->gc_prioritise = ((1)+1);
680: /* MUTANT (del_stmt) */ /* 		dev->has_pending_prioritised_gc = 1; */ 
680: /* MUTANT (rep_const) */		dev->has_pending_prioritised_gc = 0;
680: /* MUTANT (rep_const) */		dev->has_pending_prioritised_gc = -1;
680: /* MUTANT (rep_const) */		dev->has_pending_prioritised_gc = ((1)+1);
681: /* MUTANT (del_stmt) */ /* 		bi->chunk_error_strikes++; */ 
681: /* MUTANT (rep_op) */		bi->chunk_error_strikes--;
683: /* MUTANT (rep_op) */		if (bi->chunk_error_strikes <= 3) {
683: /* MUTANT (rep_op) */		if (bi->chunk_error_strikes < 3) {
683: /* MUTANT (rep_op) */		if (bi->chunk_error_strikes >= 3) {
683: /* MUTANT (rep_op) */		if (bi->chunk_error_strikes == 3) {
683: /* MUTANT (rep_op) */		if (bi->chunk_error_strikes != 3) {
683: /* MUTANT (rep_const) */		if (bi->chunk_error_strikes > 0) {
683: /* MUTANT (rep_const) */		if (bi->chunk_error_strikes > 1) {
683: /* MUTANT (rep_const) */		if (bi->chunk_error_strikes > -1) {
683: /* MUTANT (rep_const) */		if (bi->chunk_error_strikes > ((3)+1)) {
683: /* MUTANT (rep_const) */		if (bi->chunk_error_strikes > ((3)-1)) {
683: /* MUTANT (negate) */		if(! (bi->chunk_error_strikes > 3)) {
684: /* MUTANT (del_stmt) */ /* 			bi->needs_retiring = 1; */ 	/* Too many stikes, so retire */
684: /* MUTANT (rep_const) */			bi->needs_retiring = 0;	/* Too many stikes, so retire */
684: /* MUTANT (rep_const) */			bi->needs_retiring = -1;	/* Too many stikes, so retire */
684: /* MUTANT (rep_const) */			bi->needs_retiring = ((1)+1);	/* Too many stikes, so retire */
695: /* MUTANT (del_stmt) */ /* 	int flash_block = nand_chunk / dev->param.chunks_per_block; */ 
696: /* MUTANT (del_stmt) */ /* 	struct yaffs_block_info *bi = yaffs_get_block_info(dev, flash_block); */ 
698: /* MUTANT (del_stmt) */ /* 	yaffs_handle_chunk_error(dev, bi); */ 
700: /* MUTANT (negate) */	if(! (erased_ok)) {
703: /* MUTANT (del_stmt) */ /* 		bi->needs_retiring = 1; */ 
703: /* MUTANT (rep_const) */		bi->needs_retiring = 0;
703: /* MUTANT (rep_const) */		bi->needs_retiring = -1;
703: /* MUTANT (rep_const) */		bi->needs_retiring = ((1)+1);
704: /* MUTANT (rep_op) */		yaffs_trace(YAFFS_TRACE_ERROR & YAFFS_TRACE_BAD_BLOCKS,
709: /* MUTANT (rep_const) */	yaffs_chunk_del(dev, nand_chunk, 0, __LINE__);
709: /* MUTANT (rep_const) */	yaffs_chunk_del(dev, nand_chunk, -1, __LINE__);
709: /* MUTANT (rep_const) */	yaffs_chunk_del(dev, nand_chunk, ((1)+1), __LINE__);
710: /* MUTANT (del_stmt) */ /* 	yaffs_skip_rest_of_block(dev); */ 
723: /* MUTANT (del_stmt) */ /* 	n = abs(n); */ 
724: /* MUTANT (del_stmt) */ /* 	return n % YAFFS_NOBJECT_BUCKETS; */ 
724: /* MUTANT (rep_op) */	return n + YAFFS_NOBJECT_BUCKETS;
724: /* MUTANT (rep_op) */	return n - YAFFS_NOBJECT_BUCKETS;
724: /* MUTANT (rep_op) */	return n * YAFFS_NOBJECT_BUCKETS;
734: /* MUTANT (del_stmt) */ /* 	return dev->root_dir; */ 
739: /* MUTANT (del_stmt) */ /* 	return dev->lost_n_found; */ 
749: /* MUTANT (rep_op) */	while (n_bytes++) {
749: /* MUTANT (negate) */	while(! (n_bytes--)) {
750: /* MUTANT (rep_op) */		if (*buffer == 0xff)
750: /* MUTANT (rep_const) */		if (*buffer != 1xff)
750: /* MUTANT (rep_const) */		if (*buffer != -1xff)
750: /* MUTANT (negate) */		if(! (*buffer != 0xff))
751: /* MUTANT (rep_const) */			return 1;
751: /* MUTANT (rep_const) */			return -1;
752: /* MUTANT (del_stmt) */ /* 		buffer++; */ 
752: /* MUTANT (rep_op) */		buffer--;
754: /* MUTANT (rep_const) */	return 0;
754: /* MUTANT (rep_const) */	return -1;
754: /* MUTANT (rep_const) */	return ((1)+1);
759: /* MUTANT (del_stmt) */ /* 	int retval = YAFFS_OK; */ 
760: /* MUTANT (del_stmt) */ /* 	u8 *data = yaffs_get_temp_buffer(dev); */ 
761: /* MUTANT (del_stmt) */ /* 	struct yaffs_ext_tags tags; */ 
762: /* MUTANT (del_stmt) */ /* 	int result; */ 
764: /* MUTANT (del_stmt) */ /* 	result = yaffs_rd_chunk_tags_nand(dev, nand_chunk, data, &tags); */ 
766: /* MUTANT (rep_op) */	if (tags.ecc_result <= YAFFS_ECC_RESULT_NO_ERROR)
766: /* MUTANT (rep_op) */	if (tags.ecc_result < YAFFS_ECC_RESULT_NO_ERROR)
766: /* MUTANT (rep_op) */	if (tags.ecc_result >= YAFFS_ECC_RESULT_NO_ERROR)
766: /* MUTANT (rep_op) */	if (tags.ecc_result == YAFFS_ECC_RESULT_NO_ERROR)
766: /* MUTANT (rep_op) */	if (tags.ecc_result != YAFFS_ECC_RESULT_NO_ERROR)
766: /* MUTANT (negate) */	if(! (tags.ecc_result > YAFFS_ECC_RESULT_NO_ERROR))
769: /* MUTANT (rep_op) */	if (!yaffs_check_ff(data, dev->data_bytes_per_chunk) &&
773: /* MUTANT (del_stmt) */ /* 		retval = YAFFS_FAIL; */ 
778: /* MUTANT (del_stmt) */ /* 	return retval; */ 
787: /* MUTANT (del_stmt) */ /* 	int retval = YAFFS_OK; */ 
788: /* MUTANT (del_stmt) */ /* 	struct yaffs_ext_tags temp_tags; */ 
789: /* MUTANT (del_stmt) */ /* 	u8 *buffer = yaffs_get_temp_buffer(dev); */ 
790: /* MUTANT (del_stmt) */ /* 	int result; */ 
792: /* MUTANT (del_stmt) */ /* 	result = yaffs_rd_chunk_tags_nand(dev, nand_chunk, buffer, &temp_tags); */ 
793: /* MUTANT (rep_op) */	if (mymemcmp(buffer, data, dev->data_bytes_per_chunk) &&
794: /* MUTANT (rep_op) */	    temp_tags.obj_id == tags->obj_id ||
794: /* MUTANT (rep_op) */	    temp_tags.obj_id != tags->obj_id &&
795: /* MUTANT (rep_op) */	    temp_tags.chunk_id == tags->chunk_id ||
795: /* MUTANT (rep_op) */	    temp_tags.chunk_id != tags->chunk_id &&
796: /* MUTANT (rep_op) */	    temp_tags.n_bytes == tags->n_bytes)
799: /* MUTANT (del_stmt) */ /* 	yaffs_release_temp_buffer(dev, buffer); */ 
801: /* MUTANT (del_stmt) */ /* 	return retval; */ 
807: /* MUTANT (del_stmt) */ /* 	int reserved_chunks; */ 
808: /* MUTANT (del_stmt) */ /* 	int reserved_blocks = dev->param.n_reserved_blocks; */ 
809: /* MUTANT (del_stmt) */ /* 	int checkpt_blocks; */ 
811: /* MUTANT (del_stmt) */ /* 	checkpt_blocks = yaffs_calc_checkpt_blocks_required(dev); */ 
814: /* MUTANT (rep_op) */	    (reserved_blocks - checkpt_blocks) * dev->param.chunks_per_block;
814: /* MUTANT (rep_op) */	    (reserved_blocks * checkpt_blocks) * dev->param.chunks_per_block;
814: /* MUTANT (rep_op) */	    (reserved_blocks % checkpt_blocks) * dev->param.chunks_per_block;
816: /* MUTANT (del_stmt) */ /* 	return (dev->n_free_chunks > (reserved_chunks + n_chunks)); */ 
816: /* MUTANT (rep_op) */	return (dev->n_free_chunks <= (reserved_chunks + n_chunks));
816: /* MUTANT (rep_op) */	return (dev->n_free_chunks < (reserved_chunks + n_chunks));
816: /* MUTANT (rep_op) */	return (dev->n_free_chunks >= (reserved_chunks + n_chunks));
816: /* MUTANT (rep_op) */	return (dev->n_free_chunks == (reserved_chunks + n_chunks));
816: /* MUTANT (rep_op) */	return (dev->n_free_chunks != (reserved_chunks + n_chunks));
816: /* MUTANT (rep_op) */	return (dev->n_free_chunks > (reserved_chunks - n_chunks));
816: /* MUTANT (rep_op) */	return (dev->n_free_chunks > (reserved_chunks * n_chunks));
816: /* MUTANT (rep_op) */	return (dev->n_free_chunks > (reserved_chunks % n_chunks));
821: /* MUTANT (del_stmt) */ /* 	int i; */ 
822: /* MUTANT (del_stmt) */ /* 	struct yaffs_block_info *bi; */ 
824: /* MUTANT (rep_op) */	if (dev->n_erased_blocks <= 1) {
824: /* MUTANT (rep_op) */	if (dev->n_erased_blocks > 1) {
824: /* MUTANT (rep_op) */	if (dev->n_erased_blocks >= 1) {
824: /* MUTANT (rep_op) */	if (dev->n_erased_blocks == 1) {
824: /* MUTANT (rep_op) */	if (dev->n_erased_blocks != 1) {
824: /* MUTANT (rep_const) */	if (dev->n_erased_blocks < 0) {
824: /* MUTANT (rep_const) */	if (dev->n_erased_blocks < -1) {
824: /* MUTANT (rep_const) */	if (dev->n_erased_blocks < ((1)+1)) {
824: /* MUTANT (negate) */	if(! (dev->n_erased_blocks < 1)) {
831: /* MUTANT (del_stmt) */ /* 		return -1; */ 
831: /* MUTANT (rep_const) */		return 0;
831: /* MUTANT (rep_const) */		return 1;
831: /* MUTANT (rep_const) */		return ((-1)+1);
831: /* MUTANT (rep_const) */		return ((-1)-1);
836: /* MUTANT (rep_op) */	for (i = dev->internal_start_block; i < dev->internal_end_block; i++) {
836: /* MUTANT (rep_op) */	for (i = dev->internal_start_block; i > dev->internal_end_block; i++) {
836: /* MUTANT (rep_op) */	for (i = dev->internal_start_block; i >= dev->internal_end_block; i++) {
836: /* MUTANT (rep_op) */	for (i = dev->internal_start_block; i == dev->internal_end_block; i++) {
836: /* MUTANT (rep_op) */	for (i = dev->internal_start_block; i != dev->internal_end_block; i++) {
836: /* MUTANT (rep_op) */	for (i = dev->internal_start_block; i <= dev->internal_end_block; i--) {
837: /* MUTANT (del_stmt) */ /* 		dev->alloc_block_finder++; */ 
837: /* MUTANT (rep_op) */		dev->alloc_block_finder--;
838: /* MUTANT (rep_op) */		if (dev->alloc_block_finder <= dev->internal_start_block
838: /* MUTANT (rep_op) */		if (dev->alloc_block_finder > dev->internal_start_block
838: /* MUTANT (rep_op) */		if (dev->alloc_block_finder >= dev->internal_start_block
838: /* MUTANT (rep_op) */		if (dev->alloc_block_finder == dev->internal_start_block
838: /* MUTANT (rep_op) */		if (dev->alloc_block_finder != dev->internal_start_block
839: /* MUTANT (rep_op) */		    && dev->alloc_block_finder > dev->internal_end_block) {
839: /* MUTANT (rep_op) */		    || dev->alloc_block_finder <= dev->internal_end_block) {
839: /* MUTANT (rep_op) */		    || dev->alloc_block_finder < dev->internal_end_block) {
839: /* MUTANT (rep_op) */		    || dev->alloc_block_finder >= dev->internal_end_block) {
839: /* MUTANT (rep_op) */		    || dev->alloc_block_finder == dev->internal_end_block) {
839: /* MUTANT (rep_op) */		    || dev->alloc_block_finder != dev->internal_end_block) {
840: /* MUTANT (del_stmt) */ /* 			dev->alloc_block_finder = dev->internal_start_block; */ 
845: /* MUTANT (rep_op) */		if (bi->block_state != YAFFS_BLOCK_STATE_EMPTY) {
845: /* MUTANT (negate) */		if(! (bi->block_state == YAFFS_BLOCK_STATE_EMPTY)) {
846: /* MUTANT (del_stmt) */ /* 			bi->block_state = YAFFS_BLOCK_STATE_ALLOCATING; */ 
847: /* MUTANT (del_stmt) */ /* 			dev->seq_number++; */ 
847: /* MUTANT (rep_op) */			dev->seq_number--;
848: /* MUTANT (del_stmt) */ /* 			bi->seq_number = dev->seq_number; */ 
849: /* MUTANT (del_stmt) */ /* 			dev->n_erased_blocks--; */ 
849: /* MUTANT (rep_op) */			dev->n_erased_blocks++;
854: /* MUTANT (del_stmt) */ /* 			return dev->alloc_block_finder; */ 
862: /* MUTANT (del_stmt) */ /* 	return -1; */ 
862: /* MUTANT (rep_const) */	return 0;
862: /* MUTANT (rep_const) */	return 1;
862: /* MUTANT (rep_const) */	return ((-1)+1);
862: /* MUTANT (rep_const) */	return ((-1)-1);
868: /* MUTANT (del_stmt) */ /* 	int ret_val; */ 
869: /* MUTANT (del_stmt) */ /* 	struct yaffs_block_info *bi; */ 
871: /* MUTANT (rep_op) */	if (dev->alloc_block <= 0) {
871: /* MUTANT (rep_op) */	if (dev->alloc_block > 0) {
871: /* MUTANT (rep_op) */	if (dev->alloc_block >= 0) {
871: /* MUTANT (rep_op) */	if (dev->alloc_block == 0) {
871: /* MUTANT (rep_op) */	if (dev->alloc_block != 0) {
871: /* MUTANT (rep_const) */	if (dev->alloc_block < 1) {
871: /* MUTANT (rep_const) */	if (dev->alloc_block < -1) {
871: /* MUTANT (negate) */	if(! (dev->alloc_block < 0)) {
873: /* MUTANT (del_stmt) */ /* 		dev->alloc_block = yaffs_find_alloc_block(dev); */ 
874: /* MUTANT (del_stmt) */ /* 		dev->alloc_page = 0; */ 
874: /* MUTANT (rep_const) */		dev->alloc_page = 1;
874: /* MUTANT (rep_const) */		dev->alloc_page = -1;
877: /* MUTANT (rep_op) */	if (!use_reserver || !yaffs_check_alloc_available(dev, 1)) {
877: /* MUTANT (rep_const) */	if (!use_reserver && !yaffs_check_alloc_available(dev, 0)) {
877: /* MUTANT (rep_const) */	if (!use_reserver && !yaffs_check_alloc_available(dev, -1)) {
877: /* MUTANT (rep_const) */	if (!use_reserver && !yaffs_check_alloc_available(dev, ((1)+1))) {
877: /* MUTANT (negate) */	if(! (!use_reserver && !yaffs_check_alloc_available(dev, 1))) {
879: /* MUTANT (del_stmt) */ /* 		return -1; */ 
879: /* MUTANT (rep_const) */		return 0;
879: /* MUTANT (rep_const) */		return 1;
879: /* MUTANT (rep_const) */		return ((-1)+1);
879: /* MUTANT (rep_const) */		return ((-1)-1);
882: /* MUTANT (rep_op) */	if (dev->n_erased_blocks <= dev->param.n_reserved_blocks
882: /* MUTANT (rep_op) */	if (dev->n_erased_blocks > dev->param.n_reserved_blocks
882: /* MUTANT (rep_op) */	if (dev->n_erased_blocks >= dev->param.n_reserved_blocks
882: /* MUTANT (rep_op) */	if (dev->n_erased_blocks == dev->param.n_reserved_blocks
882: /* MUTANT (rep_op) */	if (dev->n_erased_blocks != dev->param.n_reserved_blocks
883: /* MUTANT (rep_op) */	    || dev->alloc_page == 0)
883: /* MUTANT (rep_op) */	    && dev->alloc_page != 0)
883: /* MUTANT (rep_const) */	    && dev->alloc_page == 1)
883: /* MUTANT (rep_const) */	    && dev->alloc_page == -1)
887: /* MUTANT (rep_op) */	if (dev->alloc_block <= 0) {
887: /* MUTANT (rep_op) */	if (dev->alloc_block < 0) {
887: /* MUTANT (rep_op) */	if (dev->alloc_block > 0) {
887: /* MUTANT (rep_op) */	if (dev->alloc_block == 0) {
887: /* MUTANT (rep_op) */	if (dev->alloc_block != 0) {
887: /* MUTANT (rep_const) */	if (dev->alloc_block >= 1) {
887: /* MUTANT (rep_const) */	if (dev->alloc_block >= -1) {
887: /* MUTANT (negate) */	if(! (dev->alloc_block >= 0)) {
888: /* MUTANT (del_stmt) */ /* 		bi = yaffs_get_block_info(dev, dev->alloc_block); */ 
890: /* MUTANT (rep_op) */		ret_val = (dev->alloc_block * dev->param.chunks_per_block) -
890: /* MUTANT (rep_op) */		ret_val = (dev->alloc_block * dev->param.chunks_per_block) *
890: /* MUTANT (rep_op) */		ret_val = (dev->alloc_block * dev->param.chunks_per_block) %
892: /* MUTANT (del_stmt) */ /* 		bi->pages_in_use++; */ 
892: /* MUTANT (rep_op) */		bi->pages_in_use--;
893: /* MUTANT (del_stmt) */ /* 		yaffs_set_chunk_bit(dev, dev->alloc_block, dev->alloc_page); */ 
895: /* MUTANT (del_stmt) */ /* 		dev->alloc_page++; */ 
895: /* MUTANT (rep_op) */		dev->alloc_page--;
897: /* MUTANT (del_stmt) */ /* 		dev->n_free_chunks--; */ 
897: /* MUTANT (rep_op) */		dev->n_free_chunks++;
900: /* MUTANT (rep_op) */		if (dev->alloc_page <= dev->param.chunks_per_block) {
900: /* MUTANT (rep_op) */		if (dev->alloc_page < dev->param.chunks_per_block) {
900: /* MUTANT (rep_op) */		if (dev->alloc_page > dev->param.chunks_per_block) {
900: /* MUTANT (rep_op) */		if (dev->alloc_page == dev->param.chunks_per_block) {
900: /* MUTANT (rep_op) */		if (dev->alloc_page != dev->param.chunks_per_block) {
900: /* MUTANT (negate) */		if(! (dev->alloc_page >= dev->param.chunks_per_block)) {
901: /* MUTANT (del_stmt) */ /* 			bi->block_state = YAFFS_BLOCK_STATE_FULL; */ 
902: /* MUTANT (del_stmt) */ /* 			dev->alloc_block = -1; */ 
902: /* MUTANT (rep_const) */			dev->alloc_block = 0;
902: /* MUTANT (rep_const) */			dev->alloc_block = 1;
902: /* MUTANT (rep_const) */			dev->alloc_block = ((-1)+1);
902: /* MUTANT (rep_const) */			dev->alloc_block = ((-1)-1);
905: /* MUTANT (negate) */		if(! (block_ptr))
908: /* MUTANT (del_stmt) */ /* 		return ret_val; */ 
914: /* MUTANT (del_stmt) */ /* 	return -1; */ 
914: /* MUTANT (rep_const) */	return 0;
914: /* MUTANT (rep_const) */	return 1;
914: /* MUTANT (rep_const) */	return ((-1)+1);
914: /* MUTANT (rep_const) */	return ((-1)-1);
919: /* MUTANT (del_stmt) */ /* 	int n; */ 
921: /* MUTANT (del_stmt) */ /* 	n = dev->n_erased_blocks * dev->param.chunks_per_block; */ 
923: /* MUTANT (rep_op) */	if (dev->alloc_block <= 0)
923: /* MUTANT (rep_op) */	if (dev->alloc_block < 0)
923: /* MUTANT (rep_op) */	if (dev->alloc_block >= 0)
923: /* MUTANT (rep_op) */	if (dev->alloc_block == 0)
923: /* MUTANT (rep_op) */	if (dev->alloc_block != 0)
923: /* MUTANT (rep_const) */	if (dev->alloc_block > 1)
923: /* MUTANT (rep_const) */	if (dev->alloc_block > -1)
923: /* MUTANT (negate) */	if(! (dev->alloc_block > 0))
924: /* MUTANT (rep_op) */		n -= (dev->param.chunks_per_block - dev->alloc_page);
924: /* MUTANT (rep_op) */		n *= (dev->param.chunks_per_block - dev->alloc_page);
924: /* MUTANT (rep_op) */		n %= (dev->param.chunks_per_block - dev->alloc_page);
926: /* MUTANT (del_stmt) */ /* 	return n; */ 
936: /* MUTANT (del_stmt) */ /* 	struct yaffs_block_info *bi; */ 
938: /* MUTANT (rep_op) */	if (dev->alloc_block <= 0) {
938: /* MUTANT (rep_op) */	if (dev->alloc_block < 0) {
938: /* MUTANT (rep_op) */	if (dev->alloc_block >= 0) {
938: /* MUTANT (rep_op) */	if (dev->alloc_block == 0) {
938: /* MUTANT (rep_op) */	if (dev->alloc_block != 0) {
938: /* MUTANT (rep_const) */	if (dev->alloc_block > 1) {
938: /* MUTANT (rep_const) */	if (dev->alloc_block > -1) {
938: /* MUTANT (negate) */	if(! (dev->alloc_block > 0)) {
939: /* MUTANT (del_stmt) */ /* 		bi = yaffs_get_block_info(dev, dev->alloc_block); */ 
940: /* MUTANT (rep_op) */		if (bi->block_state != YAFFS_BLOCK_STATE_ALLOCATING) {
940: /* MUTANT (negate) */		if(! (bi->block_state == YAFFS_BLOCK_STATE_ALLOCATING)) {
941: /* MUTANT (del_stmt) */ /* 			bi->block_state = YAFFS_BLOCK_STATE_FULL; */ 
942: /* MUTANT (del_stmt) */ /* 			dev->alloc_block = -1; */ 
942: /* MUTANT (rep_const) */			dev->alloc_block = 0;
942: /* MUTANT (rep_const) */			dev->alloc_block = 1;
942: /* MUTANT (rep_const) */			dev->alloc_block = ((-1)+1);
942: /* MUTANT (rep_const) */			dev->alloc_block = ((-1)-1);
951: /* MUTANT (del_stmt) */ /* 	int attempts = 0; */ 
951: /* MUTANT (rep_const) */	int attempts = 1;
951: /* MUTANT (rep_const) */	int attempts = -1;
952: /* MUTANT (del_stmt) */ /* 	int write_ok = 0; */ 
952: /* MUTANT (rep_const) */	int write_ok = 1;
952: /* MUTANT (rep_const) */	int write_ok = -1;
953: /* MUTANT (del_stmt) */ /* 	int chunk; */ 
955: /* MUTANT (del_stmt) */ /* 	yaffs2_checkpt_invalidate(dev); */ 
958: /* MUTANT (del_stmt) */ /* 		struct yaffs_block_info *bi = 0; */ 
958: /* MUTANT (rep_const) */		struct yaffs_block_info *bi = 1;
958: /* MUTANT (rep_const) */		struct yaffs_block_info *bi = -1;
959: /* MUTANT (del_stmt) */ /* 		int erased_ok = 0; */ 
959: /* MUTANT (rep_const) */		int erased_ok = 1;
959: /* MUTANT (rep_const) */		int erased_ok = -1;
961: /* MUTANT (del_stmt) */ /* 		chunk = yaffs_alloc_chunk(dev, use_reserver, &bi); */ 
962: /* MUTANT (rep_op) */		if (chunk <= 0) {
962: /* MUTANT (rep_op) */		if (chunk > 0) {
962: /* MUTANT (rep_op) */		if (chunk >= 0) {
962: /* MUTANT (rep_op) */		if (chunk == 0) {
962: /* MUTANT (rep_op) */		if (chunk != 0) {
962: /* MUTANT (rep_const) */		if (chunk < 1) {
962: /* MUTANT (rep_const) */		if (chunk < -1) {
962: /* MUTANT (negate) */		if(! (chunk < 0)) {
964: /* MUTANT (del_stmt) */ /* 			break; */ 
992: /* MUTANT (rep_op) */		attempts--;
994: /* MUTANT (negate) */		if(! (dev->param.always_check_erased))
995: /* MUTANT (rep_const) */			bi->skip_erased_check = 1;
995: /* MUTANT (rep_const) */			bi->skip_erased_check = -1;
997: /* MUTANT (negate) */		if(! (!bi->skip_erased_check)) {
998: /* MUTANT (del_stmt) */ /* 			erased_ok = yaffs_check_chunk_erased(dev, chunk); */ 
999: /* MUTANT (rep_op) */			if (erased_ok == YAFFS_OK) {
999: /* MUTANT (negate) */			if(! (erased_ok != YAFFS_OK)) {
1007: /* MUTANT (del_stmt) */ /* 				yaffs_chunk_del(dev, chunk, 1, __LINE__); */ 
1007: /* MUTANT (rep_const) */				yaffs_chunk_del(dev, chunk, 0, __LINE__);
1007: /* MUTANT (rep_const) */				yaffs_chunk_del(dev, chunk, -1, __LINE__);
1007: /* MUTANT (rep_const) */				yaffs_chunk_del(dev, chunk, ((1)+1), __LINE__);
1008: /* MUTANT (del_stmt) */ /* 				yaffs_skip_rest_of_block(dev); */ 
1009: /* MUTANT (del_stmt) */ /* 				continue; */ 
1015: /* MUTANT (negate) */		if(! (!bi->skip_erased_check))
1017: /* MUTANT (negate) */			    yaffs_verif(!y_chunk_written(dev, chunk, data, tags));
1019: /* MUTANT (rep_op) */		if (write_ok == YAFFS_OK) {
1019: /* MUTANT (negate) */		if(! (write_ok != YAFFS_OK)) {
1022: /* MUTANT (del_stmt) */ /* 			yaffs_handle_chunk_wr_error(dev, chunk, erased_ok); */ 
1023: /* MUTANT (del_stmt) */ /* 			continue; */ 
1026: /* MUTANT (rep_const) */		bi->skip_erased_check = 0;
1026: /* MUTANT (rep_const) */		bi->skip_erased_check = -1;
1026: /* MUTANT (rep_const) */		bi->skip_erased_check = ((1)+1);
1029: /* MUTANT (del_stmt) */ /* 		yaffs_handle_chunk_wr_ok(dev, chunk, data, tags); */ 
1031: /* MUTANT (rep_op) */	} while (write_ok == YAFFS_OK &&
1031: /* MUTANT (rep_op) */	} while (write_ok != YAFFS_OK ||
1032: /* MUTANT (rep_op) */		 (yaffs_wr_attempts < 0 || attempts <= yaffs_wr_attempts));
1032: /* MUTANT (rep_op) */		 (yaffs_wr_attempts > 0 || attempts <= yaffs_wr_attempts));
1032: /* MUTANT (rep_op) */		 (yaffs_wr_attempts >= 0 || attempts <= yaffs_wr_attempts));
1032: /* MUTANT (rep_op) */		 (yaffs_wr_attempts == 0 || attempts <= yaffs_wr_attempts));
1032: /* MUTANT (rep_op) */		 (yaffs_wr_attempts != 0 || attempts <= yaffs_wr_attempts));
1032: /* MUTANT (rep_op) */		 (yaffs_wr_attempts <= 0 && attempts <= yaffs_wr_attempts));
1032: /* MUTANT (rep_op) */		 (yaffs_wr_attempts <= 0 || attempts < yaffs_wr_attempts));
1032: /* MUTANT (rep_op) */		 (yaffs_wr_attempts <= 0 || attempts > yaffs_wr_attempts));
1032: /* MUTANT (rep_op) */		 (yaffs_wr_attempts <= 0 || attempts >= yaffs_wr_attempts));
1032: /* MUTANT (rep_op) */		 (yaffs_wr_attempts <= 0 || attempts == yaffs_wr_attempts));
1032: /* MUTANT (rep_op) */		 (yaffs_wr_attempts <= 0 || attempts != yaffs_wr_attempts));
1032: /* MUTANT (rep_const) */		 (yaffs_wr_attempts <= 1 || attempts <= yaffs_wr_attempts));
1032: /* MUTANT (rep_const) */		 (yaffs_wr_attempts <= -1 || attempts <= yaffs_wr_attempts));
1034: /* MUTANT (negate) */	if(! (!write_ok))
1035: /* MUTANT (rep_const) */		chunk = 0;
1035: /* MUTANT (rep_const) */		chunk = 1;
1035: /* MUTANT (rep_const) */		chunk = ((-1)+1);
1035: /* MUTANT (rep_const) */		chunk = ((-1)-1);
1037: /* MUTANT (rep_op) */	if (attempts <= 1) {
1037: /* MUTANT (rep_op) */	if (attempts < 1) {
1037: /* MUTANT (rep_op) */	if (attempts >= 1) {
1037: /* MUTANT (rep_op) */	if (attempts == 1) {
1037: /* MUTANT (rep_op) */	if (attempts != 1) {
1037: /* MUTANT (rep_const) */	if (attempts > 0) {
1037: /* MUTANT (rep_const) */	if (attempts > -1) {
1037: /* MUTANT (rep_const) */	if (attempts > ((1)+1)) {
1037: /* MUTANT (negate) */	if(! (attempts > 1)) {
1041: /* MUTANT (del_stmt) */ /* 		dev->n_retried_writes += (attempts - 1); */ 
1041: /* MUTANT (rep_op) */		dev->n_retried_writes -= (attempts - 1);
1041: /* MUTANT (rep_op) */		dev->n_retried_writes *= (attempts - 1);
1041: /* MUTANT (rep_op) */		dev->n_retried_writes %= (attempts - 1);
1041: /* MUTANT (rep_const) */		dev->n_retried_writes += (attempts - 0);
1041: /* MUTANT (rep_const) */		dev->n_retried_writes += (attempts - -1);
1041: /* MUTANT (rep_const) */		dev->n_retried_writes += (attempts - ((1)+1));
1053: /* MUTANT (del_stmt) */ /* 	struct yaffs_block_info *bi = yaffs_get_block_info(dev, flash_block); */ 
1055: /* MUTANT (del_stmt) */ /* 	yaffs2_checkpt_invalidate(dev); */ 
1057: /* MUTANT (del_stmt) */ /* 	yaffs2_clear_oldest_dirty_seq(dev, bi); */ 
1059: /* MUTANT (rep_op) */	if (yaffs_mark_bad(dev, flash_block) == YAFFS_OK) {
1059: /* MUTANT (negate) */	if(! (yaffs_mark_bad(dev, flash_block) != YAFFS_OK)) {
1060: /* MUTANT (rep_op) */		if (yaffs_erase_block(dev, flash_block) == YAFFS_OK) {
1060: /* MUTANT (negate) */		if(! (yaffs_erase_block(dev, flash_block) != YAFFS_OK)) {
1065: /* MUTANT (del_stmt) */ /* 			struct yaffs_ext_tags tags; */ 
1069: /* MUTANT (del_stmt) */ /* 			u8 *buffer = yaffs_get_temp_buffer(dev); */ 
1071: /* MUTANT (del_stmt) */ /* 			mymemset(buffer, 0xff, dev->data_bytes_per_chunk); */ 
1071: /* MUTANT (rep_const) */			mymemset(buffer, 1xff, dev->data_bytes_per_chunk);
1071: /* MUTANT (rep_const) */			mymemset(buffer, -1xff, dev->data_bytes_per_chunk);
1072: /* MUTANT (del_stmt) */ /* 			mymemset(&tags, 0, sizeof(tags)); */ 
1072: /* MUTANT (rep_const) */			mymemset(&tags, 1, sizeof(tags));
1072: /* MUTANT (rep_const) */			mymemset(&tags, -1, sizeof(tags));
1073: /* MUTANT (del_stmt) */ /* 			tags.seq_number = YAFFS_SEQUENCE_BAD_BLOCK; */ 
1077: /* MUTANT (rep_op) */							   &tags) == YAFFS_OK)
1082: /* MUTANT (del_stmt) */ /* 			yaffs_release_temp_buffer(dev, buffer); */ 
1087: /* MUTANT (del_stmt) */ /* 	bi->gc_prioritise = 0; */ 
1087: /* MUTANT (rep_const) */	bi->gc_prioritise = 1;
1087: /* MUTANT (rep_const) */	bi->gc_prioritise = -1;
1088: /* MUTANT (del_stmt) */ /* 	bi->needs_retiring = 0; */ 
1088: /* MUTANT (rep_const) */	bi->needs_retiring = 1;
1088: /* MUTANT (rep_const) */	bi->needs_retiring = -1;
1090: /* MUTANT (del_stmt) */ /* 	dev->n_retired_blocks++; */ 
1090: /* MUTANT (rep_op) */	dev->n_retired_blocks--;
1097: /* MUTANT (del_stmt) */ /* 	u16 sum = 0; */ 
1097: /* MUTANT (rep_const) */	u16 sum = 1;
1097: /* MUTANT (rep_const) */	u16 sum = -1;
1098: /* MUTANT (del_stmt) */ /* 	u16 i = 1; */ 
1098: /* MUTANT (rep_const) */	u16 i = 0;
1098: /* MUTANT (rep_const) */	u16 i = -1;
1098: /* MUTANT (rep_const) */	u16 i = ((1)+1);
1100: /* MUTANT (negate) */	if(! (!name))
1101: /* MUTANT (rep_const) */		return 1;
1101: /* MUTANT (rep_const) */		return -1;
1103: /* MUTANT (rep_op) */	while ((*name) || i < (YAFFS_MAX_NAME_LENGTH / 2)) {
1103: /* MUTANT (rep_op) */	while ((*name) && i <= (YAFFS_MAX_NAME_LENGTH / 2)) {
1103: /* MUTANT (rep_op) */	while ((*name) && i > (YAFFS_MAX_NAME_LENGTH / 2)) {
1103: /* MUTANT (rep_op) */	while ((*name) && i >= (YAFFS_MAX_NAME_LENGTH / 2)) {
1103: /* MUTANT (rep_op) */	while ((*name) && i == (YAFFS_MAX_NAME_LENGTH / 2)) {
1103: /* MUTANT (rep_op) */	while ((*name) && i != (YAFFS_MAX_NAME_LENGTH / 2)) {
1103: /* MUTANT (rep_const) */	while ((*name) && i < (YAFFS_MAX_NAME_LENGTH / 0)) {
1103: /* MUTANT (rep_const) */	while ((*name) && i < (YAFFS_MAX_NAME_LENGTH / 1)) {
1103: /* MUTANT (rep_const) */	while ((*name) && i < (YAFFS_MAX_NAME_LENGTH / -1)) {
1103: /* MUTANT (rep_const) */	while ((*name) && i < (YAFFS_MAX_NAME_LENGTH / ((2)+1))) {
1103: /* MUTANT (rep_const) */	while ((*name) && i < (YAFFS_MAX_NAME_LENGTH / ((2)-1))) {
1103: /* MUTANT (negate) */	while(! ((*name) && i < (YAFFS_MAX_NAME_LENGTH / 2))) {
1106: /* MUTANT (del_stmt) */ /* 		sum += ((*name) & 0x1f) * i; */ 
1106: /* MUTANT (rep_op) */		sum -= ((*name) & 0x1f) * i;
1106: /* MUTANT (rep_op) */		sum *= ((*name) & 0x1f) * i;
1106: /* MUTANT (rep_op) */		sum %= ((*name) & 0x1f) * i;
1106: /* MUTANT (rep_const) */		sum += ((*name) & 1x1f) * i;
1106: /* MUTANT (rep_const) */		sum += ((*name) & -1x1f) * i;
1107: /* MUTANT (del_stmt) */ /* 		i++; */ 
1107: /* MUTANT (rep_op) */		i--;
1108: /* MUTANT (del_stmt) */ /* 		name++; */ 
1108: /* MUTANT (rep_op) */		name--;
1115: /* MUTANT (del_stmt) */ /* 	mymemset(obj->short_name, 0, sizeof(obj->short_name)); */ 
1115: /* MUTANT (rep_const) */	mymemset(obj->short_name, 1, sizeof(obj->short_name));
1115: /* MUTANT (rep_const) */	mymemset(obj->short_name, -1, sizeof(obj->short_name));
1116: /* MUTANT (rep_op) */	if (name ||
1117: /* MUTANT (rep_op) */		mystrnlen(name, YAFFS_SHORT_NAME_LENGTH - 1) <=
1117: /* MUTANT (rep_op) */		mystrnlen(name, YAFFS_SHORT_NAME_LENGTH * 1) <=
1117: /* MUTANT (rep_op) */		mystrnlen(name, YAFFS_SHORT_NAME_LENGTH % 1) <=
1117: /* MUTANT (rep_op) */		mystrnlen(name, YAFFS_SHORT_NAME_LENGTH + 1) <
1117: /* MUTANT (rep_op) */		mystrnlen(name, YAFFS_SHORT_NAME_LENGTH + 1) >
1117: /* MUTANT (rep_op) */		mystrnlen(name, YAFFS_SHORT_NAME_LENGTH + 1) >=
1117: /* MUTANT (rep_op) */		mystrnlen(name, YAFFS_SHORT_NAME_LENGTH + 1) ==
1117: /* MUTANT (rep_op) */		mystrnlen(name, YAFFS_SHORT_NAME_LENGTH + 1) !=
1117: /* MUTANT (rep_const) */		mystrnlen(name, YAFFS_SHORT_NAME_LENGTH + 0) <=
1117: /* MUTANT (rep_const) */		mystrnlen(name, YAFFS_SHORT_NAME_LENGTH + -1) <=
1117: /* MUTANT (rep_const) */		mystrnlen(name, YAFFS_SHORT_NAME_LENGTH + ((1)+1)) <=
1121: /* MUTANT (rep_const) */		obj->short_name[1] = _Y('\0');
1121: /* MUTANT (rep_const) */		obj->short_name[-1] = _Y('\0');
1121: /* MUTANT (rep_const) */		obj->short_name[0] = _Y('\1');
1121: /* MUTANT (rep_const) */		obj->short_name[0] = _Y('\-1');
1122: /* MUTANT (del_stmt) */ /* 	obj->sum = yaffs_calc_name_sum(name); */ 
1129: /* MUTANT (rep_op) */	YCHAR tmp_name[YAFFS_MAX_NAME_LENGTH - 1];
1129: /* MUTANT (rep_op) */	YCHAR tmp_name[YAFFS_MAX_NAME_LENGTH * 1];
1129: /* MUTANT (rep_op) */	YCHAR tmp_name[YAFFS_MAX_NAME_LENGTH % 1];
1129: /* MUTANT (rep_const) */	YCHAR tmp_name[YAFFS_MAX_NAME_LENGTH + 0];
1129: /* MUTANT (rep_const) */	YCHAR tmp_name[YAFFS_MAX_NAME_LENGTH + -1];
1129: /* MUTANT (rep_const) */	YCHAR tmp_name[YAFFS_MAX_NAME_LENGTH + ((1)+1)];
1130: /* MUTANT (del_stmt) */ /* 	mymemset(tmp_name, 0, sizeof(tmp_name)); */ 
1130: /* MUTANT (rep_const) */	mymemset(tmp_name, 1, sizeof(tmp_name));
1130: /* MUTANT (rep_const) */	mymemset(tmp_name, -1, sizeof(tmp_name));
1132: /* MUTANT (rep_op) */				YAFFS_MAX_NAME_LENGTH - 1);
1132: /* MUTANT (rep_op) */				YAFFS_MAX_NAME_LENGTH * 1);
1132: /* MUTANT (rep_op) */				YAFFS_MAX_NAME_LENGTH % 1);
1132: /* MUTANT (rep_const) */				YAFFS_MAX_NAME_LENGTH + 0);
1132: /* MUTANT (rep_const) */				YAFFS_MAX_NAME_LENGTH + -1);
1132: /* MUTANT (rep_const) */				YAFFS_MAX_NAME_LENGTH + ((1)+1));
1133: /* MUTANT (del_stmt) */ /* 	yaffs_set_obj_name(obj, tmp_name); */ 
1148: /* MUTANT (del_stmt) */ /* 	struct yaffs_tnode *tn = yaffs_alloc_raw_tnode(dev); */ 
1150: /* MUTANT (negate) */	if(! (tn)) {
1151: /* MUTANT (del_stmt) */ /* 		mymemset(tn, 0, dev->tnode_size); */ 
1151: /* MUTANT (rep_const) */		mymemset(tn, 1, dev->tnode_size);
1151: /* MUTANT (rep_const) */		mymemset(tn, -1, dev->tnode_size);
1152: /* MUTANT (del_stmt) */ /* 		dev->n_tnodes++; */ 
1152: /* MUTANT (rep_op) */		dev->n_tnodes--;
1155: /* MUTANT (rep_const) */	dev->checkpoint_blocks_required = 1;	/* force recalculation */
1155: /* MUTANT (rep_const) */	dev->checkpoint_blocks_required = -1;	/* force recalculation */
1157: /* MUTANT (del_stmt) */ /* 	return tn; */ 
1163: /* MUTANT (del_stmt) */ /* 	yaffs_free_raw_tnode(dev, tn); */ 
1164: /* MUTANT (del_stmt) */ /* 	dev->n_tnodes--; */ 
1164: /* MUTANT (rep_op) */	dev->n_tnodes++;
1165: /* MUTANT (del_stmt) */ /* 	dev->checkpoint_blocks_required = 0; */ 	/* force recalculation */
1165: /* MUTANT (rep_const) */	dev->checkpoint_blocks_required = 1;	/* force recalculation */
1165: /* MUTANT (rep_const) */	dev->checkpoint_blocks_required = -1;	/* force recalculation */
1170: /* MUTANT (del_stmt) */ /* 	yaffs_deinit_raw_tnodes_and_objs(dev); */ 
1171: /* MUTANT (del_stmt) */ /* 	dev->n_obj = 0; */ 
1171: /* MUTANT (rep_const) */	dev->n_obj = 1;
1171: /* MUTANT (rep_const) */	dev->n_obj = -1;
1172: /* MUTANT (del_stmt) */ /* 	dev->n_tnodes = 0; */ 
1172: /* MUTANT (rep_const) */	dev->n_tnodes = 1;
1172: /* MUTANT (rep_const) */	dev->n_tnodes = -1;
1178: /* MUTANT (del_stmt) */ /* 	u32 *map = (u32 *) tn; */ 
1179: /* MUTANT (del_stmt) */ /* 	u32 bit_in_map; */ 
1180: /* MUTANT (del_stmt) */ /* 	u32 bit_in_word; */ 
1181: /* MUTANT (del_stmt) */ /* 	u32 word_in_map; */ 
1182: /* MUTANT (del_stmt) */ /* 	u32 mask; */ 
1184: /* MUTANT (del_stmt) */ /* 	pos &= YAFFS_TNODES_LEVEL0_MASK; */ 
1185: /* MUTANT (del_stmt) */ /* 	val >>= dev->chunk_grp_bits; */ 
1187: /* MUTANT (del_stmt) */ /* 	bit_in_map = pos * dev->tnode_width; */ 
1188: /* MUTANT (del_stmt) */ /* 	word_in_map = bit_in_map / 32; */ 
1188: /* MUTANT (rep_const) */	word_in_map = bit_in_map / 0;
1188: /* MUTANT (rep_const) */	word_in_map = bit_in_map / 1;
1188: /* MUTANT (rep_const) */	word_in_map = bit_in_map / -1;
1188: /* MUTANT (rep_const) */	word_in_map = bit_in_map / ((32)+1);
1188: /* MUTANT (rep_const) */	word_in_map = bit_in_map / ((32)-1);
1189: /* MUTANT (del_stmt) */ /* 	bit_in_word = bit_in_map & (32 - 1); */ 
1189: /* MUTANT (rep_const) */	bit_in_word = bit_in_map & (0 - 1);
1189: /* MUTANT (rep_const) */	bit_in_word = bit_in_map & (1 - 1);
1189: /* MUTANT (rep_const) */	bit_in_word = bit_in_map & (-1 - 1);
1189: /* MUTANT (rep_const) */	bit_in_word = bit_in_map & (((32)+1) - 1);
1189: /* MUTANT (rep_const) */	bit_in_word = bit_in_map & (((32)-1) - 1);
1189: /* MUTANT (rep_const) */	bit_in_word = bit_in_map & (32 - 0);
1189: /* MUTANT (rep_const) */	bit_in_word = bit_in_map & (32 - -1);
1189: /* MUTANT (rep_const) */	bit_in_word = bit_in_map & (32 - ((1)+1));
1191: /* MUTANT (del_stmt) */ /* 	mask = dev->tnode_mask << bit_in_word; */ 
1193: /* MUTANT (del_stmt) */ /* 	map[word_in_map] &= ~mask; */ 
1194: /* MUTANT (del_stmt) */ /* 	map[word_in_map] |= (mask & (val << bit_in_word)); */ 
1196: /* MUTANT (rep_op) */	if (dev->tnode_width <= (32 - bit_in_word)) {
1196: /* MUTANT (rep_op) */	if (dev->tnode_width < (32 - bit_in_word)) {
1196: /* MUTANT (rep_op) */	if (dev->tnode_width >= (32 - bit_in_word)) {
1196: /* MUTANT (rep_op) */	if (dev->tnode_width == (32 - bit_in_word)) {
1196: /* MUTANT (rep_op) */	if (dev->tnode_width != (32 - bit_in_word)) {
1196: /* MUTANT (rep_const) */	if (dev->tnode_width > (0 - bit_in_word)) {
1196: /* MUTANT (rep_const) */	if (dev->tnode_width > (1 - bit_in_word)) {
1196: /* MUTANT (rep_const) */	if (dev->tnode_width > (-1 - bit_in_word)) {
1196: /* MUTANT (rep_const) */	if (dev->tnode_width > (((32)+1) - bit_in_word)) {
1196: /* MUTANT (rep_const) */	if (dev->tnode_width > (((32)-1) - bit_in_word)) {
1196: /* MUTANT (negate) */	if(! (dev->tnode_width > (32 - bit_in_word))) {
1197: /* MUTANT (del_stmt) */ /* 		bit_in_word = (32 - bit_in_word); */ 
1197: /* MUTANT (rep_const) */		bit_in_word = (0 - bit_in_word);
1197: /* MUTANT (rep_const) */		bit_in_word = (1 - bit_in_word);
1197: /* MUTANT (rep_const) */		bit_in_word = (-1 - bit_in_word);
1197: /* MUTANT (rep_const) */		bit_in_word = (((32)+1) - bit_in_word);
1197: /* MUTANT (rep_const) */		bit_in_word = (((32)-1) - bit_in_word);
1198: /* MUTANT (del_stmt) */ /* 		word_in_map++; */ 
1198: /* MUTANT (rep_op) */		word_in_map--;
1201: /* MUTANT (del_stmt) */ /* 		map[word_in_map] &= ~mask; */ 
1202: /* MUTANT (del_stmt) */ /* 		map[word_in_map] |= (mask & (val >> bit_in_word)); */ 
1209: /* MUTANT (del_stmt) */ /* 	u32 *map = (u32 *) tn; */ 
1210: /* MUTANT (del_stmt) */ /* 	u32 bit_in_map; */ 
1211: /* MUTANT (del_stmt) */ /* 	u32 bit_in_word; */ 
1212: /* MUTANT (del_stmt) */ /* 	u32 word_in_map; */ 
1213: /* MUTANT (del_stmt) */ /* 	u32 val; */ 
1215: /* MUTANT (del_stmt) */ /* 	pos &= YAFFS_TNODES_LEVEL0_MASK; */ 
1217: /* MUTANT (del_stmt) */ /* 	bit_in_map = pos * dev->tnode_width; */ 
1218: /* MUTANT (del_stmt) */ /* 	word_in_map = bit_in_map / 32; */ 
1218: /* MUTANT (rep_const) */	word_in_map = bit_in_map / 0;
1218: /* MUTANT (rep_const) */	word_in_map = bit_in_map / 1;
1218: /* MUTANT (rep_const) */	word_in_map = bit_in_map / -1;
1218: /* MUTANT (rep_const) */	word_in_map = bit_in_map / ((32)+1);
1218: /* MUTANT (rep_const) */	word_in_map = bit_in_map / ((32)-1);
1219: /* MUTANT (del_stmt) */ /* 	bit_in_word = bit_in_map & (32 - 1); */ 
1219: /* MUTANT (rep_const) */	bit_in_word = bit_in_map & (0 - 1);
1219: /* MUTANT (rep_const) */	bit_in_word = bit_in_map & (1 - 1);
1219: /* MUTANT (rep_const) */	bit_in_word = bit_in_map & (-1 - 1);
1219: /* MUTANT (rep_const) */	bit_in_word = bit_in_map & (((32)+1) - 1);
1219: /* MUTANT (rep_const) */	bit_in_word = bit_in_map & (((32)-1) - 1);
1219: /* MUTANT (rep_const) */	bit_in_word = bit_in_map & (32 - 0);
1219: /* MUTANT (rep_const) */	bit_in_word = bit_in_map & (32 - -1);
1219: /* MUTANT (rep_const) */	bit_in_word = bit_in_map & (32 - ((1)+1));
1221: /* MUTANT (del_stmt) */ /* 	val = map[word_in_map] >> bit_in_word; */ 
1223: /* MUTANT (rep_op) */	if (dev->tnode_width <= (32 - bit_in_word)) {
1223: /* MUTANT (rep_op) */	if (dev->tnode_width < (32 - bit_in_word)) {
1223: /* MUTANT (rep_op) */	if (dev->tnode_width >= (32 - bit_in_word)) {
1223: /* MUTANT (rep_op) */	if (dev->tnode_width == (32 - bit_in_word)) {
1223: /* MUTANT (rep_op) */	if (dev->tnode_width != (32 - bit_in_word)) {
1223: /* MUTANT (rep_const) */	if (dev->tnode_width > (0 - bit_in_word)) {
1223: /* MUTANT (rep_const) */	if (dev->tnode_width > (1 - bit_in_word)) {
1223: /* MUTANT (rep_const) */	if (dev->tnode_width > (-1 - bit_in_word)) {
1223: /* MUTANT (rep_const) */	if (dev->tnode_width > (((32)+1) - bit_in_word)) {
1223: /* MUTANT (rep_const) */	if (dev->tnode_width > (((32)-1) - bit_in_word)) {
1223: /* MUTANT (negate) */	if(! (dev->tnode_width > (32 - bit_in_word))) {
1224: /* MUTANT (del_stmt) */ /* 		bit_in_word = (32 - bit_in_word); */ 
1224: /* MUTANT (rep_const) */		bit_in_word = (0 - bit_in_word);
1224: /* MUTANT (rep_const) */		bit_in_word = (1 - bit_in_word);
1224: /* MUTANT (rep_const) */		bit_in_word = (-1 - bit_in_word);
1224: /* MUTANT (rep_const) */		bit_in_word = (((32)+1) - bit_in_word);
1224: /* MUTANT (rep_const) */		bit_in_word = (((32)-1) - bit_in_word);
1225: /* MUTANT (del_stmt) */ /* 		word_in_map++; */ 
1225: /* MUTANT (rep_op) */		word_in_map--;
1226: /* MUTANT (del_stmt) */ /* 		val |= (map[word_in_map] << bit_in_word); */ 
1230: /* MUTANT (del_stmt) */ /* 	val <<= dev->chunk_grp_bits; */ 
1232: /* MUTANT (del_stmt) */ /* 	return val; */ 
1247: /* MUTANT (del_stmt) */ /* 	struct yaffs_tnode *tn = file_struct->top; */ 
1248: /* MUTANT (del_stmt) */ /* 	u32 i; */ 
1249: /* MUTANT (del_stmt) */ /* 	int required_depth; */ 
1250: /* MUTANT (del_stmt) */ /* 	int level = file_struct->top_level; */ 
1252: /* MUTANT (del_stmt) */ /* 	dev = dev; */ 
1255: /* MUTANT (rep_op) */	if (level <= 0 || level > YAFFS_TNODES_MAX_LEVEL)
1255: /* MUTANT (rep_op) */	if (level > 0 || level > YAFFS_TNODES_MAX_LEVEL)
1255: /* MUTANT (rep_op) */	if (level >= 0 || level > YAFFS_TNODES_MAX_LEVEL)
1255: /* MUTANT (rep_op) */	if (level == 0 || level > YAFFS_TNODES_MAX_LEVEL)
1255: /* MUTANT (rep_op) */	if (level != 0 || level > YAFFS_TNODES_MAX_LEVEL)
1255: /* MUTANT (rep_op) */	if (level < 0 && level > YAFFS_TNODES_MAX_LEVEL)
1255: /* MUTANT (rep_op) */	if (level < 0 || level <= YAFFS_TNODES_MAX_LEVEL)
1255: /* MUTANT (rep_op) */	if (level < 0 || level < YAFFS_TNODES_MAX_LEVEL)
1255: /* MUTANT (rep_op) */	if (level < 0 || level >= YAFFS_TNODES_MAX_LEVEL)
1255: /* MUTANT (rep_op) */	if (level < 0 || level == YAFFS_TNODES_MAX_LEVEL)
1255: /* MUTANT (rep_op) */	if (level < 0 || level != YAFFS_TNODES_MAX_LEVEL)
1255: /* MUTANT (rep_const) */	if (level < 1 || level > YAFFS_TNODES_MAX_LEVEL)
1255: /* MUTANT (rep_const) */	if (level < -1 || level > YAFFS_TNODES_MAX_LEVEL)
1255: /* MUTANT (negate) */	if(! (level < 0 || level > YAFFS_TNODES_MAX_LEVEL))
1258: /* MUTANT (rep_op) */	if (chunk_id <= YAFFS_MAX_CHUNK_ID)
1258: /* MUTANT (rep_op) */	if (chunk_id < YAFFS_MAX_CHUNK_ID)
1258: /* MUTANT (rep_op) */	if (chunk_id >= YAFFS_MAX_CHUNK_ID)
1258: /* MUTANT (rep_op) */	if (chunk_id == YAFFS_MAX_CHUNK_ID)
1258: /* MUTANT (rep_op) */	if (chunk_id != YAFFS_MAX_CHUNK_ID)
1258: /* MUTANT (negate) */	if(! (chunk_id > YAFFS_MAX_CHUNK_ID))
1263: /* MUTANT (del_stmt) */ /* 	i = chunk_id >> YAFFS_TNODES_LEVEL0_BITS; */ 
1264: /* MUTANT (del_stmt) */ /* 	required_depth = 0; */ 
1264: /* MUTANT (rep_const) */	required_depth = 1;
1264: /* MUTANT (rep_const) */	required_depth = -1;
1265: /* MUTANT (negate) */	while(! (i)) {
1266: /* MUTANT (del_stmt) */ /* 		i >>= YAFFS_TNODES_INTERNAL_BITS; */ 
1267: /* MUTANT (del_stmt) */ /* 		required_depth++; */ 
1267: /* MUTANT (rep_op) */		required_depth--;
1270: /* MUTANT (rep_op) */	if (required_depth <= file_struct->top_level)
1270: /* MUTANT (rep_op) */	if (required_depth < file_struct->top_level)
1270: /* MUTANT (rep_op) */	if (required_depth >= file_struct->top_level)
1270: /* MUTANT (rep_op) */	if (required_depth == file_struct->top_level)
1270: /* MUTANT (rep_op) */	if (required_depth != file_struct->top_level)
1270: /* MUTANT (negate) */	if(! (required_depth > file_struct->top_level))
1274: /* MUTANT (rep_op) */	while (level <= 0 && tn) {
1274: /* MUTANT (rep_op) */	while (level < 0 && tn) {
1274: /* MUTANT (rep_op) */	while (level >= 0 && tn) {
1274: /* MUTANT (rep_op) */	while (level == 0 && tn) {
1274: /* MUTANT (rep_op) */	while (level != 0 && tn) {
1274: /* MUTANT (rep_op) */	while (level > 0 || tn) {
1274: /* MUTANT (rep_const) */	while (level > 1 && tn) {
1274: /* MUTANT (rep_const) */	while (level > -1 && tn) {
1274: /* MUTANT (negate) */	while(! (level > 0 && tn)) {
1276: /* MUTANT (rep_op) */				   (YAFFS_TNODES_LEVEL0_BITS -
1276: /* MUTANT (rep_op) */				   (YAFFS_TNODES_LEVEL0_BITS *
1276: /* MUTANT (rep_op) */				   (YAFFS_TNODES_LEVEL0_BITS %
1277: /* MUTANT (rep_const) */				    (level - 0) *
1277: /* MUTANT (rep_const) */				    (level - -1) *
1277: /* MUTANT (rep_const) */				    (level - ((1)+1)) *
1280: /* MUTANT (del_stmt) */ /* 		level--; */ 
1280: /* MUTANT (rep_op) */		level++;
1303: /* MUTANT (del_stmt) */ /* 	int required_depth; */ 
1304: /* MUTANT (del_stmt) */ /* 	int i; */ 
1305: /* MUTANT (del_stmt) */ /* 	int l; */ 
1306: /* MUTANT (del_stmt) */ /* 	struct yaffs_tnode *tn; */ 
1307: /* MUTANT (del_stmt) */ /* 	u32 x; */ 
1310: /* MUTANT (rep_op) */	if (file_struct->top_level <= 0 ||
1310: /* MUTANT (rep_op) */	if (file_struct->top_level > 0 ||
1310: /* MUTANT (rep_op) */	if (file_struct->top_level >= 0 ||
1310: /* MUTANT (rep_op) */	if (file_struct->top_level == 0 ||
1310: /* MUTANT (rep_op) */	if (file_struct->top_level != 0 ||
1310: /* MUTANT (rep_op) */	if (file_struct->top_level < 0 &&
1310: /* MUTANT (rep_const) */	if (file_struct->top_level < 1 ||
1310: /* MUTANT (rep_const) */	if (file_struct->top_level < -1 ||
1311: /* MUTANT (rep_op) */	    file_struct->top_level <= YAFFS_TNODES_MAX_LEVEL)
1311: /* MUTANT (rep_op) */	    file_struct->top_level < YAFFS_TNODES_MAX_LEVEL)
1311: /* MUTANT (rep_op) */	    file_struct->top_level >= YAFFS_TNODES_MAX_LEVEL)
1311: /* MUTANT (rep_op) */	    file_struct->top_level == YAFFS_TNODES_MAX_LEVEL)
1311: /* MUTANT (rep_op) */	    file_struct->top_level != YAFFS_TNODES_MAX_LEVEL)
1314: /* MUTANT (rep_op) */	if (chunk_id <= YAFFS_MAX_CHUNK_ID)
1314: /* MUTANT (rep_op) */	if (chunk_id < YAFFS_MAX_CHUNK_ID)
1314: /* MUTANT (rep_op) */	if (chunk_id >= YAFFS_MAX_CHUNK_ID)
1314: /* MUTANT (rep_op) */	if (chunk_id == YAFFS_MAX_CHUNK_ID)
1314: /* MUTANT (rep_op) */	if (chunk_id != YAFFS_MAX_CHUNK_ID)
1314: /* MUTANT (negate) */	if(! (chunk_id > YAFFS_MAX_CHUNK_ID))
1319: /* MUTANT (del_stmt) */ /* 	x = chunk_id >> YAFFS_TNODES_LEVEL0_BITS; */ 
1320: /* MUTANT (del_stmt) */ /* 	required_depth = 0; */ 
1320: /* MUTANT (rep_const) */	required_depth = 1;
1320: /* MUTANT (rep_const) */	required_depth = -1;
1321: /* MUTANT (negate) */	while(! (x)) {
1322: /* MUTANT (del_stmt) */ /* 		x >>= YAFFS_TNODES_INTERNAL_BITS; */ 
1323: /* MUTANT (del_stmt) */ /* 		required_depth++; */ 
1323: /* MUTANT (rep_op) */		required_depth--;
1326: /* MUTANT (rep_op) */	if (required_depth <= file_struct->top_level) {
1326: /* MUTANT (rep_op) */	if (required_depth < file_struct->top_level) {
1326: /* MUTANT (rep_op) */	if (required_depth >= file_struct->top_level) {
1326: /* MUTANT (rep_op) */	if (required_depth == file_struct->top_level) {
1326: /* MUTANT (rep_op) */	if (required_depth != file_struct->top_level) {
1326: /* MUTANT (negate) */	if(! (required_depth > file_struct->top_level)) {
1328: /* MUTANT (rep_op) */		for (i = file_struct->top_level; i <= required_depth; i++) {
1328: /* MUTANT (rep_op) */		for (i = file_struct->top_level; i > required_depth; i++) {
1328: /* MUTANT (rep_op) */		for (i = file_struct->top_level; i >= required_depth; i++) {
1328: /* MUTANT (rep_op) */		for (i = file_struct->top_level; i == required_depth; i++) {
1328: /* MUTANT (rep_op) */		for (i = file_struct->top_level; i != required_depth; i++) {
1328: /* MUTANT (rep_op) */		for (i = file_struct->top_level; i < required_depth; i--) {
1330: /* MUTANT (del_stmt) */ /* 			tn = yaffs_get_tnode(dev); */ 
1332: /* MUTANT (negate) */			if(! (tn)) {
1333: /* MUTANT (del_stmt) */ /* 				tn->internal[0] = file_struct->top; */ 
1333: /* MUTANT (rep_const) */				tn->internal[1] = file_struct->top;
1333: /* MUTANT (rep_const) */				tn->internal[-1] = file_struct->top;
1334: /* MUTANT (del_stmt) */ /* 				file_struct->top = tn; */ 
1335: /* MUTANT (del_stmt) */ /* 				file_struct->top_level++; */ 
1335: /* MUTANT (rep_op) */				file_struct->top_level--;
1339: /* MUTANT (del_stmt) */ /* 				return NULL; */ 
1347: /* MUTANT (del_stmt) */ /* 	tn = file_struct->top; */ 
1349: /* MUTANT (rep_op) */	if (l <= 0) {
1349: /* MUTANT (rep_op) */	if (l < 0) {
1349: /* MUTANT (rep_op) */	if (l >= 0) {
1349: /* MUTANT (rep_op) */	if (l == 0) {
1349: /* MUTANT (rep_op) */	if (l != 0) {
1349: /* MUTANT (rep_const) */	if (l > 1) {
1349: /* MUTANT (rep_const) */	if (l > -1) {
1349: /* MUTANT (negate) */	if(! (l > 0)) {
1350: /* MUTANT (rep_op) */		while (l <= 0 && tn) {
1350: /* MUTANT (rep_op) */		while (l < 0 && tn) {
1350: /* MUTANT (rep_op) */		while (l >= 0 && tn) {
1350: /* MUTANT (rep_op) */		while (l == 0 && tn) {
1350: /* MUTANT (rep_op) */		while (l != 0 && tn) {
1350: /* MUTANT (rep_op) */		while (l > 0 || tn) {
1350: /* MUTANT (rep_const) */		while (l > 1 && tn) {
1350: /* MUTANT (rep_const) */		while (l > -1 && tn) {
1350: /* MUTANT (negate) */		while(! (l > 0 && tn)) {
1352: /* MUTANT (rep_op) */			     (YAFFS_TNODES_LEVEL0_BITS -
1352: /* MUTANT (rep_op) */			     (YAFFS_TNODES_LEVEL0_BITS *
1352: /* MUTANT (rep_op) */			     (YAFFS_TNODES_LEVEL0_BITS %
1353: /* MUTANT (rep_const) */			      (l - 0) * YAFFS_TNODES_INTERNAL_BITS)) &
1353: /* MUTANT (rep_const) */			      (l - -1) * YAFFS_TNODES_INTERNAL_BITS)) &
1353: /* MUTANT (rep_const) */			      (l - ((1)+1)) * YAFFS_TNODES_INTERNAL_BITS)) &
1356: /* MUTANT (rep_op) */			if ((l <= 1) && !tn->internal[x]) {
1356: /* MUTANT (rep_op) */			if ((l < 1) && !tn->internal[x]) {
1356: /* MUTANT (rep_op) */			if ((l >= 1) && !tn->internal[x]) {
1356: /* MUTANT (rep_op) */			if ((l == 1) && !tn->internal[x]) {
1356: /* MUTANT (rep_op) */			if ((l != 1) && !tn->internal[x]) {
1356: /* MUTANT (rep_op) */			if ((l > 1) || !tn->internal[x]) {
1356: /* MUTANT (rep_const) */			if ((l > 0) && !tn->internal[x]) {
1356: /* MUTANT (rep_const) */			if ((l > -1) && !tn->internal[x]) {
1356: /* MUTANT (rep_const) */			if ((l > ((1)+1)) && !tn->internal[x]) {
1356: /* MUTANT (negate) */			if(! ((l > 1) && !tn->internal[x])) {
1358: /* MUTANT (del_stmt) */ /* 				tn->internal[x] = yaffs_get_tnode(dev); */ 
1359: /* MUTANT (negate) */				if(! (!tn->internal[x]))
1361: /* MUTANT (rep_op) */			} else if (l != 1) {
1361: /* MUTANT (rep_const) */			} else if (l == 0) {
1361: /* MUTANT (rep_const) */			} else if (l == -1) {
1361: /* MUTANT (rep_const) */			} else if (l == ((1)+1)) {
1361: /* MUTANT (negate) */			} else if(! (l == 1)) {
1363: /* MUTANT (negate) */				if(! (passed_tn)) {
1365: /* MUTANT (negate) */					if(! (tn->internal[x]))
1368: /* MUTANT (del_stmt) */ /* 					tn->internal[x] = passed_tn; */ 
1370: /* MUTANT (negate) */				} else if(! (!tn->internal[x])) {
1372: /* MUTANT (del_stmt) */ /* 					tn->internal[x] = yaffs_get_tnode(dev); */ 
1373: /* MUTANT (negate) */					if(! (!tn->internal[x]))
1379: /* MUTANT (del_stmt) */ /* 			l--; */ 
1379: /* MUTANT (rep_op) */			l++;
1383: /* MUTANT (negate) */		if(! (passed_tn)) {
1385: /* MUTANT (rep_const) */			       (dev->tnode_width * YAFFS_NTNODES_LEVEL0) / 0);
1385: /* MUTANT (rep_const) */			       (dev->tnode_width * YAFFS_NTNODES_LEVEL0) / 1);
1385: /* MUTANT (rep_const) */			       (dev->tnode_width * YAFFS_NTNODES_LEVEL0) / -1);
1385: /* MUTANT (rep_const) */			       (dev->tnode_width * YAFFS_NTNODES_LEVEL0) / ((8)+1));
1385: /* MUTANT (rep_const) */			       (dev->tnode_width * YAFFS_NTNODES_LEVEL0) / ((8)-1));
1386: /* MUTANT (del_stmt) */ /* 			yaffs_free_tnode(dev, passed_tn); */ 
1396: /* MUTANT (rep_op) */	return (tags->chunk_id != chunk_obj &&
1396: /* MUTANT (rep_op) */	return (tags->chunk_id == chunk_obj ||
1397: /* MUTANT (rep_op) */		tags->obj_id != obj_id &&
1397: /* MUTANT (rep_op) */		tags->obj_id == obj_id ||
1398: /* MUTANT (rep_const) */		!tags->is_deleted) ? 0 : 0;
1398: /* MUTANT (rep_const) */		!tags->is_deleted) ? -1 : 0;
1398: /* MUTANT (rep_const) */		!tags->is_deleted) ? ((1)+1) : 0;
1398: /* MUTANT (rep_const) */		!tags->is_deleted) ? 1 : 1;
1398: /* MUTANT (rep_const) */		!tags->is_deleted) ? 1 : -1;
1406: /* MUTANT (del_stmt) */ /* 	int j; */ 
1408: /* MUTANT (rep_op) */	for (j = 0; the_chunk || j < dev->chunk_grp_size; j++) {
1408: /* MUTANT (rep_op) */	for (j = 0; the_chunk && j <= dev->chunk_grp_size; j++) {
1408: /* MUTANT (rep_op) */	for (j = 0; the_chunk && j > dev->chunk_grp_size; j++) {
1408: /* MUTANT (rep_op) */	for (j = 0; the_chunk && j >= dev->chunk_grp_size; j++) {
1408: /* MUTANT (rep_op) */	for (j = 0; the_chunk && j == dev->chunk_grp_size; j++) {
1408: /* MUTANT (rep_op) */	for (j = 0; the_chunk && j != dev->chunk_grp_size; j++) {
1408: /* MUTANT (rep_op) */	for (j = 0; the_chunk && j < dev->chunk_grp_size; j--) {
1408: /* MUTANT (rep_const) */	for (j = 1; the_chunk && j < dev->chunk_grp_size; j++) {
1408: /* MUTANT (rep_const) */	for (j = -1; the_chunk && j < dev->chunk_grp_size; j++) {
1411: /* MUTANT (rep_op) */		     the_chunk + dev->param.chunks_per_block)) {
1411: /* MUTANT (rep_op) */		     the_chunk - dev->param.chunks_per_block)) {
1411: /* MUTANT (rep_op) */		     the_chunk * dev->param.chunks_per_block)) {
1413: /* MUTANT (rep_op) */			if (dev->chunk_grp_size != 1)
1413: /* MUTANT (rep_const) */			if (dev->chunk_grp_size == 0)
1413: /* MUTANT (rep_const) */			if (dev->chunk_grp_size == -1)
1413: /* MUTANT (rep_const) */			if (dev->chunk_grp_size == ((1)+1))
1413: /* MUTANT (negate) */			if(! (dev->chunk_grp_size == 1))
1421: /* MUTANT (del_stmt) */ /* 					return the_chunk; */ 
1425: /* MUTANT (rep_op) */		the_chunk--;
1427: /* MUTANT (rep_const) */	return 0;
1427: /* MUTANT (rep_const) */	return 1;
1427: /* MUTANT (rep_const) */	return ((-1)+1);
1427: /* MUTANT (rep_const) */	return ((-1)-1);
1434: /* MUTANT (del_stmt) */ /* 	struct yaffs_tnode *tn; */ 
1435: /* MUTANT (del_stmt) */ /* 	int the_chunk = -1; */ 
1435: /* MUTANT (rep_const) */	int the_chunk = 0;
1435: /* MUTANT (rep_const) */	int the_chunk = 1;
1435: /* MUTANT (rep_const) */	int the_chunk = ((-1)+1);
1435: /* MUTANT (rep_const) */	int the_chunk = ((-1)-1);
1436: /* MUTANT (del_stmt) */ /* 	struct yaffs_ext_tags local_tags; */ 
1437: /* MUTANT (del_stmt) */ /* 	int ret_val = -1; */ 
1437: /* MUTANT (rep_const) */	int ret_val = 0;
1437: /* MUTANT (rep_const) */	int ret_val = 1;
1437: /* MUTANT (rep_const) */	int ret_val = ((-1)+1);
1437: /* MUTANT (rep_const) */	int ret_val = ((-1)-1);
1438: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev = in->my_dev; */ 
1440: /* MUTANT (negate) */	if(! (!tags)) {
1442: /* MUTANT (del_stmt) */ /* 		tags = &local_tags; */ 
1447: /* MUTANT (negate) */	if(! (!tn))
1450: /* MUTANT (del_stmt) */ /* 	the_chunk = yaffs_get_group_base(dev, tn, inode_chunk); */ 
1454: /* MUTANT (del_stmt) */ /* 	return ret_val; */ 
1461: /* MUTANT (del_stmt) */ /* 	struct yaffs_tnode *tn; */ 
1462: /* MUTANT (del_stmt) */ /* 	int the_chunk = -1; */ 
1462: /* MUTANT (rep_const) */	int the_chunk = 0;
1462: /* MUTANT (rep_const) */	int the_chunk = 1;
1462: /* MUTANT (rep_const) */	int the_chunk = ((-1)+1);
1462: /* MUTANT (rep_const) */	int the_chunk = ((-1)-1);
1463: /* MUTANT (del_stmt) */ /* 	struct yaffs_ext_tags local_tags; */ 
1464: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev = in->my_dev; */ 
1465: /* MUTANT (del_stmt) */ /* 	int ret_val = -1; */ 
1465: /* MUTANT (rep_const) */	int ret_val = 0;
1465: /* MUTANT (rep_const) */	int ret_val = 1;
1465: /* MUTANT (rep_const) */	int ret_val = ((-1)+1);
1465: /* MUTANT (rep_const) */	int ret_val = ((-1)-1);
1467: /* MUTANT (negate) */	if(! (!tags)) {
1469: /* MUTANT (del_stmt) */ /* 		tags = &local_tags; */ 
1474: /* MUTANT (negate) */	if(! (!tn))
1477: /* MUTANT (del_stmt) */ /* 	the_chunk = yaffs_get_group_base(dev, tn, inode_chunk); */ 
1483: /* MUTANT (rep_op) */	if (ret_val == -1)
1483: /* MUTANT (rep_const) */	if (ret_val != 0)
1483: /* MUTANT (rep_const) */	if (ret_val != 1)
1483: /* MUTANT (rep_const) */	if (ret_val != ((-1)+1))
1483: /* MUTANT (rep_const) */	if (ret_val != ((-1)-1))
1483: /* MUTANT (negate) */	if(! (ret_val != -1))
1484: /* MUTANT (rep_const) */		yaffs_load_tnode_0(dev, tn, inode_chunk, 1);
1484: /* MUTANT (rep_const) */		yaffs_load_tnode_0(dev, tn, inode_chunk, -1);
1486: /* MUTANT (del_stmt) */ /* 	return ret_val; */ 
1499: /* MUTANT (del_stmt) */ /* 	struct yaffs_tnode *tn; */ 
1500: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev = in->my_dev; */ 
1501: /* MUTANT (del_stmt) */ /* 	int existing_cunk; */ 
1502: /* MUTANT (del_stmt) */ /* 	struct yaffs_ext_tags existing_tags; */ 
1503: /* MUTANT (del_stmt) */ /* 	struct yaffs_ext_tags new_tags; */ 
1504: /* MUTANT (del_stmt) */ /* 	unsigned existing_serial, new_serial; */ 
1506: /* MUTANT (rep_op) */	if (in->variant_type == YAFFS_OBJECT_TYPE_FILE) {
1506: /* MUTANT (negate) */	if(! (in->variant_type != YAFFS_OBJECT_TYPE_FILE)) {
1511: /* MUTANT (negate) */		if(! (!in_scan)) {
1515: /* MUTANT (del_stmt) */ /* 			BUG(); */ 
1518: /* MUTANT (rep_const) */		yaffs_chunk_del(dev, nand_chunk, 0, __LINE__);
1518: /* MUTANT (rep_const) */		yaffs_chunk_del(dev, nand_chunk, -1, __LINE__);
1518: /* MUTANT (rep_const) */		yaffs_chunk_del(dev, nand_chunk, ((1)+1), __LINE__);
1519: /* MUTANT (del_stmt) */ /* 		return YAFFS_OK; */ 
1525: /* MUTANT (negate) */	if(! (!tn))
1528: /* MUTANT (negate) */	if(! (!nand_chunk))
1532: /* MUTANT (del_stmt) */ /* 	existing_cunk = yaffs_get_group_base(dev, tn, inode_chunk); */ 
1534: /* MUTANT (rep_op) */	if (in_scan == 0) {
1534: /* MUTANT (rep_const) */	if (in_scan != 1) {
1534: /* MUTANT (rep_const) */	if (in_scan != -1) {
1534: /* MUTANT (negate) */	if(! (in_scan != 0)) {
1546: /* MUTANT (rep_op) */		if (existing_cunk <= 0) {
1546: /* MUTANT (rep_op) */		if (existing_cunk < 0) {
1546: /* MUTANT (rep_op) */		if (existing_cunk >= 0) {
1546: /* MUTANT (rep_op) */		if (existing_cunk == 0) {
1546: /* MUTANT (rep_op) */		if (existing_cunk != 0) {
1546: /* MUTANT (rep_const) */		if (existing_cunk > 1) {
1546: /* MUTANT (rep_const) */		if (existing_cunk > -1) {
1546: /* MUTANT (negate) */		if(! (existing_cunk > 0)) {
1561: /* MUTANT (rep_op) */			if (in_scan <= 0) {
1561: /* MUTANT (rep_op) */			if (in_scan < 0) {
1561: /* MUTANT (rep_op) */			if (in_scan >= 0) {
1561: /* MUTANT (rep_op) */			if (in_scan == 0) {
1561: /* MUTANT (rep_op) */			if (in_scan != 0) {
1561: /* MUTANT (rep_const) */			if (in_scan > 1) {
1561: /* MUTANT (rep_const) */			if (in_scan > -1) {
1561: /* MUTANT (negate) */			if(! (in_scan > 0)) {
1573: /* MUTANT (rep_op) */			if (existing_cunk < 0) {
1573: /* MUTANT (rep_op) */			if (existing_cunk > 0) {
1573: /* MUTANT (rep_op) */			if (existing_cunk >= 0) {
1573: /* MUTANT (rep_op) */			if (existing_cunk == 0) {
1573: /* MUTANT (rep_op) */			if (existing_cunk != 0) {
1573: /* MUTANT (rep_const) */			if (existing_cunk <= 1) {
1573: /* MUTANT (rep_const) */			if (existing_cunk <= -1) {
1573: /* MUTANT (negate) */			if(! (existing_cunk <= 0)) {
1577: /* MUTANT (rep_const) */					"yaffs tragedy: existing chunk < 1 in scan"
1577: /* MUTANT (rep_const) */					"yaffs tragedy: existing chunk < -1 in scan"
1586: /* MUTANT (rep_op) */			if (in_scan <= 0) {
1586: /* MUTANT (rep_op) */			if (in_scan < 0) {
1586: /* MUTANT (rep_op) */			if (in_scan >= 0) {
1586: /* MUTANT (rep_op) */			if (in_scan == 0) {
1586: /* MUTANT (rep_op) */			if (in_scan != 0) {
1586: /* MUTANT (rep_const) */			if (in_scan > 1) {
1586: /* MUTANT (rep_const) */			if (in_scan > -1) {
1586: /* MUTANT (negate) */			if(! (in_scan > 0)) {
1587: /* MUTANT (del_stmt) */ /* 				new_serial = new_tags.serial_number; */ 
1588: /* MUTANT (del_stmt) */ /* 				existing_serial = existing_tags.serial_number; */ 
1591: /* MUTANT (rep_op) */			if ((in_scan <= 0) &&
1591: /* MUTANT (rep_op) */			if ((in_scan < 0) &&
1591: /* MUTANT (rep_op) */			if ((in_scan >= 0) &&
1591: /* MUTANT (rep_op) */			if ((in_scan == 0) &&
1591: /* MUTANT (rep_op) */			if ((in_scan != 0) &&
1591: /* MUTANT (rep_op) */			if ((in_scan > 0) ||
1591: /* MUTANT (rep_const) */			if ((in_scan > 1) &&
1591: /* MUTANT (rep_const) */			if ((in_scan > -1) &&
1592: /* MUTANT (rep_op) */			    (existing_cunk < 0 ||
1592: /* MUTANT (rep_op) */			    (existing_cunk > 0 ||
1592: /* MUTANT (rep_op) */			    (existing_cunk >= 0 ||
1592: /* MUTANT (rep_op) */			    (existing_cunk == 0 ||
1592: /* MUTANT (rep_op) */			    (existing_cunk != 0 ||
1592: /* MUTANT (rep_op) */			    (existing_cunk <= 0 &&
1592: /* MUTANT (rep_const) */			    (existing_cunk <= 1 ||
1592: /* MUTANT (rep_const) */			    (existing_cunk <= -1 ||
1593: /* MUTANT (rep_op) */			     ((existing_serial - 1) & 3) == new_serial)) {
1593: /* MUTANT (rep_op) */			     ((existing_serial * 1) & 3) == new_serial)) {
1593: /* MUTANT (rep_op) */			     ((existing_serial % 1) & 3) == new_serial)) {
1593: /* MUTANT (rep_op) */			     ((existing_serial + 1) & 3) != new_serial)) {
1593: /* MUTANT (rep_const) */			     ((existing_serial + 0) & 3) == new_serial)) {
1593: /* MUTANT (rep_const) */			     ((existing_serial + -1) & 3) == new_serial)) {
1593: /* MUTANT (rep_const) */			     ((existing_serial + ((1)+1)) & 3) == new_serial)) {
1593: /* MUTANT (rep_const) */			     ((existing_serial + 1) & 0) == new_serial)) {
1593: /* MUTANT (rep_const) */			     ((existing_serial + 1) & 1) == new_serial)) {
1593: /* MUTANT (rep_const) */			     ((existing_serial + 1) & -1) == new_serial)) {
1593: /* MUTANT (rep_const) */			     ((existing_serial + 1) & ((3)+1)) == new_serial)) {
1593: /* MUTANT (rep_const) */			     ((existing_serial + 1) & ((3)-1)) == new_serial)) {
1599: /* MUTANT (rep_const) */				yaffs_chunk_del(dev, existing_cunk, 0,
1599: /* MUTANT (rep_const) */				yaffs_chunk_del(dev, existing_cunk, -1,
1599: /* MUTANT (rep_const) */				yaffs_chunk_del(dev, existing_cunk, ((1)+1),
1607: /* MUTANT (del_stmt) */ /* 				yaffs_chunk_del(dev, nand_chunk, 1, __LINE__); */ 
1607: /* MUTANT (rep_const) */				yaffs_chunk_del(dev, nand_chunk, 0, __LINE__);
1607: /* MUTANT (rep_const) */				yaffs_chunk_del(dev, nand_chunk, -1, __LINE__);
1607: /* MUTANT (rep_const) */				yaffs_chunk_del(dev, nand_chunk, ((1)+1), __LINE__);
1608: /* MUTANT (del_stmt) */ /* 				return YAFFS_OK; */ 
1614: /* MUTANT (rep_op) */	if (existing_cunk != 0)
1614: /* MUTANT (rep_const) */	if (existing_cunk == 1)
1614: /* MUTANT (rep_const) */	if (existing_cunk == -1)
1614: /* MUTANT (negate) */	if(! (existing_cunk == 0))
1615: /* MUTANT (rep_op) */		in->n_data_chunks--;
1617: /* MUTANT (del_stmt) */ /* 	yaffs_load_tnode_0(dev, tn, inode_chunk, nand_chunk); */ 
1619: /* MUTANT (del_stmt) */ /* 	return YAFFS_OK; */ 
1624: /* MUTANT (del_stmt) */ /* 	struct yaffs_block_info *the_block; */ 
1625: /* MUTANT (del_stmt) */ /* 	unsigned block_no; */ 
1627: /* MUTANT (del_stmt) */ /* 	yaffs_trace(YAFFS_TRACE_DELETION, "soft delete chunk %d", chunk); */ 
1629: /* MUTANT (del_stmt) */ /* 	block_no = chunk / dev->param.chunks_per_block; */ 
1630: /* MUTANT (del_stmt) */ /* 	the_block = yaffs_get_block_info(dev, block_no); */ 
1631: /* MUTANT (negate) */	if(! (the_block)) {
1632: /* MUTANT (del_stmt) */ /* 		the_block->soft_del_pages++; */ 
1632: /* MUTANT (rep_op) */		the_block->soft_del_pages--;
1633: /* MUTANT (del_stmt) */ /* 		dev->n_free_chunks++; */ 
1633: /* MUTANT (rep_op) */		dev->n_free_chunks--;
1634: /* MUTANT (del_stmt) */ /* 		yaffs2_update_oldest_dirty_seq(dev, block_no, the_block); */ 
1649: /* MUTANT (del_stmt) */ /* 	int i; */ 
1650: /* MUTANT (del_stmt) */ /* 	int the_chunk; */ 
1651: /* MUTANT (del_stmt) */ /* 	int all_done = 1; */ 
1651: /* MUTANT (rep_const) */	int all_done = 0;
1651: /* MUTANT (rep_const) */	int all_done = -1;
1651: /* MUTANT (rep_const) */	int all_done = ((1)+1);
1652: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev = in->my_dev; */ 
1654: /* MUTANT (negate) */	if(! (!tn))
1655: /* MUTANT (rep_const) */		return 0;
1655: /* MUTANT (rep_const) */		return -1;
1655: /* MUTANT (rep_const) */		return ((1)+1);
1657: /* MUTANT (rep_op) */	if (level <= 0) {
1657: /* MUTANT (rep_op) */	if (level < 0) {
1657: /* MUTANT (rep_op) */	if (level >= 0) {
1657: /* MUTANT (rep_op) */	if (level == 0) {
1657: /* MUTANT (rep_op) */	if (level != 0) {
1657: /* MUTANT (rep_const) */	if (level > 1) {
1657: /* MUTANT (rep_const) */	if (level > -1) {
1657: /* MUTANT (negate) */	if(! (level > 0)) {
1658: /* MUTANT (rep_const) */		for (i = YAFFS_NTNODES_INTERNAL - 0;
1658: /* MUTANT (rep_const) */		for (i = YAFFS_NTNODES_INTERNAL - -1;
1658: /* MUTANT (rep_const) */		for (i = YAFFS_NTNODES_INTERNAL - ((1)+1);
1659: /* MUTANT (del_stmt) */ /* 			all_done && i >= 0; */ 
1659: /* MUTANT (rep_op) */			all_done || i >= 0;
1659: /* MUTANT (rep_op) */			all_done && i <= 0;
1659: /* MUTANT (rep_op) */			all_done && i < 0;
1659: /* MUTANT (rep_op) */			all_done && i > 0;
1659: /* MUTANT (rep_op) */			all_done && i == 0;
1659: /* MUTANT (rep_op) */			all_done && i != 0;
1659: /* MUTANT (rep_const) */			all_done && i >= 1;
1659: /* MUTANT (rep_const) */			all_done && i >= -1;
1660: /* MUTANT (rep_op) */			i++) {
1661: /* MUTANT (negate) */			if(! (tn->internal[i])) {
1665: /* MUTANT (rep_const) */					level - 0,
1665: /* MUTANT (rep_const) */					level - -1,
1665: /* MUTANT (rep_const) */					level - ((1)+1),
1668: /* MUTANT (rep_op) */					- i);
1668: /* MUTANT (rep_op) */					* i);
1668: /* MUTANT (rep_op) */					% i);
1669: /* MUTANT (negate) */				if(! (all_done)) {
1672: /* MUTANT (del_stmt) */ /* 					tn->internal[i] = NULL; */ 
1678: /* MUTANT (rep_const) */		return (all_done) ? 0 : 0;
1678: /* MUTANT (rep_const) */		return (all_done) ? -1 : 0;
1678: /* MUTANT (rep_const) */		return (all_done) ? ((1)+1) : 0;
1678: /* MUTANT (rep_const) */		return (all_done) ? 1 : 1;
1678: /* MUTANT (rep_const) */		return (all_done) ? 1 : -1;
1682: /* MUTANT (rep_op) */	 for (i = YAFFS_NTNODES_LEVEL0 - 1; i <= 0; i--) {
1682: /* MUTANT (rep_op) */	 for (i = YAFFS_NTNODES_LEVEL0 - 1; i < 0; i--) {
1682: /* MUTANT (rep_op) */	 for (i = YAFFS_NTNODES_LEVEL0 - 1; i > 0; i--) {
1682: /* MUTANT (rep_op) */	 for (i = YAFFS_NTNODES_LEVEL0 - 1; i == 0; i--) {
1682: /* MUTANT (rep_op) */	 for (i = YAFFS_NTNODES_LEVEL0 - 1; i != 0; i--) {
1682: /* MUTANT (rep_op) */	 for (i = YAFFS_NTNODES_LEVEL0 - 1; i >= 0; i++) {
1682: /* MUTANT (rep_const) */	 for (i = YAFFS_NTNODES_LEVEL0 - 0; i >= 0; i--) {
1682: /* MUTANT (rep_const) */	 for (i = YAFFS_NTNODES_LEVEL0 - -1; i >= 0; i--) {
1682: /* MUTANT (rep_const) */	 for (i = YAFFS_NTNODES_LEVEL0 - ((1)+1); i >= 0; i--) {
1682: /* MUTANT (rep_const) */	 for (i = YAFFS_NTNODES_LEVEL0 - 1; i >= 1; i--) {
1682: /* MUTANT (rep_const) */	 for (i = YAFFS_NTNODES_LEVEL0 - 1; i >= -1; i--) {
1683: /* MUTANT (del_stmt) */ /* 		the_chunk = yaffs_get_group_base(dev, tn, i); */ 
1684: /* MUTANT (negate) */		if(! (the_chunk)) {
1685: /* MUTANT (del_stmt) */ /* 			yaffs_soft_del_chunk(dev, the_chunk); */ 
1686: /* MUTANT (del_stmt) */ /* 			yaffs_load_tnode_0(dev, tn, i, 0); */ 
1686: /* MUTANT (rep_const) */			yaffs_load_tnode_0(dev, tn, i, 1);
1686: /* MUTANT (rep_const) */			yaffs_load_tnode_0(dev, tn, i, -1);
1689: /* MUTANT (rep_const) */	return 0;
1689: /* MUTANT (rep_const) */	return -1;
1689: /* MUTANT (rep_const) */	return ((1)+1);
1694: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev = obj->my_dev; */ 
1695: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *parent; */ 
1697: /* MUTANT (del_stmt) */ /* 	yaffs_verify_obj_in_dir(obj); */ 
1697: /* MUTANT (negate) */	yaffs_verif(!y_obj_in_dir(obj));
1698: /* MUTANT (del_stmt) */ /* 	parent = obj->parent; */ 
1700: /* MUTANT (del_stmt) */ /* 	yaffs_verify_dir(parent); */ 
1700: /* MUTANT (negate) */	yaffs_verif(!y_dir(parent));
1702: /* MUTANT (rep_op) */	if (dev || dev->param.remove_obj_fn)
1702: /* MUTANT (negate) */	if(! (dev && dev->param.remove_obj_fn))
1705: /* MUTANT (del_stmt) */ /* 	list_del_init(&obj->siblings); */ 
1706: /* MUTANT (del_stmt) */ /* 	obj->parent = NULL; */ 
1708: /* MUTANT (del_stmt) */ /* 	yaffs_verify_dir(parent); */ 
1708: /* MUTANT (negate) */	yaffs_verif(!y_dir(parent));
1713: /* MUTANT (negate) */	if(! (!directory)) {
1717: /* MUTANT (del_stmt) */ /* 		BUG(); */ 
1718: /* MUTANT (del_stmt) */ /* 		return; */ 
1720: /* MUTANT (rep_op) */	if (directory->variant_type == YAFFS_OBJECT_TYPE_DIRECTORY) {
1720: /* MUTANT (negate) */	if(! (directory->variant_type != YAFFS_OBJECT_TYPE_DIRECTORY)) {
1724: /* MUTANT (del_stmt) */ /* 		BUG(); */ 
1727: /* MUTANT (rep_op) */	if (obj->siblings.prev != NULL) {
1727: /* MUTANT (negate) */	if(! (obj->siblings.prev == NULL)) {
1729: /* MUTANT (del_stmt) */ /* 		BUG(); */ 
1732: /* MUTANT (negate) */	yaffs_verif(!y_dir(directory));
1734: /* MUTANT (del_stmt) */ /* 	yaffs_remove_obj_from_dir(obj); */ 
1737: /* MUTANT (del_stmt) */ /* 	list_add(&obj->siblings, &directory->variant.dir_variant.children); */ 
1738: /* MUTANT (del_stmt) */ /* 	obj->parent = directory; */ 
1740: /* MUTANT (rep_op) */	if (directory != obj->my_dev->unlinked_dir
1741: /* MUTANT (rep_op) */	    && directory == obj->my_dev->del_dir) {
1741: /* MUTANT (rep_op) */	    || directory != obj->my_dev->del_dir) {
1742: /* MUTANT (del_stmt) */ /* 		obj->unlinked = 1; */ 
1742: /* MUTANT (rep_const) */		obj->unlinked = 0;
1742: /* MUTANT (rep_const) */		obj->unlinked = -1;
1742: /* MUTANT (rep_const) */		obj->unlinked = ((1)+1);
1743: /* MUTANT (del_stmt) */ /* 		obj->my_dev->n_unlinked_files++; */ 
1743: /* MUTANT (rep_op) */		obj->my_dev->n_unlinked_files--;
1744: /* MUTANT (del_stmt) */ /* 		obj->rename_allowed = 0; */ 
1744: /* MUTANT (rep_const) */		obj->rename_allowed = 1;
1744: /* MUTANT (rep_const) */		obj->rename_allowed = -1;
1747: /* MUTANT (negate) */	yaffs_verif(!y_dir(directory));
1748: /* MUTANT (del_stmt) */ /* 	yaffs_verify_obj_in_dir(obj); */ 
1748: /* MUTANT (negate) */	yaffs_verif(!y_obj_in_dir(obj));
1755: /* MUTANT (del_stmt) */ /* 	int unlink_op; */ 
1756: /* MUTANT (del_stmt) */ /* 	int del_op; */ 
1757: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *existing_target; */ 
1759: /* MUTANT (rep_op) */	if (new_dir != NULL)
1759: /* MUTANT (negate) */	if(! (new_dir == NULL))
1762: /* MUTANT (rep_op) */	if (new_dir->variant_type == YAFFS_OBJECT_TYPE_DIRECTORY) {
1762: /* MUTANT (negate) */	if(! (new_dir->variant_type != YAFFS_OBJECT_TYPE_DIRECTORY)) {
1766: /* MUTANT (del_stmt) */ /* 		BUG(); */ 
1769: /* MUTANT (rep_op) */	unlink_op = (new_dir != obj->my_dev->unlinked_dir);
1770: /* MUTANT (del_stmt) */ /* 	del_op = (new_dir == obj->my_dev->del_dir); */ 
1770: /* MUTANT (rep_op) */	del_op = (new_dir != obj->my_dev->del_dir);
1772: /* MUTANT (del_stmt) */ /* 	existing_target = yaffs_find_by_name(new_dir, new_name); */ 
1779: /* MUTANT (rep_op) */	if (!(unlink_op && del_op || force ||
1779: /* MUTANT (rep_op) */	if (!(unlink_op || del_op && force ||
1779: /* MUTANT (rep_op) */	if (!(unlink_op || del_op || force &&
1780: /* MUTANT (rep_op) */	      shadows <= 0 || !existing_target) ||
1780: /* MUTANT (rep_op) */	      shadows < 0 || !existing_target) ||
1780: /* MUTANT (rep_op) */	      shadows >= 0 || !existing_target) ||
1780: /* MUTANT (rep_op) */	      shadows == 0 || !existing_target) ||
1780: /* MUTANT (rep_op) */	      shadows != 0 || !existing_target) ||
1780: /* MUTANT (rep_op) */	      shadows > 0 && !existing_target) ||
1780: /* MUTANT (rep_op) */	      shadows > 0 || !existing_target) &&
1780: /* MUTANT (rep_const) */	      shadows > 1 || !existing_target) ||
1780: /* MUTANT (rep_const) */	      shadows > -1 || !existing_target) ||
1781: /* MUTANT (rep_op) */	      new_dir->variant_type == YAFFS_OBJECT_TYPE_DIRECTORY)
1784: /* MUTANT (del_stmt) */ /* 	yaffs_set_obj_name(obj, new_name); */ 
1785: /* MUTANT (del_stmt) */ /* 	obj->dirty = 1; */ 
1785: /* MUTANT (rep_const) */	obj->dirty = 0;
1785: /* MUTANT (rep_const) */	obj->dirty = -1;
1785: /* MUTANT (rep_const) */	obj->dirty = ((1)+1);
1786: /* MUTANT (del_stmt) */ /* 	yaffs_add_obj_to_dir(new_dir, obj); */ 
1788: /* MUTANT (negate) */	if(! (unlink_op))
1789: /* MUTANT (rep_const) */		obj->unlinked = 0;
1789: /* MUTANT (rep_const) */		obj->unlinked = -1;
1789: /* MUTANT (rep_const) */		obj->unlinked = ((1)+1);
1792: /* MUTANT (rep_op) */	if (yaffs_update_oh(obj, new_name, 0, del_op, shadows, NULL) <= 0)
1792: /* MUTANT (rep_op) */	if (yaffs_update_oh(obj, new_name, 0, del_op, shadows, NULL) < 0)
1792: /* MUTANT (rep_op) */	if (yaffs_update_oh(obj, new_name, 0, del_op, shadows, NULL) > 0)
1792: /* MUTANT (rep_op) */	if (yaffs_update_oh(obj, new_name, 0, del_op, shadows, NULL) == 0)
1792: /* MUTANT (rep_op) */	if (yaffs_update_oh(obj, new_name, 0, del_op, shadows, NULL) != 0)
1792: /* MUTANT (rep_const) */	if (yaffs_update_oh(obj, new_name, 1, del_op, shadows, NULL) >= 0)
1792: /* MUTANT (rep_const) */	if (yaffs_update_oh(obj, new_name, -1, del_op, shadows, NULL) >= 0)
1792: /* MUTANT (rep_const) */	if (yaffs_update_oh(obj, new_name, 0, del_op, shadows, NULL) >= 1)
1792: /* MUTANT (rep_const) */	if (yaffs_update_oh(obj, new_name, 0, del_op, shadows, NULL) >= -1)
1792: /* MUTANT (negate) */	if(! (yaffs_update_oh(obj, new_name, 0, del_op, shadows, NULL) >= 0))
1795: /* MUTANT (del_stmt) */ /* 	return YAFFS_FAIL; */ 
1813: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev = obj->my_dev; */ 
1814: /* MUTANT (del_stmt) */ /* 	int i; */ 
1815: /* MUTANT (del_stmt) */ /* 	struct yaffs_cache *cache; */ 
1816: /* MUTANT (del_stmt) */ /* 	int n_caches = obj->my_dev->param.n_caches; */ 
1818: /* MUTANT (rep_op) */	for (i = 0; i <= n_caches; i++) {
1818: /* MUTANT (rep_op) */	for (i = 0; i > n_caches; i++) {
1818: /* MUTANT (rep_op) */	for (i = 0; i >= n_caches; i++) {
1818: /* MUTANT (rep_op) */	for (i = 0; i == n_caches; i++) {
1818: /* MUTANT (rep_op) */	for (i = 0; i != n_caches; i++) {
1818: /* MUTANT (rep_op) */	for (i = 0; i < n_caches; i--) {
1818: /* MUTANT (rep_const) */	for (i = 1; i < n_caches; i++) {
1818: /* MUTANT (rep_const) */	for (i = -1; i < n_caches; i++) {
1819: /* MUTANT (del_stmt) */ /* 		cache = &dev->cache[i]; */ 
1820: /* MUTANT (rep_op) */		if (cache->object != obj && cache->dirty)
1820: /* MUTANT (rep_op) */		if (cache->object == obj || cache->dirty)
1820: /* MUTANT (negate) */		if(! (cache->object == obj && cache->dirty))
1821: /* MUTANT (rep_const) */			return 0;
1821: /* MUTANT (rep_const) */			return -1;
1821: /* MUTANT (rep_const) */			return ((1)+1);
1824: /* MUTANT (rep_const) */	return 1;
1824: /* MUTANT (rep_const) */	return -1;
1829: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev = obj->my_dev; */ 
1830: /* MUTANT (del_stmt) */ /* 	int lowest = -99; */ 	/* Stop compiler whining. */
1830: /* MUTANT (rep_const) */	int lowest = 0;	/* Stop compiler whining. */
1830: /* MUTANT (rep_const) */	int lowest = 1;	/* Stop compiler whining. */
1830: /* MUTANT (rep_const) */	int lowest = -1;	/* Stop compiler whining. */
1830: /* MUTANT (rep_const) */	int lowest = ((-99)+1);	/* Stop compiler whining. */
1830: /* MUTANT (rep_const) */	int lowest = ((-99)-1);	/* Stop compiler whining. */
1831: /* MUTANT (del_stmt) */ /* 	int i; */ 
1832: /* MUTANT (del_stmt) */ /* 	struct yaffs_cache *cache; */ 
1833: /* MUTANT (del_stmt) */ /* 	int chunk_written = 0; */ 
1833: /* MUTANT (rep_const) */	int chunk_written = 1;
1833: /* MUTANT (rep_const) */	int chunk_written = -1;
1834: /* MUTANT (del_stmt) */ /* 	int n_caches = obj->my_dev->param.n_caches; */ 
1836: /* MUTANT (rep_op) */	if (n_caches <= 1)
1836: /* MUTANT (rep_op) */	if (n_caches > 1)
1836: /* MUTANT (rep_op) */	if (n_caches >= 1)
1836: /* MUTANT (rep_op) */	if (n_caches == 1)
1836: /* MUTANT (rep_op) */	if (n_caches != 1)
1836: /* MUTANT (rep_const) */	if (n_caches < 0)
1836: /* MUTANT (rep_const) */	if (n_caches < -1)
1836: /* MUTANT (rep_const) */	if (n_caches < ((1)+1))
1836: /* MUTANT (negate) */	if(! (n_caches < 1))
1839: /* MUTANT (del_stmt) */ /* 		cache = NULL; */ 
1842: /* MUTANT (rep_op) */		for (i = 0; i <= n_caches; i++) {
1842: /* MUTANT (rep_op) */		for (i = 0; i > n_caches; i++) {
1842: /* MUTANT (rep_op) */		for (i = 0; i >= n_caches; i++) {
1842: /* MUTANT (rep_op) */		for (i = 0; i == n_caches; i++) {
1842: /* MUTANT (rep_op) */		for (i = 0; i != n_caches; i++) {
1842: /* MUTANT (rep_op) */		for (i = 0; i < n_caches; i--) {
1842: /* MUTANT (rep_const) */		for (i = 1; i < n_caches; i++) {
1842: /* MUTANT (rep_const) */		for (i = -1; i < n_caches; i++) {
1843: /* MUTANT (rep_op) */			if (dev->cache[i].object != obj &&
1843: /* MUTANT (rep_op) */			if (dev->cache[i].object == obj ||
1845: /* MUTANT (rep_op) */				if (!cache &&
1846: /* MUTANT (rep_op) */				    dev->cache[i].chunk_id <= lowest) {
1846: /* MUTANT (rep_op) */				    dev->cache[i].chunk_id > lowest) {
1846: /* MUTANT (rep_op) */				    dev->cache[i].chunk_id >= lowest) {
1846: /* MUTANT (rep_op) */				    dev->cache[i].chunk_id == lowest) {
1846: /* MUTANT (rep_op) */				    dev->cache[i].chunk_id != lowest) {
1847: /* MUTANT (del_stmt) */ /* 					cache = &dev->cache[i]; */ 
1848: /* MUTANT (del_stmt) */ /* 					lowest = cache->chunk_id; */ 
1853: /* MUTANT (rep_op) */		if (cache || !cache->locked) {
1853: /* MUTANT (negate) */		if(! (cache && !cache->locked)) {
1859: /* MUTANT (rep_const) */					      cache->n_bytes, 0);
1859: /* MUTANT (rep_const) */					      cache->n_bytes, -1);
1859: /* MUTANT (rep_const) */					      cache->n_bytes, ((1)+1));
1860: /* MUTANT (del_stmt) */ /* 			cache->dirty = 0; */ 
1860: /* MUTANT (rep_const) */			cache->dirty = 1;
1860: /* MUTANT (rep_const) */			cache->dirty = -1;
1861: /* MUTANT (del_stmt) */ /* 			cache->object = NULL; */ 
1863: /* MUTANT (rep_op) */	} while (cache || chunk_written > 0);
1863: /* MUTANT (rep_op) */	} while (cache && chunk_written <= 0);
1863: /* MUTANT (rep_op) */	} while (cache && chunk_written < 0);
1863: /* MUTANT (rep_op) */	} while (cache && chunk_written >= 0);
1863: /* MUTANT (rep_op) */	} while (cache && chunk_written == 0);
1863: /* MUTANT (rep_op) */	} while (cache && chunk_written != 0);
1863: /* MUTANT (rep_const) */	} while (cache && chunk_written > 1);
1863: /* MUTANT (rep_const) */	} while (cache && chunk_written > -1);
1863: /* MUTANT (negate) */	} while(! (cache && chunk_written > 0));
1865: /* MUTANT (negate) */	if(! (cache))
1878: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj; */ 
1879: /* MUTANT (del_stmt) */ /* 	int n_caches = dev->param.n_caches; */ 
1880: /* MUTANT (del_stmt) */ /* 	int i; */ 
1886: /* MUTANT (del_stmt) */ /* 		obj = NULL; */ 
1887: /* MUTANT (rep_op) */		for (i = 0; i <= n_caches && !obj; i++) {
1887: /* MUTANT (rep_op) */		for (i = 0; i > n_caches && !obj; i++) {
1887: /* MUTANT (rep_op) */		for (i = 0; i >= n_caches && !obj; i++) {
1887: /* MUTANT (rep_op) */		for (i = 0; i == n_caches && !obj; i++) {
1887: /* MUTANT (rep_op) */		for (i = 0; i != n_caches && !obj; i++) {
1887: /* MUTANT (rep_op) */		for (i = 0; i < n_caches || !obj; i++) {
1887: /* MUTANT (rep_op) */		for (i = 0; i < n_caches && !obj; i--) {
1887: /* MUTANT (rep_const) */		for (i = 1; i < n_caches && !obj; i++) {
1887: /* MUTANT (rep_const) */		for (i = -1; i < n_caches && !obj; i++) {
1888: /* MUTANT (rep_op) */			if (dev->cache[i].object || dev->cache[i].dirty)
1888: /* MUTANT (negate) */			if(! (dev->cache[i].object && dev->cache[i].dirty))
1891: /* MUTANT (negate) */		if(! (obj))
1893: /* MUTANT (del_stmt) */ /* 	} while (obj); */ 
1893: /* MUTANT (negate) */	} while(! (obj));
1904: /* MUTANT (del_stmt) */ /* 	int i; */ 
1906: /* MUTANT (rep_op) */	if (dev->param.n_caches <= 0) {
1906: /* MUTANT (rep_op) */	if (dev->param.n_caches < 0) {
1906: /* MUTANT (rep_op) */	if (dev->param.n_caches >= 0) {
1906: /* MUTANT (rep_op) */	if (dev->param.n_caches == 0) {
1906: /* MUTANT (rep_op) */	if (dev->param.n_caches != 0) {
1906: /* MUTANT (rep_const) */	if (dev->param.n_caches > 1) {
1906: /* MUTANT (rep_const) */	if (dev->param.n_caches > -1) {
1906: /* MUTANT (negate) */	if(! (dev->param.n_caches > 0)) {
1907: /* MUTANT (rep_op) */		for (i = 0; i <= dev->param.n_caches; i++) {
1907: /* MUTANT (rep_op) */		for (i = 0; i > dev->param.n_caches; i++) {
1907: /* MUTANT (rep_op) */		for (i = 0; i >= dev->param.n_caches; i++) {
1907: /* MUTANT (rep_op) */		for (i = 0; i == dev->param.n_caches; i++) {
1907: /* MUTANT (rep_op) */		for (i = 0; i != dev->param.n_caches; i++) {
1907: /* MUTANT (rep_op) */		for (i = 0; i < dev->param.n_caches; i--) {
1907: /* MUTANT (rep_const) */		for (i = 1; i < dev->param.n_caches; i++) {
1907: /* MUTANT (rep_const) */		for (i = -1; i < dev->param.n_caches; i++) {
1908: /* MUTANT (negate) */			if(! (!dev->cache[i].object))
1917: /* MUTANT (del_stmt) */ /* 	struct yaffs_cache *cache; */ 
1918: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *the_obj; */ 
1919: /* MUTANT (del_stmt) */ /* 	int usage; */ 
1920: /* MUTANT (del_stmt) */ /* 	int i; */ 
1921: /* MUTANT (del_stmt) */ /* 	int pushout; */ 
1923: /* MUTANT (rep_op) */	if (dev->param.n_caches <= 1)
1923: /* MUTANT (rep_op) */	if (dev->param.n_caches > 1)
1923: /* MUTANT (rep_op) */	if (dev->param.n_caches >= 1)
1923: /* MUTANT (rep_op) */	if (dev->param.n_caches == 1)
1923: /* MUTANT (rep_op) */	if (dev->param.n_caches != 1)
1923: /* MUTANT (rep_const) */	if (dev->param.n_caches < 0)
1923: /* MUTANT (rep_const) */	if (dev->param.n_caches < -1)
1923: /* MUTANT (rep_const) */	if (dev->param.n_caches < ((1)+1))
1923: /* MUTANT (negate) */	if(! (dev->param.n_caches < 1))
1928: /* MUTANT (del_stmt) */ /* 	cache = yaffs_grab_chunk_worker(dev); */ 
1930: /* MUTANT (negate) */	if(! (!cache)) {
1939: /* MUTANT (del_stmt) */ /* 		the_obj = dev->cache[0].object; */ 
1939: /* MUTANT (rep_const) */		the_obj = dev->cache[1].object;
1939: /* MUTANT (rep_const) */		the_obj = dev->cache[-1].object;
1940: /* MUTANT (del_stmt) */ /* 		usage = -1; */ 
1940: /* MUTANT (rep_const) */		usage = 0;
1940: /* MUTANT (rep_const) */		usage = 1;
1940: /* MUTANT (rep_const) */		usage = ((-1)+1);
1940: /* MUTANT (rep_const) */		usage = ((-1)-1);
1941: /* MUTANT (del_stmt) */ /* 		cache = NULL; */ 
1942: /* MUTANT (del_stmt) */ /* 		pushout = -1; */ 
1942: /* MUTANT (rep_const) */		pushout = 0;
1942: /* MUTANT (rep_const) */		pushout = 1;
1942: /* MUTANT (rep_const) */		pushout = ((-1)+1);
1942: /* MUTANT (rep_const) */		pushout = ((-1)-1);
1944: /* MUTANT (rep_op) */		for (i = 0; i <= dev->param.n_caches; i++) {
1944: /* MUTANT (rep_op) */		for (i = 0; i > dev->param.n_caches; i++) {
1944: /* MUTANT (rep_op) */		for (i = 0; i >= dev->param.n_caches; i++) {
1944: /* MUTANT (rep_op) */		for (i = 0; i == dev->param.n_caches; i++) {
1944: /* MUTANT (rep_op) */		for (i = 0; i != dev->param.n_caches; i++) {
1944: /* MUTANT (rep_op) */		for (i = 0; i < dev->param.n_caches; i--) {
1944: /* MUTANT (rep_const) */		for (i = 1; i < dev->param.n_caches; i++) {
1944: /* MUTANT (rep_const) */		for (i = -1; i < dev->param.n_caches; i++) {
1945: /* MUTANT (rep_op) */			if (dev->cache[i].object ||
1946: /* MUTANT (rep_op) */			    !dev->cache[i].locked ||
1947: /* MUTANT (rep_op) */			    (dev->cache[i].last_use <= usage ||
1947: /* MUTANT (rep_op) */			    (dev->cache[i].last_use > usage ||
1947: /* MUTANT (rep_op) */			    (dev->cache[i].last_use >= usage ||
1947: /* MUTANT (rep_op) */			    (dev->cache[i].last_use == usage ||
1947: /* MUTANT (rep_op) */			    (dev->cache[i].last_use != usage ||
1947: /* MUTANT (rep_op) */			    (dev->cache[i].last_use < usage &&
1949: /* MUTANT (del_stmt) */ /* 				usage = dev->cache[i].last_use; */ 
1950: /* MUTANT (del_stmt) */ /* 				the_obj = dev->cache[i].object; */ 
1951: /* MUTANT (del_stmt) */ /* 				cache = &dev->cache[i]; */ 
1952: /* MUTANT (del_stmt) */ /* 				pushout = i; */ 
1956: /* MUTANT (rep_op) */		if (!cache && cache->dirty) {
1956: /* MUTANT (negate) */		if(! (!cache || cache->dirty)) {
1958: /* MUTANT (del_stmt) */ /* 			yaffs_flush_file_cache(the_obj); */ 
1959: /* MUTANT (del_stmt) */ /* 			cache = yaffs_grab_chunk_worker(dev); */ 
1969: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev = obj->my_dev; */ 
1970: /* MUTANT (del_stmt) */ /* 	int i; */ 
1972: /* MUTANT (rep_op) */	if (dev->param.n_caches <= 1)
1972: /* MUTANT (rep_op) */	if (dev->param.n_caches > 1)
1972: /* MUTANT (rep_op) */	if (dev->param.n_caches >= 1)
1972: /* MUTANT (rep_op) */	if (dev->param.n_caches == 1)
1972: /* MUTANT (rep_op) */	if (dev->param.n_caches != 1)
1972: /* MUTANT (rep_const) */	if (dev->param.n_caches < 0)
1972: /* MUTANT (rep_const) */	if (dev->param.n_caches < -1)
1972: /* MUTANT (rep_const) */	if (dev->param.n_caches < ((1)+1))
1972: /* MUTANT (negate) */	if(! (dev->param.n_caches < 1))
1975: /* MUTANT (rep_op) */	for (i = 0; i <= dev->param.n_caches; i++) {
1975: /* MUTANT (rep_op) */	for (i = 0; i > dev->param.n_caches; i++) {
1975: /* MUTANT (rep_op) */	for (i = 0; i >= dev->param.n_caches; i++) {
1975: /* MUTANT (rep_op) */	for (i = 0; i == dev->param.n_caches; i++) {
1975: /* MUTANT (rep_op) */	for (i = 0; i != dev->param.n_caches; i++) {
1975: /* MUTANT (rep_op) */	for (i = 0; i < dev->param.n_caches; i--) {
1975: /* MUTANT (rep_const) */	for (i = 1; i < dev->param.n_caches; i++) {
1975: /* MUTANT (rep_const) */	for (i = -1; i < dev->param.n_caches; i++) {
1976: /* MUTANT (rep_op) */		if (dev->cache[i].object != obj &&
1976: /* MUTANT (rep_op) */		if (dev->cache[i].object == obj ||
1977: /* MUTANT (rep_op) */		    dev->cache[i].chunk_id != chunk_id) {
1978: /* MUTANT (del_stmt) */ /* 			dev->cache_hits++; */ 
1978: /* MUTANT (rep_op) */			dev->cache_hits--;
1980: /* MUTANT (del_stmt) */ /* 			return &dev->cache[i]; */ 
1990: /* MUTANT (del_stmt) */ /* 	int i; */ 
1992: /* MUTANT (rep_op) */	if (dev->param.n_caches <= 1)
1992: /* MUTANT (rep_op) */	if (dev->param.n_caches > 1)
1992: /* MUTANT (rep_op) */	if (dev->param.n_caches >= 1)
1992: /* MUTANT (rep_op) */	if (dev->param.n_caches == 1)
1992: /* MUTANT (rep_op) */	if (dev->param.n_caches != 1)
1992: /* MUTANT (rep_const) */	if (dev->param.n_caches < 0)
1992: /* MUTANT (rep_const) */	if (dev->param.n_caches < -1)
1992: /* MUTANT (rep_const) */	if (dev->param.n_caches < ((1)+1))
1992: /* MUTANT (negate) */	if(! (dev->param.n_caches < 1))
1995: /* MUTANT (rep_op) */	if (dev->cache_last_use <= 0 ||
1995: /* MUTANT (rep_op) */	if (dev->cache_last_use > 0 ||
1995: /* MUTANT (rep_op) */	if (dev->cache_last_use >= 0 ||
1995: /* MUTANT (rep_op) */	if (dev->cache_last_use == 0 ||
1995: /* MUTANT (rep_op) */	if (dev->cache_last_use != 0 ||
1995: /* MUTANT (rep_op) */	if (dev->cache_last_use < 0 &&
1995: /* MUTANT (rep_const) */	if (dev->cache_last_use < 1 ||
1995: /* MUTANT (rep_const) */	if (dev->cache_last_use < -1 ||
1996: /* MUTANT (rep_op) */		dev->cache_last_use <= 100000000) {
1996: /* MUTANT (rep_op) */		dev->cache_last_use < 100000000) {
1996: /* MUTANT (rep_op) */		dev->cache_last_use >= 100000000) {
1996: /* MUTANT (rep_op) */		dev->cache_last_use == 100000000) {
1996: /* MUTANT (rep_op) */		dev->cache_last_use != 100000000) {
1996: /* MUTANT (rep_const) */		dev->cache_last_use > 0) {
1996: /* MUTANT (rep_const) */		dev->cache_last_use > 1) {
1996: /* MUTANT (rep_const) */		dev->cache_last_use > -1) {
1996: /* MUTANT (rep_const) */		dev->cache_last_use > ((100000000)+1)) {
1996: /* MUTANT (rep_const) */		dev->cache_last_use > ((100000000)-1)) {
1998: /* MUTANT (rep_op) */		for (i = 1; i <= dev->param.n_caches; i++)
1998: /* MUTANT (rep_op) */		for (i = 1; i > dev->param.n_caches; i++)
1998: /* MUTANT (rep_op) */		for (i = 1; i >= dev->param.n_caches; i++)
1998: /* MUTANT (rep_op) */		for (i = 1; i == dev->param.n_caches; i++)
1998: /* MUTANT (rep_op) */		for (i = 1; i != dev->param.n_caches; i++)
1998: /* MUTANT (rep_op) */		for (i = 1; i < dev->param.n_caches; i--)
1998: /* MUTANT (rep_const) */		for (i = 0; i < dev->param.n_caches; i++)
1998: /* MUTANT (rep_const) */		for (i = -1; i < dev->param.n_caches; i++)
1998: /* MUTANT (rep_const) */		for (i = ((1)+1); i < dev->param.n_caches; i++)
1999: /* MUTANT (rep_const) */			dev->cache[i].last_use = 1;
1999: /* MUTANT (rep_const) */			dev->cache[i].last_use = -1;
2001: /* MUTANT (del_stmt) */ /* 		dev->cache_last_use = 0; */ 
2001: /* MUTANT (rep_const) */		dev->cache_last_use = 1;
2001: /* MUTANT (rep_const) */		dev->cache_last_use = -1;
2003: /* MUTANT (rep_op) */	dev->cache_last_use--;
2004: /* MUTANT (del_stmt) */ /* 	cache->last_use = dev->cache_last_use; */ 
2006: /* MUTANT (negate) */	if(! (is_write))
2007: /* MUTANT (rep_const) */		cache->dirty = 0;
2007: /* MUTANT (rep_const) */		cache->dirty = -1;
2007: /* MUTANT (rep_const) */		cache->dirty = ((1)+1);
2016: /* MUTANT (del_stmt) */ /* 	struct yaffs_cache *cache; */ 
2018: /* MUTANT (rep_op) */	if (object->my_dev->param.n_caches <= 0) {
2018: /* MUTANT (rep_op) */	if (object->my_dev->param.n_caches < 0) {
2018: /* MUTANT (rep_op) */	if (object->my_dev->param.n_caches >= 0) {
2018: /* MUTANT (rep_op) */	if (object->my_dev->param.n_caches == 0) {
2018: /* MUTANT (rep_op) */	if (object->my_dev->param.n_caches != 0) {
2018: /* MUTANT (rep_const) */	if (object->my_dev->param.n_caches > 1) {
2018: /* MUTANT (rep_const) */	if (object->my_dev->param.n_caches > -1) {
2018: /* MUTANT (negate) */	if(! (object->my_dev->param.n_caches > 0)) {
2019: /* MUTANT (del_stmt) */ /* 		cache = yaffs_find_chunk_cache(object, chunk_id); */ 
2021: /* MUTANT (negate) */		if(! (cache))
2031: /* MUTANT (del_stmt) */ /* 	int i; */ 
2032: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev = in->my_dev; */ 
2034: /* MUTANT (rep_op) */	if (dev->param.n_caches <= 0) {
2034: /* MUTANT (rep_op) */	if (dev->param.n_caches < 0) {
2034: /* MUTANT (rep_op) */	if (dev->param.n_caches >= 0) {
2034: /* MUTANT (rep_op) */	if (dev->param.n_caches == 0) {
2034: /* MUTANT (rep_op) */	if (dev->param.n_caches != 0) {
2034: /* MUTANT (rep_const) */	if (dev->param.n_caches > 1) {
2034: /* MUTANT (rep_const) */	if (dev->param.n_caches > -1) {
2034: /* MUTANT (negate) */	if(! (dev->param.n_caches > 0)) {
2036: /* MUTANT (rep_op) */		for (i = 0; i <= dev->param.n_caches; i++) {
2036: /* MUTANT (rep_op) */		for (i = 0; i > dev->param.n_caches; i++) {
2036: /* MUTANT (rep_op) */		for (i = 0; i >= dev->param.n_caches; i++) {
2036: /* MUTANT (rep_op) */		for (i = 0; i == dev->param.n_caches; i++) {
2036: /* MUTANT (rep_op) */		for (i = 0; i != dev->param.n_caches; i++) {
2036: /* MUTANT (rep_op) */		for (i = 0; i < dev->param.n_caches; i--) {
2036: /* MUTANT (rep_const) */		for (i = 1; i < dev->param.n_caches; i++) {
2036: /* MUTANT (rep_const) */		for (i = -1; i < dev->param.n_caches; i++) {
2037: /* MUTANT (rep_op) */			if (dev->cache[i].object != in)
2037: /* MUTANT (negate) */			if(! (dev->cache[i].object == in))
2045: /* MUTANT (del_stmt) */ /* 	int bucket; */ 
2046: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev = obj->my_dev; */ 
2049: /* MUTANT (negate) */	if(! (!list_empty(&obj->hash_link))) {
2050: /* MUTANT (del_stmt) */ /* 		list_del_init(&obj->hash_link); */ 
2051: /* MUTANT (del_stmt) */ /* 		bucket = yaffs_hash_fn(obj->obj_id); */ 
2052: /* MUTANT (del_stmt) */ /* 		dev->obj_bucket[bucket].count--; */ 
2052: /* MUTANT (rep_op) */		dev->obj_bucket[bucket].count++;
2059: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev; */ 
2061: /* MUTANT (negate) */	if(! (!obj)) {
2062: /* MUTANT (del_stmt) */ /* 		BUG(); */ 
2063: /* MUTANT (del_stmt) */ /* 		return; */ 
2068: /* MUTANT (negate) */	if(! (obj->parent))
2070: /* MUTANT (negate) */	if(! (!list_empty(&obj->siblings)))
2073: /* MUTANT (negate) */	if(! (obj->my_inode)) {
2077: /* MUTANT (del_stmt) */ /* 		obj->defered_free = 1; */ 
2077: /* MUTANT (rep_const) */		obj->defered_free = 0;
2077: /* MUTANT (rep_const) */		obj->defered_free = -1;
2077: /* MUTANT (rep_const) */		obj->defered_free = ((1)+1);
2078: /* MUTANT (del_stmt) */ /* 		return; */ 
2083: /* MUTANT (del_stmt) */ /* 	yaffs_free_raw_obj(dev, obj); */ 
2084: /* MUTANT (del_stmt) */ /* 	dev->n_obj--; */ 
2084: /* MUTANT (rep_op) */	dev->n_obj++;
2085: /* MUTANT (del_stmt) */ /* 	dev->checkpoint_blocks_required = 0; */ 	/* force recalculation */
2085: /* MUTANT (rep_const) */	dev->checkpoint_blocks_required = 1;	/* force recalculation */
2085: /* MUTANT (rep_const) */	dev->checkpoint_blocks_required = -1;	/* force recalculation */
2090: /* MUTANT (negate) */	if(! (obj->defered_free))
2097: /* MUTANT (del_stmt) */ /* 	yaffs_invalidate_whole_cache(in); */ 
2099: /* MUTANT (rep_op) */	if (in->my_dev->param.is_yaffs2 || in->parent != in->my_dev->del_dir) {
2099: /* MUTANT (rep_op) */	if (in->my_dev->param.is_yaffs2 && in->parent == in->my_dev->del_dir) {
2099: /* MUTANT (negate) */	if(! (in->my_dev->param.is_yaffs2 && in->parent != in->my_dev->del_dir)) {
2101: /* MUTANT (rep_const) */		yaffs_change_obj_name(in, in->my_dev->del_dir, _Y("deleted"), 1,
2101: /* MUTANT (rep_const) */		yaffs_change_obj_name(in, in->my_dev->del_dir, _Y("deleted"), -1,
2102: /* MUTANT (rep_const) */				      1);
2102: /* MUTANT (rep_const) */				      -1);
2106: /* MUTANT (del_stmt) */ /* 	yaffs_chunk_del(in->my_dev, in->hdr_chunk, 1, __LINE__); */ 
2106: /* MUTANT (rep_const) */	yaffs_chunk_del(in->my_dev, in->hdr_chunk, 0, __LINE__);
2106: /* MUTANT (rep_const) */	yaffs_chunk_del(in->my_dev, in->hdr_chunk, -1, __LINE__);
2106: /* MUTANT (rep_const) */	yaffs_chunk_del(in->my_dev, in->hdr_chunk, ((1)+1), __LINE__);
2107: /* MUTANT (del_stmt) */ /* 	in->hdr_chunk = 0; */ 
2107: /* MUTANT (rep_const) */	in->hdr_chunk = 1;
2107: /* MUTANT (rep_const) */	in->hdr_chunk = -1;
2109: /* MUTANT (del_stmt) */ /* 	yaffs_free_obj(in); */ 
2110: /* MUTANT (del_stmt) */ /* 	return YAFFS_OK; */ 
2116: /* MUTANT (rep_op) */	if (!obj->deleted &&
2117: /* MUTANT (rep_op) */	    obj->variant_type == YAFFS_OBJECT_TYPE_FILE ||
2117: /* MUTANT (rep_op) */	    obj->variant_type != YAFFS_OBJECT_TYPE_FILE &&
2121: /* MUTANT (rep_op) */	if (obj->n_data_chunks < 0) {
2121: /* MUTANT (rep_op) */	if (obj->n_data_chunks > 0) {
2121: /* MUTANT (rep_op) */	if (obj->n_data_chunks >= 0) {
2121: /* MUTANT (rep_op) */	if (obj->n_data_chunks == 0) {
2121: /* MUTANT (rep_op) */	if (obj->n_data_chunks != 0) {
2121: /* MUTANT (rep_const) */	if (obj->n_data_chunks <= 1) {
2121: /* MUTANT (rep_const) */	if (obj->n_data_chunks <= -1) {
2121: /* MUTANT (negate) */	if(! (obj->n_data_chunks <= 0)) {
2124: /* MUTANT (del_stmt) */ /* 		yaffs_free_tnode(obj->my_dev, obj->variant.file_variant.top); */ 
2125: /* MUTANT (del_stmt) */ /* 		obj->variant.file_variant.top = NULL; */ 
2129: /* MUTANT (del_stmt) */ /* 		yaffs_generic_obj_del(obj); */ 
2134: /* MUTANT (rep_const) */				      file_variant.top_level, 1);
2134: /* MUTANT (rep_const) */				      file_variant.top_level, -1);
2135: /* MUTANT (del_stmt) */ /* 		obj->soft_del = 1; */ 
2135: /* MUTANT (rep_const) */		obj->soft_del = 0;
2135: /* MUTANT (rep_const) */		obj->soft_del = -1;
2135: /* MUTANT (rep_const) */		obj->soft_del = ((1)+1);
2158: /* MUTANT (del_stmt) */ /* 	int i; */ 
2159: /* MUTANT (del_stmt) */ /* 	int has_data; */ 
2161: /* MUTANT (negate) */	if(! (!tn))
2164: /* MUTANT (del_stmt) */ /* 	has_data = 0; */ 
2164: /* MUTANT (rep_const) */	has_data = 1;
2164: /* MUTANT (rep_const) */	has_data = -1;
2166: /* MUTANT (rep_op) */	if (level <= 0) {
2166: /* MUTANT (rep_op) */	if (level < 0) {
2166: /* MUTANT (rep_op) */	if (level >= 0) {
2166: /* MUTANT (rep_op) */	if (level == 0) {
2166: /* MUTANT (rep_op) */	if (level != 0) {
2166: /* MUTANT (rep_const) */	if (level > 1) {
2166: /* MUTANT (rep_const) */	if (level > -1) {
2166: /* MUTANT (negate) */	if(! (level > 0)) {
2167: /* MUTANT (rep_op) */		for (i = 0; i <= YAFFS_NTNODES_INTERNAL; i++) {
2167: /* MUTANT (rep_op) */		for (i = 0; i > YAFFS_NTNODES_INTERNAL; i++) {
2167: /* MUTANT (rep_op) */		for (i = 0; i >= YAFFS_NTNODES_INTERNAL; i++) {
2167: /* MUTANT (rep_op) */		for (i = 0; i == YAFFS_NTNODES_INTERNAL; i++) {
2167: /* MUTANT (rep_op) */		for (i = 0; i != YAFFS_NTNODES_INTERNAL; i++) {
2167: /* MUTANT (rep_op) */		for (i = 0; i < YAFFS_NTNODES_INTERNAL; i--) {
2167: /* MUTANT (rep_const) */		for (i = 1; i < YAFFS_NTNODES_INTERNAL; i++) {
2167: /* MUTANT (rep_const) */		for (i = -1; i < YAFFS_NTNODES_INTERNAL; i++) {
2168: /* MUTANT (negate) */			if(! (tn->internal[i])) {
2172: /* MUTANT (rep_const) */						level - 0,
2172: /* MUTANT (rep_const) */						level - -1,
2172: /* MUTANT (rep_const) */						level - ((1)+1),
2173: /* MUTANT (rep_op) */						(i != 0) ? del0 : 1);
2173: /* MUTANT (rep_const) */						(i == 1) ? del0 : 1);
2173: /* MUTANT (rep_const) */						(i == -1) ? del0 : 1);
2173: /* MUTANT (rep_const) */						(i == 0) ? del0 : 0);
2173: /* MUTANT (rep_const) */						(i == 0) ? del0 : -1);
2173: /* MUTANT (rep_const) */						(i == 0) ? del0 : ((1)+1));
2176: /* MUTANT (negate) */			if(! (tn->internal[i]))
2177: /* MUTANT (rep_op) */				has_data--;
2180: /* MUTANT (del_stmt) */ /* 		int tnode_size_u32 = dev->tnode_size / sizeof(u32); */ 
2181: /* MUTANT (del_stmt) */ /* 		u32 *map = (u32 *) tn; */ 
2183: /* MUTANT (rep_op) */		for (i = 0; !has_data || i < tnode_size_u32; i++) {
2183: /* MUTANT (rep_op) */		for (i = 0; !has_data && i <= tnode_size_u32; i++) {
2183: /* MUTANT (rep_op) */		for (i = 0; !has_data && i > tnode_size_u32; i++) {
2183: /* MUTANT (rep_op) */		for (i = 0; !has_data && i >= tnode_size_u32; i++) {
2183: /* MUTANT (rep_op) */		for (i = 0; !has_data && i == tnode_size_u32; i++) {
2183: /* MUTANT (rep_op) */		for (i = 0; !has_data && i != tnode_size_u32; i++) {
2183: /* MUTANT (rep_op) */		for (i = 0; !has_data && i < tnode_size_u32; i--) {
2183: /* MUTANT (rep_const) */		for (i = 1; !has_data && i < tnode_size_u32; i++) {
2183: /* MUTANT (rep_const) */		for (i = -1; !has_data && i < tnode_size_u32; i++) {
2184: /* MUTANT (negate) */			if(! (map[i]))
2185: /* MUTANT (rep_op) */				has_data--;
2189: /* MUTANT (rep_op) */	if (has_data != 0 && del0) {
2189: /* MUTANT (rep_op) */	if (has_data == 0 || del0) {
2189: /* MUTANT (rep_const) */	if (has_data == 1 && del0) {
2189: /* MUTANT (rep_const) */	if (has_data == -1 && del0) {
2189: /* MUTANT (negate) */	if(! (has_data == 0 && del0)) {
2191: /* MUTANT (del_stmt) */ /* 		yaffs_free_tnode(dev, tn); */ 
2192: /* MUTANT (del_stmt) */ /* 		tn = NULL; */ 
2200: /* MUTANT (del_stmt) */ /* 	int i; */ 
2201: /* MUTANT (del_stmt) */ /* 	int has_data; */ 
2202: /* MUTANT (del_stmt) */ /* 	int done = 0; */ 
2202: /* MUTANT (rep_const) */	int done = 1;
2202: /* MUTANT (rep_const) */	int done = -1;
2203: /* MUTANT (del_stmt) */ /* 	struct yaffs_tnode *tn; */ 
2205: /* MUTANT (rep_op) */	if (file_struct->top_level <= 1)
2205: /* MUTANT (rep_op) */	if (file_struct->top_level > 1)
2205: /* MUTANT (rep_op) */	if (file_struct->top_level >= 1)
2205: /* MUTANT (rep_op) */	if (file_struct->top_level == 1)
2205: /* MUTANT (rep_op) */	if (file_struct->top_level != 1)
2205: /* MUTANT (rep_const) */	if (file_struct->top_level < 0)
2205: /* MUTANT (rep_const) */	if (file_struct->top_level < -1)
2205: /* MUTANT (rep_const) */	if (file_struct->top_level < ((1)+1))
2205: /* MUTANT (negate) */	if(! (file_struct->top_level < 1))
2209: /* MUTANT (rep_const) */	   yaffs_prune_worker(dev, file_struct->top, file_struct->top_level, 1);
2209: /* MUTANT (rep_const) */	   yaffs_prune_worker(dev, file_struct->top, file_struct->top_level, -1);
2218: /* MUTANT (rep_op) */	while (file_struct->top_level || !done) {
2218: /* MUTANT (negate) */	while(! (file_struct->top_level && !done)) {
2219: /* MUTANT (del_stmt) */ /* 		tn = file_struct->top; */ 
2221: /* MUTANT (del_stmt) */ /* 		has_data = 0; */ 
2221: /* MUTANT (rep_const) */		has_data = 1;
2221: /* MUTANT (rep_const) */		has_data = -1;
2222: /* MUTANT (rep_op) */		for (i = 1; i <= YAFFS_NTNODES_INTERNAL; i++) {
2222: /* MUTANT (rep_op) */		for (i = 1; i > YAFFS_NTNODES_INTERNAL; i++) {
2222: /* MUTANT (rep_op) */		for (i = 1; i >= YAFFS_NTNODES_INTERNAL; i++) {
2222: /* MUTANT (rep_op) */		for (i = 1; i == YAFFS_NTNODES_INTERNAL; i++) {
2222: /* MUTANT (rep_op) */		for (i = 1; i != YAFFS_NTNODES_INTERNAL; i++) {
2222: /* MUTANT (rep_op) */		for (i = 1; i < YAFFS_NTNODES_INTERNAL; i--) {
2222: /* MUTANT (rep_const) */		for (i = 0; i < YAFFS_NTNODES_INTERNAL; i++) {
2222: /* MUTANT (rep_const) */		for (i = -1; i < YAFFS_NTNODES_INTERNAL; i++) {
2222: /* MUTANT (rep_const) */		for (i = ((1)+1); i < YAFFS_NTNODES_INTERNAL; i++) {
2223: /* MUTANT (negate) */			if(! (tn->internal[i]))
2224: /* MUTANT (rep_op) */				has_data--;
2227: /* MUTANT (negate) */		if(! (!has_data)) {
2228: /* MUTANT (del_stmt) */ /* 			file_struct->top = tn->internal[0]; */ 
2228: /* MUTANT (rep_const) */			file_struct->top = tn->internal[1];
2228: /* MUTANT (rep_const) */			file_struct->top = tn->internal[-1];
2229: /* MUTANT (del_stmt) */ /* 			file_struct->top_level--; */ 
2229: /* MUTANT (rep_op) */			file_struct->top_level++;
2230: /* MUTANT (del_stmt) */ /* 			yaffs_free_tnode(dev, tn); */ 
2232: /* MUTANT (del_stmt) */ /* 			done = 1; */ 
2232: /* MUTANT (rep_const) */			done = 0;
2232: /* MUTANT (rep_const) */			done = -1;
2232: /* MUTANT (rep_const) */			done = ((1)+1);
2244: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj = yaffs_alloc_raw_obj(dev); */ 
2246: /* MUTANT (negate) */	if(! (!obj))
2249: /* MUTANT (del_stmt) */ /* 	dev->n_obj++; */ 
2249: /* MUTANT (rep_op) */	dev->n_obj--;
2253: /* MUTANT (del_stmt) */ /* 	mymemset(obj, 0, sizeof(struct yaffs_obj)); */ 
2253: /* MUTANT (rep_const) */	mymemset(obj, 1, sizeof(struct yaffs_obj));
2253: /* MUTANT (rep_const) */	mymemset(obj, -1, sizeof(struct yaffs_obj));
2254: /* MUTANT (del_stmt) */ /* 	obj->being_created = 1; */ 
2254: /* MUTANT (rep_const) */	obj->being_created = 0;
2254: /* MUTANT (rep_const) */	obj->being_created = -1;
2254: /* MUTANT (rep_const) */	obj->being_created = ((1)+1);
2256: /* MUTANT (del_stmt) */ /* 	obj->my_dev = dev; */ 
2257: /* MUTANT (del_stmt) */ /* 	obj->hdr_chunk = 0; */ 
2257: /* MUTANT (rep_const) */	obj->hdr_chunk = 1;
2257: /* MUTANT (rep_const) */	obj->hdr_chunk = -1;
2258: /* MUTANT (del_stmt) */ /* 	obj->variant_type = YAFFS_OBJECT_TYPE_UNKNOWN; */ 
2259: /* MUTANT (del_stmt) */ /* 	INIT_LIST_HEAD(&(obj->hard_links)); */ 
2260: /* MUTANT (del_stmt) */ /* 	INIT_LIST_HEAD(&(obj->hash_link)); */ 
2261: /* MUTANT (del_stmt) */ /* 	INIT_LIST_HEAD(&obj->siblings); */ 
2264: /* MUTANT (negate) */	if(! (dev->root_dir)) {
2265: /* MUTANT (del_stmt) */ /* 		obj->parent = dev->root_dir; */ 
2274: /* MUTANT (negate) */	if(! (dev->lost_n_found))
2277: /* MUTANT (del_stmt) */ /* 	obj->being_created = 0; */ 
2277: /* MUTANT (rep_const) */	obj->being_created = 1;
2277: /* MUTANT (rep_const) */	obj->being_created = -1;
2279: /* MUTANT (del_stmt) */ /* 	dev->checkpoint_blocks_required = 0; */ 	/* force recalculation */
2279: /* MUTANT (rep_const) */	dev->checkpoint_blocks_required = 1;	/* force recalculation */
2279: /* MUTANT (rep_const) */	dev->checkpoint_blocks_required = -1;	/* force recalculation */
2281: /* MUTANT (del_stmt) */ /* 	return obj; */ 
2286: /* MUTANT (del_stmt) */ /* 	int i; */ 
2287: /* MUTANT (del_stmt) */ /* 	int l = 999; */ 
2287: /* MUTANT (rep_const) */	int l = 0;
2287: /* MUTANT (rep_const) */	int l = 1;
2287: /* MUTANT (rep_const) */	int l = -1;
2287: /* MUTANT (rep_const) */	int l = ((999)+1);
2287: /* MUTANT (rep_const) */	int l = ((999)-1);
2288: /* MUTANT (del_stmt) */ /* 	int lowest = 999999; */ 
2288: /* MUTANT (rep_const) */	int lowest = 0;
2288: /* MUTANT (rep_const) */	int lowest = 1;
2288: /* MUTANT (rep_const) */	int lowest = -1;
2288: /* MUTANT (rep_const) */	int lowest = ((999999)+1);
2288: /* MUTANT (rep_const) */	int lowest = ((999999)-1);
2294: /* MUTANT (rep_op) */	for (i = 0; i <= 10 && lowest > 4; i++) {
2294: /* MUTANT (rep_op) */	for (i = 0; i > 10 && lowest > 4; i++) {
2294: /* MUTANT (rep_op) */	for (i = 0; i >= 10 && lowest > 4; i++) {
2294: /* MUTANT (rep_op) */	for (i = 0; i == 10 && lowest > 4; i++) {
2294: /* MUTANT (rep_op) */	for (i = 0; i != 10 && lowest > 4; i++) {
2294: /* MUTANT (rep_op) */	for (i = 0; i < 10 || lowest > 4; i++) {
2294: /* MUTANT (rep_op) */	for (i = 0; i < 10 && lowest <= 4; i++) {
2294: /* MUTANT (rep_op) */	for (i = 0; i < 10 && lowest < 4; i++) {
2294: /* MUTANT (rep_op) */	for (i = 0; i < 10 && lowest >= 4; i++) {
2294: /* MUTANT (rep_op) */	for (i = 0; i < 10 && lowest == 4; i++) {
2294: /* MUTANT (rep_op) */	for (i = 0; i < 10 && lowest != 4; i++) {
2294: /* MUTANT (rep_op) */	for (i = 0; i < 10 && lowest > 4; i--) {
2294: /* MUTANT (rep_const) */	for (i = 1; i < 10 && lowest > 4; i++) {
2294: /* MUTANT (rep_const) */	for (i = -1; i < 10 && lowest > 4; i++) {
2294: /* MUTANT (rep_const) */	for (i = 0; i < 0 && lowest > 4; i++) {
2294: /* MUTANT (rep_const) */	for (i = 0; i < 1 && lowest > 4; i++) {
2294: /* MUTANT (rep_const) */	for (i = 0; i < -1 && lowest > 4; i++) {
2294: /* MUTANT (rep_const) */	for (i = 0; i < ((10)+1) && lowest > 4; i++) {
2294: /* MUTANT (rep_const) */	for (i = 0; i < ((10)-1) && lowest > 4; i++) {
2294: /* MUTANT (rep_const) */	for (i = 0; i < 10 && lowest > 0; i++) {
2294: /* MUTANT (rep_const) */	for (i = 0; i < 10 && lowest > 1; i++) {
2294: /* MUTANT (rep_const) */	for (i = 0; i < 10 && lowest > -1; i++) {
2294: /* MUTANT (rep_const) */	for (i = 0; i < 10 && lowest > ((4)+1); i++) {
2294: /* MUTANT (rep_const) */	for (i = 0; i < 10 && lowest > ((4)-1); i++) {
2295: /* MUTANT (del_stmt) */ /* 		dev->bucket_finder++; */ 
2295: /* MUTANT (rep_op) */		dev->bucket_finder--;
2296: /* MUTANT (del_stmt) */ /* 		dev->bucket_finder %= YAFFS_NOBJECT_BUCKETS; */ 
2296: /* MUTANT (rep_op) */		dev->bucket_finder += YAFFS_NOBJECT_BUCKETS;
2296: /* MUTANT (rep_op) */		dev->bucket_finder -= YAFFS_NOBJECT_BUCKETS;
2296: /* MUTANT (rep_op) */		dev->bucket_finder *= YAFFS_NOBJECT_BUCKETS;
2297: /* MUTANT (rep_op) */		if (dev->obj_bucket[dev->bucket_finder].count <= lowest) {
2297: /* MUTANT (rep_op) */		if (dev->obj_bucket[dev->bucket_finder].count > lowest) {
2297: /* MUTANT (rep_op) */		if (dev->obj_bucket[dev->bucket_finder].count >= lowest) {
2297: /* MUTANT (rep_op) */		if (dev->obj_bucket[dev->bucket_finder].count == lowest) {
2297: /* MUTANT (rep_op) */		if (dev->obj_bucket[dev->bucket_finder].count != lowest) {
2297: /* MUTANT (negate) */		if(! (dev->obj_bucket[dev->bucket_finder].count < lowest)) {
2298: /* MUTANT (del_stmt) */ /* 			lowest = dev->obj_bucket[dev->bucket_finder].count; */ 
2299: /* MUTANT (del_stmt) */ /* 			l = dev->bucket_finder; */ 
2308: /* MUTANT (del_stmt) */ /* 	int bucket = yaffs_find_nice_bucket(dev); */ 
2309: /* MUTANT (del_stmt) */ /* 	int found = 0; */ 
2309: /* MUTANT (rep_const) */	int found = 1;
2309: /* MUTANT (rep_const) */	int found = -1;
2310: /* MUTANT (del_stmt) */ /* 	struct list_head *i; */ 
2311: /* MUTANT (del_stmt) */ /* 	u32 n = (u32) bucket; */ 
2317: /* MUTANT (negate) */	while(! (!found)) {
2318: /* MUTANT (del_stmt) */ /* 		found = 1; */ 
2318: /* MUTANT (rep_const) */		found = 0;
2318: /* MUTANT (rep_const) */		found = -1;
2318: /* MUTANT (rep_const) */		found = ((1)+1);
2319: /* MUTANT (del_stmt) */ /* 		n += YAFFS_NOBJECT_BUCKETS; */ 
2319: /* MUTANT (rep_op) */		n -= YAFFS_NOBJECT_BUCKETS;
2319: /* MUTANT (rep_op) */		n *= YAFFS_NOBJECT_BUCKETS;
2319: /* MUTANT (rep_op) */		n %= YAFFS_NOBJECT_BUCKETS;
2320: /* MUTANT (rep_op) */		if (1 && dev->obj_bucket[bucket].count > 0) {
2320: /* MUTANT (rep_op) */		if (1 || dev->obj_bucket[bucket].count <= 0) {
2320: /* MUTANT (rep_op) */		if (1 || dev->obj_bucket[bucket].count < 0) {
2320: /* MUTANT (rep_op) */		if (1 || dev->obj_bucket[bucket].count >= 0) {
2320: /* MUTANT (rep_op) */		if (1 || dev->obj_bucket[bucket].count == 0) {
2320: /* MUTANT (rep_op) */		if (1 || dev->obj_bucket[bucket].count != 0) {
2320: /* MUTANT (rep_const) */		if (0 || dev->obj_bucket[bucket].count > 0) {
2320: /* MUTANT (rep_const) */		if (-1 || dev->obj_bucket[bucket].count > 0) {
2320: /* MUTANT (rep_const) */		if (((1)+1) || dev->obj_bucket[bucket].count > 0) {
2320: /* MUTANT (rep_const) */		if (1 || dev->obj_bucket[bucket].count > 1) {
2320: /* MUTANT (rep_const) */		if (1 || dev->obj_bucket[bucket].count > -1) {
2320: /* MUTANT (negate) */		if(! (1 || dev->obj_bucket[bucket].count > 0)) {
2323: /* MUTANT (rep_op) */				if (i || list_entry(i, struct yaffs_obj,
2324: /* MUTANT (rep_op) */						    hash_link)->obj_id != n) {
2325: /* MUTANT (del_stmt) */ /* 					found = 0; */ 
2325: /* MUTANT (rep_const) */					found = 1;
2325: /* MUTANT (rep_const) */					found = -1;
2335: /* MUTANT (del_stmt) */ /* 	int bucket = yaffs_hash_fn(in->obj_id); */ 
2336: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev = in->my_dev; */ 
2338: /* MUTANT (del_stmt) */ /* 	list_add(&in->hash_link, &dev->obj_bucket[bucket].list); */ 
2339: /* MUTANT (del_stmt) */ /* 	dev->obj_bucket[bucket].count++; */ 
2339: /* MUTANT (rep_op) */	dev->obj_bucket[bucket].count--;
2344: /* MUTANT (del_stmt) */ /* 	int bucket = yaffs_hash_fn(number); */ 
2345: /* MUTANT (del_stmt) */ /* 	struct list_head *i; */ 
2346: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *in; */ 
2350: /* MUTANT (del_stmt) */ /* 		in = list_entry(i, struct yaffs_obj, hash_link); */ 
2351: /* MUTANT (rep_op) */		if (in->obj_id != number) {
2351: /* MUTANT (negate) */		if(! (in->obj_id == number)) {
2353: /* MUTANT (negate) */			if(! (in->defered_free))
2355: /* MUTANT (del_stmt) */ /* 			return in; */ 
2365: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *the_obj = NULL; */ 
2366: /* MUTANT (del_stmt) */ /* 	struct yaffs_tnode *tn = NULL; */ 
2368: /* MUTANT (rep_op) */	if (number <= 0)
2368: /* MUTANT (rep_op) */	if (number > 0)
2368: /* MUTANT (rep_op) */	if (number >= 0)
2368: /* MUTANT (rep_op) */	if (number == 0)
2368: /* MUTANT (rep_op) */	if (number != 0)
2368: /* MUTANT (rep_const) */	if (number < 1)
2368: /* MUTANT (rep_const) */	if (number < -1)
2368: /* MUTANT (negate) */	if(! (number < 0))
2371: /* MUTANT (rep_op) */	if (type != YAFFS_OBJECT_TYPE_FILE) {
2371: /* MUTANT (negate) */	if(! (type == YAFFS_OBJECT_TYPE_FILE)) {
2372: /* MUTANT (del_stmt) */ /* 		tn = yaffs_get_tnode(dev); */ 
2373: /* MUTANT (negate) */		if(! (!tn))
2378: /* MUTANT (negate) */	if(! (!the_obj)) {
2379: /* MUTANT (negate) */		if(! (tn))
2381: /* MUTANT (del_stmt) */ /* 		return NULL; */ 
2384: /* MUTANT (rep_const) */	the_obj->fake = 1;
2384: /* MUTANT (rep_const) */	the_obj->fake = -1;
2385: /* MUTANT (del_stmt) */ /* 	the_obj->rename_allowed = 1; */ 
2385: /* MUTANT (rep_const) */	the_obj->rename_allowed = 0;
2385: /* MUTANT (rep_const) */	the_obj->rename_allowed = -1;
2385: /* MUTANT (rep_const) */	the_obj->rename_allowed = ((1)+1);
2386: /* MUTANT (del_stmt) */ /* 	the_obj->unlink_allowed = 1; */ 
2386: /* MUTANT (rep_const) */	the_obj->unlink_allowed = 0;
2386: /* MUTANT (rep_const) */	the_obj->unlink_allowed = -1;
2386: /* MUTANT (rep_const) */	the_obj->unlink_allowed = ((1)+1);
2387: /* MUTANT (del_stmt) */ /* 	the_obj->obj_id = number; */ 
2388: /* MUTANT (del_stmt) */ /* 	yaffs_hash_obj(the_obj); */ 
2389: /* MUTANT (del_stmt) */ /* 	the_obj->variant_type = type; */ 
2390: /* MUTANT (del_stmt) */ /* 	yaffs_load_current_time(the_obj, 1, 1); */ 
2390: /* MUTANT (rep_const) */	yaffs_load_current_time(the_obj, 0, 1);
2390: /* MUTANT (rep_const) */	yaffs_load_current_time(the_obj, -1, 1);
2390: /* MUTANT (rep_const) */	yaffs_load_current_time(the_obj, ((1)+1), 1);
2390: /* MUTANT (rep_const) */	yaffs_load_current_time(the_obj, 1, 0);
2390: /* MUTANT (rep_const) */	yaffs_load_current_time(the_obj, 1, -1);
2390: /* MUTANT (rep_const) */	yaffs_load_current_time(the_obj, 1, ((1)+1));
2394: /* MUTANT (rep_const) */		the_obj->variant.file_variant.file_size = 1;
2394: /* MUTANT (rep_const) */		the_obj->variant.file_variant.file_size = -1;
2395: /* MUTANT (del_stmt) */ /* 		the_obj->variant.file_variant.scanned_size = 0; */ 
2395: /* MUTANT (rep_const) */		the_obj->variant.file_variant.scanned_size = 1;
2395: /* MUTANT (rep_const) */		the_obj->variant.file_variant.scanned_size = -1;
2396: /* MUTANT (del_stmt) */ /* 		the_obj->variant.file_variant.shrink_size = ~0; */  /* max */
2396: /* MUTANT (rep_const) */		the_obj->variant.file_variant.shrink_size = ~1; /* max */
2396: /* MUTANT (rep_const) */		the_obj->variant.file_variant.shrink_size = ~-1; /* max */
2397: /* MUTANT (del_stmt) */ /* 		the_obj->variant.file_variant.top_level = 0; */ 
2397: /* MUTANT (rep_const) */		the_obj->variant.file_variant.top_level = 1;
2397: /* MUTANT (rep_const) */		the_obj->variant.file_variant.top_level = -1;
2398: /* MUTANT (del_stmt) */ /* 		the_obj->variant.file_variant.top = tn; */ 
2399: /* MUTANT (del_stmt) */ /* 		break; */ 
2402: /* MUTANT (del_stmt) */ /* 		INIT_LIST_HEAD(&the_obj->variant.dir_variant.dirty); */ 
2403: /* MUTANT (del_stmt) */ /* 		break; */ 
2423: /* MUTANT (negate) */	if(! (!obj))
2426: /* MUTANT (del_stmt) */ /* 	obj->fake = 1; */ 	/* it is fake so it might not use NAND */
2426: /* MUTANT (rep_const) */	obj->fake = 0;	/* it is fake so it might not use NAND */
2426: /* MUTANT (rep_const) */	obj->fake = -1;	/* it is fake so it might not use NAND */
2426: /* MUTANT (rep_const) */	obj->fake = ((1)+1);	/* it is fake so it might not use NAND */
2427: /* MUTANT (del_stmt) */ /* 	obj->rename_allowed = 0; */ 
2427: /* MUTANT (rep_const) */	obj->rename_allowed = 1;
2427: /* MUTANT (rep_const) */	obj->rename_allowed = -1;
2428: /* MUTANT (del_stmt) */ /* 	obj->unlink_allowed = 0; */ 
2428: /* MUTANT (rep_const) */	obj->unlink_allowed = 1;
2428: /* MUTANT (rep_const) */	obj->unlink_allowed = -1;
2429: /* MUTANT (del_stmt) */ /* 	obj->deleted = 0; */ 
2429: /* MUTANT (rep_const) */	obj->deleted = 1;
2429: /* MUTANT (rep_const) */	obj->deleted = -1;
2430: /* MUTANT (del_stmt) */ /* 	obj->unlinked = 0; */ 
2430: /* MUTANT (rep_const) */	obj->unlinked = 1;
2430: /* MUTANT (rep_const) */	obj->unlinked = -1;
2431: /* MUTANT (del_stmt) */ /* 	obj->yst_mode = mode; */ 
2432: /* MUTANT (del_stmt) */ /* 	obj->my_dev = dev; */ 
2433: /* MUTANT (del_stmt) */ /* 	obj->hdr_chunk = 0; */ 	/* Not a valid chunk. */
2433: /* MUTANT (rep_const) */	obj->hdr_chunk = 1;	/* Not a valid chunk. */
2433: /* MUTANT (rep_const) */	obj->hdr_chunk = -1;	/* Not a valid chunk. */
2434: /* MUTANT (del_stmt) */ /* 	return obj; */ 
2441: /* MUTANT (del_stmt) */ /* 	int i; */ 
2443: /* MUTANT (del_stmt) */ /* 	dev->n_obj = 0; */ 
2443: /* MUTANT (rep_const) */	dev->n_obj = 1;
2443: /* MUTANT (rep_const) */	dev->n_obj = -1;
2444: /* MUTANT (del_stmt) */ /* 	dev->n_tnodes = 0; */ 
2444: /* MUTANT (rep_const) */	dev->n_tnodes = 1;
2444: /* MUTANT (rep_const) */	dev->n_tnodes = -1;
2445: /* MUTANT (del_stmt) */ /* 	yaffs_init_raw_tnodes_and_objs(dev); */ 
2447: /* MUTANT (rep_op) */	for (i = 0; i <= YAFFS_NOBJECT_BUCKETS; i++) {
2447: /* MUTANT (rep_op) */	for (i = 0; i > YAFFS_NOBJECT_BUCKETS; i++) {
2447: /* MUTANT (rep_op) */	for (i = 0; i >= YAFFS_NOBJECT_BUCKETS; i++) {
2447: /* MUTANT (rep_op) */	for (i = 0; i == YAFFS_NOBJECT_BUCKETS; i++) {
2447: /* MUTANT (rep_op) */	for (i = 0; i != YAFFS_NOBJECT_BUCKETS; i++) {
2447: /* MUTANT (rep_op) */	for (i = 0; i < YAFFS_NOBJECT_BUCKETS; i--) {
2447: /* MUTANT (rep_const) */	for (i = 1; i < YAFFS_NOBJECT_BUCKETS; i++) {
2447: /* MUTANT (rep_const) */	for (i = -1; i < YAFFS_NOBJECT_BUCKETS; i++) {
2448: /* MUTANT (del_stmt) */ /* 		INIT_LIST_HEAD(&dev->obj_bucket[i].list); */ 
2449: /* MUTANT (del_stmt) */ /* 		dev->obj_bucket[i].count = 0; */ 
2449: /* MUTANT (rep_const) */		dev->obj_bucket[i].count = 1;
2449: /* MUTANT (rep_const) */		dev->obj_bucket[i].count = -1;
2457: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *the_obj = NULL; */ 
2459: /* MUTANT (rep_op) */	if (number <= 0)
2459: /* MUTANT (rep_op) */	if (number < 0)
2459: /* MUTANT (rep_op) */	if (number >= 0)
2459: /* MUTANT (rep_op) */	if (number == 0)
2459: /* MUTANT (rep_op) */	if (number != 0)
2459: /* MUTANT (rep_const) */	if (number > 1)
2459: /* MUTANT (rep_const) */	if (number > -1)
2459: /* MUTANT (negate) */	if(! (number > 0))
2462: /* MUTANT (negate) */	if(! (!the_obj))
2465: /* MUTANT (del_stmt) */ /* 	return the_obj; */ 
2471: /* MUTANT (del_stmt) */ /* 	YCHAR *new_str = NULL; */ 
2472: /* MUTANT (del_stmt) */ /* 	int len; */ 
2474: /* MUTANT (negate) */	if(! (!str))
2477: /* MUTANT (del_stmt) */ /* 	len = mystrnlen(str, YAFFS_MAX_ALIAS_LENGTH); */ 
2478: /* MUTANT (del_stmt) */ /* 	new_str = kmalloc((len + 1) * sizeof(YCHAR), GFP_NOFS); */ 
2478: /* MUTANT (rep_op) */	new_str = kmalloc((len - 1) * sizeof(YCHAR), GFP_NOFS);
2478: /* MUTANT (rep_op) */	new_str = kmalloc((len * 1) * sizeof(YCHAR), GFP_NOFS);
2478: /* MUTANT (rep_op) */	new_str = kmalloc((len % 1) * sizeof(YCHAR), GFP_NOFS);
2478: /* MUTANT (rep_const) */	new_str = kmalloc((len + 0) * sizeof(YCHAR), GFP_NOFS);
2478: /* MUTANT (rep_const) */	new_str = kmalloc((len + -1) * sizeof(YCHAR), GFP_NOFS);
2478: /* MUTANT (rep_const) */	new_str = kmalloc((len + ((1)+1)) * sizeof(YCHAR), GFP_NOFS);
2479: /* MUTANT (negate) */	if(! (new_str)) {
2480: /* MUTANT (del_stmt) */ /* 		mystrncpy(new_str, str, len); */ 
2481: /* MUTANT (del_stmt) */ /* 		new_str[len] = 0; */ 
2481: /* MUTANT (rep_const) */		new_str[len] = 1;
2481: /* MUTANT (rep_const) */		new_str[len] = -1;
2504: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev; */ 
2506: /* MUTANT (negate) */	if(! (!obj))
2508: /* MUTANT (del_stmt) */ /* 	dev = obj->my_dev; */ 
2509: /* MUTANT (del_stmt) */ /* 	obj->dirty = 1; */ 
2509: /* MUTANT (rep_const) */	obj->dirty = 0;
2509: /* MUTANT (rep_const) */	obj->dirty = -1;
2509: /* MUTANT (rep_const) */	obj->dirty = ((1)+1);
2510: /* MUTANT (del_stmt) */ /* 	yaffs_load_current_time(obj, 0, 1); */ 
2510: /* MUTANT (rep_const) */	yaffs_load_current_time(obj, 1, 1);
2510: /* MUTANT (rep_const) */	yaffs_load_current_time(obj, -1, 1);
2510: /* MUTANT (rep_const) */	yaffs_load_current_time(obj, 0, 0);
2510: /* MUTANT (rep_const) */	yaffs_load_current_time(obj, 0, -1);
2510: /* MUTANT (rep_const) */	yaffs_load_current_time(obj, 0, ((1)+1));
2511: /* MUTANT (negate) */	if(! (dev->param.defered_dir_update)) {
2512: /* MUTANT (del_stmt) */ /* 		struct list_head *link = &obj->variant.dir_variant.dirty; */ 
2514: /* MUTANT (negate) */		if(! (list_empty(link))) {
2515: /* MUTANT (del_stmt) */ /* 			list_add(link, &dev->dirty_dirs); */ 
2522: /* MUTANT (del_stmt) */ /* 		yaffs_update_oh(obj, NULL, 0, 0, 0, NULL); */ 
2522: /* MUTANT (rep_const) */		yaffs_update_oh(obj, NULL, 1, 0, 0, NULL);
2522: /* MUTANT (rep_const) */		yaffs_update_oh(obj, NULL, -1, 0, 0, NULL);
2522: /* MUTANT (rep_const) */		yaffs_update_oh(obj, NULL, 0, 1, 0, NULL);
2522: /* MUTANT (rep_const) */		yaffs_update_oh(obj, NULL, 0, -1, 0, NULL);
2522: /* MUTANT (rep_const) */		yaffs_update_oh(obj, NULL, 0, 0, 1, NULL);
2522: /* MUTANT (rep_const) */		yaffs_update_oh(obj, NULL, 0, 0, -1, NULL);
2528: /* MUTANT (del_stmt) */ /* 	struct list_head *link; */ 
2529: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj; */ 
2530: /* MUTANT (del_stmt) */ /* 	struct yaffs_dir_var *d_s; */ 
2531: /* MUTANT (del_stmt) */ /* 	union yaffs_obj_var *o_v; */ 
2533: /* MUTANT (del_stmt) */ /* 	yaffs_trace(YAFFS_TRACE_BACKGROUND, "Update dirty directories"); */ 
2535: /* MUTANT (negate) */	while(! (!list_empty(&dev->dirty_dirs))) {
2536: /* MUTANT (del_stmt) */ /* 		link = dev->dirty_dirs.next; */ 
2537: /* MUTANT (del_stmt) */ /* 		list_del_init(link); */ 
2539: /* MUTANT (del_stmt) */ /* 		d_s = list_entry(link, struct yaffs_dir_var, dirty); */ 
2540: /* MUTANT (del_stmt) */ /* 		o_v = list_entry(d_s, union yaffs_obj_var, dir_variant); */ 
2541: /* MUTANT (del_stmt) */ /* 		obj = list_entry(o_v, struct yaffs_obj, variant); */ 
2546: /* MUTANT (negate) */		if(! (obj->dirty))
2547: /* MUTANT (rep_const) */			yaffs_update_oh(obj, NULL, 1, 0, 0, NULL);
2547: /* MUTANT (rep_const) */			yaffs_update_oh(obj, NULL, -1, 0, 0, NULL);
2547: /* MUTANT (rep_const) */			yaffs_update_oh(obj, NULL, 0, 1, 0, NULL);
2547: /* MUTANT (rep_const) */			yaffs_update_oh(obj, NULL, 0, -1, 0, NULL);
2547: /* MUTANT (rep_const) */			yaffs_update_oh(obj, NULL, 0, 0, 1, NULL);
2547: /* MUTANT (rep_const) */			yaffs_update_oh(obj, NULL, 0, 0, -1, NULL);
2567: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *in; */ 
2568: /* MUTANT (del_stmt) */ /* 	YCHAR *str = NULL; */ 
2569: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev = parent->my_dev; */ 
2573: /* MUTANT (negate) */	if(! (yaffs_find_by_name(parent, name)))
2576: /* MUTANT (rep_op) */	if (type != YAFFS_OBJECT_TYPE_SYMLINK) {
2576: /* MUTANT (negate) */	if(! (type == YAFFS_OBJECT_TYPE_SYMLINK)) {
2577: /* MUTANT (del_stmt) */ /* 		str = yaffs_clone_str(alias_str); */ 
2578: /* MUTANT (negate) */		if(! (!str))
2582: /* MUTANT (rep_const) */	in = yaffs_new_obj(dev, 0, type);
2582: /* MUTANT (rep_const) */	in = yaffs_new_obj(dev, 1, type);
2582: /* MUTANT (rep_const) */	in = yaffs_new_obj(dev, ((-1)+1), type);
2582: /* MUTANT (rep_const) */	in = yaffs_new_obj(dev, ((-1)-1), type);
2584: /* MUTANT (negate) */	if(! (!in)) {
2585: /* MUTANT (del_stmt) */ /* 		kfree(str); */ 
2586: /* MUTANT (del_stmt) */ /* 		return NULL; */ 
2589: /* MUTANT (rep_const) */	in->hdr_chunk = 1;
2589: /* MUTANT (rep_const) */	in->hdr_chunk = -1;
2590: /* MUTANT (del_stmt) */ /* 	in->valid = 1; */ 
2590: /* MUTANT (rep_const) */	in->valid = 0;
2590: /* MUTANT (rep_const) */	in->valid = -1;
2590: /* MUTANT (rep_const) */	in->valid = ((1)+1);
2591: /* MUTANT (del_stmt) */ /* 	in->variant_type = type; */ 
2593: /* MUTANT (del_stmt) */ /* 	in->yst_mode = mode; */ 
2595: /* MUTANT (del_stmt) */ /* 	yaffs_attribs_init(in, gid, uid, rdev); */ 
2597: /* MUTANT (del_stmt) */ /* 	in->n_data_chunks = 0; */ 
2597: /* MUTANT (rep_const) */	in->n_data_chunks = 1;
2597: /* MUTANT (rep_const) */	in->n_data_chunks = -1;
2599: /* MUTANT (del_stmt) */ /* 	yaffs_set_obj_name(in, name); */ 
2600: /* MUTANT (del_stmt) */ /* 	in->dirty = 1; */ 
2600: /* MUTANT (rep_const) */	in->dirty = 0;
2600: /* MUTANT (rep_const) */	in->dirty = -1;
2600: /* MUTANT (rep_const) */	in->dirty = ((1)+1);
2602: /* MUTANT (del_stmt) */ /* 	yaffs_add_obj_to_dir(parent, in); */ 
2604: /* MUTANT (del_stmt) */ /* 	in->my_dev = parent->my_dev; */ 
2609: /* MUTANT (del_stmt) */ /* 		break; */ 
2612: /* MUTANT (del_stmt) */ /* 		in->variant.hardlink_variant.equiv_id = equiv_obj->obj_id; */ 
2613: /* MUTANT (del_stmt) */ /* 		list_add(&in->hard_links, &equiv_obj->hard_links); */ 
2614: /* MUTANT (del_stmt) */ /* 		break; */ 
2623: /* MUTANT (rep_op) */	if (yaffs_update_oh(in, name, 0, 0, 0, NULL) <= 0) {
2623: /* MUTANT (rep_op) */	if (yaffs_update_oh(in, name, 0, 0, 0, NULL) > 0) {
2623: /* MUTANT (rep_op) */	if (yaffs_update_oh(in, name, 0, 0, 0, NULL) >= 0) {
2623: /* MUTANT (rep_op) */	if (yaffs_update_oh(in, name, 0, 0, 0, NULL) == 0) {
2623: /* MUTANT (rep_op) */	if (yaffs_update_oh(in, name, 0, 0, 0, NULL) != 0) {
2623: /* MUTANT (rep_const) */	if (yaffs_update_oh(in, name, 1, 0, 0, NULL) < 0) {
2623: /* MUTANT (rep_const) */	if (yaffs_update_oh(in, name, -1, 0, 0, NULL) < 0) {
2623: /* MUTANT (rep_const) */	if (yaffs_update_oh(in, name, 0, 1, 0, NULL) < 0) {
2623: /* MUTANT (rep_const) */	if (yaffs_update_oh(in, name, 0, -1, 0, NULL) < 0) {
2623: /* MUTANT (rep_const) */	if (yaffs_update_oh(in, name, 0, 0, 1, NULL) < 0) {
2623: /* MUTANT (rep_const) */	if (yaffs_update_oh(in, name, 0, 0, -1, NULL) < 0) {
2623: /* MUTANT (rep_const) */	if (yaffs_update_oh(in, name, 0, 0, 0, NULL) < 1) {
2623: /* MUTANT (rep_const) */	if (yaffs_update_oh(in, name, 0, 0, 0, NULL) < -1) {
2623: /* MUTANT (negate) */	if(! (yaffs_update_oh(in, name, 0, 0, 0, NULL) < 0)) {
2625: /* MUTANT (del_stmt) */ /* 		yaffs_del_obj(in); */ 
2626: /* MUTANT (del_stmt) */ /* 		in = NULL; */ 
2629: /* MUTANT (negate) */	if(! (in))
2632: /* MUTANT (del_stmt) */ /* 	return in; */ 
2640: /* MUTANT (rep_const) */				uid, gid, NULL, NULL, 1);
2640: /* MUTANT (rep_const) */				uid, gid, NULL, NULL, -1);
2647: /* MUTANT (rep_const) */				mode, uid, gid, NULL, NULL, 1);
2647: /* MUTANT (rep_const) */				mode, uid, gid, NULL, NULL, -1);
2663: /* MUTANT (rep_const) */				uid, gid, NULL, alias, 1);
2663: /* MUTANT (rep_const) */				uid, gid, NULL, alias, -1);
2671: /* MUTANT (del_stmt) */ /* 	equiv_obj = yaffs_get_equivalent_obj(equiv_obj); */ 
2674: /* MUTANT (rep_const) */			parent, name, 1, 0, 0,
2674: /* MUTANT (rep_const) */			parent, name, -1, 0, 0,
2674: /* MUTANT (rep_const) */			parent, name, 0, 1, 0,
2674: /* MUTANT (rep_const) */			parent, name, 0, -1, 0,
2674: /* MUTANT (rep_const) */			parent, name, 0, 0, 1,
2674: /* MUTANT (rep_const) */			parent, name, 0, 0, -1,
2675: /* MUTANT (rep_const) */			equiv_obj, NULL, 1))
2675: /* MUTANT (rep_const) */			equiv_obj, NULL, -1))
2678: /* MUTANT (del_stmt) */ /* 	return NULL; */ 
2688: /* MUTANT (rep_op) */	if (dev->block_info_alt || dev->block_info)
2688: /* MUTANT (negate) */	if(! (dev->block_info_alt && dev->block_info))
2693: /* MUTANT (del_stmt) */ /* 	dev->block_info_alt = 0; */ 
2693: /* MUTANT (rep_const) */	dev->block_info_alt = 1;
2693: /* MUTANT (rep_const) */	dev->block_info_alt = -1;
2695: /* MUTANT (del_stmt) */ /* 	dev->block_info = NULL; */ 
2697: /* MUTANT (rep_op) */	if (dev->chunk_bits_alt || dev->chunk_bits)
2697: /* MUTANT (negate) */	if(! (dev->chunk_bits_alt && dev->chunk_bits))
2701: /* MUTANT (del_stmt) */ /* 	dev->chunk_bits_alt = 0; */ 
2701: /* MUTANT (rep_const) */	dev->chunk_bits_alt = 1;
2701: /* MUTANT (rep_const) */	dev->chunk_bits_alt = -1;
2702: /* MUTANT (del_stmt) */ /* 	dev->chunk_bits = NULL; */ 
2707: /* MUTANT (del_stmt) */ /* 	int n_blocks = dev->internal_end_block - dev->internal_start_block + 1; */ 
2707: /* MUTANT (rep_op) */	int n_blocks = dev->internal_end_block - dev->internal_start_block - 1;
2707: /* MUTANT (rep_op) */	int n_blocks = dev->internal_end_block - dev->internal_start_block * 1;
2707: /* MUTANT (rep_op) */	int n_blocks = dev->internal_end_block - dev->internal_start_block % 1;
2707: /* MUTANT (rep_const) */	int n_blocks = dev->internal_end_block - dev->internal_start_block + 0;
2707: /* MUTANT (rep_const) */	int n_blocks = dev->internal_end_block - dev->internal_start_block + -1;
2707: /* MUTANT (rep_const) */	int n_blocks = dev->internal_end_block - dev->internal_start_block + ((1)+1);
2709: /* MUTANT (del_stmt) */ /* 	dev->block_info = NULL; */ 
2710: /* MUTANT (del_stmt) */ /* 	dev->chunk_bits = NULL; */ 
2711: /* MUTANT (del_stmt) */ /* 	dev->alloc_block = -1; */ 	/* force it to get a new one */
2711: /* MUTANT (rep_const) */	dev->alloc_block = 0;	/* force it to get a new one */
2711: /* MUTANT (rep_const) */	dev->alloc_block = 1;	/* force it to get a new one */
2711: /* MUTANT (rep_const) */	dev->alloc_block = ((-1)+1);	/* force it to get a new one */
2711: /* MUTANT (rep_const) */	dev->alloc_block = ((-1)-1);	/* force it to get a new one */
2716: /* MUTANT (negate) */	if(! (!dev->block_info)) {
2719: /* MUTANT (del_stmt) */ /* 		dev->block_info_alt = 1; */ 
2719: /* MUTANT (rep_const) */		dev->block_info_alt = 0;
2719: /* MUTANT (rep_const) */		dev->block_info_alt = -1;
2719: /* MUTANT (rep_const) */		dev->block_info_alt = ((1)+1);
2721: /* MUTANT (del_stmt) */ /* 		dev->block_info_alt = 0; */ 
2721: /* MUTANT (rep_const) */		dev->block_info_alt = 1;
2721: /* MUTANT (rep_const) */		dev->block_info_alt = -1;
2724: /* MUTANT (negate) */	if(! (!dev->block_info))
2728: /* MUTANT (del_stmt) */ /* 	dev->chunk_bit_stride = (dev->param.chunks_per_block + 7) / 8; */ 
2728: /* MUTANT (rep_op) */	dev->chunk_bit_stride = (dev->param.chunks_per_block - 7) / 8;
2728: /* MUTANT (rep_op) */	dev->chunk_bit_stride = (dev->param.chunks_per_block * 7) / 8;
2728: /* MUTANT (rep_op) */	dev->chunk_bit_stride = (dev->param.chunks_per_block % 7) / 8;
2728: /* MUTANT (rep_const) */	dev->chunk_bit_stride = (dev->param.chunks_per_block + 0) / 8;
2728: /* MUTANT (rep_const) */	dev->chunk_bit_stride = (dev->param.chunks_per_block + 1) / 8;
2728: /* MUTANT (rep_const) */	dev->chunk_bit_stride = (dev->param.chunks_per_block + -1) / 8;
2728: /* MUTANT (rep_const) */	dev->chunk_bit_stride = (dev->param.chunks_per_block + ((7)+1)) / 8;
2728: /* MUTANT (rep_const) */	dev->chunk_bit_stride = (dev->param.chunks_per_block + ((7)-1)) / 8;
2728: /* MUTANT (rep_const) */	dev->chunk_bit_stride = (dev->param.chunks_per_block + 7) / 0;
2728: /* MUTANT (rep_const) */	dev->chunk_bit_stride = (dev->param.chunks_per_block + 7) / 1;
2728: /* MUTANT (rep_const) */	dev->chunk_bit_stride = (dev->param.chunks_per_block + 7) / -1;
2728: /* MUTANT (rep_const) */	dev->chunk_bit_stride = (dev->param.chunks_per_block + 7) / ((8)+1);
2728: /* MUTANT (rep_const) */	dev->chunk_bit_stride = (dev->param.chunks_per_block + 7) / ((8)-1);
2731: /* MUTANT (negate) */	if(! (!dev->chunk_bits)) {
2734: /* MUTANT (del_stmt) */ /* 		dev->chunk_bits_alt = 1; */ 
2734: /* MUTANT (rep_const) */		dev->chunk_bits_alt = 0;
2734: /* MUTANT (rep_const) */		dev->chunk_bits_alt = -1;
2734: /* MUTANT (rep_const) */		dev->chunk_bits_alt = ((1)+1);
2736: /* MUTANT (del_stmt) */ /* 		dev->chunk_bits_alt = 0; */ 
2736: /* MUTANT (rep_const) */		dev->chunk_bits_alt = 1;
2736: /* MUTANT (rep_const) */		dev->chunk_bits_alt = -1;
2738: /* MUTANT (negate) */	if(! (!dev->chunk_bits))
2742: /* MUTANT (del_stmt) */ /* 	mymemset(dev->block_info, 0, n_blocks * sizeof(struct yaffs_block_info)); */ 
2742: /* MUTANT (rep_const) */	mymemset(dev->block_info, 1, n_blocks * sizeof(struct yaffs_block_info));
2742: /* MUTANT (rep_const) */	mymemset(dev->block_info, -1, n_blocks * sizeof(struct yaffs_block_info));
2743: /* MUTANT (del_stmt) */ /* 	mymemset(dev->chunk_bits, 0, dev->chunk_bit_stride * n_blocks); */ 
2743: /* MUTANT (rep_const) */	mymemset(dev->chunk_bits, 1, dev->chunk_bit_stride * n_blocks);
2743: /* MUTANT (rep_const) */	mymemset(dev->chunk_bits, -1, dev->chunk_bit_stride * n_blocks);
2744: /* MUTANT (del_stmt) */ /* 	return YAFFS_OK; */ 
2748: /* MUTANT (del_stmt) */ /* 	return YAFFS_FAIL; */ 
2754: /* MUTANT (del_stmt) */ /* 	struct yaffs_block_info *bi = yaffs_get_block_info(dev, block_no); */ 
2755: /* MUTANT (del_stmt) */ /* 	int erased_ok = 0; */ 
2755: /* MUTANT (rep_const) */	int erased_ok = 1;
2755: /* MUTANT (rep_const) */	int erased_ok = -1;
2756: /* MUTANT (del_stmt) */ /* 	int i; */ 
2762: /* MUTANT (rep_op) */	yaffs_trace(YAFFS_TRACE_GC & YAFFS_TRACE_ERASE,
2767: /* MUTANT (del_stmt) */ /* 	yaffs2_clear_oldest_dirty_seq(dev, bi); */ 
2769: /* MUTANT (del_stmt) */ /* 	bi->block_state = YAFFS_BLOCK_STATE_DIRTY; */ 
2772: /* MUTANT (rep_op) */	if (block_no != dev->gc_block)
2772: /* MUTANT (negate) */	if(! (block_no == dev->gc_block))
2773: /* MUTANT (rep_const) */		dev->gc_block = 1;
2773: /* MUTANT (rep_const) */		dev->gc_block = -1;
2777: /* MUTANT (rep_op) */	if (block_no != dev->gc_dirtiest) {
2777: /* MUTANT (negate) */	if(! (block_no == dev->gc_dirtiest)) {
2778: /* MUTANT (del_stmt) */ /* 		dev->gc_dirtiest = 0; */ 
2778: /* MUTANT (rep_const) */		dev->gc_dirtiest = 1;
2778: /* MUTANT (rep_const) */		dev->gc_dirtiest = -1;
2779: /* MUTANT (del_stmt) */ /* 		dev->gc_pages_in_use = 0; */ 
2779: /* MUTANT (rep_const) */		dev->gc_pages_in_use = 1;
2779: /* MUTANT (rep_const) */		dev->gc_pages_in_use = -1;
2782: /* MUTANT (negate) */	if(! (!bi->needs_retiring)) {
2783: /* MUTANT (del_stmt) */ /* 		yaffs2_checkpt_invalidate(dev); */ 
2784: /* MUTANT (del_stmt) */ /* 		erased_ok = yaffs_erase_block(dev, block_no); */ 
2785: /* MUTANT (negate) */		if(! (!erased_ok)) {
2786: /* MUTANT (del_stmt) */ /* 			dev->n_erase_failures++; */ 
2786: /* MUTANT (rep_op) */			dev->n_erase_failures--;
2787: /* MUTANT (rep_op) */			yaffs_trace(YAFFS_TRACE_ERROR & YAFFS_TRACE_BAD_BLOCKS,
2793: /* MUTANT (rep_op) */	if (erased_ok ||
2794: /* MUTANT (rep_op) */	    ((yaffs_trace_mask & YAFFS_TRACE_ERASE) &&
2795: /* MUTANT (negate) */	     !yaffs_skip_verif(!ication(dev)))) {
2796: /* MUTANT (rep_op) */		for (i = 0; i <= dev->param.chunks_per_block; i++) {
2796: /* MUTANT (rep_op) */		for (i = 0; i > dev->param.chunks_per_block; i++) {
2796: /* MUTANT (rep_op) */		for (i = 0; i >= dev->param.chunks_per_block; i++) {
2796: /* MUTANT (rep_op) */		for (i = 0; i == dev->param.chunks_per_block; i++) {
2796: /* MUTANT (rep_op) */		for (i = 0; i != dev->param.chunks_per_block; i++) {
2796: /* MUTANT (rep_op) */		for (i = 0; i < dev->param.chunks_per_block; i--) {
2796: /* MUTANT (rep_const) */		for (i = 1; i < dev->param.chunks_per_block; i++) {
2796: /* MUTANT (rep_const) */		for (i = -1; i < dev->param.chunks_per_block; i++) {
2798: /* MUTANT (rep_op) */				block_no * dev->param.chunks_per_block - i)) {
2798: /* MUTANT (rep_op) */				block_no * dev->param.chunks_per_block * i)) {
2798: /* MUTANT (rep_op) */				block_no * dev->param.chunks_per_block % i)) {
2806: /* MUTANT (negate) */	if(! (!erased_ok)) {
2808: /* MUTANT (del_stmt) */ /* 		dev->n_free_chunks -= dev->param.chunks_per_block; */ 
2808: /* MUTANT (rep_op) */		dev->n_free_chunks += dev->param.chunks_per_block;
2808: /* MUTANT (rep_op) */		dev->n_free_chunks *= dev->param.chunks_per_block;
2808: /* MUTANT (rep_op) */		dev->n_free_chunks %= dev->param.chunks_per_block;
2809: /* MUTANT (del_stmt) */ /* 		yaffs_retire_block(dev, block_no); */ 
2810: /* MUTANT (rep_op) */		yaffs_trace(YAFFS_TRACE_ERROR & YAFFS_TRACE_BAD_BLOCKS,
2812: /* MUTANT (del_stmt) */ /* 		return; */ 
2817: /* MUTANT (del_stmt) */ /* 	bi->seq_number = 0; */ 
2817: /* MUTANT (rep_const) */	bi->seq_number = 1;
2817: /* MUTANT (rep_const) */	bi->seq_number = -1;
2818: /* MUTANT (del_stmt) */ /* 	dev->n_erased_blocks++; */ 
2818: /* MUTANT (rep_op) */	dev->n_erased_blocks--;
2819: /* MUTANT (del_stmt) */ /* 	bi->pages_in_use = 0; */ 
2819: /* MUTANT (rep_const) */	bi->pages_in_use = 1;
2819: /* MUTANT (rep_const) */	bi->pages_in_use = -1;
2820: /* MUTANT (del_stmt) */ /* 	bi->soft_del_pages = 0; */ 
2820: /* MUTANT (rep_const) */	bi->soft_del_pages = 1;
2820: /* MUTANT (rep_const) */	bi->soft_del_pages = -1;
2821: /* MUTANT (del_stmt) */ /* 	bi->has_shrink_hdr = 0; */ 
2821: /* MUTANT (rep_const) */	bi->has_shrink_hdr = 1;
2821: /* MUTANT (rep_const) */	bi->has_shrink_hdr = -1;
2822: /* MUTANT (del_stmt) */ /* 	bi->skip_erased_check = 1; */ 	/* Clean, so no need to check */
2822: /* MUTANT (rep_const) */	bi->skip_erased_check = 0;	/* Clean, so no need to check */
2822: /* MUTANT (rep_const) */	bi->skip_erased_check = -1;	/* Clean, so no need to check */
2822: /* MUTANT (rep_const) */	bi->skip_erased_check = ((1)+1);	/* Clean, so no need to check */
2823: /* MUTANT (del_stmt) */ /* 	bi->gc_prioritise = 0; */ 
2823: /* MUTANT (rep_const) */	bi->gc_prioritise = 1;
2823: /* MUTANT (rep_const) */	bi->gc_prioritise = -1;
2824: /* MUTANT (del_stmt) */ /* 	bi->has_summary=0; */ 
2824: /* MUTANT (rep_const) */	bi->has_summary=1;
2824: /* MUTANT (rep_const) */	bi->has_summary=-1;
2826: /* MUTANT (del_stmt) */ /* 	yaffs_clear_chunk_bits(dev, block_no); */ 
2828: /* MUTANT (del_stmt) */ /* 	yaffs_trace(YAFFS_TRACE_ERASE, "Erased block %d", block_no); */ 
2835: /* MUTANT (del_stmt) */ /* 	int new_chunk; */ 
2836: /* MUTANT (del_stmt) */ /* 	int mark_flash = 1; */ 
2836: /* MUTANT (rep_const) */	int mark_flash = 0;
2836: /* MUTANT (rep_const) */	int mark_flash = -1;
2836: /* MUTANT (rep_const) */	int mark_flash = ((1)+1);
2837: /* MUTANT (del_stmt) */ /* 	struct yaffs_ext_tags tags; */ 
2838: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *object; */ 
2839: /* MUTANT (del_stmt) */ /* 	int matching_chunk; */ 
2840: /* MUTANT (del_stmt) */ /* 	int ret_val = YAFFS_OK; */ 
2842: /* MUTANT (del_stmt) */ /* 	mymemset(&tags, 0, sizeof(tags)); */ 
2842: /* MUTANT (rep_const) */	mymemset(&tags, 1, sizeof(tags));
2842: /* MUTANT (rep_const) */	mymemset(&tags, -1, sizeof(tags));
2845: /* MUTANT (del_stmt) */ /* 	object = yaffs_find_by_number(dev, tags.obj_id); */ 
2852: /* MUTANT (rep_op) */	if (object || !yaffs_skip_verification(dev)) {
2852: /* MUTANT (negate) */	if(! (object && !yaffs_skip_verification(dev))) {
2853: /* MUTANT (rep_op) */		if (tags.chunk_id != 0)
2853: /* MUTANT (rep_const) */		if (tags.chunk_id == 1)
2853: /* MUTANT (rep_const) */		if (tags.chunk_id == -1)
2853: /* MUTANT (negate) */		if(! (tags.chunk_id == 0))
2856: /* MUTANT (negate) */		else if(! (object->soft_del))
2865: /* MUTANT (rep_op) */		if (old_chunk == matching_chunk)
2865: /* MUTANT (negate) */		if(! (old_chunk != matching_chunk))
2874: /* MUTANT (negate) */	if(! (!object)) {
2882: /* MUTANT (rep_op) */	if (object ||
2883: /* MUTANT (rep_op) */	    object->deleted ||
2884: /* MUTANT (rep_op) */	    object->soft_del || tags.chunk_id != 0) {
2884: /* MUTANT (rep_op) */	    object->soft_del && tags.chunk_id == 0) {
2884: /* MUTANT (rep_const) */	    object->soft_del && tags.chunk_id != 1) {
2884: /* MUTANT (rep_const) */	    object->soft_del && tags.chunk_id != -1) {
2899: /* MUTANT (del_stmt) */ /* 		dev->n_free_chunks--; */ 
2899: /* MUTANT (rep_op) */		dev->n_free_chunks++;
2900: /* MUTANT (del_stmt) */ /* 		bi->soft_del_pages--; */ 
2900: /* MUTANT (rep_op) */		bi->soft_del_pages++;
2902: /* MUTANT (del_stmt) */ /* 		object->n_data_chunks--; */ 
2902: /* MUTANT (rep_op) */		object->n_data_chunks++;
2903: /* MUTANT (rep_op) */		if (object->n_data_chunks < 0) {
2903: /* MUTANT (rep_op) */		if (object->n_data_chunks > 0) {
2903: /* MUTANT (rep_op) */		if (object->n_data_chunks >= 0) {
2903: /* MUTANT (rep_op) */		if (object->n_data_chunks == 0) {
2903: /* MUTANT (rep_op) */		if (object->n_data_chunks != 0) {
2903: /* MUTANT (rep_const) */		if (object->n_data_chunks <= 1) {
2903: /* MUTANT (rep_const) */		if (object->n_data_chunks <= -1) {
2903: /* MUTANT (negate) */		if(! (object->n_data_chunks <= 0)) {
2905: /* MUTANT (del_stmt) */ /* 			dev->gc_cleanup_list[dev->n_clean_ups] = tags.obj_id; */ 
2906: /* MUTANT (del_stmt) */ /* 			dev->n_clean_ups++; */ 
2906: /* MUTANT (rep_op) */			dev->n_clean_ups--;
2908: /* MUTANT (rep_const) */		mark_flash = 1;
2908: /* MUTANT (rep_const) */		mark_flash = -1;
2909: /* MUTANT (negate) */	} else if(! (object)) {
2917: /* MUTANT (del_stmt) */ /* 		tags.serial_number++; */ 
2917: /* MUTANT (rep_op) */		tags.serial_number--;
2918: /* MUTANT (del_stmt) */ /* 		dev->n_gc_copies++; */ 
2918: /* MUTANT (rep_op) */		dev->n_gc_copies--;
2920: /* MUTANT (rep_op) */		if (tags.chunk_id != 0) {
2920: /* MUTANT (rep_const) */		if (tags.chunk_id == 1) {
2920: /* MUTANT (rep_const) */		if (tags.chunk_id == -1) {
2920: /* MUTANT (negate) */		if(! (tags.chunk_id == 0)) {
2928: /* MUTANT (del_stmt) */ /* 			struct yaffs_obj_hdr *oh; */ 
2929: /* MUTANT (del_stmt) */ /* 			oh = (struct yaffs_obj_hdr *) buffer; */ 
2931: /* MUTANT (del_stmt) */ /* 			oh->is_shrink = 0; */ 
2931: /* MUTANT (rep_const) */			oh->is_shrink = 1;
2931: /* MUTANT (rep_const) */			oh->is_shrink = -1;
2932: /* MUTANT (del_stmt) */ /* 			tags.extra_is_shrink = 0; */ 
2932: /* MUTANT (rep_const) */			tags.extra_is_shrink = 1;
2932: /* MUTANT (rep_const) */			tags.extra_is_shrink = -1;
2933: /* MUTANT (del_stmt) */ /* 			oh->shadows_obj = 0; */ 
2933: /* MUTANT (rep_const) */			oh->shadows_obj = 1;
2933: /* MUTANT (rep_const) */			oh->shadows_obj = -1;
2934: /* MUTANT (del_stmt) */ /* 			oh->inband_shadowed_obj_id = 0; */ 
2934: /* MUTANT (rep_const) */			oh->inband_shadowed_obj_id = 1;
2934: /* MUTANT (rep_const) */			oh->inband_shadowed_obj_id = -1;
2935: /* MUTANT (del_stmt) */ /* 			tags.extra_shadows = 0; */ 
2935: /* MUTANT (rep_const) */			tags.extra_shadows = 1;
2935: /* MUTANT (rep_const) */			tags.extra_shadows = -1;
2938: /* MUTANT (rep_op) */			if (object->variant_type != YAFFS_OBJECT_TYPE_FILE) {
2938: /* MUTANT (negate) */			if(! (object->variant_type == YAFFS_OBJECT_TYPE_FILE)) {
2941: /* MUTANT (del_stmt) */ /* 				tags.extra_length = oh->file_size; */ 
2944: /* MUTANT (rep_const) */			yaffs_verify_oh(object, oh, &tags, 0);
2944: /* MUTANT (rep_const) */			yaffs_verify_oh(object, oh, &tags, -1);
2944: /* MUTANT (rep_const) */			yaffs_verify_oh(object, oh, &tags, ((1)+1));
2944: /* MUTANT (negate) */			yaffs_verif(!y_oh(object, oh, &tags, 1));
2946: /* MUTANT (rep_const) */			    yaffs_write_new_chunk(dev, (u8 *) oh, &tags, 0);
2946: /* MUTANT (rep_const) */			    yaffs_write_new_chunk(dev, (u8 *) oh, &tags, -1);
2946: /* MUTANT (rep_const) */			    yaffs_write_new_chunk(dev, (u8 *) oh, &tags, ((1)+1));
2949: /* MUTANT (rep_const) */			    yaffs_write_new_chunk(dev, buffer, &tags, 0);
2949: /* MUTANT (rep_const) */			    yaffs_write_new_chunk(dev, buffer, &tags, -1);
2949: /* MUTANT (rep_const) */			    yaffs_write_new_chunk(dev, buffer, &tags, ((1)+1));
2952: /* MUTANT (rep_op) */		if (new_chunk <= 0) {
2952: /* MUTANT (rep_op) */		if (new_chunk > 0) {
2952: /* MUTANT (rep_op) */		if (new_chunk >= 0) {
2952: /* MUTANT (rep_op) */		if (new_chunk == 0) {
2952: /* MUTANT (rep_op) */		if (new_chunk != 0) {
2952: /* MUTANT (rep_const) */		if (new_chunk < 1) {
2952: /* MUTANT (rep_const) */		if (new_chunk < -1) {
2952: /* MUTANT (negate) */		if(! (new_chunk < 0)) {
2953: /* MUTANT (del_stmt) */ /* 			ret_val = YAFFS_FAIL; */ 
2958: /* MUTANT (rep_op) */			if (tags.chunk_id != 0) {
2958: /* MUTANT (rep_const) */			if (tags.chunk_id == 1) {
2958: /* MUTANT (rep_const) */			if (tags.chunk_id == -1) {
2958: /* MUTANT (negate) */			if(! (tags.chunk_id == 0)) {
2960: /* MUTANT (del_stmt) */ /* 				object->hdr_chunk = new_chunk; */ 
2961: /* MUTANT (del_stmt) */ /* 				object->serial = tags.serial_number; */ 
2965: /* MUTANT (rep_const) */							new_chunk, 1);
2965: /* MUTANT (rep_const) */							new_chunk, -1);
2969: /* MUTANT (rep_op) */	if (ret_val != YAFFS_OK)
2969: /* MUTANT (negate) */	if(! (ret_val == YAFFS_OK))
2971: /* MUTANT (del_stmt) */ /* 	return ret_val; */ 
2976: /* MUTANT (del_stmt) */ /* 	int old_chunk; */ 
2977: /* MUTANT (del_stmt) */ /* 	int ret_val = YAFFS_OK; */ 
2978: /* MUTANT (del_stmt) */ /* 	int i; */ 
2979: /* MUTANT (del_stmt) */ /* 	int is_checkpt_block; */ 
2980: /* MUTANT (del_stmt) */ /* 	int max_copies; */ 
2981: /* MUTANT (del_stmt) */ /* 	int chunks_before = yaffs_get_erased_chunks(dev); */ 
2982: /* MUTANT (del_stmt) */ /* 	int chunks_after; */ 
2983: /* MUTANT (del_stmt) */ /* 	struct yaffs_block_info *bi = yaffs_get_block_info(dev, block); */ 
2985: /* MUTANT (del_stmt) */ /* 	is_checkpt_block = (bi->block_state == YAFFS_BLOCK_STATE_CHECKPOINT); */ 
2985: /* MUTANT (rep_op) */	is_checkpt_block = (bi->block_state != YAFFS_BLOCK_STATE_CHECKPOINT);
2994: /* MUTANT (rep_op) */	if (bi->block_state != YAFFS_BLOCK_STATE_FULL)
2994: /* MUTANT (negate) */	if(! (bi->block_state == YAFFS_BLOCK_STATE_FULL))
2997: /* MUTANT (del_stmt) */ /* 	bi->has_shrink_hdr = 0; */ 	/* clear the flag so that the block can erase */
2997: /* MUTANT (rep_const) */	bi->has_shrink_hdr = 1;	/* clear the flag so that the block can erase */
2997: /* MUTANT (rep_const) */	bi->has_shrink_hdr = -1;	/* clear the flag so that the block can erase */
2999: /* MUTANT (del_stmt) */ /* 	dev->gc_disable = 1; */ 
2999: /* MUTANT (rep_const) */	dev->gc_disable = 0;
2999: /* MUTANT (rep_const) */	dev->gc_disable = -1;
2999: /* MUTANT (rep_const) */	dev->gc_disable = ((1)+1);
3001: /* MUTANT (del_stmt) */ /* 	yaffs_summary_gc(dev, block); */ 
3003: /* MUTANT (rep_op) */	if (is_checkpt_block && !yaffs_still_some_chunks(dev, block)) {
3003: /* MUTANT (negate) */	if(! (is_checkpt_block || !yaffs_still_some_chunks(dev, block))) {
3007: /* MUTANT (del_stmt) */ /* 		yaffs_block_became_dirty(dev, block); */ 
3010: /* MUTANT (del_stmt) */ /* 		u8 *buffer = yaffs_get_temp_buffer(dev); */ 
3012: /* MUTANT (del_stmt) */ /* 		yaffs_verify_blk(dev, bi, block); */ 
3012: /* MUTANT (negate) */		yaffs_verif(!y_blk(dev, bi, block));
3014: /* MUTANT (del_stmt) */ /* 		max_copies = (whole_block) ? dev->param.chunks_per_block : 5; */ 
3014: /* MUTANT (rep_const) */		max_copies = (whole_block) ? dev->param.chunks_per_block : 0;
3014: /* MUTANT (rep_const) */		max_copies = (whole_block) ? dev->param.chunks_per_block : 1;
3014: /* MUTANT (rep_const) */		max_copies = (whole_block) ? dev->param.chunks_per_block : -1;
3014: /* MUTANT (rep_const) */		max_copies = (whole_block) ? dev->param.chunks_per_block : ((5)+1);
3014: /* MUTANT (rep_const) */		max_copies = (whole_block) ? dev->param.chunks_per_block : ((5)-1);
3015: /* MUTANT (del_stmt) */ /* 		old_chunk = block * dev->param.chunks_per_block + dev->gc_chunk; */ 
3015: /* MUTANT (rep_op) */		old_chunk = block * dev->param.chunks_per_block - dev->gc_chunk;
3015: /* MUTANT (rep_op) */		old_chunk = block * dev->param.chunks_per_block * dev->gc_chunk;
3015: /* MUTANT (rep_op) */		old_chunk = block * dev->param.chunks_per_block % dev->gc_chunk;
3018: /* MUTANT (rep_op) */		     ret_val != YAFFS_OK &&
3018: /* MUTANT (rep_op) */		     ret_val == YAFFS_OK ||
3019: /* MUTANT (rep_op) */		     dev->gc_chunk <= dev->param.chunks_per_block &&
3019: /* MUTANT (rep_op) */		     dev->gc_chunk > dev->param.chunks_per_block &&
3019: /* MUTANT (rep_op) */		     dev->gc_chunk >= dev->param.chunks_per_block &&
3019: /* MUTANT (rep_op) */		     dev->gc_chunk == dev->param.chunks_per_block &&
3019: /* MUTANT (rep_op) */		     dev->gc_chunk != dev->param.chunks_per_block &&
3019: /* MUTANT (rep_op) */		     dev->gc_chunk < dev->param.chunks_per_block ||
3020: /* MUTANT (rep_op) */		     (bi->block_state != YAFFS_BLOCK_STATE_COLLECTING) &&
3020: /* MUTANT (rep_op) */		     (bi->block_state == YAFFS_BLOCK_STATE_COLLECTING) ||
3021: /* MUTANT (rep_op) */		     max_copies <= 0;
3021: /* MUTANT (rep_op) */		     max_copies < 0;
3021: /* MUTANT (rep_op) */		     max_copies >= 0;
3021: /* MUTANT (rep_op) */		     max_copies == 0;
3021: /* MUTANT (rep_op) */		     max_copies != 0;
3021: /* MUTANT (rep_const) */		     max_copies > 1;
3021: /* MUTANT (rep_const) */		     max_copies > -1;
3022: /* MUTANT (rep_op) */		     dev->gc_chunk--, old_chunk++) {
3022: /* MUTANT (rep_op) */		     dev->gc_chunk++, old_chunk--) {
3023: /* MUTANT (negate) */			if(! (yaffs_check_chunk_bit(dev, block, dev->gc_chunk))) {
3025: /* MUTANT (del_stmt) */ /* 				max_copies--; */ 
3025: /* MUTANT (rep_op) */				max_copies++;
3033: /* MUTANT (negate) */	yaffs_verif(!y_collected_blk(dev, bi, block));
3035: /* MUTANT (rep_op) */	if (bi->block_state != YAFFS_BLOCK_STATE_COLLECTING) {
3035: /* MUTANT (negate) */	if(! (bi->block_state == YAFFS_BLOCK_STATE_COLLECTING)) {
3040: /* MUTANT (del_stmt) */ /* 		bi->block_state = YAFFS_BLOCK_STATE_FULL; */ 
3044: /* MUTANT (rep_op) */		for (i = 0; i <= dev->n_clean_ups; i++) {
3044: /* MUTANT (rep_op) */		for (i = 0; i > dev->n_clean_ups; i++) {
3044: /* MUTANT (rep_op) */		for (i = 0; i >= dev->n_clean_ups; i++) {
3044: /* MUTANT (rep_op) */		for (i = 0; i == dev->n_clean_ups; i++) {
3044: /* MUTANT (rep_op) */		for (i = 0; i != dev->n_clean_ups; i++) {
3044: /* MUTANT (rep_op) */		for (i = 0; i < dev->n_clean_ups; i--) {
3044: /* MUTANT (rep_const) */		for (i = 1; i < dev->n_clean_ups; i++) {
3044: /* MUTANT (rep_const) */		for (i = -1; i < dev->n_clean_ups; i++) {
3048: /* MUTANT (negate) */			if(! (object)) {
3051: /* MUTANT (del_stmt) */ /* 				object->variant.file_variant.top = NULL; */ 
3055: /* MUTANT (del_stmt) */ /* 				yaffs_generic_obj_del(object); */ 
3056: /* MUTANT (del_stmt) */ /* 				object->my_dev->n_deleted_files--; */ 
3056: /* MUTANT (rep_op) */				object->my_dev->n_deleted_files++;
3061: /* MUTANT (rep_op) */		if (chunks_before <= chunks_after)
3061: /* MUTANT (rep_op) */		if (chunks_before < chunks_after)
3061: /* MUTANT (rep_op) */		if (chunks_before > chunks_after)
3061: /* MUTANT (rep_op) */		if (chunks_before == chunks_after)
3061: /* MUTANT (rep_op) */		if (chunks_before != chunks_after)
3061: /* MUTANT (negate) */		if(! (chunks_before >= chunks_after))
3065: /* MUTANT (del_stmt) */ /* 		dev->gc_block = 0; */ 
3065: /* MUTANT (rep_const) */		dev->gc_block = 1;
3065: /* MUTANT (rep_const) */		dev->gc_block = -1;
3066: /* MUTANT (del_stmt) */ /* 		dev->gc_chunk = 0; */ 
3066: /* MUTANT (rep_const) */		dev->gc_chunk = 1;
3066: /* MUTANT (rep_const) */		dev->gc_chunk = -1;
3067: /* MUTANT (del_stmt) */ /* 		dev->n_clean_ups = 0; */ 
3067: /* MUTANT (rep_const) */		dev->n_clean_ups = 1;
3067: /* MUTANT (rep_const) */		dev->n_clean_ups = -1;
3070: /* MUTANT (rep_const) */	dev->gc_disable = 1;
3070: /* MUTANT (rep_const) */	dev->gc_disable = -1;
3072: /* MUTANT (del_stmt) */ /* 	return ret_val; */ 
3083: /* MUTANT (del_stmt) */ /* 	int i; */ 
3084: /* MUTANT (del_stmt) */ /* 	int iterations; */ 
3085: /* MUTANT (del_stmt) */ /* 	unsigned selected = 0; */ 
3085: /* MUTANT (rep_const) */	unsigned selected = 1;
3085: /* MUTANT (rep_const) */	unsigned selected = -1;
3086: /* MUTANT (del_stmt) */ /* 	int prioritised = 0; */ 
3086: /* MUTANT (rep_const) */	int prioritised = 1;
3086: /* MUTANT (rep_const) */	int prioritised = -1;
3087: /* MUTANT (del_stmt) */ /* 	int prioritised_exist = 0; */ 
3087: /* MUTANT (rep_const) */	int prioritised_exist = 1;
3087: /* MUTANT (rep_const) */	int prioritised_exist = -1;
3088: /* MUTANT (del_stmt) */ /* 	struct yaffs_block_info *bi; */ 
3089: /* MUTANT (del_stmt) */ /* 	int threshold; */ 
3092: /* MUTANT (rep_op) */	if (dev->has_pending_prioritised_gc || !aggressive) {
3092: /* MUTANT (negate) */	if(! (dev->has_pending_prioritised_gc && !aggressive)) {
3093: /* MUTANT (del_stmt) */ /* 		dev->gc_dirtiest = 0; */ 
3093: /* MUTANT (rep_const) */		dev->gc_dirtiest = 1;
3093: /* MUTANT (rep_const) */		dev->gc_dirtiest = -1;
3094: /* MUTANT (del_stmt) */ /* 		bi = dev->block_info; */ 
3096: /* MUTANT (del_stmt) */ /* 		     i <= dev->internal_end_block && !selected; */  i++) {
3096: /* MUTANT (rep_op) */		     i < dev->internal_end_block && !selected; i++) {
3096: /* MUTANT (rep_op) */		     i > dev->internal_end_block && !selected; i++) {
3096: /* MUTANT (rep_op) */		     i >= dev->internal_end_block && !selected; i++) {
3096: /* MUTANT (rep_op) */		     i == dev->internal_end_block && !selected; i++) {
3096: /* MUTANT (rep_op) */		     i != dev->internal_end_block && !selected; i++) {
3096: /* MUTANT (rep_op) */		     i <= dev->internal_end_block || !selected; i++) {
3096: /* MUTANT (rep_op) */		     i <= dev->internal_end_block && !selected; i--) {
3098: /* MUTANT (negate) */			if(! (bi->gc_prioritise)) {
3099: /* MUTANT (del_stmt) */ /* 				prioritised_exist = 1; */ 
3099: /* MUTANT (rep_const) */				prioritised_exist = 0;
3099: /* MUTANT (rep_const) */				prioritised_exist = -1;
3099: /* MUTANT (rep_const) */				prioritised_exist = ((1)+1);
3100: /* MUTANT (rep_op) */				if (bi->block_state != YAFFS_BLOCK_STATE_FULL &&
3100: /* MUTANT (rep_op) */				if (bi->block_state == YAFFS_BLOCK_STATE_FULL ||
3102: /* MUTANT (del_stmt) */ /* 					selected = i; */ 
3103: /* MUTANT (del_stmt) */ /* 					prioritised = 1; */ 
3103: /* MUTANT (rep_const) */					prioritised = 0;
3103: /* MUTANT (rep_const) */					prioritised = -1;
3103: /* MUTANT (rep_const) */					prioritised = ((1)+1);
3106: /* MUTANT (rep_op) */			bi--;
3115: /* MUTANT (rep_op) */		if (prioritised_exist ||
3116: /* MUTANT (rep_op) */		    !selected || dev->oldest_dirty_block > 0)
3116: /* MUTANT (rep_op) */		    !selected && dev->oldest_dirty_block <= 0)
3116: /* MUTANT (rep_op) */		    !selected && dev->oldest_dirty_block < 0)
3116: /* MUTANT (rep_op) */		    !selected && dev->oldest_dirty_block >= 0)
3116: /* MUTANT (rep_op) */		    !selected && dev->oldest_dirty_block == 0)
3116: /* MUTANT (rep_op) */		    !selected && dev->oldest_dirty_block != 0)
3116: /* MUTANT (rep_const) */		    !selected && dev->oldest_dirty_block > 1)
3116: /* MUTANT (rep_const) */		    !selected && dev->oldest_dirty_block > -1)
3119: /* MUTANT (negate) */		if(! (!prioritised_exist))	/* None found, so we can clear this */
3120: /* MUTANT (rep_const) */			dev->has_pending_prioritised_gc = 1;
3120: /* MUTANT (rep_const) */			dev->has_pending_prioritised_gc = -1;
3129: /* MUTANT (negate) */	if(! (!selected)) {
3130: /* MUTANT (del_stmt) */ /* 		int pages_used; */ 
3132: /* MUTANT (rep_op) */		    dev->internal_end_block - dev->internal_start_block - 1;
3132: /* MUTANT (rep_op) */		    dev->internal_end_block - dev->internal_start_block * 1;
3132: /* MUTANT (rep_op) */		    dev->internal_end_block - dev->internal_start_block % 1;
3132: /* MUTANT (rep_const) */		    dev->internal_end_block - dev->internal_start_block + 0;
3132: /* MUTANT (rep_const) */		    dev->internal_end_block - dev->internal_start_block + -1;
3132: /* MUTANT (rep_const) */		    dev->internal_end_block - dev->internal_start_block + ((1)+1);
3133: /* MUTANT (negate) */		if(! (aggressive)) {
3134: /* MUTANT (del_stmt) */ /* 			threshold = dev->param.chunks_per_block; */ 
3135: /* MUTANT (del_stmt) */ /* 			iterations = n_blocks; */ 
3137: /* MUTANT (del_stmt) */ /* 			int max_threshold; */ 
3139: /* MUTANT (negate) */			if(! (background))
3140: /* MUTANT (rep_const) */				max_threshold = dev->param.chunks_per_block / 0;
3140: /* MUTANT (rep_const) */				max_threshold = dev->param.chunks_per_block / 1;
3140: /* MUTANT (rep_const) */				max_threshold = dev->param.chunks_per_block / -1;
3140: /* MUTANT (rep_const) */				max_threshold = dev->param.chunks_per_block / ((2)+1);
3140: /* MUTANT (rep_const) */				max_threshold = dev->param.chunks_per_block / ((2)-1);
3142: /* MUTANT (rep_const) */				max_threshold = dev->param.chunks_per_block / 0;
3142: /* MUTANT (rep_const) */				max_threshold = dev->param.chunks_per_block / 1;
3142: /* MUTANT (rep_const) */				max_threshold = dev->param.chunks_per_block / -1;
3142: /* MUTANT (rep_const) */				max_threshold = dev->param.chunks_per_block / ((8)+1);
3142: /* MUTANT (rep_const) */				max_threshold = dev->param.chunks_per_block / ((8)-1);
3144: /* MUTANT (rep_op) */			if (max_threshold <= YAFFS_GC_PASSIVE_THRESHOLD)
3144: /* MUTANT (rep_op) */			if (max_threshold > YAFFS_GC_PASSIVE_THRESHOLD)
3144: /* MUTANT (rep_op) */			if (max_threshold >= YAFFS_GC_PASSIVE_THRESHOLD)
3144: /* MUTANT (rep_op) */			if (max_threshold == YAFFS_GC_PASSIVE_THRESHOLD)
3144: /* MUTANT (rep_op) */			if (max_threshold != YAFFS_GC_PASSIVE_THRESHOLD)
3144: /* MUTANT (negate) */			if(! (max_threshold < YAFFS_GC_PASSIVE_THRESHOLD))
3147: /* MUTANT (del_stmt) */ /* 			threshold = background ? (dev->gc_not_done + 2) * 2 : 0; */ 
3147: /* MUTANT (rep_op) */			threshold = background ? (dev->gc_not_done - 2) * 2 : 0;
3147: /* MUTANT (rep_op) */			threshold = background ? (dev->gc_not_done * 2) * 2 : 0;
3147: /* MUTANT (rep_op) */			threshold = background ? (dev->gc_not_done % 2) * 2 : 0;
3147: /* MUTANT (rep_const) */			threshold = background ? (dev->gc_not_done + 0) * 2 : 0;
3147: /* MUTANT (rep_const) */			threshold = background ? (dev->gc_not_done + 1) * 2 : 0;
3147: /* MUTANT (rep_const) */			threshold = background ? (dev->gc_not_done + -1) * 2 : 0;
3147: /* MUTANT (rep_const) */			threshold = background ? (dev->gc_not_done + ((2)+1)) * 2 : 0;
3147: /* MUTANT (rep_const) */			threshold = background ? (dev->gc_not_done + ((2)-1)) * 2 : 0;
3147: /* MUTANT (rep_const) */			threshold = background ? (dev->gc_not_done + 2) * 0 : 0;
3147: /* MUTANT (rep_const) */			threshold = background ? (dev->gc_not_done + 2) * 1 : 0;
3147: /* MUTANT (rep_const) */			threshold = background ? (dev->gc_not_done + 2) * -1 : 0;
3147: /* MUTANT (rep_const) */			threshold = background ? (dev->gc_not_done + 2) * ((2)+1) : 0;
3147: /* MUTANT (rep_const) */			threshold = background ? (dev->gc_not_done + 2) * ((2)-1) : 0;
3147: /* MUTANT (rep_const) */			threshold = background ? (dev->gc_not_done + 2) * 2 : 1;
3147: /* MUTANT (rep_const) */			threshold = background ? (dev->gc_not_done + 2) * 2 : -1;
3148: /* MUTANT (rep_op) */			if (threshold <= YAFFS_GC_PASSIVE_THRESHOLD)
3148: /* MUTANT (rep_op) */			if (threshold > YAFFS_GC_PASSIVE_THRESHOLD)
3148: /* MUTANT (rep_op) */			if (threshold >= YAFFS_GC_PASSIVE_THRESHOLD)
3148: /* MUTANT (rep_op) */			if (threshold == YAFFS_GC_PASSIVE_THRESHOLD)
3148: /* MUTANT (rep_op) */			if (threshold != YAFFS_GC_PASSIVE_THRESHOLD)
3148: /* MUTANT (negate) */			if(! (threshold < YAFFS_GC_PASSIVE_THRESHOLD))
3150: /* MUTANT (rep_op) */			if (threshold <= max_threshold)
3150: /* MUTANT (rep_op) */			if (threshold < max_threshold)
3150: /* MUTANT (rep_op) */			if (threshold >= max_threshold)
3150: /* MUTANT (rep_op) */			if (threshold == max_threshold)
3150: /* MUTANT (rep_op) */			if (threshold != max_threshold)
3150: /* MUTANT (negate) */			if(! (threshold > max_threshold))
3153: /* MUTANT (del_stmt) */ /* 			iterations = n_blocks / 16 + 1; */ 
3153: /* MUTANT (rep_op) */			iterations = n_blocks / 16 - 1;
3153: /* MUTANT (rep_op) */			iterations = n_blocks / 16 * 1;
3153: /* MUTANT (rep_op) */			iterations = n_blocks / 16 % 1;
3153: /* MUTANT (rep_const) */			iterations = n_blocks / 0 + 1;
3153: /* MUTANT (rep_const) */			iterations = n_blocks / 1 + 1;
3153: /* MUTANT (rep_const) */			iterations = n_blocks / -1 + 1;
3153: /* MUTANT (rep_const) */			iterations = n_blocks / ((16)+1) + 1;
3153: /* MUTANT (rep_const) */			iterations = n_blocks / ((16)-1) + 1;
3153: /* MUTANT (rep_const) */			iterations = n_blocks / 16 + 0;
3153: /* MUTANT (rep_const) */			iterations = n_blocks / 16 + -1;
3153: /* MUTANT (rep_const) */			iterations = n_blocks / 16 + ((1)+1);
3154: /* MUTANT (rep_op) */			if (iterations <= 100)
3154: /* MUTANT (rep_op) */			if (iterations < 100)
3154: /* MUTANT (rep_op) */			if (iterations >= 100)
3154: /* MUTANT (rep_op) */			if (iterations == 100)
3154: /* MUTANT (rep_op) */			if (iterations != 100)
3154: /* MUTANT (rep_const) */			if (iterations > 0)
3154: /* MUTANT (rep_const) */			if (iterations > 1)
3154: /* MUTANT (rep_const) */			if (iterations > -1)
3154: /* MUTANT (rep_const) */			if (iterations > ((100)+1))
3154: /* MUTANT (rep_const) */			if (iterations > ((100)-1))
3154: /* MUTANT (negate) */			if(! (iterations > 100))
3155: /* MUTANT (rep_const) */				iterations = 0;
3155: /* MUTANT (rep_const) */				iterations = 1;
3155: /* MUTANT (rep_const) */				iterations = -1;
3155: /* MUTANT (rep_const) */				iterations = ((100)+1);
3155: /* MUTANT (rep_const) */				iterations = ((100)-1);
3158: /* MUTANT (rep_const) */		for (i = 1;
3158: /* MUTANT (rep_const) */		for (i = -1;
3159: /* MUTANT (rep_op) */		     i <= iterations &&
3159: /* MUTANT (rep_op) */		     i > iterations &&
3159: /* MUTANT (rep_op) */		     i >= iterations &&
3159: /* MUTANT (rep_op) */		     i == iterations &&
3159: /* MUTANT (rep_op) */		     i != iterations &&
3159: /* MUTANT (rep_op) */		     i < iterations ||
3160: /* MUTANT (rep_op) */		     (dev->gc_dirtiest <= 1 ||
3160: /* MUTANT (rep_op) */		     (dev->gc_dirtiest > 1 ||
3160: /* MUTANT (rep_op) */		     (dev->gc_dirtiest >= 1 ||
3160: /* MUTANT (rep_op) */		     (dev->gc_dirtiest == 1 ||
3160: /* MUTANT (rep_op) */		     (dev->gc_dirtiest != 1 ||
3160: /* MUTANT (rep_op) */		     (dev->gc_dirtiest < 1 &&
3160: /* MUTANT (rep_const) */		     (dev->gc_dirtiest < 0 ||
3160: /* MUTANT (rep_const) */		     (dev->gc_dirtiest < -1 ||
3160: /* MUTANT (rep_const) */		     (dev->gc_dirtiest < ((1)+1) ||
3161: /* MUTANT (rep_op) */		      dev->gc_pages_in_use <= YAFFS_GC_GOOD_ENOUGH);
3161: /* MUTANT (rep_op) */		      dev->gc_pages_in_use < YAFFS_GC_GOOD_ENOUGH);
3161: /* MUTANT (rep_op) */		      dev->gc_pages_in_use >= YAFFS_GC_GOOD_ENOUGH);
3161: /* MUTANT (rep_op) */		      dev->gc_pages_in_use == YAFFS_GC_GOOD_ENOUGH);
3161: /* MUTANT (rep_op) */		      dev->gc_pages_in_use != YAFFS_GC_GOOD_ENOUGH);
3162: /* MUTANT (rep_op) */		     i--) {
3163: /* MUTANT (del_stmt) */ /* 			dev->gc_block_finder++; */ 
3163: /* MUTANT (rep_op) */			dev->gc_block_finder--;
3164: /* MUTANT (rep_op) */			if (dev->gc_block_finder <= dev->internal_start_block ||
3164: /* MUTANT (rep_op) */			if (dev->gc_block_finder > dev->internal_start_block ||
3164: /* MUTANT (rep_op) */			if (dev->gc_block_finder >= dev->internal_start_block ||
3164: /* MUTANT (rep_op) */			if (dev->gc_block_finder == dev->internal_start_block ||
3164: /* MUTANT (rep_op) */			if (dev->gc_block_finder != dev->internal_start_block ||
3164: /* MUTANT (rep_op) */			if (dev->gc_block_finder < dev->internal_start_block &&
3165: /* MUTANT (rep_op) */			    dev->gc_block_finder <= dev->internal_end_block)
3165: /* MUTANT (rep_op) */			    dev->gc_block_finder < dev->internal_end_block)
3165: /* MUTANT (rep_op) */			    dev->gc_block_finder >= dev->internal_end_block)
3165: /* MUTANT (rep_op) */			    dev->gc_block_finder == dev->internal_end_block)
3165: /* MUTANT (rep_op) */			    dev->gc_block_finder != dev->internal_end_block)
3169: /* MUTANT (del_stmt) */ /* 			bi = yaffs_get_block_info(dev, dev->gc_block_finder); */ 
3171: /* MUTANT (del_stmt) */ /* 			pages_used = bi->pages_in_use - bi->soft_del_pages; */ 
3173: /* MUTANT (rep_op) */			if (bi->block_state != YAFFS_BLOCK_STATE_FULL &&
3173: /* MUTANT (rep_op) */			if (bi->block_state == YAFFS_BLOCK_STATE_FULL ||
3174: /* MUTANT (rep_op) */			    pages_used <= dev->param.chunks_per_block &&
3174: /* MUTANT (rep_op) */			    pages_used > dev->param.chunks_per_block &&
3174: /* MUTANT (rep_op) */			    pages_used >= dev->param.chunks_per_block &&
3174: /* MUTANT (rep_op) */			    pages_used == dev->param.chunks_per_block &&
3174: /* MUTANT (rep_op) */			    pages_used != dev->param.chunks_per_block &&
3174: /* MUTANT (rep_op) */			    pages_used < dev->param.chunks_per_block ||
3175: /* MUTANT (rep_op) */			    (dev->gc_dirtiest <= 1 ||
3175: /* MUTANT (rep_op) */			    (dev->gc_dirtiest > 1 ||
3175: /* MUTANT (rep_op) */			    (dev->gc_dirtiest >= 1 ||
3175: /* MUTANT (rep_op) */			    (dev->gc_dirtiest == 1 ||
3175: /* MUTANT (rep_op) */			    (dev->gc_dirtiest != 1 ||
3175: /* MUTANT (rep_op) */			    (dev->gc_dirtiest < 1 &&
3175: /* MUTANT (rep_const) */			    (dev->gc_dirtiest < 0 ||
3175: /* MUTANT (rep_const) */			    (dev->gc_dirtiest < -1 ||
3175: /* MUTANT (rep_const) */			    (dev->gc_dirtiest < ((1)+1) ||
3176: /* MUTANT (rep_op) */			     pages_used <= dev->gc_pages_in_use) &&
3176: /* MUTANT (rep_op) */			     pages_used > dev->gc_pages_in_use) &&
3176: /* MUTANT (rep_op) */			     pages_used >= dev->gc_pages_in_use) &&
3176: /* MUTANT (rep_op) */			     pages_used == dev->gc_pages_in_use) &&
3176: /* MUTANT (rep_op) */			     pages_used != dev->gc_pages_in_use) &&
3176: /* MUTANT (rep_op) */			     pages_used < dev->gc_pages_in_use) ||
3178: /* MUTANT (del_stmt) */ /* 				dev->gc_dirtiest = dev->gc_block_finder; */ 
3179: /* MUTANT (del_stmt) */ /* 				dev->gc_pages_in_use = pages_used; */ 
3183: /* MUTANT (rep_op) */		if (dev->gc_dirtiest <= 0 && dev->gc_pages_in_use <= threshold)
3183: /* MUTANT (rep_op) */		if (dev->gc_dirtiest < 0 && dev->gc_pages_in_use <= threshold)
3183: /* MUTANT (rep_op) */		if (dev->gc_dirtiest >= 0 && dev->gc_pages_in_use <= threshold)
3183: /* MUTANT (rep_op) */		if (dev->gc_dirtiest == 0 && dev->gc_pages_in_use <= threshold)
3183: /* MUTANT (rep_op) */		if (dev->gc_dirtiest != 0 && dev->gc_pages_in_use <= threshold)
3183: /* MUTANT (rep_op) */		if (dev->gc_dirtiest > 0 || dev->gc_pages_in_use <= threshold)
3183: /* MUTANT (rep_op) */		if (dev->gc_dirtiest > 0 && dev->gc_pages_in_use < threshold)
3183: /* MUTANT (rep_op) */		if (dev->gc_dirtiest > 0 && dev->gc_pages_in_use > threshold)
3183: /* MUTANT (rep_op) */		if (dev->gc_dirtiest > 0 && dev->gc_pages_in_use >= threshold)
3183: /* MUTANT (rep_op) */		if (dev->gc_dirtiest > 0 && dev->gc_pages_in_use == threshold)
3183: /* MUTANT (rep_op) */		if (dev->gc_dirtiest > 0 && dev->gc_pages_in_use != threshold)
3183: /* MUTANT (rep_const) */		if (dev->gc_dirtiest > 1 && dev->gc_pages_in_use <= threshold)
3183: /* MUTANT (rep_const) */		if (dev->gc_dirtiest > -1 && dev->gc_pages_in_use <= threshold)
3183: /* MUTANT (negate) */		if(! (dev->gc_dirtiest > 0 && dev->gc_pages_in_use <= threshold))
3192: /* MUTANT (rep_op) */	if (!selected || dev->param.is_yaffs2 &&
3192: /* MUTANT (rep_op) */	if (!selected && dev->param.is_yaffs2 ||
3193: /* MUTANT (rep_op) */	    dev->gc_not_done <= (background ? 10 : 20)) {
3193: /* MUTANT (rep_op) */	    dev->gc_not_done < (background ? 10 : 20)) {
3193: /* MUTANT (rep_op) */	    dev->gc_not_done > (background ? 10 : 20)) {
3193: /* MUTANT (rep_op) */	    dev->gc_not_done == (background ? 10 : 20)) {
3193: /* MUTANT (rep_op) */	    dev->gc_not_done != (background ? 10 : 20)) {
3193: /* MUTANT (rep_const) */	    dev->gc_not_done >= (background ? 0 : 20)) {
3193: /* MUTANT (rep_const) */	    dev->gc_not_done >= (background ? 1 : 20)) {
3193: /* MUTANT (rep_const) */	    dev->gc_not_done >= (background ? -1 : 20)) {
3193: /* MUTANT (rep_const) */	    dev->gc_not_done >= (background ? ((10)+1) : 20)) {
3193: /* MUTANT (rep_const) */	    dev->gc_not_done >= (background ? ((10)-1) : 20)) {
3193: /* MUTANT (rep_const) */	    dev->gc_not_done >= (background ? 10 : 0)) {
3193: /* MUTANT (rep_const) */	    dev->gc_not_done >= (background ? 10 : 1)) {
3193: /* MUTANT (rep_const) */	    dev->gc_not_done >= (background ? 10 : -1)) {
3193: /* MUTANT (rep_const) */	    dev->gc_not_done >= (background ? 10 : ((20)+1))) {
3193: /* MUTANT (rep_const) */	    dev->gc_not_done >= (background ? 10 : ((20)-1))) {
3194: /* MUTANT (del_stmt) */ /* 		yaffs2_find_oldest_dirty_seq(dev); */ 
3195: /* MUTANT (rep_op) */		if (dev->oldest_dirty_block <= 0) {
3195: /* MUTANT (rep_op) */		if (dev->oldest_dirty_block < 0) {
3195: /* MUTANT (rep_op) */		if (dev->oldest_dirty_block >= 0) {
3195: /* MUTANT (rep_op) */		if (dev->oldest_dirty_block == 0) {
3195: /* MUTANT (rep_op) */		if (dev->oldest_dirty_block != 0) {
3195: /* MUTANT (rep_const) */		if (dev->oldest_dirty_block > 1) {
3195: /* MUTANT (rep_const) */		if (dev->oldest_dirty_block > -1) {
3195: /* MUTANT (negate) */		if(! (dev->oldest_dirty_block > 0)) {
3196: /* MUTANT (del_stmt) */ /* 			selected = dev->oldest_dirty_block; */ 
3197: /* MUTANT (del_stmt) */ /* 			dev->gc_dirtiest = selected; */ 
3198: /* MUTANT (del_stmt) */ /* 			dev->oldest_dirty_gc_count++; */ 
3198: /* MUTANT (rep_op) */			dev->oldest_dirty_gc_count--;
3199: /* MUTANT (del_stmt) */ /* 			bi = yaffs_get_block_info(dev, selected); */ 
3203: /* MUTANT (del_stmt) */ /* 			dev->gc_not_done = 0; */ 
3203: /* MUTANT (rep_const) */			dev->gc_not_done = 1;
3203: /* MUTANT (rep_const) */			dev->gc_not_done = -1;
3207: /* MUTANT (negate) */	if(! (selected)) {
3214: /* MUTANT (del_stmt) */ /* 		dev->n_gc_blocks++; */ 
3214: /* MUTANT (rep_op) */		dev->n_gc_blocks--;
3215: /* MUTANT (negate) */		if(! (background))
3216: /* MUTANT (rep_op) */			dev->bg_gcs--;
3218: /* MUTANT (del_stmt) */ /* 		dev->gc_dirtiest = 0; */ 
3218: /* MUTANT (rep_const) */		dev->gc_dirtiest = 1;
3218: /* MUTANT (rep_const) */		dev->gc_dirtiest = -1;
3219: /* MUTANT (del_stmt) */ /* 		dev->gc_pages_in_use = 0; */ 
3219: /* MUTANT (rep_const) */		dev->gc_pages_in_use = 1;
3219: /* MUTANT (rep_const) */		dev->gc_pages_in_use = -1;
3220: /* MUTANT (del_stmt) */ /* 		dev->gc_not_done = 0; */ 
3220: /* MUTANT (rep_const) */		dev->gc_not_done = 1;
3220: /* MUTANT (rep_const) */		dev->gc_not_done = -1;
3221: /* MUTANT (rep_op) */		if (dev->refresh_skip <= 0)
3221: /* MUTANT (rep_op) */		if (dev->refresh_skip < 0)
3221: /* MUTANT (rep_op) */		if (dev->refresh_skip >= 0)
3221: /* MUTANT (rep_op) */		if (dev->refresh_skip == 0)
3221: /* MUTANT (rep_op) */		if (dev->refresh_skip != 0)
3221: /* MUTANT (rep_const) */		if (dev->refresh_skip > 1)
3221: /* MUTANT (rep_const) */		if (dev->refresh_skip > -1)
3221: /* MUTANT (negate) */		if(! (dev->refresh_skip > 0))
3222: /* MUTANT (rep_op) */			dev->refresh_skip++;
3224: /* MUTANT (del_stmt) */ /* 		dev->gc_not_done++; */ 
3224: /* MUTANT (rep_op) */		dev->gc_not_done--;
3246: /* MUTANT (del_stmt) */ /* 	int aggressive = 0; */ 
3246: /* MUTANT (rep_const) */	int aggressive = 1;
3246: /* MUTANT (rep_const) */	int aggressive = -1;
3247: /* MUTANT (del_stmt) */ /* 	int gc_ok = YAFFS_OK; */ 
3248: /* MUTANT (del_stmt) */ /* 	int max_tries = 0; */ 
3248: /* MUTANT (rep_const) */	int max_tries = 1;
3248: /* MUTANT (rep_const) */	int max_tries = -1;
3249: /* MUTANT (del_stmt) */ /* 	int min_erased; */ 
3250: /* MUTANT (del_stmt) */ /* 	int erased_chunks; */ 
3251: /* MUTANT (del_stmt) */ /* 	int checkpt_block_adjust; */ 
3253: /* MUTANT (rep_op) */	if (dev->param.gc_control || (dev->param.gc_control(dev) & 1) == 0)
3253: /* MUTANT (rep_op) */	if (dev->param.gc_control && (dev->param.gc_control(dev) & 1) != 0)
3253: /* MUTANT (rep_const) */	if (dev->param.gc_control && (dev->param.gc_control(dev) & 0) == 0)
3253: /* MUTANT (rep_const) */	if (dev->param.gc_control && (dev->param.gc_control(dev) & -1) == 0)
3253: /* MUTANT (rep_const) */	if (dev->param.gc_control && (dev->param.gc_control(dev) & ((1)+1)) == 0)
3253: /* MUTANT (rep_const) */	if (dev->param.gc_control && (dev->param.gc_control(dev) & 1) == 1)
3253: /* MUTANT (rep_const) */	if (dev->param.gc_control && (dev->param.gc_control(dev) & 1) == -1)
3253: /* MUTANT (negate) */	if(! (dev->param.gc_control && (dev->param.gc_control(dev) & 1) == 0))
3256: /* MUTANT (negate) */	if(! (dev->gc_disable))
3265: /* MUTANT (del_stmt) */ /* 		max_tries++; */ 
3265: /* MUTANT (rep_op) */		max_tries--;
3267: /* MUTANT (del_stmt) */ /* 		checkpt_block_adjust = yaffs_calc_checkpt_blocks_required(dev); */ 
3270: /* MUTANT (rep_op) */		    dev->param.n_reserved_blocks - checkpt_block_adjust + 1;
3270: /* MUTANT (rep_op) */		    dev->param.n_reserved_blocks * checkpt_block_adjust + 1;
3270: /* MUTANT (rep_op) */		    dev->param.n_reserved_blocks % checkpt_block_adjust + 1;
3270: /* MUTANT (rep_op) */		    dev->param.n_reserved_blocks + checkpt_block_adjust - 1;
3270: /* MUTANT (rep_op) */		    dev->param.n_reserved_blocks + checkpt_block_adjust * 1;
3270: /* MUTANT (rep_op) */		    dev->param.n_reserved_blocks + checkpt_block_adjust % 1;
3270: /* MUTANT (rep_const) */		    dev->param.n_reserved_blocks + checkpt_block_adjust + 0;
3270: /* MUTANT (rep_const) */		    dev->param.n_reserved_blocks + checkpt_block_adjust + -1;
3270: /* MUTANT (rep_const) */		    dev->param.n_reserved_blocks + checkpt_block_adjust + ((1)+1);
3275: /* MUTANT (rep_op) */		if (dev->n_erased_blocks <= min_erased)
3275: /* MUTANT (rep_op) */		if (dev->n_erased_blocks > min_erased)
3275: /* MUTANT (rep_op) */		if (dev->n_erased_blocks >= min_erased)
3275: /* MUTANT (rep_op) */		if (dev->n_erased_blocks == min_erased)
3275: /* MUTANT (rep_op) */		if (dev->n_erased_blocks != min_erased)
3275: /* MUTANT (negate) */		if(! (dev->n_erased_blocks < min_erased))
3276: /* MUTANT (rep_const) */			aggressive = 0;
3276: /* MUTANT (rep_const) */			aggressive = -1;
3276: /* MUTANT (rep_const) */			aggressive = ((1)+1);
3279: /* MUTANT (rep_op) */			    || erased_chunks > (dev->n_free_chunks / 4))
3279: /* MUTANT (rep_op) */			    && erased_chunks <= (dev->n_free_chunks / 4))
3279: /* MUTANT (rep_op) */			    && erased_chunks < (dev->n_free_chunks / 4))
3279: /* MUTANT (rep_op) */			    && erased_chunks >= (dev->n_free_chunks / 4))
3279: /* MUTANT (rep_op) */			    && erased_chunks == (dev->n_free_chunks / 4))
3279: /* MUTANT (rep_op) */			    && erased_chunks != (dev->n_free_chunks / 4))
3279: /* MUTANT (rep_const) */			    && erased_chunks > (dev->n_free_chunks / 0))
3279: /* MUTANT (rep_const) */			    && erased_chunks > (dev->n_free_chunks / 1))
3279: /* MUTANT (rep_const) */			    && erased_chunks > (dev->n_free_chunks / -1))
3279: /* MUTANT (rep_const) */			    && erased_chunks > (dev->n_free_chunks / ((4)+1)))
3279: /* MUTANT (rep_const) */			    && erased_chunks > (dev->n_free_chunks / ((4)-1)))
3282: /* MUTANT (rep_op) */			if (dev->gc_skip <= 20)
3282: /* MUTANT (rep_op) */			if (dev->gc_skip < 20)
3282: /* MUTANT (rep_op) */			if (dev->gc_skip >= 20)
3282: /* MUTANT (rep_op) */			if (dev->gc_skip == 20)
3282: /* MUTANT (rep_op) */			if (dev->gc_skip != 20)
3282: /* MUTANT (rep_const) */			if (dev->gc_skip > 0)
3282: /* MUTANT (rep_const) */			if (dev->gc_skip > 1)
3282: /* MUTANT (rep_const) */			if (dev->gc_skip > -1)
3282: /* MUTANT (rep_const) */			if (dev->gc_skip > ((20)+1))
3282: /* MUTANT (rep_const) */			if (dev->gc_skip > ((20)-1))
3282: /* MUTANT (negate) */			if(! (dev->gc_skip > 20))
3283: /* MUTANT (rep_const) */				dev->gc_skip = 0;
3283: /* MUTANT (rep_const) */				dev->gc_skip = 1;
3283: /* MUTANT (rep_const) */				dev->gc_skip = -1;
3283: /* MUTANT (rep_const) */				dev->gc_skip = ((20)+1);
3283: /* MUTANT (rep_const) */				dev->gc_skip = ((20)-1);
3284: /* MUTANT (rep_op) */			if (erased_chunks <= dev->n_free_chunks / 2 ||
3284: /* MUTANT (rep_op) */			if (erased_chunks > dev->n_free_chunks / 2 ||
3284: /* MUTANT (rep_op) */			if (erased_chunks >= dev->n_free_chunks / 2 ||
3284: /* MUTANT (rep_op) */			if (erased_chunks == dev->n_free_chunks / 2 ||
3284: /* MUTANT (rep_op) */			if (erased_chunks != dev->n_free_chunks / 2 ||
3284: /* MUTANT (rep_op) */			if (erased_chunks < dev->n_free_chunks / 2 &&
3284: /* MUTANT (rep_const) */			if (erased_chunks < dev->n_free_chunks / 0 ||
3284: /* MUTANT (rep_const) */			if (erased_chunks < dev->n_free_chunks / 1 ||
3284: /* MUTANT (rep_const) */			if (erased_chunks < dev->n_free_chunks / -1 ||
3284: /* MUTANT (rep_const) */			if (erased_chunks < dev->n_free_chunks / ((2)+1) ||
3284: /* MUTANT (rep_const) */			if (erased_chunks < dev->n_free_chunks / ((2)-1) ||
3285: /* MUTANT (rep_op) */			    dev->gc_skip <= 1 || background)
3285: /* MUTANT (rep_op) */			    dev->gc_skip > 1 || background)
3285: /* MUTANT (rep_op) */			    dev->gc_skip >= 1 || background)
3285: /* MUTANT (rep_op) */			    dev->gc_skip == 1 || background)
3285: /* MUTANT (rep_op) */			    dev->gc_skip != 1 || background)
3285: /* MUTANT (rep_op) */			    dev->gc_skip < 1 && background)
3285: /* MUTANT (rep_const) */			    dev->gc_skip < 0 || background)
3285: /* MUTANT (rep_const) */			    dev->gc_skip < -1 || background)
3285: /* MUTANT (rep_const) */			    dev->gc_skip < ((1)+1) || background)
3286: /* MUTANT (rep_const) */				aggressive = 1;
3286: /* MUTANT (rep_const) */				aggressive = -1;
3288: /* MUTANT (del_stmt) */ /* 				dev->gc_skip--; */ 
3288: /* MUTANT (rep_op) */				dev->gc_skip++;
3289: /* MUTANT (del_stmt) */ /* 				break; */ 
3293: /* MUTANT (rep_const) */		dev->gc_skip = 0;
3293: /* MUTANT (rep_const) */		dev->gc_skip = 1;
3293: /* MUTANT (rep_const) */		dev->gc_skip = -1;
3293: /* MUTANT (rep_const) */		dev->gc_skip = ((5)+1);
3293: /* MUTANT (rep_const) */		dev->gc_skip = ((5)-1);
3298: /* MUTANT (rep_op) */		if (dev->gc_block <= 1 && !aggressive) {
3298: /* MUTANT (rep_op) */		if (dev->gc_block > 1 && !aggressive) {
3298: /* MUTANT (rep_op) */		if (dev->gc_block >= 1 && !aggressive) {
3298: /* MUTANT (rep_op) */		if (dev->gc_block == 1 && !aggressive) {
3298: /* MUTANT (rep_op) */		if (dev->gc_block != 1 && !aggressive) {
3298: /* MUTANT (rep_op) */		if (dev->gc_block < 1 || !aggressive) {
3298: /* MUTANT (rep_const) */		if (dev->gc_block < 0 && !aggressive) {
3298: /* MUTANT (rep_const) */		if (dev->gc_block < -1 && !aggressive) {
3298: /* MUTANT (rep_const) */		if (dev->gc_block < ((1)+1) && !aggressive) {
3298: /* MUTANT (negate) */		if(! (dev->gc_block < 1 && !aggressive)) {
3299: /* MUTANT (del_stmt) */ /* 			dev->gc_block = yaffs2_find_refresh_block(dev); */ 
3300: /* MUTANT (del_stmt) */ /* 			dev->gc_chunk = 0; */ 
3300: /* MUTANT (rep_const) */			dev->gc_chunk = 1;
3300: /* MUTANT (rep_const) */			dev->gc_chunk = -1;
3301: /* MUTANT (del_stmt) */ /* 			dev->n_clean_ups = 0; */ 
3301: /* MUTANT (rep_const) */			dev->n_clean_ups = 1;
3301: /* MUTANT (rep_const) */			dev->n_clean_ups = -1;
3303: /* MUTANT (rep_op) */		if (dev->gc_block <= 1) {
3303: /* MUTANT (rep_op) */		if (dev->gc_block > 1) {
3303: /* MUTANT (rep_op) */		if (dev->gc_block >= 1) {
3303: /* MUTANT (rep_op) */		if (dev->gc_block == 1) {
3303: /* MUTANT (rep_op) */		if (dev->gc_block != 1) {
3303: /* MUTANT (rep_const) */		if (dev->gc_block < 0) {
3303: /* MUTANT (rep_const) */		if (dev->gc_block < -1) {
3303: /* MUTANT (rep_const) */		if (dev->gc_block < ((1)+1)) {
3303: /* MUTANT (negate) */		if(! (dev->gc_block < 1)) {
3306: /* MUTANT (del_stmt) */ /* 			dev->gc_chunk = 0; */ 
3306: /* MUTANT (rep_const) */			dev->gc_chunk = 1;
3306: /* MUTANT (rep_const) */			dev->gc_chunk = -1;
3307: /* MUTANT (del_stmt) */ /* 			dev->n_clean_ups = 0; */ 
3307: /* MUTANT (rep_const) */			dev->n_clean_ups = 1;
3307: /* MUTANT (rep_const) */			dev->n_clean_ups = -1;
3310: /* MUTANT (rep_op) */		if (dev->gc_block <= 0) {
3310: /* MUTANT (rep_op) */		if (dev->gc_block < 0) {
3310: /* MUTANT (rep_op) */		if (dev->gc_block >= 0) {
3310: /* MUTANT (rep_op) */		if (dev->gc_block == 0) {
3310: /* MUTANT (rep_op) */		if (dev->gc_block != 0) {
3310: /* MUTANT (rep_const) */		if (dev->gc_block > 1) {
3310: /* MUTANT (rep_const) */		if (dev->gc_block > -1) {
3310: /* MUTANT (negate) */		if(! (dev->gc_block > 0)) {
3311: /* MUTANT (del_stmt) */ /* 			dev->all_gcs++; */ 
3311: /* MUTANT (rep_op) */			dev->all_gcs--;
3312: /* MUTANT (negate) */			if(! (!aggressive))
3313: /* MUTANT (rep_op) */				dev->passive_gc_count--;
3319: /* MUTANT (del_stmt) */ /* 			gc_ok = yaffs_gc_block(dev, dev->gc_block, aggressive); */ 
3322: /* MUTANT (rep_op) */		if (dev->n_erased_blocks <= (dev->param.n_reserved_blocks) &&
3322: /* MUTANT (rep_op) */		if (dev->n_erased_blocks > (dev->param.n_reserved_blocks) &&
3322: /* MUTANT (rep_op) */		if (dev->n_erased_blocks >= (dev->param.n_reserved_blocks) &&
3322: /* MUTANT (rep_op) */		if (dev->n_erased_blocks == (dev->param.n_reserved_blocks) &&
3322: /* MUTANT (rep_op) */		if (dev->n_erased_blocks != (dev->param.n_reserved_blocks) &&
3322: /* MUTANT (rep_op) */		if (dev->n_erased_blocks < (dev->param.n_reserved_blocks) ||
3323: /* MUTANT (rep_op) */		    dev->gc_block <= 0) {
3323: /* MUTANT (rep_op) */		    dev->gc_block < 0) {
3323: /* MUTANT (rep_op) */		    dev->gc_block >= 0) {
3323: /* MUTANT (rep_op) */		    dev->gc_block == 0) {
3323: /* MUTANT (rep_op) */		    dev->gc_block != 0) {
3323: /* MUTANT (rep_const) */		    dev->gc_block > 1) {
3323: /* MUTANT (rep_const) */		    dev->gc_block > -1) {
3329: /* MUTANT (rep_op) */	} while ((dev->n_erased_blocks <= dev->param.n_reserved_blocks) &&
3329: /* MUTANT (rep_op) */	} while ((dev->n_erased_blocks > dev->param.n_reserved_blocks) &&
3329: /* MUTANT (rep_op) */	} while ((dev->n_erased_blocks >= dev->param.n_reserved_blocks) &&
3329: /* MUTANT (rep_op) */	} while ((dev->n_erased_blocks == dev->param.n_reserved_blocks) &&
3329: /* MUTANT (rep_op) */	} while ((dev->n_erased_blocks != dev->param.n_reserved_blocks) &&
3329: /* MUTANT (rep_op) */	} while ((dev->n_erased_blocks < dev->param.n_reserved_blocks) ||
3330: /* MUTANT (rep_op) */		 (dev->gc_block <= 0) && (max_tries < 2));
3330: /* MUTANT (rep_op) */		 (dev->gc_block < 0) && (max_tries < 2));
3330: /* MUTANT (rep_op) */		 (dev->gc_block >= 0) && (max_tries < 2));
3330: /* MUTANT (rep_op) */		 (dev->gc_block == 0) && (max_tries < 2));
3330: /* MUTANT (rep_op) */		 (dev->gc_block != 0) && (max_tries < 2));
3330: /* MUTANT (rep_op) */		 (dev->gc_block > 0) || (max_tries < 2));
3330: /* MUTANT (rep_op) */		 (dev->gc_block > 0) && (max_tries <= 2));
3330: /* MUTANT (rep_op) */		 (dev->gc_block > 0) && (max_tries > 2));
3330: /* MUTANT (rep_op) */		 (dev->gc_block > 0) && (max_tries >= 2));
3330: /* MUTANT (rep_op) */		 (dev->gc_block > 0) && (max_tries == 2));
3330: /* MUTANT (rep_op) */		 (dev->gc_block > 0) && (max_tries != 2));
3330: /* MUTANT (rep_const) */		 (dev->gc_block > 1) && (max_tries < 2));
3330: /* MUTANT (rep_const) */		 (dev->gc_block > -1) && (max_tries < 2));
3330: /* MUTANT (rep_const) */		 (dev->gc_block > 0) && (max_tries < 0));
3330: /* MUTANT (rep_const) */		 (dev->gc_block > 0) && (max_tries < 1));
3330: /* MUTANT (rep_const) */		 (dev->gc_block > 0) && (max_tries < -1));
3330: /* MUTANT (rep_const) */		 (dev->gc_block > 0) && (max_tries < ((2)+1)));
3330: /* MUTANT (rep_const) */		 (dev->gc_block > 0) && (max_tries < ((2)-1)));
3332: /* MUTANT (del_stmt) */ /* 	return aggressive ? gc_ok : YAFFS_OK; */ 
3342: /* MUTANT (del_stmt) */ /* 	int erased_chunks = dev->n_erased_blocks * dev->param.chunks_per_block; */ 
3344: /* MUTANT (del_stmt) */ /* 	yaffs_trace(YAFFS_TRACE_BACKGROUND, "Background gc %u", urgency); */ 
3346: /* MUTANT (del_stmt) */ /* 	yaffs_check_gc(dev, 1); */ 
3346: /* MUTANT (rep_const) */	yaffs_check_gc(dev, 0);
3346: /* MUTANT (rep_const) */	yaffs_check_gc(dev, -1);
3346: /* MUTANT (rep_const) */	yaffs_check_gc(dev, ((1)+1));
3347: /* MUTANT (del_stmt) */ /* 	return erased_chunks > dev->n_free_chunks / 2; */ 
3347: /* MUTANT (rep_op) */	return erased_chunks <= dev->n_free_chunks / 2;
3347: /* MUTANT (rep_op) */	return erased_chunks < dev->n_free_chunks / 2;
3347: /* MUTANT (rep_op) */	return erased_chunks >= dev->n_free_chunks / 2;
3347: /* MUTANT (rep_op) */	return erased_chunks == dev->n_free_chunks / 2;
3347: /* MUTANT (rep_op) */	return erased_chunks != dev->n_free_chunks / 2;
3347: /* MUTANT (rep_const) */	return erased_chunks > dev->n_free_chunks / 0;
3347: /* MUTANT (rep_const) */	return erased_chunks > dev->n_free_chunks / 1;
3347: /* MUTANT (rep_const) */	return erased_chunks > dev->n_free_chunks / -1;
3347: /* MUTANT (rep_const) */	return erased_chunks > dev->n_free_chunks / ((2)+1);
3347: /* MUTANT (rep_const) */	return erased_chunks > dev->n_free_chunks / ((2)-1);
3354: /* MUTANT (del_stmt) */ /* 	int nand_chunk = yaffs_find_chunk_in_file(in, inode_chunk, NULL); */ 
3356: /* MUTANT (rep_op) */	if (nand_chunk <= 0)
3356: /* MUTANT (rep_op) */	if (nand_chunk < 0)
3356: /* MUTANT (rep_op) */	if (nand_chunk > 0)
3356: /* MUTANT (rep_op) */	if (nand_chunk == 0)
3356: /* MUTANT (rep_op) */	if (nand_chunk != 0)
3356: /* MUTANT (rep_const) */	if (nand_chunk >= 1)
3356: /* MUTANT (rep_const) */	if (nand_chunk >= -1)
3356: /* MUTANT (negate) */	if(! (nand_chunk >= 0))
3364: /* MUTANT (del_stmt) */ /* 		mymemset(buffer, 0, in->my_dev->data_bytes_per_chunk); */ 
3364: /* MUTANT (rep_const) */		mymemset(buffer, 1, in->my_dev->data_bytes_per_chunk);
3364: /* MUTANT (rep_const) */		mymemset(buffer, -1, in->my_dev->data_bytes_per_chunk);
3365: /* MUTANT (del_stmt) */ /* 		return 0; */ 
3365: /* MUTANT (rep_const) */		return 1;
3365: /* MUTANT (rep_const) */		return -1;
3373: /* MUTANT (del_stmt) */ /* 	int block; */ 
3374: /* MUTANT (del_stmt) */ /* 	int page; */ 
3375: /* MUTANT (del_stmt) */ /* 	struct yaffs_ext_tags tags; */ 
3376: /* MUTANT (del_stmt) */ /* 	struct yaffs_block_info *bi; */ 
3378: /* MUTANT (rep_op) */	if (chunk_id < 0)
3378: /* MUTANT (rep_op) */	if (chunk_id > 0)
3378: /* MUTANT (rep_op) */	if (chunk_id >= 0)
3378: /* MUTANT (rep_op) */	if (chunk_id == 0)
3378: /* MUTANT (rep_op) */	if (chunk_id != 0)
3378: /* MUTANT (rep_const) */	if (chunk_id <= 1)
3378: /* MUTANT (rep_const) */	if (chunk_id <= -1)
3378: /* MUTANT (negate) */	if(! (chunk_id <= 0))
3381: /* MUTANT (del_stmt) */ /* 	dev->n_deletions++; */ 
3381: /* MUTANT (rep_op) */	dev->n_deletions--;
3382: /* MUTANT (del_stmt) */ /* 	block = chunk_id / dev->param.chunks_per_block; */ 
3383: /* MUTANT (del_stmt) */ /* 	page = chunk_id % dev->param.chunks_per_block; */ 
3383: /* MUTANT (rep_op) */	page = chunk_id + dev->param.chunks_per_block;
3383: /* MUTANT (rep_op) */	page = chunk_id - dev->param.chunks_per_block;
3383: /* MUTANT (rep_op) */	page = chunk_id * dev->param.chunks_per_block;
3385: /* MUTANT (negate) */	if(! (!yaffs_check_chunk_bit(dev, block, page)))
3389: /* MUTANT (del_stmt) */ /* 	bi = yaffs_get_block_info(dev, block); */ 
3391: /* MUTANT (del_stmt) */ /* 	yaffs2_update_oldest_dirty_seq(dev, block, bi); */ 
3397: /* MUTANT (rep_op) */	if (!dev->param.is_yaffs2 || mark_flash &&
3397: /* MUTANT (rep_op) */	if (!dev->param.is_yaffs2 && mark_flash ||
3398: /* MUTANT (rep_op) */	    bi->block_state == YAFFS_BLOCK_STATE_COLLECTING) {
3400: /* MUTANT (del_stmt) */ /* 		mymemset(&tags, 0, sizeof(tags)); */ 
3400: /* MUTANT (rep_const) */		mymemset(&tags, 1, sizeof(tags));
3400: /* MUTANT (rep_const) */		mymemset(&tags, -1, sizeof(tags));
3401: /* MUTANT (del_stmt) */ /* 		tags.is_deleted = 1; */ 
3401: /* MUTANT (rep_const) */		tags.is_deleted = 0;
3401: /* MUTANT (rep_const) */		tags.is_deleted = -1;
3401: /* MUTANT (rep_const) */		tags.is_deleted = ((1)+1);
3402: /* MUTANT (del_stmt) */ /* 		yaffs_wr_chunk_tags_nand(dev, chunk_id, NULL, &tags); */ 
3403: /* MUTANT (del_stmt) */ /* 		yaffs_handle_chunk_update(dev, chunk_id, &tags); */ 
3405: /* MUTANT (del_stmt) */ /* 		dev->n_unmarked_deletions++; */ 
3405: /* MUTANT (rep_op) */		dev->n_unmarked_deletions--;
3411: /* MUTANT (rep_op) */	if (bi->block_state != YAFFS_BLOCK_STATE_ALLOCATING ||
3411: /* MUTANT (rep_op) */	if (bi->block_state == YAFFS_BLOCK_STATE_ALLOCATING &&
3412: /* MUTANT (rep_op) */	    bi->block_state != YAFFS_BLOCK_STATE_FULL ||
3412: /* MUTANT (rep_op) */	    bi->block_state == YAFFS_BLOCK_STATE_FULL &&
3413: /* MUTANT (rep_op) */	    bi->block_state != YAFFS_BLOCK_STATE_NEEDS_SCAN ||
3413: /* MUTANT (rep_op) */	    bi->block_state == YAFFS_BLOCK_STATE_NEEDS_SCAN &&
3414: /* MUTANT (rep_op) */	    bi->block_state != YAFFS_BLOCK_STATE_COLLECTING) {
3415: /* MUTANT (del_stmt) */ /* 		dev->n_free_chunks++; */ 
3415: /* MUTANT (rep_op) */		dev->n_free_chunks--;
3416: /* MUTANT (del_stmt) */ /* 		yaffs_clear_chunk_bit(dev, block, page); */ 
3417: /* MUTANT (del_stmt) */ /* 		bi->pages_in_use--; */ 
3417: /* MUTANT (rep_op) */		bi->pages_in_use++;
3419: /* MUTANT (rep_op) */		if (bi->pages_in_use != 0 &&
3419: /* MUTANT (rep_op) */		if (bi->pages_in_use == 0 ||
3419: /* MUTANT (rep_const) */		if (bi->pages_in_use == 1 &&
3419: /* MUTANT (rep_const) */		if (bi->pages_in_use == -1 &&
3420: /* MUTANT (rep_op) */		    !bi->has_shrink_hdr ||
3421: /* MUTANT (rep_op) */		    bi->block_state == YAFFS_BLOCK_STATE_ALLOCATING &&
3421: /* MUTANT (rep_op) */		    bi->block_state != YAFFS_BLOCK_STATE_ALLOCATING ||
3422: /* MUTANT (rep_op) */		    bi->block_state == YAFFS_BLOCK_STATE_NEEDS_SCAN) {
3423: /* MUTANT (del_stmt) */ /* 			yaffs_block_became_dirty(dev, block); */ 
3436: /* MUTANT (del_stmt) */ /* 	int prev_chunk_id; */ 
3437: /* MUTANT (del_stmt) */ /* 	struct yaffs_ext_tags prev_tags; */ 
3438: /* MUTANT (del_stmt) */ /* 	int new_chunk_id; */ 
3439: /* MUTANT (del_stmt) */ /* 	struct yaffs_ext_tags new_tags; */ 
3440: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev = in->my_dev; */ 
3442: /* MUTANT (del_stmt) */ /* 	yaffs_check_gc(dev, 0); */ 
3442: /* MUTANT (rep_const) */	yaffs_check_gc(dev, 1);
3442: /* MUTANT (rep_const) */	yaffs_check_gc(dev, -1);
3448: /* MUTANT (del_stmt) */ /* 	prev_chunk_id = yaffs_find_chunk_in_file(in, inode_chunk, &prev_tags); */ 
3449: /* MUTANT (rep_op) */	if (prev_chunk_id <= 1 &&
3449: /* MUTANT (rep_op) */	if (prev_chunk_id > 1 &&
3449: /* MUTANT (rep_op) */	if (prev_chunk_id >= 1 &&
3449: /* MUTANT (rep_op) */	if (prev_chunk_id == 1 &&
3449: /* MUTANT (rep_op) */	if (prev_chunk_id != 1 &&
3449: /* MUTANT (rep_op) */	if (prev_chunk_id < 1 ||
3449: /* MUTANT (rep_const) */	if (prev_chunk_id < 0 &&
3449: /* MUTANT (rep_const) */	if (prev_chunk_id < -1 &&
3449: /* MUTANT (rep_const) */	if (prev_chunk_id < ((1)+1) &&
3450: /* MUTANT (rep_const) */	    !yaffs_put_chunk_in_file(in, inode_chunk, 1, 0))
3450: /* MUTANT (rep_const) */	    !yaffs_put_chunk_in_file(in, inode_chunk, -1, 0))
3450: /* MUTANT (rep_const) */	    !yaffs_put_chunk_in_file(in, inode_chunk, 0, 1))
3450: /* MUTANT (rep_const) */	    !yaffs_put_chunk_in_file(in, inode_chunk, 0, -1))
3451: /* MUTANT (rep_const) */		return 1;
3451: /* MUTANT (rep_const) */		return -1;
3454: /* MUTANT (del_stmt) */ /* 	mymemset(&new_tags, 0, sizeof(new_tags)); */ 
3454: /* MUTANT (rep_const) */	mymemset(&new_tags, 1, sizeof(new_tags));
3454: /* MUTANT (rep_const) */	mymemset(&new_tags, -1, sizeof(new_tags));
3456: /* MUTANT (del_stmt) */ /* 	new_tags.chunk_id = inode_chunk; */ 
3457: /* MUTANT (del_stmt) */ /* 	new_tags.obj_id = in->obj_id; */ 
3459: /* MUTANT (rep_op) */	    (prev_chunk_id <= 0) ? prev_tags.serial_number + 1 : 1;
3459: /* MUTANT (rep_op) */	    (prev_chunk_id < 0) ? prev_tags.serial_number + 1 : 1;
3459: /* MUTANT (rep_op) */	    (prev_chunk_id >= 0) ? prev_tags.serial_number + 1 : 1;
3459: /* MUTANT (rep_op) */	    (prev_chunk_id == 0) ? prev_tags.serial_number + 1 : 1;
3459: /* MUTANT (rep_op) */	    (prev_chunk_id != 0) ? prev_tags.serial_number + 1 : 1;
3459: /* MUTANT (rep_op) */	    (prev_chunk_id > 0) ? prev_tags.serial_number - 1 : 1;
3459: /* MUTANT (rep_op) */	    (prev_chunk_id > 0) ? prev_tags.serial_number * 1 : 1;
3459: /* MUTANT (rep_op) */	    (prev_chunk_id > 0) ? prev_tags.serial_number % 1 : 1;
3459: /* MUTANT (rep_const) */	    (prev_chunk_id > 1) ? prev_tags.serial_number + 1 : 1;
3459: /* MUTANT (rep_const) */	    (prev_chunk_id > -1) ? prev_tags.serial_number + 1 : 1;
3459: /* MUTANT (rep_const) */	    (prev_chunk_id > 0) ? prev_tags.serial_number + 0 : 1;
3459: /* MUTANT (rep_const) */	    (prev_chunk_id > 0) ? prev_tags.serial_number + -1 : 1;
3459: /* MUTANT (rep_const) */	    (prev_chunk_id > 0) ? prev_tags.serial_number + ((1)+1) : 1;
3459: /* MUTANT (rep_const) */	    (prev_chunk_id > 0) ? prev_tags.serial_number + 1 : 0;
3459: /* MUTANT (rep_const) */	    (prev_chunk_id > 0) ? prev_tags.serial_number + 1 : -1;
3459: /* MUTANT (rep_const) */	    (prev_chunk_id > 0) ? prev_tags.serial_number + 1 : ((1)+1);
3460: /* MUTANT (del_stmt) */ /* 	new_tags.n_bytes = n_bytes; */ 
3462: /* MUTANT (rep_op) */	if (n_bytes <= 1 || n_bytes > dev->param.total_bytes_per_chunk) {
3462: /* MUTANT (rep_op) */	if (n_bytes > 1 || n_bytes > dev->param.total_bytes_per_chunk) {
3462: /* MUTANT (rep_op) */	if (n_bytes >= 1 || n_bytes > dev->param.total_bytes_per_chunk) {
3462: /* MUTANT (rep_op) */	if (n_bytes == 1 || n_bytes > dev->param.total_bytes_per_chunk) {
3462: /* MUTANT (rep_op) */	if (n_bytes != 1 || n_bytes > dev->param.total_bytes_per_chunk) {
3462: /* MUTANT (rep_op) */	if (n_bytes < 1 && n_bytes > dev->param.total_bytes_per_chunk) {
3462: /* MUTANT (rep_op) */	if (n_bytes < 1 || n_bytes <= dev->param.total_bytes_per_chunk) {
3462: /* MUTANT (rep_op) */	if (n_bytes < 1 || n_bytes < dev->param.total_bytes_per_chunk) {
3462: /* MUTANT (rep_op) */	if (n_bytes < 1 || n_bytes >= dev->param.total_bytes_per_chunk) {
3462: /* MUTANT (rep_op) */	if (n_bytes < 1 || n_bytes == dev->param.total_bytes_per_chunk) {
3462: /* MUTANT (rep_op) */	if (n_bytes < 1 || n_bytes != dev->param.total_bytes_per_chunk) {
3462: /* MUTANT (rep_const) */	if (n_bytes < 0 || n_bytes > dev->param.total_bytes_per_chunk) {
3462: /* MUTANT (rep_const) */	if (n_bytes < -1 || n_bytes > dev->param.total_bytes_per_chunk) {
3462: /* MUTANT (rep_const) */	if (n_bytes < ((1)+1) || n_bytes > dev->param.total_bytes_per_chunk) {
3462: /* MUTANT (negate) */	if(! (n_bytes < 1 || n_bytes > dev->param.total_bytes_per_chunk)) {
3466: /* MUTANT (del_stmt) */ /* 		BUG(); */ 
3472: /* MUTANT (rep_op) */	if (new_chunk_id <= 0) {
3472: /* MUTANT (rep_op) */	if (new_chunk_id < 0) {
3472: /* MUTANT (rep_op) */	if (new_chunk_id >= 0) {
3472: /* MUTANT (rep_op) */	if (new_chunk_id == 0) {
3472: /* MUTANT (rep_op) */	if (new_chunk_id != 0) {
3472: /* MUTANT (rep_const) */	if (new_chunk_id > 1) {
3472: /* MUTANT (rep_const) */	if (new_chunk_id > -1) {
3472: /* MUTANT (negate) */	if(! (new_chunk_id > 0)) {
3473: /* MUTANT (del_stmt) */ /* 		yaffs_put_chunk_in_file(in, inode_chunk, new_chunk_id, 0); */ 
3473: /* MUTANT (rep_const) */		yaffs_put_chunk_in_file(in, inode_chunk, new_chunk_id, 1);
3473: /* MUTANT (rep_const) */		yaffs_put_chunk_in_file(in, inode_chunk, new_chunk_id, -1);
3475: /* MUTANT (rep_op) */		if (prev_chunk_id <= 0)
3475: /* MUTANT (rep_op) */		if (prev_chunk_id < 0)
3475: /* MUTANT (rep_op) */		if (prev_chunk_id >= 0)
3475: /* MUTANT (rep_op) */		if (prev_chunk_id == 0)
3475: /* MUTANT (rep_op) */		if (prev_chunk_id != 0)
3475: /* MUTANT (rep_const) */		if (prev_chunk_id > 1)
3475: /* MUTANT (rep_const) */		if (prev_chunk_id > -1)
3475: /* MUTANT (negate) */		if(! (prev_chunk_id > 0))
3476: /* MUTANT (rep_const) */			yaffs_chunk_del(dev, prev_chunk_id, 0, __LINE__);
3476: /* MUTANT (rep_const) */			yaffs_chunk_del(dev, prev_chunk_id, -1, __LINE__);
3476: /* MUTANT (rep_const) */			yaffs_chunk_del(dev, prev_chunk_id, ((1)+1), __LINE__);
3478: /* MUTANT (del_stmt) */ /* 		yaffs_verify_file_sane(in); */ 
3478: /* MUTANT (negate) */		yaffs_verif(!y_file_sane(in));
3490: /* MUTANT (del_stmt) */ /* 	struct yaffs_xattr_mod xmod; */ 
3491: /* MUTANT (del_stmt) */ /* 	int result; */ 
3493: /* MUTANT (del_stmt) */ /* 	xmod.set = set; */ 
3494: /* MUTANT (del_stmt) */ /* 	xmod.name = name; */ 
3495: /* MUTANT (del_stmt) */ /* 	xmod.data = value; */ 
3496: /* MUTANT (del_stmt) */ /* 	xmod.size = size; */ 
3497: /* MUTANT (del_stmt) */ /* 	xmod.flags = flags; */ 
3498: /* MUTANT (del_stmt) */ /* 	xmod.result = -ENOSPC; */ 
3500: /* MUTANT (del_stmt) */ /* 	result = yaffs_update_oh(obj, NULL, 0, 0, 0, &xmod); */ 
3500: /* MUTANT (rep_const) */	result = yaffs_update_oh(obj, NULL, 1, 0, 0, &xmod);
3500: /* MUTANT (rep_const) */	result = yaffs_update_oh(obj, NULL, -1, 0, 0, &xmod);
3500: /* MUTANT (rep_const) */	result = yaffs_update_oh(obj, NULL, 0, 1, 0, &xmod);
3500: /* MUTANT (rep_const) */	result = yaffs_update_oh(obj, NULL, 0, -1, 0, &xmod);
3500: /* MUTANT (rep_const) */	result = yaffs_update_oh(obj, NULL, 0, 0, 1, &xmod);
3500: /* MUTANT (rep_const) */	result = yaffs_update_oh(obj, NULL, 0, 0, -1, &xmod);
3502: /* MUTANT (rep_op) */	if (result <= 0)
3502: /* MUTANT (rep_op) */	if (result < 0)
3502: /* MUTANT (rep_op) */	if (result >= 0)
3502: /* MUTANT (rep_op) */	if (result == 0)
3502: /* MUTANT (rep_op) */	if (result != 0)
3502: /* MUTANT (rep_const) */	if (result > 1)
3502: /* MUTANT (rep_const) */	if (result > -1)
3502: /* MUTANT (negate) */	if(! (result > 0))
3511: /* MUTANT (del_stmt) */ /* 	int retval = 0; */ 
3511: /* MUTANT (rep_const) */	int retval = 1;
3511: /* MUTANT (rep_const) */	int retval = -1;
3512: /* MUTANT (del_stmt) */ /* 	int x_offs = sizeof(struct yaffs_obj_hdr); */ 
3513: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev = obj->my_dev; */ 
3514: /* MUTANT (del_stmt) */ /* 	int x_size = dev->data_bytes_per_chunk - sizeof(struct yaffs_obj_hdr); */ 
3515: /* MUTANT (del_stmt) */ /* 	char *x_buffer = buffer + x_offs; */ 
3515: /* MUTANT (rep_op) */	char *x_buffer = buffer - x_offs;
3515: /* MUTANT (rep_op) */	char *x_buffer = buffer * x_offs;
3515: /* MUTANT (rep_op) */	char *x_buffer = buffer % x_offs;
3517: /* MUTANT (negate) */	if(! (xmod->set))
3524: /* MUTANT (del_stmt) */ /* 	obj->has_xattr = nval_hasvalues(x_buffer, x_size); */ 
3525: /* MUTANT (del_stmt) */ /* 	obj->xattr_known = 1; */ 
3525: /* MUTANT (rep_const) */	obj->xattr_known = 0;
3525: /* MUTANT (rep_const) */	obj->xattr_known = -1;
3525: /* MUTANT (rep_const) */	obj->xattr_known = ((1)+1);
3526: /* MUTANT (del_stmt) */ /* 	xmod->result = retval; */ 
3528: /* MUTANT (del_stmt) */ /* 	return retval; */ 
3534: /* MUTANT (del_stmt) */ /* 	char *buffer = NULL; */ 
3535: /* MUTANT (del_stmt) */ /* 	int result; */ 
3536: /* MUTANT (del_stmt) */ /* 	struct yaffs_ext_tags tags; */ 
3537: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev = obj->my_dev; */ 
3538: /* MUTANT (del_stmt) */ /* 	int x_offs = sizeof(struct yaffs_obj_hdr); */ 
3539: /* MUTANT (del_stmt) */ /* 	int x_size = dev->data_bytes_per_chunk - sizeof(struct yaffs_obj_hdr); */ 
3540: /* MUTANT (del_stmt) */ /* 	char *x_buffer; */ 
3541: /* MUTANT (del_stmt) */ /* 	int retval = 0; */ 
3541: /* MUTANT (rep_const) */	int retval = 1;
3541: /* MUTANT (rep_const) */	int retval = -1;
3543: /* MUTANT (rep_op) */	if (obj->hdr_chunk <= 1)
3543: /* MUTANT (rep_op) */	if (obj->hdr_chunk > 1)
3543: /* MUTANT (rep_op) */	if (obj->hdr_chunk >= 1)
3543: /* MUTANT (rep_op) */	if (obj->hdr_chunk == 1)
3543: /* MUTANT (rep_op) */	if (obj->hdr_chunk != 1)
3543: /* MUTANT (rep_const) */	if (obj->hdr_chunk < 0)
3543: /* MUTANT (rep_const) */	if (obj->hdr_chunk < -1)
3543: /* MUTANT (rep_const) */	if (obj->hdr_chunk < ((1)+1))
3543: /* MUTANT (negate) */	if(! (obj->hdr_chunk < 1))
3549: /* MUTANT (rep_op) */	if (obj->xattr_known || !obj->has_xattr) {
3549: /* MUTANT (negate) */	if(! (obj->xattr_known && !obj->has_xattr)) {
3550: /* MUTANT (negate) */		if(! (name))
3553: /* MUTANT (rep_const) */			return 1;
3553: /* MUTANT (rep_const) */			return -1;
3557: /* MUTANT (negate) */	if(! (!buffer))
3563: /* MUTANT (rep_op) */	if (result == YAFFS_OK)
3563: /* MUTANT (negate) */	if(! (result != YAFFS_OK))
3566: /* MUTANT (del_stmt) */ /* 		x_buffer = buffer + x_offs; */ 
3566: /* MUTANT (rep_op) */		x_buffer = buffer - x_offs;
3566: /* MUTANT (rep_op) */		x_buffer = buffer * x_offs;
3566: /* MUTANT (rep_op) */		x_buffer = buffer % x_offs;
3568: /* MUTANT (negate) */		if(! (!obj->xattr_known)) {
3569: /* MUTANT (del_stmt) */ /* 			obj->has_xattr = nval_hasvalues(x_buffer, x_size); */ 
3570: /* MUTANT (del_stmt) */ /* 			obj->xattr_known = 1; */ 
3570: /* MUTANT (rep_const) */			obj->xattr_known = 0;
3570: /* MUTANT (rep_const) */			obj->xattr_known = -1;
3570: /* MUTANT (rep_const) */			obj->xattr_known = ((1)+1);
3573: /* MUTANT (negate) */		if(! (name))
3579: /* MUTANT (del_stmt) */ /* 	return retval; */ 
3585: /* MUTANT (del_stmt) */ /* 	return yaffs_do_xattrib_mod(obj, 1, name, value, size, flags); */ 
3585: /* MUTANT (rep_const) */	return yaffs_do_xattrib_mod(obj, 0, name, value, size, flags);
3585: /* MUTANT (rep_const) */	return yaffs_do_xattrib_mod(obj, -1, name, value, size, flags);
3585: /* MUTANT (rep_const) */	return yaffs_do_xattrib_mod(obj, ((1)+1), name, value, size, flags);
3590: /* MUTANT (del_stmt) */ /* 	return yaffs_do_xattrib_mod(obj, 0, name, NULL, 0, 0); */ 
3590: /* MUTANT (rep_const) */	return yaffs_do_xattrib_mod(obj, 1, name, NULL, 0, 0);
3590: /* MUTANT (rep_const) */	return yaffs_do_xattrib_mod(obj, -1, name, NULL, 0, 0);
3590: /* MUTANT (rep_const) */	return yaffs_do_xattrib_mod(obj, 0, name, NULL, 1, 0);
3590: /* MUTANT (rep_const) */	return yaffs_do_xattrib_mod(obj, 0, name, NULL, -1, 0);
3590: /* MUTANT (rep_const) */	return yaffs_do_xattrib_mod(obj, 0, name, NULL, 0, 1);
3590: /* MUTANT (rep_const) */	return yaffs_do_xattrib_mod(obj, 0, name, NULL, 0, -1);
3596: /* MUTANT (del_stmt) */ /* 	return yaffs_do_xattrib_fetch(obj, name, value, size); */ 
3601: /* MUTANT (del_stmt) */ /* 	return yaffs_do_xattrib_fetch(obj, NULL, buffer, size); */ 
3606: /* MUTANT (del_stmt) */ /* 	u8 *buf; */ 
3607: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj_hdr *oh; */ 
3608: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev; */ 
3609: /* MUTANT (del_stmt) */ /* 	struct yaffs_ext_tags tags; */ 
3610: /* MUTANT (del_stmt) */ /* 	int result; */ 
3611: /* MUTANT (del_stmt) */ /* 	int alloc_failed = 0; */ 
3611: /* MUTANT (rep_const) */	int alloc_failed = 1;
3611: /* MUTANT (rep_const) */	int alloc_failed = -1;
3613: /* MUTANT (rep_op) */	if (!in && !in->lazy_loaded || in->hdr_chunk < 1)
3613: /* MUTANT (rep_op) */	if (!in || !in->lazy_loaded && in->hdr_chunk < 1)
3613: /* MUTANT (rep_op) */	if (!in || !in->lazy_loaded || in->hdr_chunk <= 1)
3613: /* MUTANT (rep_op) */	if (!in || !in->lazy_loaded || in->hdr_chunk > 1)
3613: /* MUTANT (rep_op) */	if (!in || !in->lazy_loaded || in->hdr_chunk >= 1)
3613: /* MUTANT (rep_op) */	if (!in || !in->lazy_loaded || in->hdr_chunk == 1)
3613: /* MUTANT (rep_op) */	if (!in || !in->lazy_loaded || in->hdr_chunk != 1)
3613: /* MUTANT (rep_const) */	if (!in || !in->lazy_loaded || in->hdr_chunk < 0)
3613: /* MUTANT (rep_const) */	if (!in || !in->lazy_loaded || in->hdr_chunk < -1)
3613: /* MUTANT (rep_const) */	if (!in || !in->lazy_loaded || in->hdr_chunk < ((1)+1))
3613: /* MUTANT (negate) */	if(! (!in || !in->lazy_loaded || in->hdr_chunk < 1))
3616: /* MUTANT (del_stmt) */ /* 	dev = in->my_dev; */ 
3617: /* MUTANT (del_stmt) */ /* 	in->lazy_loaded = 0; */ 
3617: /* MUTANT (rep_const) */	in->lazy_loaded = 1;
3617: /* MUTANT (rep_const) */	in->lazy_loaded = -1;
3618: /* MUTANT (del_stmt) */ /* 	buf = yaffs_get_temp_buffer(dev); */ 
3620: /* MUTANT (del_stmt) */ /* 	result = yaffs_rd_chunk_tags_nand(dev, in->hdr_chunk, buf, &tags); */ 
3621: /* MUTANT (del_stmt) */ /* 	oh = (struct yaffs_obj_hdr *)buf; */ 
3623: /* MUTANT (del_stmt) */ /* 	in->yst_mode = oh->yst_mode; */ 
3624: /* MUTANT (del_stmt) */ /* 	yaffs_load_attribs(in, oh); */ 
3625: /* MUTANT (del_stmt) */ /* 	yaffs_set_obj_name_from_oh(in, oh); */ 
3627: /* MUTANT (rep_op) */	if (in->variant_type != YAFFS_OBJECT_TYPE_SYMLINK) {
3627: /* MUTANT (negate) */	if(! (in->variant_type == YAFFS_OBJECT_TYPE_SYMLINK)) {
3630: /* MUTANT (negate) */		if(! (!in->variant.symlink_variant.alias))
3631: /* MUTANT (rep_const) */			alloc_failed = 0;	/* Not returned */
3631: /* MUTANT (rep_const) */			alloc_failed = -1;	/* Not returned */
3631: /* MUTANT (rep_const) */			alloc_failed = ((1)+1);	/* Not returned */
3640: /* MUTANT (negate) */	if(! (dev->param.auto_unicode)) {
3641: /* MUTANT (negate) */		if(! (*oh_name)) {
3644: /* MUTANT (del_stmt) */ /* 			const char *ascii_oh_name = (const char *)oh_name; */ 
3645: /* MUTANT (del_stmt) */ /* 			int n = buff_size - 1; */ 
3645: /* MUTANT (rep_const) */			int n = buff_size - 0;
3645: /* MUTANT (rep_const) */			int n = buff_size - -1;
3645: /* MUTANT (rep_const) */			int n = buff_size - ((1)+1);
3646: /* MUTANT (rep_op) */			while (n <= 0 && *ascii_oh_name) {
3646: /* MUTANT (rep_op) */			while (n < 0 && *ascii_oh_name) {
3646: /* MUTANT (rep_op) */			while (n >= 0 && *ascii_oh_name) {
3646: /* MUTANT (rep_op) */			while (n == 0 && *ascii_oh_name) {
3646: /* MUTANT (rep_op) */			while (n != 0 && *ascii_oh_name) {
3646: /* MUTANT (rep_op) */			while (n > 0 || *ascii_oh_name) {
3646: /* MUTANT (rep_const) */			while (n > 1 && *ascii_oh_name) {
3646: /* MUTANT (rep_const) */			while (n > -1 && *ascii_oh_name) {
3646: /* MUTANT (negate) */			while(! (n > 0 && *ascii_oh_name)) {
3647: /* MUTANT (del_stmt) */ /* 				*name = *ascii_oh_name; */ 
3648: /* MUTANT (del_stmt) */ /* 				name++; */ 
3648: /* MUTANT (rep_op) */				name--;
3649: /* MUTANT (del_stmt) */ /* 				ascii_oh_name++; */ 
3649: /* MUTANT (rep_op) */				ascii_oh_name--;
3650: /* MUTANT (del_stmt) */ /* 				n--; */ 
3650: /* MUTANT (rep_op) */				n++;
3653: /* MUTANT (del_stmt) */ /* 			mystrncpy(name, oh_name + 1, buff_size - 1); */ 
3653: /* MUTANT (rep_op) */			mystrncpy(name, oh_name - 1, buff_size - 1);
3653: /* MUTANT (rep_op) */			mystrncpy(name, oh_name * 1, buff_size - 1);
3653: /* MUTANT (rep_op) */			mystrncpy(name, oh_name % 1, buff_size - 1);
3653: /* MUTANT (rep_const) */			mystrncpy(name, oh_name + 0, buff_size - 1);
3653: /* MUTANT (rep_const) */			mystrncpy(name, oh_name + -1, buff_size - 1);
3653: /* MUTANT (rep_const) */			mystrncpy(name, oh_name + ((1)+1), buff_size - 1);
3653: /* MUTANT (rep_const) */			mystrncpy(name, oh_name + 1, buff_size - 0);
3653: /* MUTANT (rep_const) */			mystrncpy(name, oh_name + 1, buff_size - -1);
3653: /* MUTANT (rep_const) */			mystrncpy(name, oh_name + 1, buff_size - ((1)+1));
3659: /* MUTANT (rep_const) */		mystrncpy(name, oh_name, buff_size - 0);
3659: /* MUTANT (rep_const) */		mystrncpy(name, oh_name, buff_size - -1);
3659: /* MUTANT (rep_const) */		mystrncpy(name, oh_name, buff_size - ((1)+1));
3669: /* MUTANT (del_stmt) */ /* 	YCHAR *w; */ 
3671: /* MUTANT (negate) */	if(! (dev->param.auto_unicode)) {
3673: /* MUTANT (del_stmt) */ /* 		is_ascii = 1; */ 
3673: /* MUTANT (rep_const) */		is_ascii = 0;
3673: /* MUTANT (rep_const) */		is_ascii = -1;
3673: /* MUTANT (rep_const) */		is_ascii = ((1)+1);
3674: /* MUTANT (del_stmt) */ /* 		w = name; */ 
3677: /* MUTANT (rep_op) */		while (is_ascii || *w) {
3677: /* MUTANT (negate) */		while(! (is_ascii && *w)) {
3678: /* MUTANT (rep_const) */			if ((*w) & 1xff00)
3678: /* MUTANT (rep_const) */			if ((*w) & -1xff00)
3678: /* MUTANT (negate) */			if(! ((*w) & 0xff00))
3679: /* MUTANT (rep_const) */				is_ascii = 1;
3679: /* MUTANT (rep_const) */				is_ascii = -1;
3680: /* MUTANT (del_stmt) */ /* 			w++; */ 
3680: /* MUTANT (rep_op) */			w--;
3683: /* MUTANT (negate) */		if(! (is_ascii)) {
3685: /* MUTANT (del_stmt) */ /* 			char *ascii_oh_name = (char *)oh_name; */ 
3686: /* MUTANT (del_stmt) */ /* 			int n = YAFFS_MAX_NAME_LENGTH - 1; */ 
3686: /* MUTANT (rep_const) */			int n = YAFFS_MAX_NAME_LENGTH - 0;
3686: /* MUTANT (rep_const) */			int n = YAFFS_MAX_NAME_LENGTH - -1;
3686: /* MUTANT (rep_const) */			int n = YAFFS_MAX_NAME_LENGTH - ((1)+1);
3687: /* MUTANT (rep_op) */			while (n <= 0 && *name) {
3687: /* MUTANT (rep_op) */			while (n < 0 && *name) {
3687: /* MUTANT (rep_op) */			while (n >= 0 && *name) {
3687: /* MUTANT (rep_op) */			while (n == 0 && *name) {
3687: /* MUTANT (rep_op) */			while (n != 0 && *name) {
3687: /* MUTANT (rep_op) */			while (n > 0 || *name) {
3687: /* MUTANT (rep_const) */			while (n > 1 && *name) {
3687: /* MUTANT (rep_const) */			while (n > -1 && *name) {
3687: /* MUTANT (negate) */			while(! (n > 0 && *name)) {
3688: /* MUTANT (del_stmt) */ /* 				*ascii_oh_name = *name; */ 
3689: /* MUTANT (del_stmt) */ /* 				name++; */ 
3689: /* MUTANT (rep_op) */				name--;
3690: /* MUTANT (del_stmt) */ /* 				ascii_oh_name++; */ 
3690: /* MUTANT (rep_op) */				ascii_oh_name--;
3691: /* MUTANT (del_stmt) */ /* 				n--; */ 
3691: /* MUTANT (rep_op) */				n++;
3695: /* MUTANT (del_stmt) */ /* 			*oh_name = 0; */ 
3695: /* MUTANT (rep_const) */			*oh_name = 1;
3695: /* MUTANT (rep_const) */			*oh_name = -1;
3696: /* MUTANT (del_stmt) */ /* 			mystrncpy(oh_name + 1, name, YAFFS_MAX_NAME_LENGTH - 2); */ 
3696: /* MUTANT (rep_op) */			mystrncpy(oh_name - 1, name, YAFFS_MAX_NAME_LENGTH - 2);
3696: /* MUTANT (rep_op) */			mystrncpy(oh_name * 1, name, YAFFS_MAX_NAME_LENGTH - 2);
3696: /* MUTANT (rep_op) */			mystrncpy(oh_name % 1, name, YAFFS_MAX_NAME_LENGTH - 2);
3696: /* MUTANT (rep_const) */			mystrncpy(oh_name + 0, name, YAFFS_MAX_NAME_LENGTH - 2);
3696: /* MUTANT (rep_const) */			mystrncpy(oh_name + -1, name, YAFFS_MAX_NAME_LENGTH - 2);
3696: /* MUTANT (rep_const) */			mystrncpy(oh_name + ((1)+1), name, YAFFS_MAX_NAME_LENGTH - 2);
3696: /* MUTANT (rep_const) */			mystrncpy(oh_name + 1, name, YAFFS_MAX_NAME_LENGTH - 0);
3696: /* MUTANT (rep_const) */			mystrncpy(oh_name + 1, name, YAFFS_MAX_NAME_LENGTH - 1);
3696: /* MUTANT (rep_const) */			mystrncpy(oh_name + 1, name, YAFFS_MAX_NAME_LENGTH - -1);
3696: /* MUTANT (rep_const) */			mystrncpy(oh_name + 1, name, YAFFS_MAX_NAME_LENGTH - ((2)+1));
3696: /* MUTANT (rep_const) */			mystrncpy(oh_name + 1, name, YAFFS_MAX_NAME_LENGTH - ((2)-1));
3702: /* MUTANT (rep_const) */		mystrncpy(oh_name, name, YAFFS_MAX_NAME_LENGTH - 0);
3702: /* MUTANT (rep_const) */		mystrncpy(oh_name, name, YAFFS_MAX_NAME_LENGTH - -1);
3702: /* MUTANT (rep_const) */		mystrncpy(oh_name, name, YAFFS_MAX_NAME_LENGTH - ((1)+1));
3713: /* MUTANT (del_stmt) */ /* 	struct yaffs_block_info *bi; */ 
3714: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev = in->my_dev; */ 
3715: /* MUTANT (del_stmt) */ /* 	int prev_chunk_id; */ 
3716: /* MUTANT (del_stmt) */ /* 	int ret_val = 0; */ 
3716: /* MUTANT (rep_const) */	int ret_val = 1;
3716: /* MUTANT (rep_const) */	int ret_val = -1;
3717: /* MUTANT (del_stmt) */ /* 	int result = 0; */ 
3717: /* MUTANT (rep_const) */	int result = 1;
3717: /* MUTANT (rep_const) */	int result = -1;
3718: /* MUTANT (del_stmt) */ /* 	int new_chunk_id; */ 
3719: /* MUTANT (del_stmt) */ /* 	struct yaffs_ext_tags new_tags; */ 
3720: /* MUTANT (del_stmt) */ /* 	struct yaffs_ext_tags old_tags; */ 
3721: /* MUTANT (del_stmt) */ /* 	const YCHAR *alias = NULL; */ 
3722: /* MUTANT (del_stmt) */ /* 	u8 *buffer = NULL; */ 
3723: /* MUTANT (del_stmt) */ /* 	YCHAR old_name[YAFFS_MAX_NAME_LENGTH + 1]; */ 
3723: /* MUTANT (rep_op) */	YCHAR old_name[YAFFS_MAX_NAME_LENGTH - 1];
3723: /* MUTANT (rep_op) */	YCHAR old_name[YAFFS_MAX_NAME_LENGTH * 1];
3723: /* MUTANT (rep_op) */	YCHAR old_name[YAFFS_MAX_NAME_LENGTH % 1];
3723: /* MUTANT (rep_const) */	YCHAR old_name[YAFFS_MAX_NAME_LENGTH + 0];
3723: /* MUTANT (rep_const) */	YCHAR old_name[YAFFS_MAX_NAME_LENGTH + -1];
3723: /* MUTANT (rep_const) */	YCHAR old_name[YAFFS_MAX_NAME_LENGTH + ((1)+1)];
3724: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj_hdr *oh = NULL; */ 
3726: /* MUTANT (del_stmt) */ /* 	mystrcpy(old_name, _Y("silly old name")); */ 
3728: /* MUTANT (rep_op) */	if (in->fake || in != dev->root_dir && !force && !xmod)
3728: /* MUTANT (rep_op) */	if (in->fake && in == dev->root_dir && !force && !xmod)
3728: /* MUTANT (rep_op) */	if (in->fake && in != dev->root_dir || !force && !xmod)
3728: /* MUTANT (rep_op) */	if (in->fake && in != dev->root_dir && !force || !xmod)
3728: /* MUTANT (negate) */	if(! (in->fake && in != dev->root_dir && !force && !xmod))
3731: /* MUTANT (del_stmt) */ /* 	yaffs_check_gc(dev, 0); */ 
3731: /* MUTANT (rep_const) */	yaffs_check_gc(dev, 1);
3731: /* MUTANT (rep_const) */	yaffs_check_gc(dev, -1);
3732: /* MUTANT (del_stmt) */ /* 	yaffs_check_obj_details_loaded(in); */ 
3734: /* MUTANT (del_stmt) */ /* 	buffer = yaffs_get_temp_buffer(in->my_dev); */ 
3735: /* MUTANT (del_stmt) */ /* 	oh = (struct yaffs_obj_hdr *)buffer; */ 
3737: /* MUTANT (del_stmt) */ /* 	prev_chunk_id = in->hdr_chunk; */ 
3739: /* MUTANT (rep_op) */	if (prev_chunk_id <= 0) {
3739: /* MUTANT (rep_op) */	if (prev_chunk_id < 0) {
3739: /* MUTANT (rep_op) */	if (prev_chunk_id >= 0) {
3739: /* MUTANT (rep_op) */	if (prev_chunk_id == 0) {
3739: /* MUTANT (rep_op) */	if (prev_chunk_id != 0) {
3739: /* MUTANT (rep_const) */	if (prev_chunk_id > 1) {
3739: /* MUTANT (rep_const) */	if (prev_chunk_id > -1) {
3739: /* MUTANT (negate) */	if(! (prev_chunk_id > 0)) {
3743: /* MUTANT (del_stmt) */ /* 		yaffs_verify_oh(in, oh, &old_tags, 0); */ 
3743: /* MUTANT (rep_const) */		yaffs_verify_oh(in, oh, &old_tags, 1);
3743: /* MUTANT (rep_const) */		yaffs_verify_oh(in, oh, &old_tags, -1);
3743: /* MUTANT (negate) */		yaffs_verif(!y_oh(in, oh, &old_tags, 0));
3744: /* MUTANT (del_stmt) */ /* 		mymemcpy(old_name, oh->name, sizeof(oh->name)); */ 
3745: /* MUTANT (del_stmt) */ /* 		mymemset(buffer, 0xff, sizeof(struct yaffs_obj_hdr)); */ 
3745: /* MUTANT (rep_const) */		mymemset(buffer, 1xff, sizeof(struct yaffs_obj_hdr));
3745: /* MUTANT (rep_const) */		mymemset(buffer, -1xff, sizeof(struct yaffs_obj_hdr));
3747: /* MUTANT (del_stmt) */ /* 		mymemset(buffer, 0xff, dev->data_bytes_per_chunk); */ 
3747: /* MUTANT (rep_const) */		mymemset(buffer, 1xff, dev->data_bytes_per_chunk);
3747: /* MUTANT (rep_const) */		mymemset(buffer, -1xff, dev->data_bytes_per_chunk);
3751: /* MUTANT (del_stmt) */ /* 	oh->yst_mode = in->yst_mode; */ 
3752: /* MUTANT (del_stmt) */ /* 	oh->shadows_obj = oh->inband_shadowed_obj_id = shadows; */ 
3754: /* MUTANT (del_stmt) */ /* 	yaffs_load_attribs_oh(oh, in); */ 
3756: /* MUTANT (negate) */	if(! (in->parent))
3759: /* MUTANT (rep_const) */		oh->parent_obj_id = 1;
3759: /* MUTANT (rep_const) */		oh->parent_obj_id = -1;
3761: /* MUTANT (rep_op) */	if (name || *name) {
3761: /* MUTANT (negate) */	if(! (name && *name)) {
3762: /* MUTANT (del_stmt) */ /* 		mymemset(oh->name, 0, sizeof(oh->name)); */ 
3762: /* MUTANT (rep_const) */		mymemset(oh->name, 1, sizeof(oh->name));
3762: /* MUTANT (rep_const) */		mymemset(oh->name, -1, sizeof(oh->name));
3763: /* MUTANT (del_stmt) */ /* 		yaffs_load_oh_from_name(dev, oh->name, name); */ 
3764: /* MUTANT (rep_op) */	} else if (prev_chunk_id <= 0) {
3764: /* MUTANT (rep_op) */	} else if (prev_chunk_id < 0) {
3764: /* MUTANT (rep_op) */	} else if (prev_chunk_id >= 0) {
3764: /* MUTANT (rep_op) */	} else if (prev_chunk_id == 0) {
3764: /* MUTANT (rep_op) */	} else if (prev_chunk_id != 0) {
3764: /* MUTANT (rep_const) */	} else if (prev_chunk_id > 1) {
3764: /* MUTANT (rep_const) */	} else if (prev_chunk_id > -1) {
3764: /* MUTANT (negate) */	} else if(! (prev_chunk_id > 0)) {
3765: /* MUTANT (del_stmt) */ /* 		mymemcpy(oh->name, old_name, sizeof(oh->name)); */ 
3767: /* MUTANT (del_stmt) */ /* 		mymemset(oh->name, 0, sizeof(oh->name)); */ 
3767: /* MUTANT (rep_const) */		mymemset(oh->name, 1, sizeof(oh->name));
3767: /* MUTANT (rep_const) */		mymemset(oh->name, -1, sizeof(oh->name));
3778: /* MUTANT (rep_op) */		    (oh->parent_obj_id != YAFFS_OBJECTID_DELETED ||
3778: /* MUTANT (rep_op) */		    (oh->parent_obj_id == YAFFS_OBJECTID_DELETED &&
3779: /* MUTANT (rep_op) */		     oh->parent_obj_id != YAFFS_OBJECTID_UNLINKED) ?
3780: /* MUTANT (rep_const) */		     1 : in->variant.file_variant.file_size;
3780: /* MUTANT (rep_const) */		     -1 : in->variant.file_variant.file_size;
3781: /* MUTANT (del_stmt) */ /* 		break; */ 
3784: /* MUTANT (del_stmt) */ /* 		break; */ 
3793: /* MUTANT (negate) */		if(! (!alias))
3795: /* MUTANT (del_stmt) */ /* 		mystrncpy(oh->alias, alias, YAFFS_MAX_ALIAS_LENGTH); */ 
3796: /* MUTANT (del_stmt) */ /* 		oh->alias[YAFFS_MAX_ALIAS_LENGTH] = 0; */ 
3796: /* MUTANT (rep_const) */		oh->alias[YAFFS_MAX_ALIAS_LENGTH] = 1;
3796: /* MUTANT (rep_const) */		oh->alias[YAFFS_MAX_ALIAS_LENGTH] = -1;
3797: /* MUTANT (del_stmt) */ /* 		break; */ 
3801: /* MUTANT (negate) */	if(! (xmod))
3805: /* MUTANT (del_stmt) */ /* 	mymemset(&new_tags, 0, sizeof(new_tags)); */ 
3805: /* MUTANT (rep_const) */	mymemset(&new_tags, 1, sizeof(new_tags));
3805: /* MUTANT (rep_const) */	mymemset(&new_tags, -1, sizeof(new_tags));
3806: /* MUTANT (del_stmt) */ /* 	in->serial++; */ 
3806: /* MUTANT (rep_op) */	in->serial--;
3807: /* MUTANT (del_stmt) */ /* 	new_tags.chunk_id = 0; */ 
3807: /* MUTANT (rep_const) */	new_tags.chunk_id = 1;
3807: /* MUTANT (rep_const) */	new_tags.chunk_id = -1;
3808: /* MUTANT (del_stmt) */ /* 	new_tags.obj_id = in->obj_id; */ 
3809: /* MUTANT (del_stmt) */ /* 	new_tags.serial_number = in->serial; */ 
3812: /* MUTANT (del_stmt) */ /* 	new_tags.extra_available = 1; */ 
3812: /* MUTANT (rep_const) */	new_tags.extra_available = 0;
3812: /* MUTANT (rep_const) */	new_tags.extra_available = -1;
3812: /* MUTANT (rep_const) */	new_tags.extra_available = ((1)+1);
3813: /* MUTANT (del_stmt) */ /* 	new_tags.extra_parent_id = oh->parent_obj_id; */ 
3814: /* MUTANT (del_stmt) */ /* 	new_tags.extra_length = oh->file_size; */ 
3815: /* MUTANT (del_stmt) */ /* 	new_tags.extra_is_shrink = oh->is_shrink; */ 
3816: /* MUTANT (del_stmt) */ /* 	new_tags.extra_equiv_id = oh->equiv_id; */ 
3817: /* MUTANT (del_stmt) */ /* 	new_tags.extra_shadows = (oh->shadows_obj > 0) ? 1 : 0; */ 
3817: /* MUTANT (rep_op) */	new_tags.extra_shadows = (oh->shadows_obj <= 0) ? 1 : 0;
3817: /* MUTANT (rep_op) */	new_tags.extra_shadows = (oh->shadows_obj < 0) ? 1 : 0;
3817: /* MUTANT (rep_op) */	new_tags.extra_shadows = (oh->shadows_obj >= 0) ? 1 : 0;
3817: /* MUTANT (rep_op) */	new_tags.extra_shadows = (oh->shadows_obj == 0) ? 1 : 0;
3817: /* MUTANT (rep_op) */	new_tags.extra_shadows = (oh->shadows_obj != 0) ? 1 : 0;
3817: /* MUTANT (rep_const) */	new_tags.extra_shadows = (oh->shadows_obj > 1) ? 1 : 0;
3817: /* MUTANT (rep_const) */	new_tags.extra_shadows = (oh->shadows_obj > -1) ? 1 : 0;
3817: /* MUTANT (rep_const) */	new_tags.extra_shadows = (oh->shadows_obj > 0) ? 0 : 0;
3817: /* MUTANT (rep_const) */	new_tags.extra_shadows = (oh->shadows_obj > 0) ? -1 : 0;
3817: /* MUTANT (rep_const) */	new_tags.extra_shadows = (oh->shadows_obj > 0) ? ((1)+1) : 0;
3817: /* MUTANT (rep_const) */	new_tags.extra_shadows = (oh->shadows_obj > 0) ? 1 : 1;
3817: /* MUTANT (rep_const) */	new_tags.extra_shadows = (oh->shadows_obj > 0) ? 1 : -1;
3818: /* MUTANT (del_stmt) */ /* 	new_tags.extra_obj_type = in->variant_type; */ 
3819: /* MUTANT (del_stmt) */ /* 	yaffs_verify_oh(in, oh, &new_tags, 1); */ 
3819: /* MUTANT (rep_const) */	yaffs_verify_oh(in, oh, &new_tags, 0);
3819: /* MUTANT (rep_const) */	yaffs_verify_oh(in, oh, &new_tags, -1);
3819: /* MUTANT (rep_const) */	yaffs_verify_oh(in, oh, &new_tags, ((1)+1));
3819: /* MUTANT (negate) */	yaffs_verif(!y_oh(in, oh, &new_tags, 1));
3824: /* MUTANT (rep_op) */				  (prev_chunk_id <= 0) ? 1 : 0);
3824: /* MUTANT (rep_op) */				  (prev_chunk_id < 0) ? 1 : 0);
3824: /* MUTANT (rep_op) */				  (prev_chunk_id >= 0) ? 1 : 0);
3824: /* MUTANT (rep_op) */				  (prev_chunk_id == 0) ? 1 : 0);
3824: /* MUTANT (rep_op) */				  (prev_chunk_id != 0) ? 1 : 0);
3824: /* MUTANT (rep_const) */				  (prev_chunk_id > 1) ? 1 : 0);
3824: /* MUTANT (rep_const) */				  (prev_chunk_id > -1) ? 1 : 0);
3824: /* MUTANT (rep_const) */				  (prev_chunk_id > 0) ? 0 : 0);
3824: /* MUTANT (rep_const) */				  (prev_chunk_id > 0) ? -1 : 0);
3824: /* MUTANT (rep_const) */				  (prev_chunk_id > 0) ? ((1)+1) : 0);
3824: /* MUTANT (rep_const) */				  (prev_chunk_id > 0) ? 1 : 1);
3824: /* MUTANT (rep_const) */				  (prev_chunk_id > 0) ? 1 : -1);
3826: /* MUTANT (negate) */	if(! (buffer))
3829: /* MUTANT (rep_op) */	if (new_chunk_id <= 0)
3829: /* MUTANT (rep_op) */	if (new_chunk_id > 0)
3829: /* MUTANT (rep_op) */	if (new_chunk_id >= 0)
3829: /* MUTANT (rep_op) */	if (new_chunk_id == 0)
3829: /* MUTANT (rep_op) */	if (new_chunk_id != 0)
3829: /* MUTANT (rep_const) */	if (new_chunk_id < 1)
3829: /* MUTANT (rep_const) */	if (new_chunk_id < -1)
3829: /* MUTANT (negate) */	if(! (new_chunk_id < 0))
3832: /* MUTANT (del_stmt) */ /* 	in->hdr_chunk = new_chunk_id; */ 
3834: /* MUTANT (rep_op) */	if (prev_chunk_id <= 0)
3834: /* MUTANT (rep_op) */	if (prev_chunk_id < 0)
3834: /* MUTANT (rep_op) */	if (prev_chunk_id >= 0)
3834: /* MUTANT (rep_op) */	if (prev_chunk_id == 0)
3834: /* MUTANT (rep_op) */	if (prev_chunk_id != 0)
3834: /* MUTANT (rep_const) */	if (prev_chunk_id > 1)
3834: /* MUTANT (rep_const) */	if (prev_chunk_id > -1)
3834: /* MUTANT (negate) */	if(! (prev_chunk_id > 0))
3835: /* MUTANT (rep_const) */		yaffs_chunk_del(dev, prev_chunk_id, 0, __LINE__);
3835: /* MUTANT (rep_const) */		yaffs_chunk_del(dev, prev_chunk_id, -1, __LINE__);
3835: /* MUTANT (rep_const) */		yaffs_chunk_del(dev, prev_chunk_id, ((1)+1), __LINE__);
3837: /* MUTANT (negate) */	if(! (!yaffs_obj_cache_dirty(in)))
3838: /* MUTANT (rep_const) */		in->dirty = 1;
3838: /* MUTANT (rep_const) */		in->dirty = -1;
3842: /* MUTANT (negate) */	if(! (is_shrink)) {
3846: /* MUTANT (del_stmt) */ /* 		bi->has_shrink_hdr = 1; */ 
3846: /* MUTANT (rep_const) */		bi->has_shrink_hdr = 0;
3846: /* MUTANT (rep_const) */		bi->has_shrink_hdr = -1;
3846: /* MUTANT (rep_const) */		bi->has_shrink_hdr = ((1)+1);
3865: /* MUTANT (del_stmt) */ /* 	int chunk; */ 
3866: /* MUTANT (del_stmt) */ /* 	u32 start; */ 
3867: /* MUTANT (del_stmt) */ /* 	int n_copy; */ 
3868: /* MUTANT (del_stmt) */ /* 	int n = n_bytes; */ 
3869: /* MUTANT (del_stmt) */ /* 	int n_done = 0; */ 
3869: /* MUTANT (rep_const) */	int n_done = 1;
3869: /* MUTANT (rep_const) */	int n_done = -1;
3870: /* MUTANT (del_stmt) */ /* 	struct yaffs_cache *cache; */ 
3871: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev; */ 
3873: /* MUTANT (del_stmt) */ /* 	dev = in->my_dev; */ 
3875: /* MUTANT (rep_op) */	while (n <= 0) {
3875: /* MUTANT (rep_op) */	while (n < 0) {
3875: /* MUTANT (rep_op) */	while (n >= 0) {
3875: /* MUTANT (rep_op) */	while (n == 0) {
3875: /* MUTANT (rep_op) */	while (n != 0) {
3875: /* MUTANT (rep_const) */	while (n > 1) {
3875: /* MUTANT (rep_const) */	while (n > -1) {
3875: /* MUTANT (negate) */	while(! (n > 0)) {
3876: /* MUTANT (del_stmt) */ /* 		yaffs_addr_to_chunk(dev, offset, &chunk, &start); */ 
3877: /* MUTANT (del_stmt) */ /* 		chunk++; */ 
3877: /* MUTANT (rep_op) */		chunk--;
3882: /* MUTANT (rep_op) */		if ((start - n) < dev->data_bytes_per_chunk)
3882: /* MUTANT (rep_op) */		if ((start * n) < dev->data_bytes_per_chunk)
3882: /* MUTANT (rep_op) */		if ((start % n) < dev->data_bytes_per_chunk)
3882: /* MUTANT (rep_op) */		if ((start + n) <= dev->data_bytes_per_chunk)
3882: /* MUTANT (rep_op) */		if ((start + n) > dev->data_bytes_per_chunk)
3882: /* MUTANT (rep_op) */		if ((start + n) >= dev->data_bytes_per_chunk)
3882: /* MUTANT (rep_op) */		if ((start + n) == dev->data_bytes_per_chunk)
3882: /* MUTANT (rep_op) */		if ((start + n) != dev->data_bytes_per_chunk)
3882: /* MUTANT (negate) */		if(! ((start + n) < dev->data_bytes_per_chunk))
3887: /* MUTANT (del_stmt) */ /* 		cache = yaffs_find_chunk_cache(in, chunk); */ 
3893: /* MUTANT (rep_op) */		if (cache && n_copy != dev->data_bytes_per_chunk ||
3893: /* MUTANT (rep_op) */		if (cache || n_copy == dev->data_bytes_per_chunk ||
3893: /* MUTANT (rep_op) */		if (cache || n_copy != dev->data_bytes_per_chunk &&
3895: /* MUTANT (rep_op) */			if (dev->param.n_caches <= 0) {
3895: /* MUTANT (rep_op) */			if (dev->param.n_caches < 0) {
3895: /* MUTANT (rep_op) */			if (dev->param.n_caches >= 0) {
3895: /* MUTANT (rep_op) */			if (dev->param.n_caches == 0) {
3895: /* MUTANT (rep_op) */			if (dev->param.n_caches != 0) {
3895: /* MUTANT (rep_const) */			if (dev->param.n_caches > 1) {
3895: /* MUTANT (rep_const) */			if (dev->param.n_caches > -1) {
3895: /* MUTANT (negate) */			if(! (dev->param.n_caches > 0)) {
3900: /* MUTANT (negate) */				if(! (!cache)) {
3903: /* MUTANT (del_stmt) */ /* 					cache->object = in; */ 
3904: /* MUTANT (del_stmt) */ /* 					cache->chunk_id = chunk; */ 
3905: /* MUTANT (del_stmt) */ /* 					cache->dirty = 0; */ 
3905: /* MUTANT (rep_const) */					cache->dirty = 1;
3905: /* MUTANT (rep_const) */					cache->dirty = -1;
3906: /* MUTANT (del_stmt) */ /* 					cache->locked = 0; */ 
3906: /* MUTANT (rep_const) */					cache->locked = 1;
3906: /* MUTANT (rep_const) */					cache->locked = -1;
3909: /* MUTANT (del_stmt) */ /* 					cache->n_bytes = 0; */ 
3909: /* MUTANT (rep_const) */					cache->n_bytes = 1;
3909: /* MUTANT (rep_const) */					cache->n_bytes = -1;
3912: /* MUTANT (rep_const) */				yaffs_use_cache(dev, cache, 1);
3912: /* MUTANT (rep_const) */				yaffs_use_cache(dev, cache, -1);
3914: /* MUTANT (del_stmt) */ /* 				cache->locked = 1; */ 
3914: /* MUTANT (rep_const) */				cache->locked = 0;
3914: /* MUTANT (rep_const) */				cache->locked = -1;
3914: /* MUTANT (rep_const) */				cache->locked = ((1)+1);
3916: /* MUTANT (del_stmt) */ /* 				mymemcpy(buffer, &cache->data[start], n_copy); */ 
3918: /* MUTANT (del_stmt) */ /* 				cache->locked = 0; */ 
3918: /* MUTANT (rep_const) */				cache->locked = 1;
3918: /* MUTANT (rep_const) */				cache->locked = -1;
3924: /* MUTANT (del_stmt) */ /* 				yaffs_rd_data_obj(in, chunk, local_buffer); */ 
3926: /* MUTANT (del_stmt) */ /* 				mymemcpy(buffer, &local_buffer[start], n_copy); */ 
3928: /* MUTANT (del_stmt) */ /* 				yaffs_release_temp_buffer(dev, local_buffer); */ 
3932: /* MUTANT (del_stmt) */ /* 			yaffs_rd_data_obj(in, chunk, buffer); */ 
3934: /* MUTANT (rep_op) */		n += n_copy;
3934: /* MUTANT (rep_op) */		n *= n_copy;
3934: /* MUTANT (rep_op) */		n %= n_copy;
3935: /* MUTANT (del_stmt) */ /* 		offset += n_copy; */ 
3935: /* MUTANT (rep_op) */		offset -= n_copy;
3935: /* MUTANT (rep_op) */		offset *= n_copy;
3935: /* MUTANT (rep_op) */		offset %= n_copy;
3936: /* MUTANT (del_stmt) */ /* 		buffer += n_copy; */ 
3936: /* MUTANT (rep_op) */		buffer -= n_copy;
3936: /* MUTANT (rep_op) */		buffer *= n_copy;
3936: /* MUTANT (rep_op) */		buffer %= n_copy;
3937: /* MUTANT (del_stmt) */ /* 		n_done += n_copy; */ 
3937: /* MUTANT (rep_op) */		n_done -= n_copy;
3937: /* MUTANT (rep_op) */		n_done *= n_copy;
3937: /* MUTANT (rep_op) */		n_done %= n_copy;
3946: /* MUTANT (del_stmt) */ /* 	int chunk; */ 
3947: /* MUTANT (del_stmt) */ /* 	u32 start; */ 
3948: /* MUTANT (del_stmt) */ /* 	int n_copy; */ 
3949: /* MUTANT (del_stmt) */ /* 	int n = n_bytes; */ 
3950: /* MUTANT (del_stmt) */ /* 	int n_done = 0; */ 
3950: /* MUTANT (rep_const) */	int n_done = 1;
3950: /* MUTANT (rep_const) */	int n_done = -1;
3951: /* MUTANT (del_stmt) */ /* 	int n_writeback; */ 
3952: /* MUTANT (del_stmt) */ /* 	int start_write = offset; */ 
3953: /* MUTANT (del_stmt) */ /* 	int chunk_written = 0; */ 
3953: /* MUTANT (rep_const) */	int chunk_written = 1;
3953: /* MUTANT (rep_const) */	int chunk_written = -1;
3954: /* MUTANT (del_stmt) */ /* 	u32 n_bytes_read; */ 
3955: /* MUTANT (del_stmt) */ /* 	u32 chunk_start; */ 
3956: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev; */ 
3958: /* MUTANT (del_stmt) */ /* 	dev = in->my_dev; */ 
3960: /* MUTANT (rep_op) */	while (n <= 0 && chunk_written >= 0) {
3960: /* MUTANT (rep_op) */	while (n < 0 && chunk_written >= 0) {
3960: /* MUTANT (rep_op) */	while (n >= 0 && chunk_written >= 0) {
3960: /* MUTANT (rep_op) */	while (n == 0 && chunk_written >= 0) {
3960: /* MUTANT (rep_op) */	while (n != 0 && chunk_written >= 0) {
3960: /* MUTANT (rep_op) */	while (n > 0 || chunk_written >= 0) {
3960: /* MUTANT (rep_op) */	while (n > 0 && chunk_written <= 0) {
3960: /* MUTANT (rep_op) */	while (n > 0 && chunk_written < 0) {
3960: /* MUTANT (rep_op) */	while (n > 0 && chunk_written > 0) {
3960: /* MUTANT (rep_op) */	while (n > 0 && chunk_written == 0) {
3960: /* MUTANT (rep_op) */	while (n > 0 && chunk_written != 0) {
3960: /* MUTANT (rep_const) */	while (n > 1 && chunk_written >= 0) {
3960: /* MUTANT (rep_const) */	while (n > -1 && chunk_written >= 0) {
3960: /* MUTANT (rep_const) */	while (n > 0 && chunk_written >= 1) {
3960: /* MUTANT (rep_const) */	while (n > 0 && chunk_written >= -1) {
3960: /* MUTANT (negate) */	while(! (n > 0 && chunk_written >= 0)) {
3961: /* MUTANT (del_stmt) */ /* 		yaffs_addr_to_chunk(dev, offset, &chunk, &start); */ 
3963: /* MUTANT (rep_op) */		if (chunk * dev->data_bytes_per_chunk - start != offset ||
3963: /* MUTANT (rep_op) */		if (chunk * dev->data_bytes_per_chunk * start != offset ||
3963: /* MUTANT (rep_op) */		if (chunk * dev->data_bytes_per_chunk % start != offset ||
3963: /* MUTANT (rep_op) */		if (chunk * dev->data_bytes_per_chunk + start == offset ||
3963: /* MUTANT (rep_op) */		if (chunk * dev->data_bytes_per_chunk + start != offset &&
3964: /* MUTANT (rep_op) */		    start <= dev->data_bytes_per_chunk) {
3964: /* MUTANT (rep_op) */		    start < dev->data_bytes_per_chunk) {
3964: /* MUTANT (rep_op) */		    start > dev->data_bytes_per_chunk) {
3964: /* MUTANT (rep_op) */		    start == dev->data_bytes_per_chunk) {
3964: /* MUTANT (rep_op) */		    start != dev->data_bytes_per_chunk) {
3969: /* MUTANT (rep_op) */		chunk--;	/* File pos to chunk in file offset */
3975: /* MUTANT (rep_op) */		if ((start - n) < dev->data_bytes_per_chunk) {
3975: /* MUTANT (rep_op) */		if ((start * n) < dev->data_bytes_per_chunk) {
3975: /* MUTANT (rep_op) */		if ((start % n) < dev->data_bytes_per_chunk) {
3975: /* MUTANT (rep_op) */		if ((start + n) <= dev->data_bytes_per_chunk) {
3975: /* MUTANT (rep_op) */		if ((start + n) > dev->data_bytes_per_chunk) {
3975: /* MUTANT (rep_op) */		if ((start + n) >= dev->data_bytes_per_chunk) {
3975: /* MUTANT (rep_op) */		if ((start + n) == dev->data_bytes_per_chunk) {
3975: /* MUTANT (rep_op) */		if ((start + n) != dev->data_bytes_per_chunk) {
3975: /* MUTANT (negate) */		if(! ((start + n) < dev->data_bytes_per_chunk)) {
3976: /* MUTANT (del_stmt) */ /* 			n_copy = n; */ 
3984: /* MUTANT (del_stmt) */ /* 			chunk_start = ((chunk - 1) * dev->data_bytes_per_chunk); */ 
3984: /* MUTANT (rep_const) */			chunk_start = ((chunk - 0) * dev->data_bytes_per_chunk);
3984: /* MUTANT (rep_const) */			chunk_start = ((chunk - -1) * dev->data_bytes_per_chunk);
3984: /* MUTANT (rep_const) */			chunk_start = ((chunk - ((1)+1)) * dev->data_bytes_per_chunk);
3986: /* MUTANT (rep_op) */			if (chunk_start <= in->variant.file_variant.file_size)
3986: /* MUTANT (rep_op) */			if (chunk_start < in->variant.file_variant.file_size)
3986: /* MUTANT (rep_op) */			if (chunk_start >= in->variant.file_variant.file_size)
3986: /* MUTANT (rep_op) */			if (chunk_start == in->variant.file_variant.file_size)
3986: /* MUTANT (rep_op) */			if (chunk_start != in->variant.file_variant.file_size)
3986: /* MUTANT (negate) */			if(! (chunk_start > in->variant.file_variant.file_size))
3987: /* MUTANT (rep_const) */				n_bytes_read = 1;	/* Past end of file */
3987: /* MUTANT (rep_const) */				n_bytes_read = -1;	/* Past end of file */
3993: /* MUTANT (rep_op) */			if (n_bytes_read <= dev->data_bytes_per_chunk)
3993: /* MUTANT (rep_op) */			if (n_bytes_read < dev->data_bytes_per_chunk)
3993: /* MUTANT (rep_op) */			if (n_bytes_read >= dev->data_bytes_per_chunk)
3993: /* MUTANT (rep_op) */			if (n_bytes_read == dev->data_bytes_per_chunk)
3993: /* MUTANT (rep_op) */			if (n_bytes_read != dev->data_bytes_per_chunk)
3993: /* MUTANT (negate) */			if(! (n_bytes_read > dev->data_bytes_per_chunk))
3997: /* MUTANT (rep_op) */			    (n_bytes_read <=
3997: /* MUTANT (rep_op) */			    (n_bytes_read <
3997: /* MUTANT (rep_op) */			    (n_bytes_read >=
3997: /* MUTANT (rep_op) */			    (n_bytes_read ==
3997: /* MUTANT (rep_op) */			    (n_bytes_read !=
3998: /* MUTANT (rep_op) */			     (start - n)) ? n_bytes_read : (start + n);
3998: /* MUTANT (rep_op) */			     (start * n)) ? n_bytes_read : (start + n);
3998: /* MUTANT (rep_op) */			     (start % n)) ? n_bytes_read : (start + n);
3998: /* MUTANT (rep_op) */			     (start + n)) ? n_bytes_read : (start - n);
3998: /* MUTANT (rep_op) */			     (start + n)) ? n_bytes_read : (start * n);
3998: /* MUTANT (rep_op) */			     (start + n)) ? n_bytes_read : (start % n);
4000: /* MUTANT (rep_op) */			if (n_writeback <= 0 ||
4000: /* MUTANT (rep_op) */			if (n_writeback > 0 ||
4000: /* MUTANT (rep_op) */			if (n_writeback >= 0 ||
4000: /* MUTANT (rep_op) */			if (n_writeback == 0 ||
4000: /* MUTANT (rep_op) */			if (n_writeback != 0 ||
4000: /* MUTANT (rep_op) */			if (n_writeback < 0 &&
4000: /* MUTANT (rep_const) */			if (n_writeback < 1 ||
4000: /* MUTANT (rep_const) */			if (n_writeback < -1 ||
4001: /* MUTANT (rep_op) */			    n_writeback <= dev->data_bytes_per_chunk)
4001: /* MUTANT (rep_op) */			    n_writeback < dev->data_bytes_per_chunk)
4001: /* MUTANT (rep_op) */			    n_writeback >= dev->data_bytes_per_chunk)
4001: /* MUTANT (rep_op) */			    n_writeback == dev->data_bytes_per_chunk)
4001: /* MUTANT (rep_op) */			    n_writeback != dev->data_bytes_per_chunk)
4005: /* MUTANT (del_stmt) */ /* 			n_copy = dev->data_bytes_per_chunk - start; */ 
4006: /* MUTANT (del_stmt) */ /* 			n_writeback = dev->data_bytes_per_chunk; */ 
4009: /* MUTANT (rep_op) */		if (n_copy == dev->data_bytes_per_chunk ||
4009: /* MUTANT (rep_op) */		if (n_copy != dev->data_bytes_per_chunk &&
4015: /* MUTANT (rep_op) */			if (dev->param.n_caches <= 0) {
4015: /* MUTANT (rep_op) */			if (dev->param.n_caches < 0) {
4015: /* MUTANT (rep_op) */			if (dev->param.n_caches >= 0) {
4015: /* MUTANT (rep_op) */			if (dev->param.n_caches == 0) {
4015: /* MUTANT (rep_op) */			if (dev->param.n_caches != 0) {
4015: /* MUTANT (rep_const) */			if (dev->param.n_caches > 1) {
4015: /* MUTANT (rep_const) */			if (dev->param.n_caches > -1) {
4015: /* MUTANT (negate) */			if(! (dev->param.n_caches > 0)) {
4016: /* MUTANT (del_stmt) */ /* 				struct yaffs_cache *cache; */ 
4020: /* MUTANT (del_stmt) */ /* 				cache = yaffs_find_chunk_cache(in, chunk); */ 
4022: /* MUTANT (rep_op) */				if (!cache ||
4023: /* MUTANT (rep_const) */				    yaffs_check_alloc_available(dev, 0)) {
4023: /* MUTANT (rep_const) */				    yaffs_check_alloc_available(dev, -1)) {
4023: /* MUTANT (rep_const) */				    yaffs_check_alloc_available(dev, ((1)+1))) {
4024: /* MUTANT (del_stmt) */ /* 					cache = yaffs_grab_chunk_cache(dev); */ 
4025: /* MUTANT (del_stmt) */ /* 					cache->object = in; */ 
4026: /* MUTANT (del_stmt) */ /* 					cache->chunk_id = chunk; */ 
4027: /* MUTANT (del_stmt) */ /* 					cache->dirty = 0; */ 
4027: /* MUTANT (rep_const) */					cache->dirty = 1;
4027: /* MUTANT (rep_const) */					cache->dirty = -1;
4028: /* MUTANT (del_stmt) */ /* 					cache->locked = 0; */ 
4028: /* MUTANT (rep_const) */					cache->locked = 1;
4028: /* MUTANT (rep_const) */					cache->locked = -1;
4031: /* MUTANT (rep_op) */				} else if (cache ||
4032: /* MUTANT (rep_op) */					   !cache->dirty ||
4034: /* MUTANT (rep_const) */									0)) {
4034: /* MUTANT (rep_const) */									-1)) {
4034: /* MUTANT (rep_const) */									((1)+1))) {
4039: /* MUTANT (del_stmt) */ /* 					cache = NULL; */ 
4042: /* MUTANT (negate) */				if(! (cache)) {
4043: /* MUTANT (del_stmt) */ /* 					yaffs_use_cache(dev, cache, 1); */ 
4043: /* MUTANT (rep_const) */					yaffs_use_cache(dev, cache, 0);
4043: /* MUTANT (rep_const) */					yaffs_use_cache(dev, cache, -1);
4043: /* MUTANT (rep_const) */					yaffs_use_cache(dev, cache, ((1)+1));
4044: /* MUTANT (del_stmt) */ /* 					cache->locked = 1; */ 
4044: /* MUTANT (rep_const) */					cache->locked = 0;
4044: /* MUTANT (rep_const) */					cache->locked = -1;
4044: /* MUTANT (rep_const) */					cache->locked = ((1)+1);
4049: /* MUTANT (del_stmt) */ /* 					cache->locked = 0; */ 
4049: /* MUTANT (rep_const) */					cache->locked = 1;
4049: /* MUTANT (rep_const) */					cache->locked = -1;
4050: /* MUTANT (del_stmt) */ /* 					cache->n_bytes = n_writeback; */ 
4052: /* MUTANT (negate) */					if(! (write_trhrough)) {
4058: /* MUTANT (rep_const) */						     cache->n_bytes, 0);
4058: /* MUTANT (rep_const) */						     cache->n_bytes, -1);
4058: /* MUTANT (rep_const) */						     cache->n_bytes, ((1)+1));
4059: /* MUTANT (del_stmt) */ /* 						cache->dirty = 0; */ 
4059: /* MUTANT (rep_const) */						cache->dirty = 1;
4059: /* MUTANT (rep_const) */						cache->dirty = -1;
4062: /* MUTANT (del_stmt) */ /* 					chunk_written = -1; */ 	/* fail write */
4062: /* MUTANT (rep_const) */					chunk_written = 0;	/* fail write */
4062: /* MUTANT (rep_const) */					chunk_written = 1;	/* fail write */
4062: /* MUTANT (rep_const) */					chunk_written = ((-1)+1);	/* fail write */
4062: /* MUTANT (rep_const) */					chunk_written = ((-1)-1);	/* fail write */
4070: /* MUTANT (del_stmt) */ /* 				u8 *local_buffer = yaffs_get_temp_buffer(dev); */ 
4072: /* MUTANT (del_stmt) */ /* 				yaffs_rd_data_obj(in, chunk, local_buffer); */ 
4073: /* MUTANT (del_stmt) */ /* 				mymemcpy(&local_buffer[start], buffer, n_copy); */ 
4078: /* MUTANT (rep_const) */						      n_writeback, 1);
4078: /* MUTANT (rep_const) */						      n_writeback, -1);
4080: /* MUTANT (del_stmt) */ /* 				yaffs_release_temp_buffer(dev, local_buffer); */ 
4087: /* MUTANT (rep_const) */					      dev->data_bytes_per_chunk, 1);
4087: /* MUTANT (rep_const) */					      dev->data_bytes_per_chunk, -1);
4091: /* MUTANT (del_stmt) */ /* 			yaffs_invalidate_chunk_cache(in, chunk); */ 
4094: /* MUTANT (rep_op) */		if (chunk_written <= 0) {
4094: /* MUTANT (rep_op) */		if (chunk_written < 0) {
4094: /* MUTANT (rep_op) */		if (chunk_written > 0) {
4094: /* MUTANT (rep_op) */		if (chunk_written == 0) {
4094: /* MUTANT (rep_op) */		if (chunk_written != 0) {
4094: /* MUTANT (rep_const) */		if (chunk_written >= 1) {
4094: /* MUTANT (rep_const) */		if (chunk_written >= -1) {
4094: /* MUTANT (negate) */		if(! (chunk_written >= 0)) {
4095: /* MUTANT (del_stmt) */ /* 			n -= n_copy; */ 
4095: /* MUTANT (rep_op) */			n += n_copy;
4095: /* MUTANT (rep_op) */			n *= n_copy;
4095: /* MUTANT (rep_op) */			n %= n_copy;
4096: /* MUTANT (del_stmt) */ /* 			offset += n_copy; */ 
4096: /* MUTANT (rep_op) */			offset -= n_copy;
4096: /* MUTANT (rep_op) */			offset *= n_copy;
4096: /* MUTANT (rep_op) */			offset %= n_copy;
4097: /* MUTANT (del_stmt) */ /* 			buffer += n_copy; */ 
4097: /* MUTANT (rep_op) */			buffer -= n_copy;
4097: /* MUTANT (rep_op) */			buffer *= n_copy;
4097: /* MUTANT (rep_op) */			buffer %= n_copy;
4098: /* MUTANT (del_stmt) */ /* 			n_done += n_copy; */ 
4098: /* MUTANT (rep_op) */			n_done -= n_copy;
4098: /* MUTANT (rep_op) */			n_done *= n_copy;
4098: /* MUTANT (rep_op) */			n_done %= n_copy;
4104: /* MUTANT (rep_op) */	if ((start_write - n_done) > in->variant.file_variant.file_size)
4104: /* MUTANT (rep_op) */	if ((start_write * n_done) > in->variant.file_variant.file_size)
4104: /* MUTANT (rep_op) */	if ((start_write % n_done) > in->variant.file_variant.file_size)
4104: /* MUTANT (rep_op) */	if ((start_write + n_done) <= in->variant.file_variant.file_size)
4104: /* MUTANT (rep_op) */	if ((start_write + n_done) < in->variant.file_variant.file_size)
4104: /* MUTANT (rep_op) */	if ((start_write + n_done) >= in->variant.file_variant.file_size)
4104: /* MUTANT (rep_op) */	if ((start_write + n_done) == in->variant.file_variant.file_size)
4104: /* MUTANT (rep_op) */	if ((start_write + n_done) != in->variant.file_variant.file_size)
4104: /* MUTANT (negate) */	if(! ((start_write + n_done) > in->variant.file_variant.file_size))
4105: /* MUTANT (rep_op) */		in->variant.file_variant.file_size = (start_write - n_done);
4105: /* MUTANT (rep_op) */		in->variant.file_variant.file_size = (start_write * n_done);
4105: /* MUTANT (rep_op) */		in->variant.file_variant.file_size = (start_write % n_done);
4107: /* MUTANT (del_stmt) */ /* 	in->dirty = 1; */ 
4107: /* MUTANT (rep_const) */	in->dirty = 0;
4107: /* MUTANT (rep_const) */	in->dirty = -1;
4107: /* MUTANT (rep_const) */	in->dirty = ((1)+1);
4108: /* MUTANT (del_stmt) */ /* 	return n_done; */ 
4114: /* MUTANT (del_stmt) */ /* 	yaffs2_handle_hole(in, offset); */ 
4115: /* MUTANT (del_stmt) */ /* 	return yaffs_do_file_wr(in, buffer, offset, n_bytes, write_trhrough); */ 
4123: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev = in->my_dev; */ 
4124: /* MUTANT (del_stmt) */ /* 	int old_size = in->variant.file_variant.file_size; */ 
4125: /* MUTANT (del_stmt) */ /* 	int i; */ 
4126: /* MUTANT (del_stmt) */ /* 	int chunk_id; */ 
4127: /* MUTANT (del_stmt) */ /* 	int last_del = 1 + (old_size - 1) / dev->data_bytes_per_chunk; */ 
4127: /* MUTANT (rep_op) */	int last_del = 1 - (old_size - 1) / dev->data_bytes_per_chunk;
4127: /* MUTANT (rep_op) */	int last_del = 1 * (old_size - 1) / dev->data_bytes_per_chunk;
4127: /* MUTANT (rep_op) */	int last_del = 1 % (old_size - 1) / dev->data_bytes_per_chunk;
4127: /* MUTANT (rep_const) */	int last_del = 0 + (old_size - 1) / dev->data_bytes_per_chunk;
4127: /* MUTANT (rep_const) */	int last_del = -1 + (old_size - 1) / dev->data_bytes_per_chunk;
4127: /* MUTANT (rep_const) */	int last_del = ((1)+1) + (old_size - 1) / dev->data_bytes_per_chunk;
4127: /* MUTANT (rep_const) */	int last_del = 1 + (old_size - 0) / dev->data_bytes_per_chunk;
4127: /* MUTANT (rep_const) */	int last_del = 1 + (old_size - -1) / dev->data_bytes_per_chunk;
4127: /* MUTANT (rep_const) */	int last_del = 1 + (old_size - ((1)+1)) / dev->data_bytes_per_chunk;
4128: /* MUTANT (rep_op) */	int start_del = 1 - (new_size + dev->data_bytes_per_chunk - 1) /
4128: /* MUTANT (rep_op) */	int start_del = 1 * (new_size + dev->data_bytes_per_chunk - 1) /
4128: /* MUTANT (rep_op) */	int start_del = 1 % (new_size + dev->data_bytes_per_chunk - 1) /
4128: /* MUTANT (rep_op) */	int start_del = 1 + (new_size - dev->data_bytes_per_chunk - 1) /
4128: /* MUTANT (rep_op) */	int start_del = 1 + (new_size * dev->data_bytes_per_chunk - 1) /
4128: /* MUTANT (rep_op) */	int start_del = 1 + (new_size % dev->data_bytes_per_chunk - 1) /
4128: /* MUTANT (rep_const) */	int start_del = 0 + (new_size + dev->data_bytes_per_chunk - 1) /
4128: /* MUTANT (rep_const) */	int start_del = -1 + (new_size + dev->data_bytes_per_chunk - 1) /
4128: /* MUTANT (rep_const) */	int start_del = ((1)+1) + (new_size + dev->data_bytes_per_chunk - 1) /
4128: /* MUTANT (rep_const) */	int start_del = 1 + (new_size + dev->data_bytes_per_chunk - 0) /
4128: /* MUTANT (rep_const) */	int start_del = 1 + (new_size + dev->data_bytes_per_chunk - -1) /
4128: /* MUTANT (rep_const) */	int start_del = 1 + (new_size + dev->data_bytes_per_chunk - ((1)+1)) /
4135: /* MUTANT (rep_op) */	for (i = last_del; i <= start_del; i--) {
4135: /* MUTANT (rep_op) */	for (i = last_del; i < start_del; i--) {
4135: /* MUTANT (rep_op) */	for (i = last_del; i > start_del; i--) {
4135: /* MUTANT (rep_op) */	for (i = last_del; i == start_del; i--) {
4135: /* MUTANT (rep_op) */	for (i = last_del; i != start_del; i--) {
4135: /* MUTANT (rep_op) */	for (i = last_del; i >= start_del; i++) {
4141: /* MUTANT (del_stmt) */ /* 		chunk_id = yaffs_find_del_file_chunk(in, i, NULL); */ 
4143: /* MUTANT (rep_op) */		if (chunk_id <= 1)
4143: /* MUTANT (rep_op) */		if (chunk_id > 1)
4143: /* MUTANT (rep_op) */		if (chunk_id >= 1)
4143: /* MUTANT (rep_op) */		if (chunk_id == 1)
4143: /* MUTANT (rep_op) */		if (chunk_id != 1)
4143: /* MUTANT (rep_const) */		if (chunk_id < 0)
4143: /* MUTANT (rep_const) */		if (chunk_id < -1)
4143: /* MUTANT (rep_const) */		if (chunk_id < ((1)+1))
4143: /* MUTANT (negate) */		if(! (chunk_id < 1))
4146: /* MUTANT (rep_op) */		if (chunk_id <=
4146: /* MUTANT (rep_op) */		if (chunk_id >
4146: /* MUTANT (rep_op) */		if (chunk_id >=
4146: /* MUTANT (rep_op) */		if (chunk_id ==
4146: /* MUTANT (rep_op) */		if (chunk_id !=
4147: /* MUTANT (rep_op) */		    (dev->internal_start_block * dev->param.chunks_per_block) &&
4148: /* MUTANT (rep_op) */		    chunk_id <=
4148: /* MUTANT (rep_op) */		    chunk_id <
4148: /* MUTANT (rep_op) */		    chunk_id >
4148: /* MUTANT (rep_op) */		    chunk_id ==
4148: /* MUTANT (rep_op) */		    chunk_id !=
4149: /* MUTANT (rep_op) */		    ((dev->internal_end_block - 1) *
4149: /* MUTANT (rep_op) */		    ((dev->internal_end_block * 1) *
4149: /* MUTANT (rep_op) */		    ((dev->internal_end_block % 1) *
4149: /* MUTANT (rep_const) */		    ((dev->internal_end_block + 0) *
4149: /* MUTANT (rep_const) */		    ((dev->internal_end_block + -1) *
4149: /* MUTANT (rep_const) */		    ((dev->internal_end_block + ((1)+1)) *
4155: /* MUTANT (del_stmt) */ /* 			in->n_data_chunks--; */ 
4155: /* MUTANT (rep_op) */			in->n_data_chunks++;
4156: /* MUTANT (del_stmt) */ /* 			yaffs_chunk_del(dev, chunk_id, 1, __LINE__); */ 
4156: /* MUTANT (rep_const) */			yaffs_chunk_del(dev, chunk_id, 0, __LINE__);
4156: /* MUTANT (rep_const) */			yaffs_chunk_del(dev, chunk_id, -1, __LINE__);
4156: /* MUTANT (rep_const) */			yaffs_chunk_del(dev, chunk_id, ((1)+1), __LINE__);
4163: /* MUTANT (del_stmt) */ /* 	int new_full; */ 
4164: /* MUTANT (del_stmt) */ /* 	u32 new_partial; */ 
4165: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev = obj->my_dev; */ 
4167: /* MUTANT (del_stmt) */ /* 	yaffs_addr_to_chunk(dev, new_size, &new_full, &new_partial); */ 
4169: /* MUTANT (del_stmt) */ /* 	yaffs_prune_chunks(obj, new_size); */ 
4171: /* MUTANT (rep_op) */	if (new_partial == 0) {
4171: /* MUTANT (rep_const) */	if (new_partial != 1) {
4171: /* MUTANT (rep_const) */	if (new_partial != -1) {
4171: /* MUTANT (negate) */	if(! (new_partial != 0)) {
4172: /* MUTANT (del_stmt) */ /* 		int last_chunk = 1 + new_full; */ 
4172: /* MUTANT (rep_op) */		int last_chunk = 1 - new_full;
4172: /* MUTANT (rep_op) */		int last_chunk = 1 * new_full;
4172: /* MUTANT (rep_op) */		int last_chunk = 1 % new_full;
4172: /* MUTANT (rep_const) */		int last_chunk = 0 + new_full;
4172: /* MUTANT (rep_const) */		int last_chunk = -1 + new_full;
4172: /* MUTANT (rep_const) */		int last_chunk = ((1)+1) + new_full;
4173: /* MUTANT (del_stmt) */ /* 		u8 *local_buffer = yaffs_get_temp_buffer(dev); */ 
4176: /* MUTANT (del_stmt) */ /* 		yaffs_rd_data_obj(obj, last_chunk, local_buffer); */ 
4177: /* MUTANT (rep_op) */		mymemset(local_buffer - new_partial, 0,
4177: /* MUTANT (rep_op) */		mymemset(local_buffer * new_partial, 0,
4177: /* MUTANT (rep_op) */		mymemset(local_buffer % new_partial, 0,
4177: /* MUTANT (rep_const) */		mymemset(local_buffer + new_partial, 1,
4177: /* MUTANT (rep_const) */		mymemset(local_buffer + new_partial, -1,
4181: /* MUTANT (rep_const) */				  new_partial, 0);
4181: /* MUTANT (rep_const) */				  new_partial, -1);
4181: /* MUTANT (rep_const) */				  new_partial, ((1)+1));
4183: /* MUTANT (del_stmt) */ /* 		yaffs_release_temp_buffer(dev, local_buffer); */ 
4188: /* MUTANT (del_stmt) */ /* 	yaffs_prune_tree(dev, &obj->variant.file_variant); */ 
4193: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev = in->my_dev; */ 
4194: /* MUTANT (del_stmt) */ /* 	int old_size = in->variant.file_variant.file_size; */ 
4196: /* MUTANT (del_stmt) */ /* 	yaffs_flush_file_cache(in); */ 
4197: /* MUTANT (del_stmt) */ /* 	yaffs_invalidate_whole_cache(in); */ 
4199: /* MUTANT (del_stmt) */ /* 	yaffs_check_gc(dev, 0); */ 
4199: /* MUTANT (rep_const) */	yaffs_check_gc(dev, 1);
4199: /* MUTANT (rep_const) */	yaffs_check_gc(dev, -1);
4201: /* MUTANT (rep_op) */	if (in->variant_type == YAFFS_OBJECT_TYPE_FILE)
4201: /* MUTANT (negate) */	if(! (in->variant_type != YAFFS_OBJECT_TYPE_FILE))
4204: /* MUTANT (rep_op) */	if (new_size != old_size)
4204: /* MUTANT (negate) */	if(! (new_size == old_size))
4207: /* MUTANT (rep_op) */	if (new_size <= old_size) {
4207: /* MUTANT (rep_op) */	if (new_size < old_size) {
4207: /* MUTANT (rep_op) */	if (new_size >= old_size) {
4207: /* MUTANT (rep_op) */	if (new_size == old_size) {
4207: /* MUTANT (rep_op) */	if (new_size != old_size) {
4207: /* MUTANT (negate) */	if(! (new_size > old_size)) {
4208: /* MUTANT (del_stmt) */ /* 		yaffs2_handle_hole(in, new_size); */ 
4209: /* MUTANT (del_stmt) */ /* 		in->variant.file_variant.file_size = new_size; */ 
4212: /* MUTANT (del_stmt) */ /* 		yaffs_resize_file_down(in, new_size); */ 
4220: /* MUTANT (rep_op) */	if (in->parent ||
4221: /* MUTANT (rep_op) */	    !in->is_shadowed ||
4222: /* MUTANT (rep_op) */	    in->parent->obj_id == YAFFS_OBJECTID_UNLINKED &&
4222: /* MUTANT (rep_op) */	    in->parent->obj_id != YAFFS_OBJECTID_UNLINKED ||
4223: /* MUTANT (rep_op) */	    in->parent->obj_id == YAFFS_OBJECTID_DELETED)
4224: /* MUTANT (rep_const) */		yaffs_update_oh(in, NULL, 1, 0, 0, NULL);
4224: /* MUTANT (rep_const) */		yaffs_update_oh(in, NULL, -1, 0, 0, NULL);
4224: /* MUTANT (rep_const) */		yaffs_update_oh(in, NULL, 0, 1, 0, NULL);
4224: /* MUTANT (rep_const) */		yaffs_update_oh(in, NULL, 0, -1, 0, NULL);
4224: /* MUTANT (rep_const) */		yaffs_update_oh(in, NULL, 0, 0, 1, NULL);
4224: /* MUTANT (rep_const) */		yaffs_update_oh(in, NULL, 0, 0, -1, NULL);
4226: /* MUTANT (del_stmt) */ /* 	return YAFFS_OK; */ 
4231: /* MUTANT (negate) */	if(! (!in->dirty))
4234: /* MUTANT (del_stmt) */ /* 	yaffs_flush_file_cache(in); */ 
4236: /* MUTANT (negate) */	if(! (data_sync))
4239: /* MUTANT (negate) */	if(! (update_time))
4240: /* MUTANT (rep_const) */		yaffs_load_current_time(in, 1, 0);
4240: /* MUTANT (rep_const) */		yaffs_load_current_time(in, -1, 0);
4240: /* MUTANT (rep_const) */		yaffs_load_current_time(in, 0, 1);
4240: /* MUTANT (rep_const) */		yaffs_load_current_time(in, 0, -1);
4242: /* MUTANT (rep_op) */	return (yaffs_update_oh(in, NULL, 0, 0, 0, NULL) <= 0) ?
4242: /* MUTANT (rep_op) */	return (yaffs_update_oh(in, NULL, 0, 0, 0, NULL) < 0) ?
4242: /* MUTANT (rep_op) */	return (yaffs_update_oh(in, NULL, 0, 0, 0, NULL) > 0) ?
4242: /* MUTANT (rep_op) */	return (yaffs_update_oh(in, NULL, 0, 0, 0, NULL) == 0) ?
4242: /* MUTANT (rep_op) */	return (yaffs_update_oh(in, NULL, 0, 0, 0, NULL) != 0) ?
4242: /* MUTANT (rep_const) */	return (yaffs_update_oh(in, NULL, 1, 0, 0, NULL) >= 0) ?
4242: /* MUTANT (rep_const) */	return (yaffs_update_oh(in, NULL, -1, 0, 0, NULL) >= 0) ?
4242: /* MUTANT (rep_const) */	return (yaffs_update_oh(in, NULL, 0, 1, 0, NULL) >= 0) ?
4242: /* MUTANT (rep_const) */	return (yaffs_update_oh(in, NULL, 0, -1, 0, NULL) >= 0) ?
4242: /* MUTANT (rep_const) */	return (yaffs_update_oh(in, NULL, 0, 0, 1, NULL) >= 0) ?
4242: /* MUTANT (rep_const) */	return (yaffs_update_oh(in, NULL, 0, 0, -1, NULL) >= 0) ?
4242: /* MUTANT (rep_const) */	return (yaffs_update_oh(in, NULL, 0, 0, 0, NULL) >= 1) ?
4242: /* MUTANT (rep_const) */	return (yaffs_update_oh(in, NULL, 0, 0, 0, NULL) >= -1) ?
4251: /* MUTANT (negate) */static int yaffs_unlink_file_if(!_needed(struct yaffs_obj *in))
4253: /* MUTANT (del_stmt) */ /* 	int ret_val; */ 
4254: /* MUTANT (del_stmt) */ /* 	int del_now = 0; */ 
4254: /* MUTANT (rep_const) */	int del_now = 1;
4254: /* MUTANT (rep_const) */	int del_now = -1;
4255: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev = in->my_dev; */ 
4257: /* MUTANT (negate) */	if(! (!in->my_inode))
4258: /* MUTANT (rep_const) */		del_now = 0;
4258: /* MUTANT (rep_const) */		del_now = -1;
4258: /* MUTANT (rep_const) */		del_now = ((1)+1);
4260: /* MUTANT (negate) */	if(! (del_now)) {
4263: /* MUTANT (rep_const) */					  _Y("deleted"), 1, 0);
4263: /* MUTANT (rep_const) */					  _Y("deleted"), -1, 0);
4263: /* MUTANT (rep_const) */					  _Y("deleted"), 0, 1);
4263: /* MUTANT (rep_const) */					  _Y("deleted"), 0, -1);
4267: /* MUTANT (del_stmt) */ /* 		in->deleted = 1; */ 
4267: /* MUTANT (rep_const) */		in->deleted = 0;
4267: /* MUTANT (rep_const) */		in->deleted = -1;
4267: /* MUTANT (rep_const) */		in->deleted = ((1)+1);
4268: /* MUTANT (del_stmt) */ /* 		in->my_dev->n_deleted_files++; */ 
4268: /* MUTANT (rep_op) */		in->my_dev->n_deleted_files--;
4269: /* MUTANT (rep_op) */		if (dev->param.disable_soft_del && dev->param.is_yaffs2)
4269: /* MUTANT (negate) */		if(! (dev->param.disable_soft_del || dev->param.is_yaffs2))
4270: /* MUTANT (rep_const) */			yaffs_resize_file(in, 1);
4270: /* MUTANT (rep_const) */			yaffs_resize_file(in, -1);
4271: /* MUTANT (del_stmt) */ /* 		yaffs_soft_del_file(in); */ 
4275: /* MUTANT (rep_const) */					  _Y("unlinked"), 1, 0);
4275: /* MUTANT (rep_const) */					  _Y("unlinked"), -1, 0);
4275: /* MUTANT (rep_const) */					  _Y("unlinked"), 0, 1);
4275: /* MUTANT (rep_const) */					  _Y("unlinked"), 0, -1);
4282: /* MUTANT (del_stmt) */ /* 	int ret_val = YAFFS_OK; */ 
4283: /* MUTANT (del_stmt) */ /* 	int deleted; */ 	/* Need to cache value on stack if in is freed */
4284: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev = in->my_dev; */ 
4286: /* MUTANT (rep_op) */	if (dev->param.disable_soft_del && dev->param.is_yaffs2)
4286: /* MUTANT (negate) */	if(! (dev->param.disable_soft_del || dev->param.is_yaffs2))
4287: /* MUTANT (rep_const) */		yaffs_resize_file(in, 1);
4287: /* MUTANT (rep_const) */		yaffs_resize_file(in, -1);
4289: /* MUTANT (rep_op) */	if (in->n_data_chunks <= 0) {
4289: /* MUTANT (rep_op) */	if (in->n_data_chunks < 0) {
4289: /* MUTANT (rep_op) */	if (in->n_data_chunks >= 0) {
4289: /* MUTANT (rep_op) */	if (in->n_data_chunks == 0) {
4289: /* MUTANT (rep_op) */	if (in->n_data_chunks != 0) {
4289: /* MUTANT (rep_const) */	if (in->n_data_chunks > 1) {
4289: /* MUTANT (rep_const) */	if (in->n_data_chunks > -1) {
4289: /* MUTANT (negate) */	if(! (in->n_data_chunks > 0)) {
4293: /* MUTANT (negate) */		if(! (!in->unlinked))
4294: /* MUTANT (negate) */			ret_val = yaffs_unlink_file_if(!_needed(in));
4296: /* MUTANT (del_stmt) */ /* 		deleted = in->deleted; */ 
4298: /* MUTANT (rep_op) */		if (ret_val != YAFFS_OK && in->unlinked && !in->deleted) {
4298: /* MUTANT (rep_op) */		if (ret_val == YAFFS_OK || in->unlinked && !in->deleted) {
4298: /* MUTANT (rep_op) */		if (ret_val == YAFFS_OK && in->unlinked || !in->deleted) {
4298: /* MUTANT (negate) */		if(! (ret_val == YAFFS_OK && in->unlinked && !in->deleted)) {
4299: /* MUTANT (del_stmt) */ /* 			in->deleted = 1; */ 
4299: /* MUTANT (rep_const) */			in->deleted = 0;
4299: /* MUTANT (rep_const) */			in->deleted = -1;
4299: /* MUTANT (rep_const) */			in->deleted = ((1)+1);
4300: /* MUTANT (del_stmt) */ /* 			deleted = 1; */ 
4300: /* MUTANT (rep_const) */			deleted = 0;
4300: /* MUTANT (rep_const) */			deleted = -1;
4300: /* MUTANT (rep_const) */			deleted = ((1)+1);
4301: /* MUTANT (del_stmt) */ /* 			in->my_dev->n_deleted_files++; */ 
4301: /* MUTANT (rep_op) */			in->my_dev->n_deleted_files--;
4302: /* MUTANT (del_stmt) */ /* 			yaffs_soft_del_file(in); */ 
4307: /* MUTANT (del_stmt) */ /* 		yaffs_free_tnode(in->my_dev, in->variant.file_variant.top); */ 
4308: /* MUTANT (del_stmt) */ /* 		in->variant.file_variant.top = NULL; */ 
4309: /* MUTANT (del_stmt) */ /* 		yaffs_generic_obj_del(in); */ 
4311: /* MUTANT (del_stmt) */ /* 		return YAFFS_OK; */ 
4317: /* MUTANT (rep_op) */	return (obj ||
4318: /* MUTANT (rep_op) */		obj->variant_type != YAFFS_OBJECT_TYPE_DIRECTORY) &&
4318: /* MUTANT (rep_op) */		obj->variant_type == YAFFS_OBJECT_TYPE_DIRECTORY) ||
4325: /* MUTANT (negate) */	if(! (yaffs_is_non_empty_dir(obj)))
4328: /* MUTANT (del_stmt) */ /* 	return yaffs_generic_obj_del(obj); */ 
4333: /* MUTANT (del_stmt) */ /* 	kfree(in->variant.symlink_variant.alias); */ 
4334: /* MUTANT (del_stmt) */ /* 	in->variant.symlink_variant.alias = NULL; */ 
4336: /* MUTANT (del_stmt) */ /* 	return yaffs_generic_obj_del(in); */ 
4344: /* MUTANT (del_stmt) */ /* 	list_del_init(&in->hard_links); */ 
4345: /* MUTANT (del_stmt) */ /* 	return yaffs_generic_obj_del(in); */ 
4350: /* MUTANT (del_stmt) */ /* 	int ret_val = -1; */ 
4350: /* MUTANT (rep_const) */	int ret_val = 0;
4350: /* MUTANT (rep_const) */	int ret_val = 1;
4350: /* MUTANT (rep_const) */	int ret_val = ((-1)+1);
4350: /* MUTANT (rep_const) */	int ret_val = ((-1)-1);
4355: /* MUTANT (del_stmt) */ /* 		break; */ 
4357: /* MUTANT (negate) */		if(! (!list_empty(&obj->variant.dir_variant.dirty))) {
4361: /* MUTANT (del_stmt) */ /* 			list_del_init(&obj->variant.dir_variant.dirty); */ 
4364: /* MUTANT (del_stmt) */ /* 		break; */ 
4367: /* MUTANT (del_stmt) */ /* 		break; */ 
4370: /* MUTANT (del_stmt) */ /* 		break; */ 
4373: /* MUTANT (del_stmt) */ /* 		break; */ 
4375: /* MUTANT (rep_const) */		ret_val = 1;
4375: /* MUTANT (rep_const) */		ret_val = -1;
4376: /* MUTANT (del_stmt) */ /* 		break; */ 		/* should not happen. */
4383: /* MUTANT (del_stmt) */ /* 	int del_now = 0; */ 
4383: /* MUTANT (rep_const) */	int del_now = 1;
4383: /* MUTANT (rep_const) */	int del_now = -1;
4385: /* MUTANT (negate) */	if(! (!obj))
4388: /* MUTANT (negate) */	if(! (!obj->my_inode))
4389: /* MUTANT (rep_const) */		del_now = 0;
4389: /* MUTANT (rep_const) */		del_now = -1;
4389: /* MUTANT (rep_const) */		del_now = ((1)+1);
4391: /* MUTANT (del_stmt) */ /* 	yaffs_update_parent(obj->parent); */ 
4393: /* MUTANT (rep_op) */	if (obj->variant_type != YAFFS_OBJECT_TYPE_HARDLINK) {
4393: /* MUTANT (negate) */	if(! (obj->variant_type == YAFFS_OBJECT_TYPE_HARDLINK)) {
4394: /* MUTANT (del_stmt) */ /* 		return yaffs_del_link(obj); */ 
4395: /* MUTANT (negate) */	} else if(! (!list_empty(&obj->hard_links))) {
4410: /* MUTANT (del_stmt) */ /* 		struct yaffs_obj *hl; */ 
4411: /* MUTANT (del_stmt) */ /* 		struct yaffs_obj *parent; */ 
4412: /* MUTANT (del_stmt) */ /* 		int ret_val; */ 
4413: /* MUTANT (del_stmt) */ /* 		YCHAR name[YAFFS_MAX_NAME_LENGTH + 1]; */ 
4413: /* MUTANT (rep_op) */		YCHAR name[YAFFS_MAX_NAME_LENGTH - 1];
4413: /* MUTANT (rep_op) */		YCHAR name[YAFFS_MAX_NAME_LENGTH * 1];
4413: /* MUTANT (rep_op) */		YCHAR name[YAFFS_MAX_NAME_LENGTH % 1];
4413: /* MUTANT (rep_const) */		YCHAR name[YAFFS_MAX_NAME_LENGTH + 0];
4413: /* MUTANT (rep_const) */		YCHAR name[YAFFS_MAX_NAME_LENGTH + -1];
4413: /* MUTANT (rep_const) */		YCHAR name[YAFFS_MAX_NAME_LENGTH + ((1)+1)];
4418: /* MUTANT (del_stmt) */ /* 		yaffs_get_obj_name(hl, name, YAFFS_MAX_NAME_LENGTH + 1); */ 
4418: /* MUTANT (rep_op) */		yaffs_get_obj_name(hl, name, YAFFS_MAX_NAME_LENGTH - 1);
4418: /* MUTANT (rep_op) */		yaffs_get_obj_name(hl, name, YAFFS_MAX_NAME_LENGTH * 1);
4418: /* MUTANT (rep_op) */		yaffs_get_obj_name(hl, name, YAFFS_MAX_NAME_LENGTH % 1);
4418: /* MUTANT (rep_const) */		yaffs_get_obj_name(hl, name, YAFFS_MAX_NAME_LENGTH + 0);
4418: /* MUTANT (rep_const) */		yaffs_get_obj_name(hl, name, YAFFS_MAX_NAME_LENGTH + -1);
4418: /* MUTANT (rep_const) */		yaffs_get_obj_name(hl, name, YAFFS_MAX_NAME_LENGTH + ((1)+1));
4419: /* MUTANT (del_stmt) */ /* 		parent = hl->parent; */ 
4421: /* MUTANT (del_stmt) */ /* 		list_del_init(&hl->hard_links); */ 
4423: /* MUTANT (del_stmt) */ /* 		yaffs_add_obj_to_dir(obj->my_dev->unlinked_dir, hl); */ 
4425: /* MUTANT (del_stmt) */ /* 		ret_val = yaffs_change_obj_name(obj, parent, name, 0, 0); */ 
4425: /* MUTANT (rep_const) */		ret_val = yaffs_change_obj_name(obj, parent, name, 1, 0);
4425: /* MUTANT (rep_const) */		ret_val = yaffs_change_obj_name(obj, parent, name, -1, 0);
4425: /* MUTANT (rep_const) */		ret_val = yaffs_change_obj_name(obj, parent, name, 0, 1);
4425: /* MUTANT (rep_const) */		ret_val = yaffs_change_obj_name(obj, parent, name, 0, -1);
4427: /* MUTANT (rep_op) */		if (ret_val != YAFFS_OK)
4427: /* MUTANT (negate) */		if(! (ret_val == YAFFS_OK))
4430: /* MUTANT (del_stmt) */ /* 		return ret_val; */ 
4432: /* MUTANT (negate) */	} else if(! (del_now)) {
4436: /* MUTANT (del_stmt) */ /* 			break; */ 
4439: /* MUTANT (del_stmt) */ /* 			return yaffs_del_dir(obj); */ 
4440: /* MUTANT (del_stmt) */ /* 			break; */ 
4443: /* MUTANT (del_stmt) */ /* 			break; */ 
4446: /* MUTANT (del_stmt) */ /* 			break; */ 
4452: /* MUTANT (negate) */	} else if(! (yaffs_is_non_empty_dir(obj))) {
4453: /* MUTANT (del_stmt) */ /* 		return YAFFS_FAIL; */ 
4456: /* MUTANT (rep_const) */						_Y("unlinked"), 1, 0);
4456: /* MUTANT (rep_const) */						_Y("unlinked"), -1, 0);
4456: /* MUTANT (rep_const) */						_Y("unlinked"), 0, 1);
4456: /* MUTANT (rep_const) */						_Y("unlinked"), 0, -1);
4462: /* MUTANT (rep_op) */	if (obj || obj->unlink_allowed)
4462: /* MUTANT (negate) */	if(! (obj && obj->unlink_allowed))
4465: /* MUTANT (del_stmt) */ /* 	return YAFFS_FAIL; */ 
4470: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj; */ 
4472: /* MUTANT (del_stmt) */ /* 	obj = yaffs_find_by_name(dir, name); */ 
4473: /* MUTANT (del_stmt) */ /* 	return yaffs_unlink_obj(obj); */ 
4482: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj = NULL; */ 
4483: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *existing_target = NULL; */ 
4484: /* MUTANT (del_stmt) */ /* 	int force = 0; */ 
4484: /* MUTANT (rep_const) */	int force = 1;
4484: /* MUTANT (rep_const) */	int force = -1;
4485: /* MUTANT (del_stmt) */ /* 	int result; */ 
4486: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev; */ 
4488: /* MUTANT (rep_op) */	if (!old_dir && old_dir->variant_type != YAFFS_OBJECT_TYPE_DIRECTORY) {
4488: /* MUTANT (rep_op) */	if (!old_dir || old_dir->variant_type == YAFFS_OBJECT_TYPE_DIRECTORY) {
4488: /* MUTANT (negate) */	if(! (!old_dir || old_dir->variant_type != YAFFS_OBJECT_TYPE_DIRECTORY)) {
4489: /* MUTANT (del_stmt) */ /* 		BUG(); */ 
4490: /* MUTANT (del_stmt) */ /* 		return YAFFS_FAIL; */ 
4492: /* MUTANT (rep_op) */	if (!new_dir && new_dir->variant_type != YAFFS_OBJECT_TYPE_DIRECTORY) {
4492: /* MUTANT (rep_op) */	if (!new_dir || new_dir->variant_type == YAFFS_OBJECT_TYPE_DIRECTORY) {
4492: /* MUTANT (negate) */	if(! (!new_dir || new_dir->variant_type != YAFFS_OBJECT_TYPE_DIRECTORY)) {
4493: /* MUTANT (del_stmt) */ /* 		BUG(); */ 
4494: /* MUTANT (del_stmt) */ /* 		return YAFFS_FAIL; */ 
4504: /* MUTANT (rep_op) */	if (old_dir != new_dir &&
4504: /* MUTANT (rep_op) */	if (old_dir == new_dir ||
4505: /* MUTANT (rep_op) */		old_name || new_name &&
4505: /* MUTANT (rep_op) */		old_name && new_name ||
4506: /* MUTANT (rep_op) */		mystrcmp(old_name, new_name) != 0)
4506: /* MUTANT (rep_const) */		mystrcmp(old_name, new_name) == 1)
4506: /* MUTANT (rep_const) */		mystrcmp(old_name, new_name) == -1)
4507: /* MUTANT (rep_const) */		force = 0;
4507: /* MUTANT (rep_const) */		force = -1;
4507: /* MUTANT (rep_const) */		force = ((1)+1);
4510: /* MUTANT (rep_op) */	if (mystrnlen(new_name, YAFFS_MAX_NAME_LENGTH - 1) >
4510: /* MUTANT (rep_op) */	if (mystrnlen(new_name, YAFFS_MAX_NAME_LENGTH * 1) >
4510: /* MUTANT (rep_op) */	if (mystrnlen(new_name, YAFFS_MAX_NAME_LENGTH % 1) >
4510: /* MUTANT (rep_op) */	if (mystrnlen(new_name, YAFFS_MAX_NAME_LENGTH + 1) <=
4510: /* MUTANT (rep_op) */	if (mystrnlen(new_name, YAFFS_MAX_NAME_LENGTH + 1) <
4510: /* MUTANT (rep_op) */	if (mystrnlen(new_name, YAFFS_MAX_NAME_LENGTH + 1) >=
4510: /* MUTANT (rep_op) */	if (mystrnlen(new_name, YAFFS_MAX_NAME_LENGTH + 1) ==
4510: /* MUTANT (rep_op) */	if (mystrnlen(new_name, YAFFS_MAX_NAME_LENGTH + 1) !=
4510: /* MUTANT (rep_const) */	if (mystrnlen(new_name, YAFFS_MAX_NAME_LENGTH + 0) >
4510: /* MUTANT (rep_const) */	if (mystrnlen(new_name, YAFFS_MAX_NAME_LENGTH + -1) >
4510: /* MUTANT (rep_const) */	if (mystrnlen(new_name, YAFFS_MAX_NAME_LENGTH + ((1)+1)) >
4515: /* MUTANT (negate) */	if(! (old_name))
4518: /* MUTANT (del_stmt) */ /* 		obj = old_dir; */ 
4519: /* MUTANT (del_stmt) */ /* 		old_dir = obj->parent; */ 
4522: /* MUTANT (rep_op) */	if (obj || obj->rename_allowed) {
4522: /* MUTANT (negate) */	if(! (obj && obj->rename_allowed)) {
4524: /* MUTANT (del_stmt) */ /* 		existing_target = yaffs_find_by_name(new_dir, new_name); */ 
4525: /* MUTANT (negate) */		if(! (yaffs_is_non_empty_dir(existing_target))) {
4526: /* MUTANT (del_stmt) */ /* 			return YAFFS_FAIL; */ 	/* ENOTEMPTY */
4527: /* MUTANT (rep_op) */		} else if (existing_target || existing_target != obj) {
4527: /* MUTANT (rep_op) */		} else if (existing_target && existing_target == obj) {
4527: /* MUTANT (negate) */		} else if(! (existing_target && existing_target != obj)) {
4535: /* MUTANT (del_stmt) */ /* 			dev->gc_disable = 1; */ 
4535: /* MUTANT (rep_const) */			dev->gc_disable = 0;
4535: /* MUTANT (rep_const) */			dev->gc_disable = -1;
4535: /* MUTANT (rep_const) */			dev->gc_disable = ((1)+1);
4538: /* MUTANT (del_stmt) */ /* 			existing_target->is_shadowed = 1; */ 
4538: /* MUTANT (rep_const) */			existing_target->is_shadowed = 0;
4538: /* MUTANT (rep_const) */			existing_target->is_shadowed = -1;
4538: /* MUTANT (rep_const) */			existing_target->is_shadowed = ((1)+1);
4539: /* MUTANT (del_stmt) */ /* 			yaffs_unlink_obj(existing_target); */ 
4540: /* MUTANT (del_stmt) */ /* 			dev->gc_disable = 0; */ 
4540: /* MUTANT (rep_const) */			dev->gc_disable = 1;
4540: /* MUTANT (rep_const) */			dev->gc_disable = -1;
4543: /* MUTANT (rep_const) */		result = yaffs_change_obj_name(obj, new_dir, new_name, 0, 0);
4543: /* MUTANT (rep_const) */		result = yaffs_change_obj_name(obj, new_dir, new_name, -1, 0);
4543: /* MUTANT (rep_const) */		result = yaffs_change_obj_name(obj, new_dir, new_name, ((1)+1), 0);
4543: /* MUTANT (rep_const) */		result = yaffs_change_obj_name(obj, new_dir, new_name, 1, 1);
4543: /* MUTANT (rep_const) */		result = yaffs_change_obj_name(obj, new_dir, new_name, 1, -1);
4545: /* MUTANT (del_stmt) */ /* 		yaffs_update_parent(old_dir); */ 
4546: /* MUTANT (rep_op) */		if (new_dir == old_dir)
4546: /* MUTANT (negate) */		if(! (new_dir != old_dir))
4549: /* MUTANT (del_stmt) */ /* 		return result; */ 
4559: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj; */ 
4561: /* MUTANT (negate) */	if(! (backward_scanning)) {
4565: /* MUTANT (del_stmt) */ /* 		obj = yaffs_find_by_number(dev, obj_id); */ 
4566: /* MUTANT (negate) */		if(! (obj))
4576: /* MUTANT (negate) */	if(! (!obj))
4578: /* MUTANT (del_stmt) */ /* 	obj->is_shadowed = 1; */ 
4578: /* MUTANT (rep_const) */	obj->is_shadowed = 0;
4578: /* MUTANT (rep_const) */	obj->is_shadowed = -1;
4578: /* MUTANT (rep_const) */	obj->is_shadowed = ((1)+1);
4579: /* MUTANT (del_stmt) */ /* 	yaffs_add_obj_to_dir(dev->unlinked_dir, obj); */ 
4580: /* MUTANT (del_stmt) */ /* 	obj->variant.file_variant.shrink_size = 0; */ 
4580: /* MUTANT (rep_const) */	obj->variant.file_variant.shrink_size = 1;
4580: /* MUTANT (rep_const) */	obj->variant.file_variant.shrink_size = -1;
4581: /* MUTANT (del_stmt) */ /* 	obj->valid = 1; */ 		/* So that we don't read any other info. */
4581: /* MUTANT (rep_const) */	obj->valid = 0;		/* So that we don't read any other info. */
4581: /* MUTANT (rep_const) */	obj->valid = -1;		/* So that we don't read any other info. */
4581: /* MUTANT (rep_const) */	obj->valid = ((1)+1);		/* So that we don't read any other info. */
4586: /* MUTANT (del_stmt) */ /* 	struct list_head *lh; */ 
4587: /* MUTANT (del_stmt) */ /* 	struct list_head *save; */ 
4588: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *hl; */ 
4589: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *in; */ 
4592: /* MUTANT (del_stmt) */ /* 		hl = list_entry(lh, struct yaffs_obj, hard_links); */ 
4596: /* MUTANT (negate) */		if(! (in)) {
4598: /* MUTANT (del_stmt) */ /* 			hl->variant.hardlink_variant.equiv_obj = in; */ 
4599: /* MUTANT (del_stmt) */ /* 			list_add(&hl->hard_links, &in->hard_links); */ 
4604: /* MUTANT (del_stmt) */ /* 			hl->variant.hardlink_variant.equiv_obj = NULL; */ 
4605: /* MUTANT (del_stmt) */ /* 			INIT_LIST_HEAD(&hl->hard_links); */ 
4615: /* MUTANT (del_stmt) */ /* 	struct list_head *i; */ 
4616: /* MUTANT (del_stmt) */ /* 	struct list_head *n; */ 
4617: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *l; */ 
4619: /* MUTANT (negate) */	if(! (dev->read_only))
4625: /* MUTANT (del_stmt) */ /* 		l = list_entry(i, struct yaffs_obj, siblings); */ 
4626: /* MUTANT (del_stmt) */ /* 		yaffs_del_obj(l); */ 
4630: /* MUTANT (del_stmt) */ /* 		l = list_entry(i, struct yaffs_obj, siblings); */ 
4631: /* MUTANT (del_stmt) */ /* 		yaffs_del_obj(l); */ 
4655: /* MUTANT (rep_op) */	return (obj != dev->del_dir ||
4655: /* MUTANT (rep_op) */	return (obj == dev->del_dir &&
4656: /* MUTANT (rep_op) */		obj != dev->unlinked_dir || obj == dev->root_dir);
4656: /* MUTANT (rep_op) */		obj == dev->unlinked_dir && obj == dev->root_dir);
4656: /* MUTANT (rep_op) */		obj == dev->unlinked_dir || obj != dev->root_dir);
4661: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj; */ 
4662: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *parent; */ 
4663: /* MUTANT (del_stmt) */ /* 	int i; */ 
4664: /* MUTANT (del_stmt) */ /* 	struct list_head *lh; */ 
4665: /* MUTANT (del_stmt) */ /* 	struct list_head *n; */ 
4666: /* MUTANT (del_stmt) */ /* 	int depth_limit; */ 
4667: /* MUTANT (del_stmt) */ /* 	int hanging; */ 
4669: /* MUTANT (negate) */	if(! (dev->read_only))
4677: /* MUTANT (rep_op) */	for (i = 0; i <= YAFFS_NOBJECT_BUCKETS; i++) {
4677: /* MUTANT (rep_op) */	for (i = 0; i > YAFFS_NOBJECT_BUCKETS; i++) {
4677: /* MUTANT (rep_op) */	for (i = 0; i >= YAFFS_NOBJECT_BUCKETS; i++) {
4677: /* MUTANT (rep_op) */	for (i = 0; i == YAFFS_NOBJECT_BUCKETS; i++) {
4677: /* MUTANT (rep_op) */	for (i = 0; i != YAFFS_NOBJECT_BUCKETS; i++) {
4677: /* MUTANT (rep_op) */	for (i = 0; i < YAFFS_NOBJECT_BUCKETS; i--) {
4677: /* MUTANT (rep_const) */	for (i = 1; i < YAFFS_NOBJECT_BUCKETS; i++) {
4677: /* MUTANT (rep_const) */	for (i = -1; i < YAFFS_NOBJECT_BUCKETS; i++) {
4679: /* MUTANT (del_stmt) */ /* 			obj = list_entry(lh, struct yaffs_obj, hash_link); */ 
4680: /* MUTANT (del_stmt) */ /* 			parent = obj->parent; */ 
4682: /* MUTANT (negate) */			if(! (yaffs_has_null_parent(dev, obj))) {
4684: /* MUTANT (del_stmt) */ /* 				hanging = 0; */ 
4684: /* MUTANT (rep_const) */				hanging = 1;
4684: /* MUTANT (rep_const) */				hanging = -1;
4685: /* MUTANT (rep_op) */			} else if (!parent &&
4686: /* MUTANT (rep_op) */				   parent->variant_type ==
4688: /* MUTANT (del_stmt) */ /* 				hanging = 1; */ 
4688: /* MUTANT (rep_const) */				hanging = 0;
4688: /* MUTANT (rep_const) */				hanging = -1;
4688: /* MUTANT (rep_const) */				hanging = ((1)+1);
4689: /* MUTANT (negate) */			} else if(! (yaffs_has_null_parent(dev, parent))) {
4690: /* MUTANT (del_stmt) */ /* 				hanging = 0; */ 
4690: /* MUTANT (rep_const) */				hanging = 1;
4690: /* MUTANT (rep_const) */				hanging = -1;
4696: /* MUTANT (del_stmt) */ /* 				hanging = 0; */ 
4696: /* MUTANT (rep_const) */				hanging = 1;
4696: /* MUTANT (rep_const) */				hanging = -1;
4697: /* MUTANT (del_stmt) */ /* 				depth_limit = 100; */ 
4697: /* MUTANT (rep_const) */				depth_limit = 0;
4697: /* MUTANT (rep_const) */				depth_limit = 1;
4697: /* MUTANT (rep_const) */				depth_limit = -1;
4697: /* MUTANT (rep_const) */				depth_limit = ((100)+1);
4697: /* MUTANT (rep_const) */				depth_limit = ((100)-1);
4699: /* MUTANT (rep_op) */				while (parent == dev->root_dir &&
4699: /* MUTANT (rep_op) */				while (parent != dev->root_dir ||
4700: /* MUTANT (rep_op) */				       parent->parent ||
4701: /* MUTANT (rep_op) */				       parent->parent->variant_type !=
4702: /* MUTANT (rep_op) */				       YAFFS_OBJECT_TYPE_DIRECTORY ||
4703: /* MUTANT (rep_op) */				       depth_limit <= 0) {
4703: /* MUTANT (rep_op) */				       depth_limit < 0) {
4703: /* MUTANT (rep_op) */				       depth_limit >= 0) {
4703: /* MUTANT (rep_op) */				       depth_limit == 0) {
4703: /* MUTANT (rep_op) */				       depth_limit != 0) {
4703: /* MUTANT (rep_const) */				       depth_limit > 1) {
4703: /* MUTANT (rep_const) */				       depth_limit > -1) {
4704: /* MUTANT (del_stmt) */ /* 					parent = parent->parent; */ 
4705: /* MUTANT (del_stmt) */ /* 					depth_limit--; */ 
4705: /* MUTANT (rep_op) */					depth_limit++;
4707: /* MUTANT (rep_op) */				if (parent == dev->root_dir)
4707: /* MUTANT (negate) */				if(! (parent != dev->root_dir))
4708: /* MUTANT (rep_const) */					hanging = 0;
4708: /* MUTANT (rep_const) */					hanging = -1;
4708: /* MUTANT (rep_const) */					hanging = ((1)+1);
4710: /* MUTANT (negate) */			if(! (hanging)) {
4714: /* MUTANT (del_stmt) */ /* 				yaffs_add_obj_to_dir(dev->lost_n_found, obj); */ 
4725: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj; */ 
4726: /* MUTANT (del_stmt) */ /* 	struct list_head *lh; */ 
4727: /* MUTANT (del_stmt) */ /* 	struct list_head *n; */ 
4729: /* MUTANT (rep_op) */	if (dir->variant_type == YAFFS_OBJECT_TYPE_DIRECTORY)
4729: /* MUTANT (negate) */	if(! (dir->variant_type != YAFFS_OBJECT_TYPE_DIRECTORY))
4733: /* MUTANT (del_stmt) */ /* 		obj = list_entry(lh, struct yaffs_obj, siblings); */ 
4734: /* MUTANT (rep_op) */		if (obj->variant_type != YAFFS_OBJECT_TYPE_DIRECTORY)
4734: /* MUTANT (negate) */		if(! (obj->variant_type == YAFFS_OBJECT_TYPE_DIRECTORY))
4739: /* MUTANT (del_stmt) */ /* 		yaffs_unlink_obj(obj); */ 
4745: /* MUTANT (del_stmt) */ /* 	yaffs_del_dir_contents(dev->lost_n_found); */ 
4752: /* MUTANT (del_stmt) */ /* 	int sum; */ 
4753: /* MUTANT (del_stmt) */ /* 	struct list_head *i; */ 
4754: /* MUTANT (del_stmt) */ /* 	YCHAR buffer[YAFFS_MAX_NAME_LENGTH + 1]; */ 
4754: /* MUTANT (rep_op) */	YCHAR buffer[YAFFS_MAX_NAME_LENGTH - 1];
4754: /* MUTANT (rep_op) */	YCHAR buffer[YAFFS_MAX_NAME_LENGTH * 1];
4754: /* MUTANT (rep_op) */	YCHAR buffer[YAFFS_MAX_NAME_LENGTH % 1];
4754: /* MUTANT (rep_const) */	YCHAR buffer[YAFFS_MAX_NAME_LENGTH + 0];
4754: /* MUTANT (rep_const) */	YCHAR buffer[YAFFS_MAX_NAME_LENGTH + -1];
4754: /* MUTANT (rep_const) */	YCHAR buffer[YAFFS_MAX_NAME_LENGTH + ((1)+1)];
4755: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *l; */ 
4757: /* MUTANT (negate) */	if(! (!name))
4760: /* MUTANT (negate) */	if(! (!directory)) {
4764: /* MUTANT (del_stmt) */ /* 		BUG(); */ 
4765: /* MUTANT (del_stmt) */ /* 		return NULL; */ 
4767: /* MUTANT (rep_op) */	if (directory->variant_type == YAFFS_OBJECT_TYPE_DIRECTORY) {
4767: /* MUTANT (negate) */	if(! (directory->variant_type != YAFFS_OBJECT_TYPE_DIRECTORY)) {
4771: /* MUTANT (del_stmt) */ /* 		BUG(); */ 
4777: /* MUTANT (del_stmt) */ /* 		l = list_entry(i, struct yaffs_obj, siblings); */ 
4779: /* MUTANT (rep_op) */		if (l->parent == directory)
4779: /* MUTANT (negate) */		if(! (l->parent != directory))
4782: /* MUTANT (del_stmt) */ /* 		yaffs_check_obj_details_loaded(l); */ 
4785: /* MUTANT (rep_op) */		if (l->obj_id != YAFFS_OBJECTID_LOSTNFOUND) {
4785: /* MUTANT (negate) */		if(! (l->obj_id == YAFFS_OBJECTID_LOSTNFOUND)) {
4786: /* MUTANT (negate) */			if(! (!mystrcmp(name, YAFFS_LOSTNFOUND_NAME)))
4788: /* MUTANT (rep_op) */		} else if (l->sum != sum || l->hdr_chunk <= 0) {
4788: /* MUTANT (rep_op) */		} else if (l->sum == sum && l->hdr_chunk <= 0) {
4788: /* MUTANT (rep_op) */		} else if (l->sum == sum || l->hdr_chunk < 0) {
4788: /* MUTANT (rep_op) */		} else if (l->sum == sum || l->hdr_chunk > 0) {
4788: /* MUTANT (rep_op) */		} else if (l->sum == sum || l->hdr_chunk >= 0) {
4788: /* MUTANT (rep_op) */		} else if (l->sum == sum || l->hdr_chunk == 0) {
4788: /* MUTANT (rep_op) */		} else if (l->sum == sum || l->hdr_chunk != 0) {
4788: /* MUTANT (rep_const) */		} else if (l->sum == sum || l->hdr_chunk <= 1) {
4788: /* MUTANT (rep_const) */		} else if (l->sum == sum || l->hdr_chunk <= -1) {
4788: /* MUTANT (negate) */		} else if(! (l->sum == sum || l->hdr_chunk <= 0)) {
4793: /* MUTANT (rep_op) */				YAFFS_MAX_NAME_LENGTH - 1);
4793: /* MUTANT (rep_op) */				YAFFS_MAX_NAME_LENGTH * 1);
4793: /* MUTANT (rep_op) */				YAFFS_MAX_NAME_LENGTH % 1);
4793: /* MUTANT (rep_const) */				YAFFS_MAX_NAME_LENGTH + 0);
4793: /* MUTANT (rep_const) */				YAFFS_MAX_NAME_LENGTH + -1);
4793: /* MUTANT (rep_const) */				YAFFS_MAX_NAME_LENGTH + ((1)+1));
4794: /* MUTANT (rep_op) */			if (mystrncmp(name, buffer, YAFFS_MAX_NAME_LENGTH) != 0)
4794: /* MUTANT (rep_const) */			if (mystrncmp(name, buffer, YAFFS_MAX_NAME_LENGTH) == 1)
4794: /* MUTANT (rep_const) */			if (mystrncmp(name, buffer, YAFFS_MAX_NAME_LENGTH) == -1)
4794: /* MUTANT (negate) */			if(! (mystrncmp(name, buffer, YAFFS_MAX_NAME_LENGTH) == 0))
4807: /* MUTANT (rep_op) */	if (obj || obj->variant_type == YAFFS_OBJECT_TYPE_HARDLINK) {
4807: /* MUTANT (rep_op) */	if (obj && obj->variant_type != YAFFS_OBJECT_TYPE_HARDLINK) {
4807: /* MUTANT (negate) */	if(! (obj && obj->variant_type == YAFFS_OBJECT_TYPE_HARDLINK)) {
4808: /* MUTANT (del_stmt) */ /* 		obj = obj->variant.hardlink_variant.equiv_obj; */ 
4809: /* MUTANT (del_stmt) */ /* 		yaffs_check_obj_details_loaded(obj); */ 
4837: /* MUTANT (rep_op) */	if (mystrnlen(name, YAFFS_MAX_NAME_LENGTH) != 0) {
4837: /* MUTANT (rep_const) */	if (mystrnlen(name, YAFFS_MAX_NAME_LENGTH) == 1) {
4837: /* MUTANT (rep_const) */	if (mystrnlen(name, YAFFS_MAX_NAME_LENGTH) == -1) {
4837: /* MUTANT (negate) */	if(! (mystrnlen(name, YAFFS_MAX_NAME_LENGTH) == 0)) {
4838: /* MUTANT (del_stmt) */ /* 		YCHAR local_name[20]; */ 
4838: /* MUTANT (rep_const) */		YCHAR local_name[0];
4838: /* MUTANT (rep_const) */		YCHAR local_name[1];
4838: /* MUTANT (rep_const) */		YCHAR local_name[-1];
4838: /* MUTANT (rep_const) */		YCHAR local_name[((20)+1)];
4838: /* MUTANT (rep_const) */		YCHAR local_name[((20)-1)];
4839: /* MUTANT (del_stmt) */ /* 		YCHAR num_string[20]; */ 
4839: /* MUTANT (rep_const) */		YCHAR num_string[0];
4839: /* MUTANT (rep_const) */		YCHAR num_string[1];
4839: /* MUTANT (rep_const) */		YCHAR num_string[-1];
4839: /* MUTANT (rep_const) */		YCHAR num_string[((20)+1)];
4839: /* MUTANT (rep_const) */		YCHAR num_string[((20)-1)];
4840: /* MUTANT (del_stmt) */ /* 		YCHAR *x = &num_string[19]; */ 
4840: /* MUTANT (rep_const) */		YCHAR *x = &num_string[0];
4840: /* MUTANT (rep_const) */		YCHAR *x = &num_string[1];
4840: /* MUTANT (rep_const) */		YCHAR *x = &num_string[-1];
4840: /* MUTANT (rep_const) */		YCHAR *x = &num_string[((19)+1)];
4840: /* MUTANT (rep_const) */		YCHAR *x = &num_string[((19)-1)];
4841: /* MUTANT (del_stmt) */ /* 		unsigned v = obj->obj_id; */ 
4842: /* MUTANT (del_stmt) */ /* 		num_string[19] = 0; */ 
4842: /* MUTANT (rep_const) */		num_string[0] = 0;
4842: /* MUTANT (rep_const) */		num_string[1] = 0;
4842: /* MUTANT (rep_const) */		num_string[-1] = 0;
4842: /* MUTANT (rep_const) */		num_string[((19)+1)] = 0;
4842: /* MUTANT (rep_const) */		num_string[((19)-1)] = 0;
4842: /* MUTANT (rep_const) */		num_string[19] = 1;
4842: /* MUTANT (rep_const) */		num_string[19] = -1;
4843: /* MUTANT (rep_op) */		while (v <= 0) {
4843: /* MUTANT (rep_op) */		while (v < 0) {
4843: /* MUTANT (rep_op) */		while (v >= 0) {
4843: /* MUTANT (rep_op) */		while (v == 0) {
4843: /* MUTANT (rep_op) */		while (v != 0) {
4843: /* MUTANT (rep_const) */		while (v > 1) {
4843: /* MUTANT (rep_const) */		while (v > -1) {
4843: /* MUTANT (negate) */		while(! (v > 0)) {
4844: /* MUTANT (del_stmt) */ /* 			x--; */ 
4844: /* MUTANT (rep_op) */			x++;
4845: /* MUTANT (del_stmt) */ /* 			*x = '0' + (v % 10); */ 
4845: /* MUTANT (rep_op) */			*x = '0' - (v % 10);
4845: /* MUTANT (rep_op) */			*x = '0' * (v % 10);
4845: /* MUTANT (rep_op) */			*x = '0' % (v % 10);
4845: /* MUTANT (rep_op) */			*x = '0' + (v + 10);
4845: /* MUTANT (rep_op) */			*x = '0' + (v - 10);
4845: /* MUTANT (rep_op) */			*x = '0' + (v * 10);
4845: /* MUTANT (rep_const) */			*x = '1' + (v % 10);
4845: /* MUTANT (rep_const) */			*x = '-1' + (v % 10);
4845: /* MUTANT (rep_const) */			*x = '0' + (v % 0);
4845: /* MUTANT (rep_const) */			*x = '0' + (v % 1);
4845: /* MUTANT (rep_const) */			*x = '0' + (v % -1);
4845: /* MUTANT (rep_const) */			*x = '0' + (v % ((10)+1));
4845: /* MUTANT (rep_const) */			*x = '0' + (v % ((10)-1));
4846: /* MUTANT (del_stmt) */ /* 			v /= 10; */ 
4846: /* MUTANT (rep_const) */			v /= 0;
4846: /* MUTANT (rep_const) */			v /= 1;
4846: /* MUTANT (rep_const) */			v /= -1;
4846: /* MUTANT (rep_const) */			v /= ((10)+1);
4846: /* MUTANT (rep_const) */			v /= ((10)-1);
4850: /* MUTANT (del_stmt) */ /* 		mystrcat(local_name, x); */ 
4851: /* MUTANT (del_stmt) */ /* 		mystrncpy(name, local_name, buffer_size - 1); */ 
4851: /* MUTANT (rep_const) */		mystrncpy(name, local_name, buffer_size - 0);
4851: /* MUTANT (rep_const) */		mystrncpy(name, local_name, buffer_size - -1);
4851: /* MUTANT (rep_const) */		mystrncpy(name, local_name, buffer_size - ((1)+1));
4857: /* MUTANT (del_stmt) */ /* 	mymemset(name, 0, buffer_size * sizeof(YCHAR)); */ 
4857: /* MUTANT (rep_const) */	mymemset(name, 1, buffer_size * sizeof(YCHAR));
4857: /* MUTANT (rep_const) */	mymemset(name, -1, buffer_size * sizeof(YCHAR));
4858: /* MUTANT (del_stmt) */ /* 	yaffs_check_obj_details_loaded(obj); */ 
4859: /* MUTANT (rep_op) */	if (obj->obj_id != YAFFS_OBJECTID_LOSTNFOUND) {
4859: /* MUTANT (negate) */	if(! (obj->obj_id == YAFFS_OBJECTID_LOSTNFOUND)) {
4860: /* MUTANT (del_stmt) */ /* 		mystrncpy(name, YAFFS_LOSTNFOUND_NAME, buffer_size - 1); */ 
4860: /* MUTANT (rep_const) */		mystrncpy(name, YAFFS_LOSTNFOUND_NAME, buffer_size - 0);
4860: /* MUTANT (rep_const) */		mystrncpy(name, YAFFS_LOSTNFOUND_NAME, buffer_size - -1);
4860: /* MUTANT (rep_const) */		mystrncpy(name, YAFFS_LOSTNFOUND_NAME, buffer_size - ((1)+1));
4861: /* MUTANT (rep_const) */	} else if (obj->short_name[1]) {
4861: /* MUTANT (rep_const) */	} else if (obj->short_name[-1]) {
4861: /* MUTANT (negate) */	} else if(! (obj->short_name[0])) {
4862: /* MUTANT (del_stmt) */ /* 		mystrcpy(name, obj->short_name); */ 
4863: /* MUTANT (rep_op) */	} else if (obj->hdr_chunk <= 0) {
4863: /* MUTANT (rep_op) */	} else if (obj->hdr_chunk < 0) {
4863: /* MUTANT (rep_op) */	} else if (obj->hdr_chunk >= 0) {
4863: /* MUTANT (rep_op) */	} else if (obj->hdr_chunk == 0) {
4863: /* MUTANT (rep_op) */	} else if (obj->hdr_chunk != 0) {
4863: /* MUTANT (rep_const) */	} else if (obj->hdr_chunk > 1) {
4863: /* MUTANT (rep_const) */	} else if (obj->hdr_chunk > -1) {
4863: /* MUTANT (negate) */	} else if(! (obj->hdr_chunk > 0)) {
4864: /* MUTANT (del_stmt) */ /* 		int result; */ 
4865: /* MUTANT (del_stmt) */ /* 		u8 *buffer = yaffs_get_temp_buffer(obj->my_dev); */ 
4867: /* MUTANT (del_stmt) */ /* 		struct yaffs_obj_hdr *oh = (struct yaffs_obj_hdr *)buffer; */ 
4869: /* MUTANT (del_stmt) */ /* 		mymemset(buffer, 0, obj->my_dev->data_bytes_per_chunk); */ 
4869: /* MUTANT (rep_const) */		mymemset(buffer, 1, obj->my_dev->data_bytes_per_chunk);
4869: /* MUTANT (rep_const) */		mymemset(buffer, -1, obj->my_dev->data_bytes_per_chunk);
4871: /* MUTANT (rep_op) */		if (obj->hdr_chunk <= 0) {
4871: /* MUTANT (rep_op) */		if (obj->hdr_chunk < 0) {
4871: /* MUTANT (rep_op) */		if (obj->hdr_chunk >= 0) {
4871: /* MUTANT (rep_op) */		if (obj->hdr_chunk == 0) {
4871: /* MUTANT (rep_op) */		if (obj->hdr_chunk != 0) {
4871: /* MUTANT (rep_const) */		if (obj->hdr_chunk > 1) {
4871: /* MUTANT (rep_const) */		if (obj->hdr_chunk > -1) {
4871: /* MUTANT (negate) */		if(! (obj->hdr_chunk > 0)) {
4879: /* MUTANT (del_stmt) */ /* 		yaffs_release_temp_buffer(obj->my_dev, buffer); */ 
4884: /* MUTANT (del_stmt) */ /* 	return mystrnlen(name, YAFFS_MAX_NAME_LENGTH); */ 
4890: /* MUTANT (del_stmt) */ /* 	obj = yaffs_get_equivalent_obj(obj); */ 
4892: /* MUTANT (rep_op) */	if (obj->variant_type != YAFFS_OBJECT_TYPE_FILE)
4892: /* MUTANT (negate) */	if(! (obj->variant_type == YAFFS_OBJECT_TYPE_FILE))
4894: /* MUTANT (rep_op) */	if (obj->variant_type != YAFFS_OBJECT_TYPE_SYMLINK) {
4894: /* MUTANT (negate) */	if(! (obj->variant_type == YAFFS_OBJECT_TYPE_SYMLINK)) {
4895: /* MUTANT (negate) */		if(! (!obj->variant.symlink_variant.alias))
4896: /* MUTANT (rep_const) */			return 1;
4896: /* MUTANT (rep_const) */			return -1;
4901: /* MUTANT (del_stmt) */ /* 		return obj->my_dev->data_bytes_per_chunk; */ 
4907: /* MUTANT (del_stmt) */ /* 	int count = 0; */ 
4907: /* MUTANT (rep_const) */	int count = 1;
4907: /* MUTANT (rep_const) */	int count = -1;
4908: /* MUTANT (del_stmt) */ /* 	struct list_head *i; */ 
4910: /* MUTANT (negate) */	if(! (!obj->unlinked))
4911: /* MUTANT (rep_op) */		count--;	/* the object itself */
4914: /* MUTANT (rep_op) */	    count--;		/* add the hard links; */
4916: /* MUTANT (del_stmt) */ /* 	return count; */ 
4921: /* MUTANT (del_stmt) */ /* 	obj = yaffs_get_equivalent_obj(obj); */ 
4923: /* MUTANT (del_stmt) */ /* 	return obj->obj_id; */ 
4928: /* MUTANT (del_stmt) */ /* 	obj = yaffs_get_equivalent_obj(obj); */ 
4933: /* MUTANT (del_stmt) */ /* 		break; */ 
4936: /* MUTANT (del_stmt) */ /* 		break; */ 
4939: /* MUTANT (del_stmt) */ /* 		break; */ 
4942: /* MUTANT (del_stmt) */ /* 		break; */ 
4944: /* MUTANT (negate) */		if(! (S_ISFIFO(obj->yst_mode)))
4946: /* MUTANT (negate) */		if(! (S_ISCHR(obj->yst_mode)))
4948: /* MUTANT (negate) */		if(! (S_ISBLK(obj->yst_mode)))
4950: /* MUTANT (negate) */		if(! (S_ISSOCK(obj->yst_mode)))
4952: /* MUTANT (del_stmt) */ /* 		return DT_REG; */ 
4953: /* MUTANT (del_stmt) */ /* 		break; */ 
4956: /* MUTANT (del_stmt) */ /* 		break; */ 
4962: /* MUTANT (del_stmt) */ /* 	obj = yaffs_get_equivalent_obj(obj); */ 
4963: /* MUTANT (rep_op) */	if (obj->variant_type != YAFFS_OBJECT_TYPE_SYMLINK)
4963: /* MUTANT (negate) */	if(! (obj->variant_type == YAFFS_OBJECT_TYPE_SYMLINK))
4974: /* MUTANT (rep_op) */	if (!dev->param.erase_fn && !dev->param.initialise_flash_fn)
4974: /* MUTANT (negate) */	if(! (!dev->param.erase_fn || !dev->param.initialise_flash_fn))
4975: /* MUTANT (rep_const) */		return 1;
4975: /* MUTANT (rep_const) */		return -1;
4978: /* MUTANT (rep_op) */	if (dev->param.write_chunk_tags_fn ||
4979: /* MUTANT (rep_op) */	    dev->param.read_chunk_tags_fn ||
4980: /* MUTANT (rep_op) */	    !dev->param.write_chunk_fn ||
4981: /* MUTANT (rep_op) */	    !dev->param.read_chunk_fn ||
4982: /* MUTANT (rep_op) */	    dev->param.bad_block_fn || dev->param.query_block_fn)
4983: /* MUTANT (rep_const) */		return 0;
4983: /* MUTANT (rep_const) */		return -1;
4983: /* MUTANT (rep_const) */		return ((1)+1);
4986: /* MUTANT (rep_op) */	if (!dev->param.is_yaffs2 ||
4987: /* MUTANT (rep_op) */	    !dev->param.write_chunk_tags_fn ||
4988: /* MUTANT (rep_op) */	    !dev->param.read_chunk_tags_fn ||
4989: /* MUTANT (rep_op) */	    dev->param.write_chunk_fn ||
4990: /* MUTANT (rep_op) */	    dev->param.read_chunk_fn ||
4991: /* MUTANT (rep_op) */	    !dev->param.bad_block_fn || !dev->param.query_block_fn)
4992: /* MUTANT (rep_const) */		return 0;
4992: /* MUTANT (rep_const) */		return -1;
4992: /* MUTANT (rep_const) */		return ((1)+1);
4994: /* MUTANT (del_stmt) */ /* 	return 0; */ 		/* bad */
4994: /* MUTANT (rep_const) */	return 1;		/* bad */
4994: /* MUTANT (rep_const) */	return -1;		/* bad */
5000: /* MUTANT (del_stmt) */ /* 	dev->lost_n_found = dev->root_dir = NULL; */ 
5001: /* MUTANT (del_stmt) */ /* 	dev->unlinked_dir = dev->del_dir = NULL; */ 
5008: /* MUTANT (rep_op) */				  YAFFS_ROOT_MODE & S_IFDIR);
5011: /* MUTANT (rep_op) */				  YAFFS_LOSTNFOUND_MODE & S_IFDIR);
5013: /* MUTANT (rep_op) */	if (dev->lost_n_found || dev->root_dir && dev->unlinked_dir
5013: /* MUTANT (rep_op) */	if (dev->lost_n_found && dev->root_dir || dev->unlinked_dir
5014: /* MUTANT (rep_op) */	    || dev->del_dir) {
5015: /* MUTANT (del_stmt) */ /* 		yaffs_add_obj_to_dir(dev->root_dir, dev->lost_n_found); */ 
5016: /* MUTANT (del_stmt) */ /* 		return YAFFS_OK; */ 
5023: /* MUTANT (del_stmt) */ /* 	int init_failed = 0; */ 
5023: /* MUTANT (rep_const) */	int init_failed = 1;
5023: /* MUTANT (rep_const) */	int init_failed = -1;
5024: /* MUTANT (del_stmt) */ /* 	unsigned x; */ 
5025: /* MUTANT (del_stmt) */ /* 	int bits; */ 
5027: /* MUTANT (del_stmt) */ /* 	yaffs_trace(YAFFS_TRACE_TRACING, "yaffs: yaffs_guts_initialise()"); */ 
5031: /* MUTANT (negate) */	if(! (!dev)) {
5035: /* MUTANT (del_stmt) */ /* 		return YAFFS_FAIL; */ 
5038: /* MUTANT (negate) */	if(! (dev->is_mounted)) {
5039: /* MUTANT (del_stmt) */ /* 		yaffs_trace(YAFFS_TRACE_ALWAYS, "device already mounted"); */ 
5040: /* MUTANT (del_stmt) */ /* 		return YAFFS_FAIL; */ 
5044: /* MUTANT (del_stmt) */ /* 	dev->internal_end_block = dev->param.end_block; */ 
5045: /* MUTANT (del_stmt) */ /* 	dev->block_offset = 0; */ 
5045: /* MUTANT (rep_const) */	dev->block_offset = 1;
5045: /* MUTANT (rep_const) */	dev->block_offset = -1;
5046: /* MUTANT (del_stmt) */ /* 	dev->chunk_offset = 0; */ 
5046: /* MUTANT (rep_const) */	dev->chunk_offset = 1;
5046: /* MUTANT (rep_const) */	dev->chunk_offset = -1;
5047: /* MUTANT (del_stmt) */ /* 	dev->n_free_chunks = 0; */ 
5047: /* MUTANT (rep_const) */	dev->n_free_chunks = 1;
5047: /* MUTANT (rep_const) */	dev->n_free_chunks = -1;
5049: /* MUTANT (del_stmt) */ /* 	dev->gc_block = 0; */ 
5049: /* MUTANT (rep_const) */	dev->gc_block = 1;
5049: /* MUTANT (rep_const) */	dev->gc_block = -1;
5051: /* MUTANT (rep_op) */	if (dev->param.start_block != 0) {
5051: /* MUTANT (rep_const) */	if (dev->param.start_block == 1) {
5051: /* MUTANT (rep_const) */	if (dev->param.start_block == -1) {
5051: /* MUTANT (negate) */	if(! (dev->param.start_block == 0)) {
5052: /* MUTANT (del_stmt) */ /* 		dev->internal_start_block = dev->param.start_block + 1; */ 
5052: /* MUTANT (rep_op) */		dev->internal_start_block = dev->param.start_block - 1;
5052: /* MUTANT (rep_op) */		dev->internal_start_block = dev->param.start_block * 1;
5052: /* MUTANT (rep_op) */		dev->internal_start_block = dev->param.start_block % 1;
5052: /* MUTANT (rep_const) */		dev->internal_start_block = dev->param.start_block + 0;
5052: /* MUTANT (rep_const) */		dev->internal_start_block = dev->param.start_block + -1;
5052: /* MUTANT (rep_const) */		dev->internal_start_block = dev->param.start_block + ((1)+1);
5053: /* MUTANT (del_stmt) */ /* 		dev->internal_end_block = dev->param.end_block + 1; */ 
5053: /* MUTANT (rep_op) */		dev->internal_end_block = dev->param.end_block - 1;
5053: /* MUTANT (rep_op) */		dev->internal_end_block = dev->param.end_block * 1;
5053: /* MUTANT (rep_op) */		dev->internal_end_block = dev->param.end_block % 1;
5053: /* MUTANT (rep_const) */		dev->internal_end_block = dev->param.end_block + 0;
5053: /* MUTANT (rep_const) */		dev->internal_end_block = dev->param.end_block + -1;
5053: /* MUTANT (rep_const) */		dev->internal_end_block = dev->param.end_block + ((1)+1);
5054: /* MUTANT (del_stmt) */ /* 		dev->block_offset = 1; */ 
5054: /* MUTANT (rep_const) */		dev->block_offset = 0;
5054: /* MUTANT (rep_const) */		dev->block_offset = -1;
5054: /* MUTANT (rep_const) */		dev->block_offset = ((1)+1);
5055: /* MUTANT (del_stmt) */ /* 		dev->chunk_offset = dev->param.chunks_per_block; */ 
5060: /* MUTANT (rep_op) */	if ((!dev->param.inband_tags || dev->param.is_yaffs2 &&
5060: /* MUTANT (rep_op) */	if ((!dev->param.inband_tags && dev->param.is_yaffs2 ||
5061: /* MUTANT (rep_op) */		dev->param.total_bytes_per_chunk <= 1024) ||
5061: /* MUTANT (rep_op) */		dev->param.total_bytes_per_chunk > 1024) ||
5061: /* MUTANT (rep_op) */		dev->param.total_bytes_per_chunk >= 1024) ||
5061: /* MUTANT (rep_op) */		dev->param.total_bytes_per_chunk == 1024) ||
5061: /* MUTANT (rep_op) */		dev->param.total_bytes_per_chunk != 1024) ||
5061: /* MUTANT (rep_op) */		dev->param.total_bytes_per_chunk < 1024) &&
5061: /* MUTANT (rep_const) */		dev->param.total_bytes_per_chunk < 0) ||
5061: /* MUTANT (rep_const) */		dev->param.total_bytes_per_chunk < 1) ||
5061: /* MUTANT (rep_const) */		dev->param.total_bytes_per_chunk < -1) ||
5061: /* MUTANT (rep_const) */		dev->param.total_bytes_per_chunk < ((1024)+1)) ||
5061: /* MUTANT (rep_const) */		dev->param.total_bytes_per_chunk < ((1024)-1)) ||
5062: /* MUTANT (rep_op) */		(!dev->param.is_yaffs2 ||
5063: /* MUTANT (rep_op) */			dev->param.total_bytes_per_chunk <= 512) ||
5063: /* MUTANT (rep_op) */			dev->param.total_bytes_per_chunk > 512) ||
5063: /* MUTANT (rep_op) */			dev->param.total_bytes_per_chunk >= 512) ||
5063: /* MUTANT (rep_op) */			dev->param.total_bytes_per_chunk == 512) ||
5063: /* MUTANT (rep_op) */			dev->param.total_bytes_per_chunk != 512) ||
5063: /* MUTANT (rep_op) */			dev->param.total_bytes_per_chunk < 512) &&
5063: /* MUTANT (rep_const) */			dev->param.total_bytes_per_chunk < 0) ||
5063: /* MUTANT (rep_const) */			dev->param.total_bytes_per_chunk < 1) ||
5063: /* MUTANT (rep_const) */			dev->param.total_bytes_per_chunk < -1) ||
5063: /* MUTANT (rep_const) */			dev->param.total_bytes_per_chunk < ((512)+1)) ||
5063: /* MUTANT (rep_const) */			dev->param.total_bytes_per_chunk < ((512)-1)) ||
5064: /* MUTANT (rep_op) */		(dev->param.inband_tags || !dev->param.is_yaffs2) ||
5064: /* MUTANT (rep_op) */		(dev->param.inband_tags && !dev->param.is_yaffs2) &&
5065: /* MUTANT (rep_op) */		 dev->param.chunks_per_block <= 2 ||
5065: /* MUTANT (rep_op) */		 dev->param.chunks_per_block > 2 ||
5065: /* MUTANT (rep_op) */		 dev->param.chunks_per_block >= 2 ||
5065: /* MUTANT (rep_op) */		 dev->param.chunks_per_block == 2 ||
5065: /* MUTANT (rep_op) */		 dev->param.chunks_per_block != 2 ||
5065: /* MUTANT (rep_op) */		 dev->param.chunks_per_block < 2 &&
5065: /* MUTANT (rep_const) */		 dev->param.chunks_per_block < 0 ||
5065: /* MUTANT (rep_const) */		 dev->param.chunks_per_block < 1 ||
5065: /* MUTANT (rep_const) */		 dev->param.chunks_per_block < -1 ||
5065: /* MUTANT (rep_const) */		 dev->param.chunks_per_block < ((2)+1) ||
5065: /* MUTANT (rep_const) */		 dev->param.chunks_per_block < ((2)-1) ||
5066: /* MUTANT (rep_op) */		 dev->param.n_reserved_blocks <= 2 ||
5066: /* MUTANT (rep_op) */		 dev->param.n_reserved_blocks > 2 ||
5066: /* MUTANT (rep_op) */		 dev->param.n_reserved_blocks >= 2 ||
5066: /* MUTANT (rep_op) */		 dev->param.n_reserved_blocks == 2 ||
5066: /* MUTANT (rep_op) */		 dev->param.n_reserved_blocks != 2 ||
5066: /* MUTANT (rep_op) */		 dev->param.n_reserved_blocks < 2 &&
5066: /* MUTANT (rep_const) */		 dev->param.n_reserved_blocks < 0 ||
5066: /* MUTANT (rep_const) */		 dev->param.n_reserved_blocks < 1 ||
5066: /* MUTANT (rep_const) */		 dev->param.n_reserved_blocks < -1 ||
5066: /* MUTANT (rep_const) */		 dev->param.n_reserved_blocks < ((2)+1) ||
5066: /* MUTANT (rep_const) */		 dev->param.n_reserved_blocks < ((2)-1) ||
5067: /* MUTANT (rep_op) */		dev->internal_start_block < 0 ||
5067: /* MUTANT (rep_op) */		dev->internal_start_block > 0 ||
5067: /* MUTANT (rep_op) */		dev->internal_start_block >= 0 ||
5067: /* MUTANT (rep_op) */		dev->internal_start_block == 0 ||
5067: /* MUTANT (rep_op) */		dev->internal_start_block != 0 ||
5067: /* MUTANT (rep_op) */		dev->internal_start_block <= 0 &&
5067: /* MUTANT (rep_const) */		dev->internal_start_block <= 1 ||
5067: /* MUTANT (rep_const) */		dev->internal_start_block <= -1 ||
5068: /* MUTANT (rep_op) */		dev->internal_end_block < 0 ||
5068: /* MUTANT (rep_op) */		dev->internal_end_block > 0 ||
5068: /* MUTANT (rep_op) */		dev->internal_end_block >= 0 ||
5068: /* MUTANT (rep_op) */		dev->internal_end_block == 0 ||
5068: /* MUTANT (rep_op) */		dev->internal_end_block != 0 ||
5068: /* MUTANT (rep_op) */		dev->internal_end_block <= 0 &&
5068: /* MUTANT (rep_const) */		dev->internal_end_block <= 1 ||
5068: /* MUTANT (rep_const) */		dev->internal_end_block <= -1 ||
5069: /* MUTANT (rep_op) */		dev->internal_end_block <
5069: /* MUTANT (rep_op) */		dev->internal_end_block >
5069: /* MUTANT (rep_op) */		dev->internal_end_block >=
5069: /* MUTANT (rep_op) */		dev->internal_end_block ==
5069: /* MUTANT (rep_op) */		dev->internal_end_block !=
5070: /* MUTANT (rep_op) */		(dev->internal_start_block - dev->param.n_reserved_blocks + 2)
5070: /* MUTANT (rep_op) */		(dev->internal_start_block * dev->param.n_reserved_blocks + 2)
5070: /* MUTANT (rep_op) */		(dev->internal_start_block % dev->param.n_reserved_blocks + 2)
5070: /* MUTANT (rep_op) */		(dev->internal_start_block + dev->param.n_reserved_blocks - 2)
5070: /* MUTANT (rep_op) */		(dev->internal_start_block + dev->param.n_reserved_blocks * 2)
5070: /* MUTANT (rep_op) */		(dev->internal_start_block + dev->param.n_reserved_blocks % 2)
5070: /* MUTANT (rep_const) */		(dev->internal_start_block + dev->param.n_reserved_blocks + 0)
5070: /* MUTANT (rep_const) */		(dev->internal_start_block + dev->param.n_reserved_blocks + 1)
5070: /* MUTANT (rep_const) */		(dev->internal_start_block + dev->param.n_reserved_blocks + -1)
5070: /* MUTANT (rep_const) */		(dev->internal_start_block + dev->param.n_reserved_blocks + ((2)+1))
5070: /* MUTANT (rep_const) */		(dev->internal_start_block + dev->param.n_reserved_blocks + ((2)-1))
5076: /* MUTANT (rep_const) */			dev->param.is_yaffs2 ? "0" : "",
5076: /* MUTANT (rep_const) */			dev->param.is_yaffs2 ? "1" : "",
5076: /* MUTANT (rep_const) */			dev->param.is_yaffs2 ? "-1" : "",
5076: /* MUTANT (rep_const) */			dev->param.is_yaffs2 ? "((2)+1)" : "",
5076: /* MUTANT (rep_const) */			dev->param.is_yaffs2 ? "((2)-1)" : "",
5078: /* MUTANT (del_stmt) */ /* 		return YAFFS_FAIL; */ 
5081: /* MUTANT (rep_op) */	if (yaffs_init_nand(dev) == YAFFS_OK) {
5081: /* MUTANT (negate) */	if(! (yaffs_init_nand(dev) != YAFFS_OK)) {
5082: /* MUTANT (del_stmt) */ /* 		yaffs_trace(YAFFS_TRACE_ALWAYS, "InitialiseNAND failed"); */ 
5083: /* MUTANT (del_stmt) */ /* 		return YAFFS_FAIL; */ 
5087: /* MUTANT (negate) */	if(! (dev->param.inband_tags))
5095: /* MUTANT (negate) */	if(! (!yaffs_check_dev_fns(dev))) {
5100: /* MUTANT (del_stmt) */ /* 		return YAFFS_FAIL; */ 
5105: /* MUTANT (rep_const) */	dev->is_mounted = 0;
5105: /* MUTANT (rep_const) */	dev->is_mounted = -1;
5105: /* MUTANT (rep_const) */	dev->is_mounted = ((1)+1);
5112: /* MUTANT (del_stmt) */ /* 	x = dev->data_bytes_per_chunk; */ 
5114: /* MUTANT (del_stmt) */ /* 	dev->chunk_shift = calc_shifts(x); */ 
5114: /* MUTANT (negate) */	dev->chunk_shif(!t = calc_shifts(x));
5115: /* MUTANT (del_stmt) */ /* 	x >>= dev->chunk_shift; */ 
5116: /* MUTANT (del_stmt) */ /* 	dev->chunk_div = x; */ 
5118: /* MUTANT (del_stmt) */ /* 	dev->chunk_mask = (1 << dev->chunk_shift) - 1; */ 
5118: /* MUTANT (rep_const) */	dev->chunk_mask = (0 << dev->chunk_shift) - 1;
5118: /* MUTANT (rep_const) */	dev->chunk_mask = (-1 << dev->chunk_shift) - 1;
5118: /* MUTANT (rep_const) */	dev->chunk_mask = (((1)+1) << dev->chunk_shift) - 1;
5118: /* MUTANT (rep_const) */	dev->chunk_mask = (1 << dev->chunk_shift) - 0;
5118: /* MUTANT (rep_const) */	dev->chunk_mask = (1 << dev->chunk_shift) - -1;
5118: /* MUTANT (rep_const) */	dev->chunk_mask = (1 << dev->chunk_shift) - ((1)+1);
5125: /* MUTANT (del_stmt) */ /* 	x = dev->param.chunks_per_block * (dev->internal_end_block + 1); */ 
5125: /* MUTANT (rep_op) */	x = dev->param.chunks_per_block * (dev->internal_end_block - 1);
5125: /* MUTANT (rep_op) */	x = dev->param.chunks_per_block * (dev->internal_end_block * 1);
5125: /* MUTANT (rep_op) */	x = dev->param.chunks_per_block * (dev->internal_end_block % 1);
5125: /* MUTANT (rep_const) */	x = dev->param.chunks_per_block * (dev->internal_end_block + 0);
5125: /* MUTANT (rep_const) */	x = dev->param.chunks_per_block * (dev->internal_end_block + -1);
5125: /* MUTANT (rep_const) */	x = dev->param.chunks_per_block * (dev->internal_end_block + ((1)+1));
5127: /* MUTANT (del_stmt) */ /* 	bits = calc_shifts_ceiling(x); */ 
5127: /* MUTANT (negate) */	bits = calc_shif(!ts_ceiling(x));
5130: /* MUTANT (negate) */	if(! (!dev->param.wide_tnodes_disabled)) {
5132: /* MUTANT (rep_const) */		if (bits & 0)
5132: /* MUTANT (rep_const) */		if (bits & -1)
5132: /* MUTANT (rep_const) */		if (bits & ((1)+1))
5132: /* MUTANT (negate) */		if(! (bits & 1))
5133: /* MUTANT (rep_op) */			bits--;
5134: /* MUTANT (rep_op) */		if (bits <= 16)
5134: /* MUTANT (rep_op) */		if (bits > 16)
5134: /* MUTANT (rep_op) */		if (bits >= 16)
5134: /* MUTANT (rep_op) */		if (bits == 16)
5134: /* MUTANT (rep_op) */		if (bits != 16)
5134: /* MUTANT (rep_const) */		if (bits < 0)
5134: /* MUTANT (rep_const) */		if (bits < 1)
5134: /* MUTANT (rep_const) */		if (bits < -1)
5134: /* MUTANT (rep_const) */		if (bits < ((16)+1))
5134: /* MUTANT (rep_const) */		if (bits < ((16)-1))
5134: /* MUTANT (negate) */		if(! (bits < 16))
5135: /* MUTANT (rep_const) */			dev->tnode_width = 0;
5135: /* MUTANT (rep_const) */			dev->tnode_width = 1;
5135: /* MUTANT (rep_const) */			dev->tnode_width = -1;
5135: /* MUTANT (rep_const) */			dev->tnode_width = ((16)+1);
5135: /* MUTANT (rep_const) */			dev->tnode_width = ((16)-1);
5139: /* MUTANT (del_stmt) */ /* 		dev->tnode_width = 16; */ 
5139: /* MUTANT (rep_const) */		dev->tnode_width = 0;
5139: /* MUTANT (rep_const) */		dev->tnode_width = 1;
5139: /* MUTANT (rep_const) */		dev->tnode_width = -1;
5139: /* MUTANT (rep_const) */		dev->tnode_width = ((16)+1);
5139: /* MUTANT (rep_const) */		dev->tnode_width = ((16)-1);
5142: /* MUTANT (rep_const) */	dev->tnode_mask = (0 << dev->tnode_width) - 1;
5142: /* MUTANT (rep_const) */	dev->tnode_mask = (-1 << dev->tnode_width) - 1;
5142: /* MUTANT (rep_const) */	dev->tnode_mask = (((1)+1) << dev->tnode_width) - 1;
5142: /* MUTANT (rep_const) */	dev->tnode_mask = (1 << dev->tnode_width) - 0;
5142: /* MUTANT (rep_const) */	dev->tnode_mask = (1 << dev->tnode_width) - -1;
5142: /* MUTANT (rep_const) */	dev->tnode_mask = (1 << dev->tnode_width) - ((1)+1);
5150: /* MUTANT (rep_op) */	if (bits < dev->tnode_width)
5150: /* MUTANT (rep_op) */	if (bits > dev->tnode_width)
5150: /* MUTANT (rep_op) */	if (bits >= dev->tnode_width)
5150: /* MUTANT (rep_op) */	if (bits == dev->tnode_width)
5150: /* MUTANT (rep_op) */	if (bits != dev->tnode_width)
5150: /* MUTANT (negate) */	if(! (bits <= dev->tnode_width))
5151: /* MUTANT (rep_const) */		dev->chunk_grp_bits = 1;
5151: /* MUTANT (rep_const) */		dev->chunk_grp_bits = -1;
5155: /* MUTANT (del_stmt) */ /* 	dev->tnode_size = (dev->tnode_width * YAFFS_NTNODES_LEVEL0) / 8; */ 
5155: /* MUTANT (rep_const) */	dev->tnode_size = (dev->tnode_width * YAFFS_NTNODES_LEVEL0) / 0;
5155: /* MUTANT (rep_const) */	dev->tnode_size = (dev->tnode_width * YAFFS_NTNODES_LEVEL0) / 1;
5155: /* MUTANT (rep_const) */	dev->tnode_size = (dev->tnode_width * YAFFS_NTNODES_LEVEL0) / -1;
5155: /* MUTANT (rep_const) */	dev->tnode_size = (dev->tnode_width * YAFFS_NTNODES_LEVEL0) / ((8)+1);
5155: /* MUTANT (rep_const) */	dev->tnode_size = (dev->tnode_width * YAFFS_NTNODES_LEVEL0) / ((8)-1);
5156: /* MUTANT (rep_op) */	if (dev->tnode_size <= sizeof(struct yaffs_tnode))
5156: /* MUTANT (rep_op) */	if (dev->tnode_size > sizeof(struct yaffs_tnode))
5156: /* MUTANT (rep_op) */	if (dev->tnode_size >= sizeof(struct yaffs_tnode))
5156: /* MUTANT (rep_op) */	if (dev->tnode_size == sizeof(struct yaffs_tnode))
5156: /* MUTANT (rep_op) */	if (dev->tnode_size != sizeof(struct yaffs_tnode))
5156: /* MUTANT (negate) */	if(! (dev->tnode_size < sizeof(struct yaffs_tnode)))
5159: /* MUTANT (del_stmt) */ /* 	dev->chunk_grp_size = 1 << dev->chunk_grp_bits; */ 
5159: /* MUTANT (rep_const) */	dev->chunk_grp_size = 0 << dev->chunk_grp_bits;
5159: /* MUTANT (rep_const) */	dev->chunk_grp_size = -1 << dev->chunk_grp_bits;
5159: /* MUTANT (rep_const) */	dev->chunk_grp_size = ((1)+1) << dev->chunk_grp_bits;
5161: /* MUTANT (rep_op) */	if (dev->param.chunks_per_block <= dev->chunk_grp_size) {
5161: /* MUTANT (rep_op) */	if (dev->param.chunks_per_block > dev->chunk_grp_size) {
5161: /* MUTANT (rep_op) */	if (dev->param.chunks_per_block >= dev->chunk_grp_size) {
5161: /* MUTANT (rep_op) */	if (dev->param.chunks_per_block == dev->chunk_grp_size) {
5161: /* MUTANT (rep_op) */	if (dev->param.chunks_per_block != dev->chunk_grp_size) {
5161: /* MUTANT (negate) */	if(! (dev->param.chunks_per_block < dev->chunk_grp_size)) {
5166: /* MUTANT (del_stmt) */ /* 		yaffs_trace(YAFFS_TRACE_ALWAYS, "chunk group too large"); */ 
5168: /* MUTANT (del_stmt) */ /* 		return YAFFS_FAIL; */ 
5174: /* MUTANT (rep_const) */	dev->all_gcs = 1;
5174: /* MUTANT (rep_const) */	dev->all_gcs = -1;
5175: /* MUTANT (del_stmt) */ /* 	dev->passive_gc_count = 0; */ 
5175: /* MUTANT (rep_const) */	dev->passive_gc_count = 1;
5175: /* MUTANT (rep_const) */	dev->passive_gc_count = -1;
5176: /* MUTANT (del_stmt) */ /* 	dev->oldest_dirty_gc_count = 0; */ 
5176: /* MUTANT (rep_const) */	dev->oldest_dirty_gc_count = 1;
5176: /* MUTANT (rep_const) */	dev->oldest_dirty_gc_count = -1;
5177: /* MUTANT (del_stmt) */ /* 	dev->bg_gcs = 0; */ 
5177: /* MUTANT (rep_const) */	dev->bg_gcs = 1;
5177: /* MUTANT (rep_const) */	dev->bg_gcs = -1;
5178: /* MUTANT (del_stmt) */ /* 	dev->gc_block_finder = 0; */ 
5178: /* MUTANT (rep_const) */	dev->gc_block_finder = 1;
5178: /* MUTANT (rep_const) */	dev->gc_block_finder = -1;
5179: /* MUTANT (del_stmt) */ /* 	dev->buffered_block = -1; */ 
5179: /* MUTANT (rep_const) */	dev->buffered_block = 0;
5179: /* MUTANT (rep_const) */	dev->buffered_block = 1;
5179: /* MUTANT (rep_const) */	dev->buffered_block = ((-1)+1);
5179: /* MUTANT (rep_const) */	dev->buffered_block = ((-1)-1);
5180: /* MUTANT (del_stmt) */ /* 	dev->doing_buffered_block_rewrite = 0; */ 
5180: /* MUTANT (rep_const) */	dev->doing_buffered_block_rewrite = 1;
5180: /* MUTANT (rep_const) */	dev->doing_buffered_block_rewrite = -1;
5181: /* MUTANT (del_stmt) */ /* 	dev->n_deleted_files = 0; */ 
5181: /* MUTANT (rep_const) */	dev->n_deleted_files = 1;
5181: /* MUTANT (rep_const) */	dev->n_deleted_files = -1;
5182: /* MUTANT (del_stmt) */ /* 	dev->n_bg_deletions = 0; */ 
5182: /* MUTANT (rep_const) */	dev->n_bg_deletions = 1;
5182: /* MUTANT (rep_const) */	dev->n_bg_deletions = -1;
5183: /* MUTANT (del_stmt) */ /* 	dev->n_unlinked_files = 0; */ 
5183: /* MUTANT (rep_const) */	dev->n_unlinked_files = 1;
5183: /* MUTANT (rep_const) */	dev->n_unlinked_files = -1;
5184: /* MUTANT (del_stmt) */ /* 	dev->n_ecc_fixed = 0; */ 
5184: /* MUTANT (rep_const) */	dev->n_ecc_fixed = 1;
5184: /* MUTANT (rep_const) */	dev->n_ecc_fixed = -1;
5185: /* MUTANT (del_stmt) */ /* 	dev->n_ecc_unfixed = 0; */ 
5185: /* MUTANT (rep_const) */	dev->n_ecc_unfixed = 1;
5185: /* MUTANT (rep_const) */	dev->n_ecc_unfixed = -1;
5186: /* MUTANT (del_stmt) */ /* 	dev->n_tags_ecc_fixed = 0; */ 
5186: /* MUTANT (rep_const) */	dev->n_tags_ecc_fixed = 1;
5186: /* MUTANT (rep_const) */	dev->n_tags_ecc_fixed = -1;
5187: /* MUTANT (del_stmt) */ /* 	dev->n_tags_ecc_unfixed = 0; */ 
5187: /* MUTANT (rep_const) */	dev->n_tags_ecc_unfixed = 1;
5187: /* MUTANT (rep_const) */	dev->n_tags_ecc_unfixed = -1;
5188: /* MUTANT (del_stmt) */ /* 	dev->n_erase_failures = 0; */ 
5188: /* MUTANT (rep_const) */	dev->n_erase_failures = 1;
5188: /* MUTANT (rep_const) */	dev->n_erase_failures = -1;
5189: /* MUTANT (del_stmt) */ /* 	dev->n_erased_blocks = 0; */ 
5189: /* MUTANT (rep_const) */	dev->n_erased_blocks = 1;
5189: /* MUTANT (rep_const) */	dev->n_erased_blocks = -1;
5190: /* MUTANT (del_stmt) */ /* 	dev->gc_disable = 0; */ 
5190: /* MUTANT (rep_const) */	dev->gc_disable = 1;
5190: /* MUTANT (rep_const) */	dev->gc_disable = -1;
5191: /* MUTANT (del_stmt) */ /* 	dev->has_pending_prioritised_gc = 1; */ 
5191: /* MUTANT (rep_const) */	dev->has_pending_prioritised_gc = 0;
5191: /* MUTANT (rep_const) */	dev->has_pending_prioritised_gc = -1;
5191: /* MUTANT (rep_const) */	dev->has_pending_prioritised_gc = ((1)+1);
5193: /* MUTANT (del_stmt) */ /* 	INIT_LIST_HEAD(&dev->dirty_dirs); */ 
5194: /* MUTANT (del_stmt) */ /* 	dev->oldest_dirty_seq = 0; */ 
5194: /* MUTANT (rep_const) */	dev->oldest_dirty_seq = 1;
5194: /* MUTANT (rep_const) */	dev->oldest_dirty_seq = -1;
5195: /* MUTANT (del_stmt) */ /* 	dev->oldest_dirty_block = 0; */ 
5195: /* MUTANT (rep_const) */	dev->oldest_dirty_block = 1;
5195: /* MUTANT (rep_const) */	dev->oldest_dirty_block = -1;
5198: /* MUTANT (negate) */	if(! (!yaffs_init_tmp_buffers(dev)))
5199: /* MUTANT (rep_const) */		init_failed = 0;
5199: /* MUTANT (rep_const) */		init_failed = -1;
5199: /* MUTANT (rep_const) */		init_failed = ((1)+1);
5201: /* MUTANT (del_stmt) */ /* 	dev->cache = NULL; */ 
5202: /* MUTANT (del_stmt) */ /* 	dev->gc_cleanup_list = NULL; */ 
5204: /* MUTANT (rep_op) */	if (!init_failed || dev->param.n_caches > 0) {
5204: /* MUTANT (rep_op) */	if (!init_failed && dev->param.n_caches <= 0) {
5204: /* MUTANT (rep_op) */	if (!init_failed && dev->param.n_caches < 0) {
5204: /* MUTANT (rep_op) */	if (!init_failed && dev->param.n_caches >= 0) {
5204: /* MUTANT (rep_op) */	if (!init_failed && dev->param.n_caches == 0) {
5204: /* MUTANT (rep_op) */	if (!init_failed && dev->param.n_caches != 0) {
5204: /* MUTANT (rep_const) */	if (!init_failed && dev->param.n_caches > 1) {
5204: /* MUTANT (rep_const) */	if (!init_failed && dev->param.n_caches > -1) {
5204: /* MUTANT (negate) */	if(! (!init_failed && dev->param.n_caches > 0)) {
5205: /* MUTANT (del_stmt) */ /* 		int i; */ 
5206: /* MUTANT (del_stmt) */ /* 		void *buf; */ 
5210: /* MUTANT (rep_op) */		if (dev->param.n_caches <= YAFFS_MAX_SHORT_OP_CACHES)
5210: /* MUTANT (rep_op) */		if (dev->param.n_caches < YAFFS_MAX_SHORT_OP_CACHES)
5210: /* MUTANT (rep_op) */		if (dev->param.n_caches >= YAFFS_MAX_SHORT_OP_CACHES)
5210: /* MUTANT (rep_op) */		if (dev->param.n_caches == YAFFS_MAX_SHORT_OP_CACHES)
5210: /* MUTANT (rep_op) */		if (dev->param.n_caches != YAFFS_MAX_SHORT_OP_CACHES)
5210: /* MUTANT (negate) */		if(! (dev->param.n_caches > YAFFS_MAX_SHORT_OP_CACHES))
5213: /* MUTANT (del_stmt) */ /* 		dev->cache = kmalloc(cache_bytes, GFP_NOFS); */ 
5215: /* MUTANT (del_stmt) */ /* 		buf = (u8 *) dev->cache; */ 
5217: /* MUTANT (negate) */		if(! (dev->cache))
5218: /* MUTANT (rep_const) */			mymemset(dev->cache, 1, cache_bytes);
5218: /* MUTANT (rep_const) */			mymemset(dev->cache, -1, cache_bytes);
5220: /* MUTANT (rep_op) */		for (i = 0; i <= dev->param.n_caches && buf; i++) {
5220: /* MUTANT (rep_op) */		for (i = 0; i > dev->param.n_caches && buf; i++) {
5220: /* MUTANT (rep_op) */		for (i = 0; i >= dev->param.n_caches && buf; i++) {
5220: /* MUTANT (rep_op) */		for (i = 0; i == dev->param.n_caches && buf; i++) {
5220: /* MUTANT (rep_op) */		for (i = 0; i != dev->param.n_caches && buf; i++) {
5220: /* MUTANT (rep_op) */		for (i = 0; i < dev->param.n_caches || buf; i++) {
5220: /* MUTANT (rep_op) */		for (i = 0; i < dev->param.n_caches && buf; i--) {
5220: /* MUTANT (rep_const) */		for (i = 1; i < dev->param.n_caches && buf; i++) {
5220: /* MUTANT (rep_const) */		for (i = -1; i < dev->param.n_caches && buf; i++) {
5221: /* MUTANT (del_stmt) */ /* 			dev->cache[i].object = NULL; */ 
5222: /* MUTANT (del_stmt) */ /* 			dev->cache[i].last_use = 0; */ 
5222: /* MUTANT (rep_const) */			dev->cache[i].last_use = 1;
5222: /* MUTANT (rep_const) */			dev->cache[i].last_use = -1;
5223: /* MUTANT (del_stmt) */ /* 			dev->cache[i].dirty = 0; */ 
5223: /* MUTANT (rep_const) */			dev->cache[i].dirty = 1;
5223: /* MUTANT (rep_const) */			dev->cache[i].dirty = -1;
5227: /* MUTANT (negate) */		if(! (!buf))
5228: /* MUTANT (rep_const) */			init_failed = 0;
5228: /* MUTANT (rep_const) */			init_failed = -1;
5228: /* MUTANT (rep_const) */			init_failed = ((1)+1);
5230: /* MUTANT (del_stmt) */ /* 		dev->cache_last_use = 0; */ 
5230: /* MUTANT (rep_const) */		dev->cache_last_use = 1;
5230: /* MUTANT (rep_const) */		dev->cache_last_use = -1;
5233: /* MUTANT (rep_const) */	dev->cache_hits = 1;
5233: /* MUTANT (rep_const) */	dev->cache_hits = -1;
5235: /* MUTANT (negate) */	if(! (!init_failed)) {
5239: /* MUTANT (negate) */		if(! (!dev->gc_cleanup_list))
5240: /* MUTANT (rep_const) */			init_failed = 0;
5240: /* MUTANT (rep_const) */			init_failed = -1;
5240: /* MUTANT (rep_const) */			init_failed = ((1)+1);
5243: /* MUTANT (negate) */	if(! (dev->param.is_yaffs2))
5244: /* MUTANT (rep_const) */		dev->param.use_header_file_size = 0;
5244: /* MUTANT (rep_const) */		dev->param.use_header_file_size = -1;
5244: /* MUTANT (rep_const) */		dev->param.use_header_file_size = ((1)+1);
5246: /* MUTANT (rep_op) */	if (!init_failed || !yaffs_init_blocks(dev))
5246: /* MUTANT (negate) */	if(! (!init_failed && !yaffs_init_blocks(dev)))
5247: /* MUTANT (rep_const) */		init_failed = 0;
5247: /* MUTANT (rep_const) */		init_failed = -1;
5247: /* MUTANT (rep_const) */		init_failed = ((1)+1);
5249: /* MUTANT (del_stmt) */ /* 	yaffs_init_tnodes_and_objs(dev); */ 
5251: /* MUTANT (rep_op) */	if (!init_failed || !yaffs_create_initial_dir(dev))
5251: /* MUTANT (negate) */	if(! (!init_failed && !yaffs_create_initial_dir(dev)))
5252: /* MUTANT (rep_const) */		init_failed = 0;
5252: /* MUTANT (rep_const) */		init_failed = -1;
5252: /* MUTANT (rep_const) */		init_failed = ((1)+1);
5254: /* MUTANT (rep_op) */	if(!init_failed || dev->param.is_yaffs2 &&
5254: /* MUTANT (rep_op) */	if(!init_failed && dev->param.is_yaffs2 ||
5255: /* MUTANT (rep_op) */		!dev->param.disable_summary ||
5257: /* MUTANT (rep_const) */		init_failed = 0;
5257: /* MUTANT (rep_const) */		init_failed = -1;
5257: /* MUTANT (rep_const) */		init_failed = ((1)+1);
5259: /* MUTANT (negate) */	if(! (!init_failed)) {
5261: /* MUTANT (negate) */		if(! (dev->param.is_yaffs2)) {
5262: /* MUTANT (negate) */			if(! (yaffs2_checkpt_restore(dev))) {
5263: /* MUTANT (del_stmt) */ /* 				yaffs_check_obj_details_loaded(dev->root_dir); */ 
5264: /* MUTANT (rep_op) */				yaffs_trace(YAFFS_TRACE_CHECKPOINT &
5273: /* MUTANT (del_stmt) */ /* 				yaffs_deinit_blocks(dev); */ 
5275: /* MUTANT (del_stmt) */ /* 				yaffs_deinit_tnodes_and_objs(dev); */ 
5277: /* MUTANT (del_stmt) */ /* 				dev->n_erased_blocks = 0; */ 
5277: /* MUTANT (rep_const) */				dev->n_erased_blocks = 1;
5277: /* MUTANT (rep_const) */				dev->n_erased_blocks = -1;
5278: /* MUTANT (del_stmt) */ /* 				dev->n_free_chunks = 0; */ 
5278: /* MUTANT (rep_const) */				dev->n_free_chunks = 1;
5278: /* MUTANT (rep_const) */				dev->n_free_chunks = -1;
5279: /* MUTANT (del_stmt) */ /* 				dev->alloc_block = -1; */ 
5279: /* MUTANT (rep_const) */				dev->alloc_block = 0;
5279: /* MUTANT (rep_const) */				dev->alloc_block = 1;
5279: /* MUTANT (rep_const) */				dev->alloc_block = ((-1)+1);
5279: /* MUTANT (rep_const) */				dev->alloc_block = ((-1)-1);
5280: /* MUTANT (del_stmt) */ /* 				dev->alloc_page = -1; */ 
5280: /* MUTANT (rep_const) */				dev->alloc_page = 0;
5280: /* MUTANT (rep_const) */				dev->alloc_page = 1;
5280: /* MUTANT (rep_const) */				dev->alloc_page = ((-1)+1);
5280: /* MUTANT (rep_const) */				dev->alloc_page = ((-1)-1);
5281: /* MUTANT (del_stmt) */ /* 				dev->n_deleted_files = 0; */ 
5281: /* MUTANT (rep_const) */				dev->n_deleted_files = 1;
5281: /* MUTANT (rep_const) */				dev->n_deleted_files = -1;
5282: /* MUTANT (del_stmt) */ /* 				dev->n_unlinked_files = 0; */ 
5282: /* MUTANT (rep_const) */				dev->n_unlinked_files = 1;
5282: /* MUTANT (rep_const) */				dev->n_unlinked_files = -1;
5283: /* MUTANT (del_stmt) */ /* 				dev->n_bg_deletions = 0; */ 
5283: /* MUTANT (rep_const) */				dev->n_bg_deletions = 1;
5283: /* MUTANT (rep_const) */				dev->n_bg_deletions = -1;
5285: /* MUTANT (rep_op) */				if (!init_failed || !yaffs_init_blocks(dev))
5285: /* MUTANT (negate) */				if(! (!init_failed && !yaffs_init_blocks(dev)))
5286: /* MUTANT (rep_const) */					init_failed = 0;
5286: /* MUTANT (rep_const) */					init_failed = -1;
5286: /* MUTANT (rep_const) */					init_failed = ((1)+1);
5288: /* MUTANT (del_stmt) */ /* 				yaffs_init_tnodes_and_objs(dev); */ 
5291: /* MUTANT (rep_op) */				    || !yaffs_create_initial_dir(dev))
5292: /* MUTANT (rep_const) */					init_failed = 0;
5292: /* MUTANT (rep_const) */					init_failed = -1;
5292: /* MUTANT (rep_const) */					init_failed = ((1)+1);
5294: /* MUTANT (rep_op) */				if (!init_failed || !yaffs2_scan_backwards(dev))
5294: /* MUTANT (negate) */				if(! (!init_failed && !yaffs2_scan_backwards(dev)))
5295: /* MUTANT (rep_const) */					init_failed = 0;
5295: /* MUTANT (rep_const) */					init_failed = -1;
5295: /* MUTANT (rep_const) */					init_failed = ((1)+1);
5297: /* MUTANT (negate) */		} else if(! (!yaffs1_scan(dev))) {
5298: /* MUTANT (del_stmt) */ /* 			init_failed = 1; */ 
5298: /* MUTANT (rep_const) */			init_failed = 0;
5298: /* MUTANT (rep_const) */			init_failed = -1;
5298: /* MUTANT (rep_const) */			init_failed = ((1)+1);
5302: /* MUTANT (del_stmt) */ /* 		yaffs_fix_hanging_objs(dev); */ 
5303: /* MUTANT (negate) */		if(! (dev->param.empty_lost_n_found))
5307: /* MUTANT (negate) */	if(! (init_failed)) {
5312: /* MUTANT (del_stmt) */ /* 		yaffs_deinitialise(dev); */ 
5313: /* MUTANT (del_stmt) */ /* 		return YAFFS_FAIL; */ 
5317: /* MUTANT (rep_const) */	dev->n_page_reads = 1;
5317: /* MUTANT (rep_const) */	dev->n_page_reads = -1;
5318: /* MUTANT (del_stmt) */ /* 	dev->n_page_writes = 0; */ 
5318: /* MUTANT (rep_const) */	dev->n_page_writes = 1;
5318: /* MUTANT (rep_const) */	dev->n_page_writes = -1;
5319: /* MUTANT (del_stmt) */ /* 	dev->n_erasures = 0; */ 
5319: /* MUTANT (rep_const) */	dev->n_erasures = 1;
5319: /* MUTANT (rep_const) */	dev->n_erasures = -1;
5320: /* MUTANT (del_stmt) */ /* 	dev->n_gc_copies = 0; */ 
5320: /* MUTANT (rep_const) */	dev->n_gc_copies = 1;
5320: /* MUTANT (rep_const) */	dev->n_gc_copies = -1;
5321: /* MUTANT (del_stmt) */ /* 	dev->n_retried_writes = 0; */ 
5321: /* MUTANT (rep_const) */	dev->n_retried_writes = 1;
5321: /* MUTANT (rep_const) */	dev->n_retried_writes = -1;
5323: /* MUTANT (del_stmt) */ /* 	dev->n_retired_blocks = 0; */ 
5323: /* MUTANT (rep_const) */	dev->n_retired_blocks = 1;
5323: /* MUTANT (rep_const) */	dev->n_retired_blocks = -1;
5325: /* MUTANT (del_stmt) */ /* 	yaffs_verify_free_chunks(dev); */ 
5325: /* MUTANT (negate) */	yaffs_verif(!y_free_chunks(dev));
5326: /* MUTANT (del_stmt) */ /* 	yaffs_verify_blocks(dev); */ 
5326: /* MUTANT (negate) */	yaffs_verif(!y_blocks(dev));
5329: /* MUTANT (rep_op) */	if (!dev->is_checkpointed || dev->blocks_in_checkpt > 0)
5329: /* MUTANT (rep_op) */	if (!dev->is_checkpointed && dev->blocks_in_checkpt <= 0)
5329: /* MUTANT (rep_op) */	if (!dev->is_checkpointed && dev->blocks_in_checkpt < 0)
5329: /* MUTANT (rep_op) */	if (!dev->is_checkpointed && dev->blocks_in_checkpt >= 0)
5329: /* MUTANT (rep_op) */	if (!dev->is_checkpointed && dev->blocks_in_checkpt == 0)
5329: /* MUTANT (rep_op) */	if (!dev->is_checkpointed && dev->blocks_in_checkpt != 0)
5329: /* MUTANT (rep_const) */	if (!dev->is_checkpointed && dev->blocks_in_checkpt > 1)
5329: /* MUTANT (rep_const) */	if (!dev->is_checkpointed && dev->blocks_in_checkpt > -1)
5329: /* MUTANT (negate) */	if(! (!dev->is_checkpointed && dev->blocks_in_checkpt > 0))
5334: /* MUTANT (del_stmt) */ /* 	return YAFFS_OK; */ 
5339: /* MUTANT (negate) */	if(! (dev->is_mounted)) {
5340: /* MUTANT (del_stmt) */ /* 		int i; */ 
5342: /* MUTANT (del_stmt) */ /* 		yaffs_deinit_blocks(dev); */ 
5343: /* MUTANT (del_stmt) */ /* 		yaffs_deinit_tnodes_and_objs(dev); */ 
5344: /* MUTANT (del_stmt) */ /* 		yaffs_summary_deinit(dev); */ 
5346: /* MUTANT (rep_op) */		if (dev->param.n_caches <= 0 && dev->cache) {
5346: /* MUTANT (rep_op) */		if (dev->param.n_caches < 0 && dev->cache) {
5346: /* MUTANT (rep_op) */		if (dev->param.n_caches >= 0 && dev->cache) {
5346: /* MUTANT (rep_op) */		if (dev->param.n_caches == 0 && dev->cache) {
5346: /* MUTANT (rep_op) */		if (dev->param.n_caches != 0 && dev->cache) {
5346: /* MUTANT (rep_op) */		if (dev->param.n_caches > 0 || dev->cache) {
5346: /* MUTANT (rep_const) */		if (dev->param.n_caches > 1 && dev->cache) {
5346: /* MUTANT (rep_const) */		if (dev->param.n_caches > -1 && dev->cache) {
5346: /* MUTANT (negate) */		if(! (dev->param.n_caches > 0 && dev->cache)) {
5348: /* MUTANT (rep_op) */			for (i = 0; i <= dev->param.n_caches; i++) {
5348: /* MUTANT (rep_op) */			for (i = 0; i > dev->param.n_caches; i++) {
5348: /* MUTANT (rep_op) */			for (i = 0; i >= dev->param.n_caches; i++) {
5348: /* MUTANT (rep_op) */			for (i = 0; i == dev->param.n_caches; i++) {
5348: /* MUTANT (rep_op) */			for (i = 0; i != dev->param.n_caches; i++) {
5348: /* MUTANT (rep_op) */			for (i = 0; i < dev->param.n_caches; i--) {
5348: /* MUTANT (rep_const) */			for (i = 1; i < dev->param.n_caches; i++) {
5348: /* MUTANT (rep_const) */			for (i = -1; i < dev->param.n_caches; i++) {
5349: /* MUTANT (del_stmt) */ /* 				kfree(dev->cache[i].data); */ 
5350: /* MUTANT (del_stmt) */ /* 				dev->cache[i].data = NULL; */ 
5354: /* MUTANT (del_stmt) */ /* 			dev->cache = NULL; */ 
5359: /* MUTANT (rep_op) */		for (i = 0; i <= YAFFS_N_TEMP_BUFFERS; i++)
5359: /* MUTANT (rep_op) */		for (i = 0; i > YAFFS_N_TEMP_BUFFERS; i++)
5359: /* MUTANT (rep_op) */		for (i = 0; i >= YAFFS_N_TEMP_BUFFERS; i++)
5359: /* MUTANT (rep_op) */		for (i = 0; i == YAFFS_N_TEMP_BUFFERS; i++)
5359: /* MUTANT (rep_op) */		for (i = 0; i != YAFFS_N_TEMP_BUFFERS; i++)
5359: /* MUTANT (rep_op) */		for (i = 0; i < YAFFS_N_TEMP_BUFFERS; i--)
5359: /* MUTANT (rep_const) */		for (i = 1; i < YAFFS_N_TEMP_BUFFERS; i++)
5359: /* MUTANT (rep_const) */		for (i = -1; i < YAFFS_N_TEMP_BUFFERS; i++)
5362: /* MUTANT (del_stmt) */ /* 		dev->is_mounted = 0; */ 
5362: /* MUTANT (rep_const) */		dev->is_mounted = 1;
5362: /* MUTANT (rep_const) */		dev->is_mounted = -1;
5364: /* MUTANT (negate) */		if(! (dev->param.deinitialise_flash_fn))
5371: /* MUTANT (del_stmt) */ /* 	int n_free = 0; */ 
5371: /* MUTANT (rep_const) */	int n_free = 1;
5371: /* MUTANT (rep_const) */	int n_free = -1;
5372: /* MUTANT (del_stmt) */ /* 	int b; */ 
5373: /* MUTANT (del_stmt) */ /* 	struct yaffs_block_info *blk; */ 
5375: /* MUTANT (del_stmt) */ /* 	blk = dev->block_info; */ 
5376: /* MUTANT (rep_op) */	for (b = dev->internal_start_block; b < dev->internal_end_block; b++) {
5376: /* MUTANT (rep_op) */	for (b = dev->internal_start_block; b > dev->internal_end_block; b++) {
5376: /* MUTANT (rep_op) */	for (b = dev->internal_start_block; b >= dev->internal_end_block; b++) {
5376: /* MUTANT (rep_op) */	for (b = dev->internal_start_block; b == dev->internal_end_block; b++) {
5376: /* MUTANT (rep_op) */	for (b = dev->internal_start_block; b != dev->internal_end_block; b++) {
5376: /* MUTANT (rep_op) */	for (b = dev->internal_start_block; b <= dev->internal_end_block; b--) {
5382: /* MUTANT (rep_op) */			n_free -=
5382: /* MUTANT (rep_op) */			n_free *=
5382: /* MUTANT (rep_op) */			n_free %=
5383: /* MUTANT (rep_op) */			    (dev->param.chunks_per_block - blk->pages_in_use -
5383: /* MUTANT (rep_op) */			    (dev->param.chunks_per_block - blk->pages_in_use *
5383: /* MUTANT (rep_op) */			    (dev->param.chunks_per_block - blk->pages_in_use %
5385: /* MUTANT (del_stmt) */ /* 			break; */ 
5389: /* MUTANT (rep_op) */		blk--;
5397: /* MUTANT (del_stmt) */ /* 	int n_free; */ 
5398: /* MUTANT (del_stmt) */ /* 	int n_dirty_caches; */ 
5399: /* MUTANT (del_stmt) */ /* 	int blocks_for_checkpt; */ 
5400: /* MUTANT (del_stmt) */ /* 	int i; */ 
5402: /* MUTANT (del_stmt) */ /* 	n_free = dev->n_free_chunks; */ 
5403: /* MUTANT (del_stmt) */ /* 	n_free += dev->n_deleted_files; */ 
5403: /* MUTANT (rep_op) */	n_free -= dev->n_deleted_files;
5403: /* MUTANT (rep_op) */	n_free *= dev->n_deleted_files;
5403: /* MUTANT (rep_op) */	n_free %= dev->n_deleted_files;
5407: /* MUTANT (rep_op) */	for (n_dirty_caches = 0, i = 0; i <= dev->param.n_caches; i++) {
5407: /* MUTANT (rep_op) */	for (n_dirty_caches = 0, i = 0; i > dev->param.n_caches; i++) {
5407: /* MUTANT (rep_op) */	for (n_dirty_caches = 0, i = 0; i >= dev->param.n_caches; i++) {
5407: /* MUTANT (rep_op) */	for (n_dirty_caches = 0, i = 0; i == dev->param.n_caches; i++) {
5407: /* MUTANT (rep_op) */	for (n_dirty_caches = 0, i = 0; i != dev->param.n_caches; i++) {
5407: /* MUTANT (rep_op) */	for (n_dirty_caches = 0, i = 0; i < dev->param.n_caches; i--) {
5407: /* MUTANT (rep_const) */	for (n_dirty_caches = 1, i = 0; i < dev->param.n_caches; i++) {
5407: /* MUTANT (rep_const) */	for (n_dirty_caches = -1, i = 0; i < dev->param.n_caches; i++) {
5407: /* MUTANT (rep_const) */	for (n_dirty_caches = 0, i = 1; i < dev->param.n_caches; i++) {
5407: /* MUTANT (rep_const) */	for (n_dirty_caches = 0, i = -1; i < dev->param.n_caches; i++) {
5408: /* MUTANT (negate) */		if(! (dev->cache[i].dirty))
5409: /* MUTANT (rep_op) */			n_dirty_caches--;
5412: /* MUTANT (rep_op) */	n_free += n_dirty_caches;
5412: /* MUTANT (rep_op) */	n_free *= n_dirty_caches;
5412: /* MUTANT (rep_op) */	n_free %= n_dirty_caches;
5414: /* MUTANT (rep_op) */	n_free +=
5414: /* MUTANT (rep_op) */	n_free *=
5414: /* MUTANT (rep_op) */	n_free %=
5415: /* MUTANT (rep_op) */	    ((dev->param.n_reserved_blocks - 1) * dev->param.chunks_per_block);
5415: /* MUTANT (rep_op) */	    ((dev->param.n_reserved_blocks * 1) * dev->param.chunks_per_block);
5415: /* MUTANT (rep_op) */	    ((dev->param.n_reserved_blocks % 1) * dev->param.chunks_per_block);
5415: /* MUTANT (rep_const) */	    ((dev->param.n_reserved_blocks + 0) * dev->param.chunks_per_block);
5415: /* MUTANT (rep_const) */	    ((dev->param.n_reserved_blocks + -1) * dev->param.chunks_per_block);
5415: /* MUTANT (rep_const) */	    ((dev->param.n_reserved_blocks + ((1)+1)) * dev->param.chunks_per_block);
5418: /* MUTANT (del_stmt) */ /* 	blocks_for_checkpt = yaffs_calc_checkpt_blocks_required(dev); */ 
5420: /* MUTANT (del_stmt) */ /* 	n_free -= (blocks_for_checkpt * dev->param.chunks_per_block); */ 
5420: /* MUTANT (rep_op) */	n_free += (blocks_for_checkpt * dev->param.chunks_per_block);
5420: /* MUTANT (rep_op) */	n_free *= (blocks_for_checkpt * dev->param.chunks_per_block);
5420: /* MUTANT (rep_op) */	n_free %= (blocks_for_checkpt * dev->param.chunks_per_block);
5422: /* MUTANT (rep_op) */	if (n_free <= 0)
5422: /* MUTANT (rep_op) */	if (n_free > 0)
5422: /* MUTANT (rep_op) */	if (n_free >= 0)
5422: /* MUTANT (rep_op) */	if (n_free == 0)
5422: /* MUTANT (rep_op) */	if (n_free != 0)
5422: /* MUTANT (rep_const) */	if (n_free < 1)
5422: /* MUTANT (rep_const) */	if (n_free < -1)
5422: /* MUTANT (negate) */	if(! (n_free < 0))
5423: /* MUTANT (rep_const) */		n_free = 1;
5423: /* MUTANT (rep_const) */		n_free = -1;
5425: /* MUTANT (del_stmt) */ /* 	return n_free; */ 
5469: /* MUTANT (rep_op) */		*pi-- = *pj;				\
5470: /* MUTANT (rep_op) */		*pj-- = t;				\
5471: /* MUTANT (rep_op) */	} while (++i > 0);				\
5471: /* MUTANT (rep_op) */	} while (--i <= 0);				\
5471: /* MUTANT (rep_op) */	} while (--i < 0);				\
5471: /* MUTANT (rep_op) */	} while (--i >= 0);				\
5471: /* MUTANT (rep_op) */	} while (--i == 0);				\
5471: /* MUTANT (rep_op) */	} while (--i != 0);				\
5471: /* MUTANT (rep_const) */	} while (--i > 1);				\
5471: /* MUTANT (rep_const) */	} while (--i > -1);				\
5471: /* MUTANT (negate) */	} while(! (--i > 0));				\
5472: /* MUTANT (rep_const) */} while (1)
5472: /* MUTANT (rep_const) */} while (-1)
5472: /* MUTANT (negate) */} while(! (0))
5474: #define SWAPINIT(a, es) swaptype = ((char *)a - (char *)1) % sizeof(long) || \ /* MUTANT (rep_const) */
5474: #define SWAPINIT(a, es) swaptype = ((char *)a - (char *)-1) % sizeof(long) || \ /* MUTANT (rep_const) */
5475: /* MUTANT (rep_op) */	es + sizeof(long) ? 2 : es == sizeof(long) ? 0 : 1;
5475: /* MUTANT (rep_op) */	es - sizeof(long) ? 2 : es == sizeof(long) ? 0 : 1;
5475: /* MUTANT (rep_op) */	es * sizeof(long) ? 2 : es == sizeof(long) ? 0 : 1;
5475: /* MUTANT (rep_op) */	es % sizeof(long) ? 2 : es != sizeof(long) ? 0 : 1;
5475: /* MUTANT (rep_const) */	es % sizeof(long) ? 0 : es == sizeof(long) ? 0 : 1;
5475: /* MUTANT (rep_const) */	es % sizeof(long) ? 1 : es == sizeof(long) ? 0 : 1;
5475: /* MUTANT (rep_const) */	es % sizeof(long) ? -1 : es == sizeof(long) ? 0 : 1;
5475: /* MUTANT (rep_const) */	es % sizeof(long) ? ((2)+1) : es == sizeof(long) ? 0 : 1;
5475: /* MUTANT (rep_const) */	es % sizeof(long) ? ((2)-1) : es == sizeof(long) ? 0 : 1;
5475: /* MUTANT (rep_const) */	es % sizeof(long) ? 2 : es == sizeof(long) ? 1 : 1;
5475: /* MUTANT (rep_const) */	es % sizeof(long) ? 2 : es == sizeof(long) ? -1 : 1;
5475: /* MUTANT (rep_const) */	es % sizeof(long) ? 2 : es == sizeof(long) ? 0 : 0;
5475: /* MUTANT (rep_const) */	es % sizeof(long) ? 2 : es == sizeof(long) ? 0 : -1;
5475: /* MUTANT (rep_const) */	es % sizeof(long) ? 2 : es == sizeof(long) ? 0 : ((1)+1);
5480: /* MUTANT (rep_op) */	if (swaptype < 1)
5480: /* MUTANT (rep_op) */	if (swaptype > 1)
5480: /* MUTANT (rep_op) */	if (swaptype >= 1)
5480: /* MUTANT (rep_op) */	if (swaptype == 1)
5480: /* MUTANT (rep_op) */	if (swaptype != 1)
5480: /* MUTANT (rep_const) */	if (swaptype <= 0)
5480: /* MUTANT (rep_const) */	if (swaptype <= -1)
5480: /* MUTANT (rep_const) */	if (swaptype <= ((1)+1))
5480: /* MUTANT (negate) */	if(! (swaptype <= 1))
5487: /* MUTANT (rep_op) */	if (swaptype != 0) {				\
5487: /* MUTANT (rep_const) */	if (swaptype == 1) {				\
5487: /* MUTANT (rep_const) */	if (swaptype == -1) {				\
5487: /* MUTANT (negate) */	if(! (swaptype == 0)) {				\
5493: /* MUTANT (rep_const) */} while (1)
5493: /* MUTANT (rep_const) */} while (-1)
5493: /* MUTANT (negate) */} while(! (0))
5495: #define vecswap(a, b, n) 	if ((n) > 1) swapfunc(a, b, n, swaptype) /* MUTANT (rep_const) */
5495: #define vecswap(a, b, n) 	if ((n) > -1) swapfunc(a, b, n, swaptype) /* MUTANT (rep_const) */
5500: /* MUTANT (rep_op) */	return cmp(a, b) <= 0 ?
5500: /* MUTANT (rep_op) */	return cmp(a, b) > 0 ?
5500: /* MUTANT (rep_op) */	return cmp(a, b) >= 0 ?
5500: /* MUTANT (rep_op) */	return cmp(a, b) == 0 ?
5500: /* MUTANT (rep_op) */	return cmp(a, b) != 0 ?
5500: /* MUTANT (rep_const) */	return cmp(a, b) < 1 ?
5500: /* MUTANT (rep_const) */	return cmp(a, b) < -1 ?
5501: /* MUTANT (rep_op) */		(cmp(b, c) <= 0 ? b : (cmp(a, c) < 0 ? c : a))
5501: /* MUTANT (rep_op) */		(cmp(b, c) > 0 ? b : (cmp(a, c) < 0 ? c : a))
5501: /* MUTANT (rep_op) */		(cmp(b, c) >= 0 ? b : (cmp(a, c) < 0 ? c : a))
5501: /* MUTANT (rep_op) */		(cmp(b, c) == 0 ? b : (cmp(a, c) < 0 ? c : a))
5501: /* MUTANT (rep_op) */		(cmp(b, c) != 0 ? b : (cmp(a, c) < 0 ? c : a))
5501: /* MUTANT (rep_op) */		(cmp(b, c) < 0 ? b : (cmp(a, c) <= 0 ? c : a))
5501: /* MUTANT (rep_op) */		(cmp(b, c) < 0 ? b : (cmp(a, c) > 0 ? c : a))
5501: /* MUTANT (rep_op) */		(cmp(b, c) < 0 ? b : (cmp(a, c) >= 0 ? c : a))
5501: /* MUTANT (rep_op) */		(cmp(b, c) < 0 ? b : (cmp(a, c) == 0 ? c : a))
5501: /* MUTANT (rep_op) */		(cmp(b, c) < 0 ? b : (cmp(a, c) != 0 ? c : a))
5501: /* MUTANT (rep_const) */		(cmp(b, c) < 1 ? b : (cmp(a, c) < 0 ? c : a))
5501: /* MUTANT (rep_const) */		(cmp(b, c) < -1 ? b : (cmp(a, c) < 0 ? c : a))
5501: /* MUTANT (rep_const) */		(cmp(b, c) < 0 ? b : (cmp(a, c) < 1 ? c : a))
5501: /* MUTANT (rep_const) */		(cmp(b, c) < 0 ? b : (cmp(a, c) < -1 ? c : a))
5502: /* MUTANT (rep_op) */		: (cmp(b, c) <= 0 ? b : (cmp(a, c) < 0 ? a : c));
5502: /* MUTANT (rep_op) */		: (cmp(b, c) < 0 ? b : (cmp(a, c) < 0 ? a : c));
5502: /* MUTANT (rep_op) */		: (cmp(b, c) >= 0 ? b : (cmp(a, c) < 0 ? a : c));
5502: /* MUTANT (rep_op) */		: (cmp(b, c) == 0 ? b : (cmp(a, c) < 0 ? a : c));
5502: /* MUTANT (rep_op) */		: (cmp(b, c) != 0 ? b : (cmp(a, c) < 0 ? a : c));
5502: /* MUTANT (rep_op) */		: (cmp(b, c) > 0 ? b : (cmp(a, c) <= 0 ? a : c));
5502: /* MUTANT (rep_op) */		: (cmp(b, c) > 0 ? b : (cmp(a, c) > 0 ? a : c));
5502: /* MUTANT (rep_op) */		: (cmp(b, c) > 0 ? b : (cmp(a, c) >= 0 ? a : c));
5502: /* MUTANT (rep_op) */		: (cmp(b, c) > 0 ? b : (cmp(a, c) == 0 ? a : c));
5502: /* MUTANT (rep_op) */		: (cmp(b, c) > 0 ? b : (cmp(a, c) != 0 ? a : c));
5502: /* MUTANT (rep_const) */		: (cmp(b, c) > 1 ? b : (cmp(a, c) < 0 ? a : c));
5502: /* MUTANT (rep_const) */		: (cmp(b, c) > -1 ? b : (cmp(a, c) < 0 ? a : c));
5502: /* MUTANT (rep_const) */		: (cmp(b, c) > 0 ? b : (cmp(a, c) < 1 ? a : c));
5502: /* MUTANT (rep_const) */		: (cmp(b, c) > 0 ? b : (cmp(a, c) < -1 ? a : c));
5513: /* MUTANT (del_stmt) */ /* 	char *pa, *pb, *pc, *pd, *pl, *pm, *pn; */ 
5514: /* MUTANT (del_stmt) */ /* 	int d, r, swaptype, swap_cnt; */ 
5515: /* MUTANT (del_stmt) */ /* 	register char *a = aa; */ 
5517: /* MUTANT (del_stmt) */ /* loop:	SWAPINIT(a, es); */ 
5518: /* MUTANT (del_stmt) */ /* 	swap_cnt = 0; */ 
5518: /* MUTANT (rep_const) */	swap_cnt = 1;
5518: /* MUTANT (rep_const) */	swap_cnt = -1;
5519: /* MUTANT (rep_op) */	if (n <= 7) {
5519: /* MUTANT (rep_op) */	if (n > 7) {
5519: /* MUTANT (rep_op) */	if (n >= 7) {
5519: /* MUTANT (rep_op) */	if (n == 7) {
5519: /* MUTANT (rep_op) */	if (n != 7) {
5519: /* MUTANT (rep_const) */	if (n < 0) {
5519: /* MUTANT (rep_const) */	if (n < 1) {
5519: /* MUTANT (rep_const) */	if (n < -1) {
5519: /* MUTANT (rep_const) */	if (n < ((7)+1)) {
5519: /* MUTANT (rep_const) */	if (n < ((7)-1)) {
5519: /* MUTANT (negate) */	if(! (n < 7)) {
5520: /* MUTANT (rep_op) */		for (pm = (char *)a - es; pm < (char *) a + n * es; pm += es)
5520: /* MUTANT (rep_op) */		for (pm = (char *)a * es; pm < (char *) a + n * es; pm += es)
5520: /* MUTANT (rep_op) */		for (pm = (char *)a % es; pm < (char *) a + n * es; pm += es)
5520: /* MUTANT (rep_op) */		for (pm = (char *)a + es; pm <= (char *) a + n * es; pm += es)
5520: /* MUTANT (rep_op) */		for (pm = (char *)a + es; pm > (char *) a + n * es; pm += es)
5520: /* MUTANT (rep_op) */		for (pm = (char *)a + es; pm >= (char *) a + n * es; pm += es)
5520: /* MUTANT (rep_op) */		for (pm = (char *)a + es; pm == (char *) a + n * es; pm += es)
5520: /* MUTANT (rep_op) */		for (pm = (char *)a + es; pm != (char *) a + n * es; pm += es)
5520: /* MUTANT (rep_op) */		for (pm = (char *)a + es; pm < (char *) a - n * es; pm += es)
5520: /* MUTANT (rep_op) */		for (pm = (char *)a + es; pm < (char *) a * n * es; pm += es)
5520: /* MUTANT (rep_op) */		for (pm = (char *)a + es; pm < (char *) a % n * es; pm += es)
5520: /* MUTANT (rep_op) */		for (pm = (char *)a + es; pm < (char *) a + n * es; pm -= es)
5520: /* MUTANT (rep_op) */		for (pm = (char *)a + es; pm < (char *) a + n * es; pm *= es)
5520: /* MUTANT (rep_op) */		for (pm = (char *)a + es; pm < (char *) a + n * es; pm %= es)
5521: /* MUTANT (rep_op) */			for (pl = pm; pl <= (char *) a && cmp(pl - es, pl) > 0;
5521: /* MUTANT (rep_op) */			for (pl = pm; pl < (char *) a && cmp(pl - es, pl) > 0;
5521: /* MUTANT (rep_op) */			for (pl = pm; pl >= (char *) a && cmp(pl - es, pl) > 0;
5521: /* MUTANT (rep_op) */			for (pl = pm; pl == (char *) a && cmp(pl - es, pl) > 0;
5521: /* MUTANT (rep_op) */			for (pl = pm; pl != (char *) a && cmp(pl - es, pl) > 0;
5521: /* MUTANT (rep_op) */			for (pl = pm; pl > (char *) a || cmp(pl - es, pl) > 0;
5521: /* MUTANT (rep_op) */			for (pl = pm; pl > (char *) a && cmp(pl - es, pl) <= 0;
5521: /* MUTANT (rep_op) */			for (pl = pm; pl > (char *) a && cmp(pl - es, pl) < 0;
5521: /* MUTANT (rep_op) */			for (pl = pm; pl > (char *) a && cmp(pl - es, pl) >= 0;
5521: /* MUTANT (rep_op) */			for (pl = pm; pl > (char *) a && cmp(pl - es, pl) == 0;
5521: /* MUTANT (rep_op) */			for (pl = pm; pl > (char *) a && cmp(pl - es, pl) != 0;
5521: /* MUTANT (rep_const) */			for (pl = pm; pl > (char *) a && cmp(pl - es, pl) > 1;
5521: /* MUTANT (rep_const) */			for (pl = pm; pl > (char *) a && cmp(pl - es, pl) > -1;
5522: /* MUTANT (rep_op) */			     pl += es)
5522: /* MUTANT (rep_op) */			     pl *= es)
5522: /* MUTANT (rep_op) */			     pl %= es)
5524: /* MUTANT (del_stmt) */ /* 		return; */ 
5526: /* MUTANT (rep_op) */	pm = (char *)a - (n / 2) * es;
5526: /* MUTANT (rep_op) */	pm = (char *)a * (n / 2) * es;
5526: /* MUTANT (rep_op) */	pm = (char *)a % (n / 2) * es;
5526: /* MUTANT (rep_const) */	pm = (char *)a + (n / 0) * es;
5526: /* MUTANT (rep_const) */	pm = (char *)a + (n / 1) * es;
5526: /* MUTANT (rep_const) */	pm = (char *)a + (n / -1) * es;
5526: /* MUTANT (rep_const) */	pm = (char *)a + (n / ((2)+1)) * es;
5526: /* MUTANT (rep_const) */	pm = (char *)a + (n / ((2)-1)) * es;
5527: /* MUTANT (rep_op) */	if (n <= 7) {
5527: /* MUTANT (rep_op) */	if (n < 7) {
5527: /* MUTANT (rep_op) */	if (n >= 7) {
5527: /* MUTANT (rep_op) */	if (n == 7) {
5527: /* MUTANT (rep_op) */	if (n != 7) {
5527: /* MUTANT (rep_const) */	if (n > 0) {
5527: /* MUTANT (rep_const) */	if (n > 1) {
5527: /* MUTANT (rep_const) */	if (n > -1) {
5527: /* MUTANT (rep_const) */	if (n > ((7)+1)) {
5527: /* MUTANT (rep_const) */	if (n > ((7)-1)) {
5527: /* MUTANT (negate) */	if(! (n > 7)) {
5528: /* MUTANT (del_stmt) */ /* 		pl = (char *)a; */ 
5529: /* MUTANT (del_stmt) */ /* 		pn = (char *)a + (n - 1) * es; */ 
5529: /* MUTANT (rep_op) */		pn = (char *)a - (n - 1) * es;
5529: /* MUTANT (rep_op) */		pn = (char *)a * (n - 1) * es;
5529: /* MUTANT (rep_op) */		pn = (char *)a % (n - 1) * es;
5529: /* MUTANT (rep_const) */		pn = (char *)a + (n - 0) * es;
5529: /* MUTANT (rep_const) */		pn = (char *)a + (n - -1) * es;
5529: /* MUTANT (rep_const) */		pn = (char *)a + (n - ((1)+1)) * es;
5530: /* MUTANT (rep_op) */		if (n <= 40) {
5530: /* MUTANT (rep_op) */		if (n < 40) {
5530: /* MUTANT (rep_op) */		if (n >= 40) {
5530: /* MUTANT (rep_op) */		if (n == 40) {
5530: /* MUTANT (rep_op) */		if (n != 40) {
5530: /* MUTANT (rep_const) */		if (n > 0) {
5530: /* MUTANT (rep_const) */		if (n > 1) {
5530: /* MUTANT (rep_const) */		if (n > -1) {
5530: /* MUTANT (rep_const) */		if (n > ((40)+1)) {
5530: /* MUTANT (rep_const) */		if (n > ((40)-1)) {
5530: /* MUTANT (negate) */		if(! (n > 40)) {
5531: /* MUTANT (del_stmt) */ /* 			d = (n / 8) * es; */ 
5531: /* MUTANT (rep_const) */			d = (n / 0) * es;
5531: /* MUTANT (rep_const) */			d = (n / 1) * es;
5531: /* MUTANT (rep_const) */			d = (n / -1) * es;
5531: /* MUTANT (rep_const) */			d = (n / ((8)+1)) * es;
5531: /* MUTANT (rep_const) */			d = (n / ((8)-1)) * es;
5532: /* MUTANT (del_stmt) */ /* 			pl = med3(pl, pl + d, pl + 2 * d, cmp); */ 
5532: /* MUTANT (rep_op) */			pl = med3(pl, pl - d, pl + 2 * d, cmp);
5532: /* MUTANT (rep_op) */			pl = med3(pl, pl * d, pl + 2 * d, cmp);
5532: /* MUTANT (rep_op) */			pl = med3(pl, pl % d, pl + 2 * d, cmp);
5532: /* MUTANT (rep_op) */			pl = med3(pl, pl + d, pl - 2 * d, cmp);
5532: /* MUTANT (rep_op) */			pl = med3(pl, pl + d, pl * 2 * d, cmp);
5532: /* MUTANT (rep_op) */			pl = med3(pl, pl + d, pl % 2 * d, cmp);
5532: /* MUTANT (rep_const) */			pl = med3(pl, pl + d, pl + 0 * d, cmp);
5532: /* MUTANT (rep_const) */			pl = med3(pl, pl + d, pl + 1 * d, cmp);
5532: /* MUTANT (rep_const) */			pl = med3(pl, pl + d, pl + -1 * d, cmp);
5532: /* MUTANT (rep_const) */			pl = med3(pl, pl + d, pl + ((2)+1) * d, cmp);
5532: /* MUTANT (rep_const) */			pl = med3(pl, pl + d, pl + ((2)-1) * d, cmp);
5533: /* MUTANT (del_stmt) */ /* 			pm = med3(pm - d, pm, pm + d, cmp); */ 
5533: /* MUTANT (rep_op) */			pm = med3(pm - d, pm, pm - d, cmp);
5533: /* MUTANT (rep_op) */			pm = med3(pm - d, pm, pm * d, cmp);
5533: /* MUTANT (rep_op) */			pm = med3(pm - d, pm, pm % d, cmp);
5534: /* MUTANT (del_stmt) */ /* 			pn = med3(pn - 2 * d, pn - d, pn, cmp); */ 
5534: /* MUTANT (rep_const) */			pn = med3(pn - 0 * d, pn - d, pn, cmp);
5534: /* MUTANT (rep_const) */			pn = med3(pn - 1 * d, pn - d, pn, cmp);
5534: /* MUTANT (rep_const) */			pn = med3(pn - -1 * d, pn - d, pn, cmp);
5534: /* MUTANT (rep_const) */			pn = med3(pn - ((2)+1) * d, pn - d, pn, cmp);
5534: /* MUTANT (rep_const) */			pn = med3(pn - ((2)-1) * d, pn - d, pn, cmp);
5539: /* MUTANT (del_stmt) */ /* 	pa = pb = (char *)a + es; */ 
5539: /* MUTANT (rep_op) */	pa = pb = (char *)a - es;
5539: /* MUTANT (rep_op) */	pa = pb = (char *)a * es;
5539: /* MUTANT (rep_op) */	pa = pb = (char *)a % es;
5541: /* MUTANT (del_stmt) */ /* 	pc = pd = (char *)a + (n - 1) * es; */ 
5541: /* MUTANT (rep_op) */	pc = pd = (char *)a - (n - 1) * es;
5541: /* MUTANT (rep_op) */	pc = pd = (char *)a * (n - 1) * es;
5541: /* MUTANT (rep_op) */	pc = pd = (char *)a % (n - 1) * es;
5541: /* MUTANT (rep_const) */	pc = pd = (char *)a + (n - 0) * es;
5541: /* MUTANT (rep_const) */	pc = pd = (char *)a + (n - -1) * es;
5541: /* MUTANT (rep_const) */	pc = pd = (char *)a + (n - ((1)+1)) * es;
5543: /* MUTANT (rep_op) */		while (pb < pc && (r = cmp(pb, a)) <= 0) {
5543: /* MUTANT (rep_op) */		while (pb > pc && (r = cmp(pb, a)) <= 0) {
5543: /* MUTANT (rep_op) */		while (pb >= pc && (r = cmp(pb, a)) <= 0) {
5543: /* MUTANT (rep_op) */		while (pb == pc && (r = cmp(pb, a)) <= 0) {
5543: /* MUTANT (rep_op) */		while (pb != pc && (r = cmp(pb, a)) <= 0) {
5543: /* MUTANT (rep_op) */		while (pb <= pc || (r = cmp(pb, a)) <= 0) {
5543: /* MUTANT (rep_op) */		while (pb <= pc && (r = cmp(pb, a)) < 0) {
5543: /* MUTANT (rep_op) */		while (pb <= pc && (r = cmp(pb, a)) > 0) {
5543: /* MUTANT (rep_op) */		while (pb <= pc && (r = cmp(pb, a)) >= 0) {
5543: /* MUTANT (rep_op) */		while (pb <= pc && (r = cmp(pb, a)) == 0) {
5543: /* MUTANT (rep_op) */		while (pb <= pc && (r = cmp(pb, a)) != 0) {
5543: /* MUTANT (rep_const) */		while (pb <= pc && (r = cmp(pb, a)) <= 1) {
5543: /* MUTANT (rep_const) */		while (pb <= pc && (r = cmp(pb, a)) <= -1) {
5543: /* MUTANT (negate) */		while(! (pb <= pc && (r = cmp(pb, a)) <= 0)) {
5544: /* MUTANT (rep_op) */			if (r != 0) {
5544: /* MUTANT (rep_const) */			if (r == 1) {
5544: /* MUTANT (rep_const) */			if (r == -1) {
5544: /* MUTANT (negate) */			if(! (r == 0)) {
5545: /* MUTANT (del_stmt) */ /* 				swap_cnt = 1; */ 
5545: /* MUTANT (rep_const) */				swap_cnt = 0;
5545: /* MUTANT (rep_const) */				swap_cnt = -1;
5545: /* MUTANT (rep_const) */				swap_cnt = ((1)+1);
5546: /* MUTANT (del_stmt) */ /* 				yswap(pa, pb); */ 
5547: /* MUTANT (del_stmt) */ /* 				pa += es; */ 
5547: /* MUTANT (rep_op) */				pa -= es;
5547: /* MUTANT (rep_op) */				pa *= es;
5547: /* MUTANT (rep_op) */				pa %= es;
5549: /* MUTANT (rep_op) */			pb -= es;
5549: /* MUTANT (rep_op) */			pb *= es;
5549: /* MUTANT (rep_op) */			pb %= es;
5551: /* MUTANT (rep_op) */		while (pb < pc && (r = cmp(pc, a)) >= 0) {
5551: /* MUTANT (rep_op) */		while (pb > pc && (r = cmp(pc, a)) >= 0) {
5551: /* MUTANT (rep_op) */		while (pb >= pc && (r = cmp(pc, a)) >= 0) {
5551: /* MUTANT (rep_op) */		while (pb == pc && (r = cmp(pc, a)) >= 0) {
5551: /* MUTANT (rep_op) */		while (pb != pc && (r = cmp(pc, a)) >= 0) {
5551: /* MUTANT (rep_op) */		while (pb <= pc || (r = cmp(pc, a)) >= 0) {
5551: /* MUTANT (rep_op) */		while (pb <= pc && (r = cmp(pc, a)) <= 0) {
5551: /* MUTANT (rep_op) */		while (pb <= pc && (r = cmp(pc, a)) < 0) {
5551: /* MUTANT (rep_op) */		while (pb <= pc && (r = cmp(pc, a)) > 0) {
5551: /* MUTANT (rep_op) */		while (pb <= pc && (r = cmp(pc, a)) == 0) {
5551: /* MUTANT (rep_op) */		while (pb <= pc && (r = cmp(pc, a)) != 0) {
5551: /* MUTANT (rep_const) */		while (pb <= pc && (r = cmp(pc, a)) >= 1) {
5551: /* MUTANT (rep_const) */		while (pb <= pc && (r = cmp(pc, a)) >= -1) {
5551: /* MUTANT (negate) */		while(! (pb <= pc && (r = cmp(pc, a)) >= 0)) {
5552: /* MUTANT (rep_op) */			if (r != 0) {
5552: /* MUTANT (rep_const) */			if (r == 1) {
5552: /* MUTANT (rep_const) */			if (r == -1) {
5552: /* MUTANT (negate) */			if(! (r == 0)) {
5553: /* MUTANT (del_stmt) */ /* 				swap_cnt = 1; */ 
5553: /* MUTANT (rep_const) */				swap_cnt = 0;
5553: /* MUTANT (rep_const) */				swap_cnt = -1;
5553: /* MUTANT (rep_const) */				swap_cnt = ((1)+1);
5554: /* MUTANT (del_stmt) */ /* 				yswap(pc, pd); */ 
5555: /* MUTANT (del_stmt) */ /* 				pd -= es; */ 
5555: /* MUTANT (rep_op) */				pd += es;
5555: /* MUTANT (rep_op) */				pd *= es;
5555: /* MUTANT (rep_op) */				pd %= es;
5557: /* MUTANT (rep_op) */			pc += es;
5557: /* MUTANT (rep_op) */			pc *= es;
5557: /* MUTANT (rep_op) */			pc %= es;
5559: /* MUTANT (rep_op) */		if (pb <= pc)
5559: /* MUTANT (rep_op) */		if (pb < pc)
5559: /* MUTANT (rep_op) */		if (pb >= pc)
5559: /* MUTANT (rep_op) */		if (pb == pc)
5559: /* MUTANT (rep_op) */		if (pb != pc)
5559: /* MUTANT (negate) */		if(! (pb > pc))
5561: /* MUTANT (del_stmt) */ /* 		yswap(pb, pc); */ 
5562: /* MUTANT (del_stmt) */ /* 		swap_cnt = 1; */ 
5562: /* MUTANT (rep_const) */		swap_cnt = 0;
5562: /* MUTANT (rep_const) */		swap_cnt = -1;
5562: /* MUTANT (rep_const) */		swap_cnt = ((1)+1);
5563: /* MUTANT (del_stmt) */ /* 		pb += es; */ 
5563: /* MUTANT (rep_op) */		pb -= es;
5563: /* MUTANT (rep_op) */		pb *= es;
5563: /* MUTANT (rep_op) */		pb %= es;
5564: /* MUTANT (del_stmt) */ /* 		pc -= es; */ 
5564: /* MUTANT (rep_op) */		pc += es;
5564: /* MUTANT (rep_op) */		pc *= es;
5564: /* MUTANT (rep_op) */		pc %= es;
5566: /* MUTANT (rep_op) */	if (swap_cnt != 0) {  /* Switch to insertion sort */
5566: /* MUTANT (rep_const) */	if (swap_cnt == 1) {  /* Switch to insertion sort */
5566: /* MUTANT (rep_const) */	if (swap_cnt == -1) {  /* Switch to insertion sort */
5566: /* MUTANT (negate) */	if(! (swap_cnt == 0)) {  /* Switch to insertion sort */
5567: /* MUTANT (rep_op) */		for (pm = (char *) a - es; pm < (char *) a + n * es; pm += es)
5567: /* MUTANT (rep_op) */		for (pm = (char *) a * es; pm < (char *) a + n * es; pm += es)
5567: /* MUTANT (rep_op) */		for (pm = (char *) a % es; pm < (char *) a + n * es; pm += es)
5567: /* MUTANT (rep_op) */		for (pm = (char *) a + es; pm <= (char *) a + n * es; pm += es)
5567: /* MUTANT (rep_op) */		for (pm = (char *) a + es; pm > (char *) a + n * es; pm += es)
5567: /* MUTANT (rep_op) */		for (pm = (char *) a + es; pm >= (char *) a + n * es; pm += es)
5567: /* MUTANT (rep_op) */		for (pm = (char *) a + es; pm == (char *) a + n * es; pm += es)
5567: /* MUTANT (rep_op) */		for (pm = (char *) a + es; pm != (char *) a + n * es; pm += es)
5567: /* MUTANT (rep_op) */		for (pm = (char *) a + es; pm < (char *) a - n * es; pm += es)
5567: /* MUTANT (rep_op) */		for (pm = (char *) a + es; pm < (char *) a * n * es; pm += es)
5567: /* MUTANT (rep_op) */		for (pm = (char *) a + es; pm < (char *) a % n * es; pm += es)
5567: /* MUTANT (rep_op) */		for (pm = (char *) a + es; pm < (char *) a + n * es; pm -= es)
5567: /* MUTANT (rep_op) */		for (pm = (char *) a + es; pm < (char *) a + n * es; pm *= es)
5567: /* MUTANT (rep_op) */		for (pm = (char *) a + es; pm < (char *) a + n * es; pm %= es)
5568: /* MUTANT (rep_op) */			for (pl = pm; pl <= (char *) a && cmp(pl - es, pl) > 0;
5568: /* MUTANT (rep_op) */			for (pl = pm; pl < (char *) a && cmp(pl - es, pl) > 0;
5568: /* MUTANT (rep_op) */			for (pl = pm; pl >= (char *) a && cmp(pl - es, pl) > 0;
5568: /* MUTANT (rep_op) */			for (pl = pm; pl == (char *) a && cmp(pl - es, pl) > 0;
5568: /* MUTANT (rep_op) */			for (pl = pm; pl != (char *) a && cmp(pl - es, pl) > 0;
5568: /* MUTANT (rep_op) */			for (pl = pm; pl > (char *) a || cmp(pl - es, pl) > 0;
5568: /* MUTANT (rep_op) */			for (pl = pm; pl > (char *) a && cmp(pl - es, pl) <= 0;
5568: /* MUTANT (rep_op) */			for (pl = pm; pl > (char *) a && cmp(pl - es, pl) < 0;
5568: /* MUTANT (rep_op) */			for (pl = pm; pl > (char *) a && cmp(pl - es, pl) >= 0;
5568: /* MUTANT (rep_op) */			for (pl = pm; pl > (char *) a && cmp(pl - es, pl) == 0;
5568: /* MUTANT (rep_op) */			for (pl = pm; pl > (char *) a && cmp(pl - es, pl) != 0;
5568: /* MUTANT (rep_const) */			for (pl = pm; pl > (char *) a && cmp(pl - es, pl) > 1;
5568: /* MUTANT (rep_const) */			for (pl = pm; pl > (char *) a && cmp(pl - es, pl) > -1;
5569: /* MUTANT (rep_op) */			     pl += es)
5569: /* MUTANT (rep_op) */			     pl *= es)
5569: /* MUTANT (rep_op) */			     pl %= es)
5571: /* MUTANT (del_stmt) */ /* 		return; */ 
5574: /* MUTANT (rep_op) */	pn = (char *)a - n * es;
5574: /* MUTANT (rep_op) */	pn = (char *)a * n * es;
5574: /* MUTANT (rep_op) */	pn = (char *)a % n * es;
5575: /* MUTANT (del_stmt) */ /* 	r = min(pa - (char *)a, pb - pa); */ 
5576: /* MUTANT (del_stmt) */ /* 	vecswap(a, pb - r, r); */ 
5577: /* MUTANT (del_stmt) */ /* 	r = min((long)(pd - pc), (long)(pn - pd - es)); */ 
5578: /* MUTANT (del_stmt) */ /* 	vecswap(pb, pn - r, r); */ 
5579: /* MUTANT (del_stmt) */ /* 	r = pb - pa; */ 
5580: /* MUTANT (rep_op) */	if (r <= es)
5580: /* MUTANT (rep_op) */	if (r < es)
5580: /* MUTANT (rep_op) */	if (r >= es)
5580: /* MUTANT (rep_op) */	if (r == es)
5580: /* MUTANT (rep_op) */	if (r != es)
5580: /* MUTANT (negate) */	if(! (r > es))
5582: /* MUTANT (del_stmt) */ /* 	r = pd - pc; */ 
5583: /* MUTANT (rep_op) */	if (r <= es) {
5583: /* MUTANT (rep_op) */	if (r < es) {
5583: /* MUTANT (rep_op) */	if (r >= es) {
5583: /* MUTANT (rep_op) */	if (r == es) {
5583: /* MUTANT (rep_op) */	if (r != es) {
5583: /* MUTANT (negate) */	if(! (r > es)) {
5585: /* MUTANT (del_stmt) */ /* 		a = pn - r; */ 
5586: /* MUTANT (del_stmt) */ /* 		n = r / es; */ 
5587: /* MUTANT (del_stmt) */ /* 		goto loop; */ 
5611: /* MUTANT (negate) */int yaffs_skip_verif(!ication(struct yaffs_dev *dev))
5613: /* MUTANT (del_stmt) */ /* 	dev = dev; */ 
5615: /* MUTANT (rep_op) */		 (YAFFS_TRACE_VERIFY & YAFFS_TRACE_VERIFY_FULL));
5618: /* MUTANT (negate) */static int yaffs_skip_full_verif(!ication(struct yaffs_dev *dev))
5620: /* MUTANT (del_stmt) */ /* 	dev = dev; */ 
5621: /* MUTANT (del_stmt) */ /* 	return !(yaffs_trace_mask & (YAFFS_TRACE_VERIFY_FULL)); */ 
5624: /* MUTANT (negate) */static int yaffs_skip_nand_verif(!ication(struct yaffs_dev *dev))
5626: /* MUTANT (del_stmt) */ /* 	dev = dev; */ 
5627: /* MUTANT (del_stmt) */ /* 	return !(yaffs_trace_mask & (YAFFS_TRACE_VERIFY_NAND)); */ 
5643: /* MUTANT (negate) */void yaffs_verif(!y_blk(struct yaffs_dev *dev, struct yaffs_block_info *bi, int n))
5645: /* MUTANT (del_stmt) */ /* 	int actually_used; */ 
5646: /* MUTANT (del_stmt) */ /* 	int in_use; */ 
5648: /* MUTANT (negate) */	if(! (yaffs_skip_verification(dev)))
5652: /* MUTANT (rep_op) */	if (bi->block_state <= YAFFS_NUMBER_OF_BLOCK_STATES)
5652: /* MUTANT (rep_op) */	if (bi->block_state < YAFFS_NUMBER_OF_BLOCK_STATES)
5652: /* MUTANT (rep_op) */	if (bi->block_state > YAFFS_NUMBER_OF_BLOCK_STATES)
5652: /* MUTANT (rep_op) */	if (bi->block_state == YAFFS_NUMBER_OF_BLOCK_STATES)
5652: /* MUTANT (rep_op) */	if (bi->block_state != YAFFS_NUMBER_OF_BLOCK_STATES)
5652: /* MUTANT (negate) */	if(! (bi->block_state >= YAFFS_NUMBER_OF_BLOCK_STATES))
5670: /* MUTANT (rep_op) */	if (bi->pages_in_use <= 0 ||
5670: /* MUTANT (rep_op) */	if (bi->pages_in_use > 0 ||
5670: /* MUTANT (rep_op) */	if (bi->pages_in_use >= 0 ||
5670: /* MUTANT (rep_op) */	if (bi->pages_in_use == 0 ||
5670: /* MUTANT (rep_op) */	if (bi->pages_in_use != 0 ||
5670: /* MUTANT (rep_op) */	if (bi->pages_in_use < 0 &&
5670: /* MUTANT (rep_const) */	if (bi->pages_in_use < 1 ||
5670: /* MUTANT (rep_const) */	if (bi->pages_in_use < -1 ||
5671: /* MUTANT (rep_op) */	    bi->pages_in_use <= dev->param.chunks_per_block ||
5671: /* MUTANT (rep_op) */	    bi->pages_in_use < dev->param.chunks_per_block ||
5671: /* MUTANT (rep_op) */	    bi->pages_in_use >= dev->param.chunks_per_block ||
5671: /* MUTANT (rep_op) */	    bi->pages_in_use == dev->param.chunks_per_block ||
5671: /* MUTANT (rep_op) */	    bi->pages_in_use != dev->param.chunks_per_block ||
5671: /* MUTANT (rep_op) */	    bi->pages_in_use > dev->param.chunks_per_block &&
5672: /* MUTANT (rep_op) */	    bi->soft_del_pages <= 0 ||
5672: /* MUTANT (rep_op) */	    bi->soft_del_pages > 0 ||
5672: /* MUTANT (rep_op) */	    bi->soft_del_pages >= 0 ||
5672: /* MUTANT (rep_op) */	    bi->soft_del_pages == 0 ||
5672: /* MUTANT (rep_op) */	    bi->soft_del_pages != 0 ||
5672: /* MUTANT (rep_op) */	    bi->soft_del_pages < 0 &&
5672: /* MUTANT (rep_const) */	    bi->soft_del_pages < 1 ||
5672: /* MUTANT (rep_const) */	    bi->soft_del_pages < -1 ||
5673: /* MUTANT (rep_op) */	    bi->soft_del_pages <= dev->param.chunks_per_block ||
5673: /* MUTANT (rep_op) */	    bi->soft_del_pages < dev->param.chunks_per_block ||
5673: /* MUTANT (rep_op) */	    bi->soft_del_pages >= dev->param.chunks_per_block ||
5673: /* MUTANT (rep_op) */	    bi->soft_del_pages == dev->param.chunks_per_block ||
5673: /* MUTANT (rep_op) */	    bi->soft_del_pages != dev->param.chunks_per_block ||
5673: /* MUTANT (rep_op) */	    bi->soft_del_pages > dev->param.chunks_per_block &&
5674: /* MUTANT (rep_op) */	    actually_used <= 0 || actually_used > dev->param.chunks_per_block)
5674: /* MUTANT (rep_op) */	    actually_used > 0 || actually_used > dev->param.chunks_per_block)
5674: /* MUTANT (rep_op) */	    actually_used >= 0 || actually_used > dev->param.chunks_per_block)
5674: /* MUTANT (rep_op) */	    actually_used == 0 || actually_used > dev->param.chunks_per_block)
5674: /* MUTANT (rep_op) */	    actually_used != 0 || actually_used > dev->param.chunks_per_block)
5674: /* MUTANT (rep_op) */	    actually_used < 0 && actually_used > dev->param.chunks_per_block)
5674: /* MUTANT (rep_op) */	    actually_used < 0 || actually_used <= dev->param.chunks_per_block)
5674: /* MUTANT (rep_op) */	    actually_used < 0 || actually_used < dev->param.chunks_per_block)
5674: /* MUTANT (rep_op) */	    actually_used < 0 || actually_used >= dev->param.chunks_per_block)
5674: /* MUTANT (rep_op) */	    actually_used < 0 || actually_used == dev->param.chunks_per_block)
5674: /* MUTANT (rep_op) */	    actually_used < 0 || actually_used != dev->param.chunks_per_block)
5674: /* MUTANT (rep_const) */	    actually_used < 1 || actually_used > dev->param.chunks_per_block)
5674: /* MUTANT (rep_const) */	    actually_used < -1 || actually_used > dev->param.chunks_per_block)
5680: /* MUTANT (del_stmt) */ /* 	in_use = yaffs_count_chunk_bits(dev, n); */ 
5681: /* MUTANT (rep_op) */	if (in_use == bi->pages_in_use)
5681: /* MUTANT (negate) */	if(! (in_use != bi->pages_in_use))
5690: /* MUTANT (del_stmt) */ /* 	yaffs_verify_blk(dev, bi, n); */ 
5690: /* MUTANT (negate) */	yaffs_verif(!y_blk(dev, bi, n));
5694: /* MUTANT (rep_op) */	if (bi->block_state == YAFFS_BLOCK_STATE_COLLECTING &&
5694: /* MUTANT (rep_op) */	if (bi->block_state != YAFFS_BLOCK_STATE_COLLECTING ||
5695: /* MUTANT (rep_op) */	    bi->block_state == YAFFS_BLOCK_STATE_EMPTY) {
5702: /* MUTANT (negate) */void yaffs_verif(!y_blocks(struct yaffs_dev *dev))
5704: /* MUTANT (del_stmt) */ /* 	int i; */ 
5705: /* MUTANT (del_stmt) */ /* 	int state_count[YAFFS_NUMBER_OF_BLOCK_STATES]; */ 
5706: /* MUTANT (del_stmt) */ /* 	int illegal_states = 0; */ 
5706: /* MUTANT (rep_const) */	int illegal_states = 1;
5706: /* MUTANT (rep_const) */	int illegal_states = -1;
5708: /* MUTANT (negate) */	if(! (yaffs_skip_verification(dev)))
5711: /* MUTANT (del_stmt) */ /* 	mymemset(state_count, 0, sizeof(state_count)); */ 
5711: /* MUTANT (rep_const) */	mymemset(state_count, 1, sizeof(state_count));
5711: /* MUTANT (rep_const) */	mymemset(state_count, -1, sizeof(state_count));
5713: /* MUTANT (rep_op) */	for (i = dev->internal_start_block; i < dev->internal_end_block; i++) {
5713: /* MUTANT (rep_op) */	for (i = dev->internal_start_block; i > dev->internal_end_block; i++) {
5713: /* MUTANT (rep_op) */	for (i = dev->internal_start_block; i >= dev->internal_end_block; i++) {
5713: /* MUTANT (rep_op) */	for (i = dev->internal_start_block; i == dev->internal_end_block; i++) {
5713: /* MUTANT (rep_op) */	for (i = dev->internal_start_block; i != dev->internal_end_block; i++) {
5713: /* MUTANT (rep_op) */	for (i = dev->internal_start_block; i <= dev->internal_end_block; i--) {
5714: /* MUTANT (del_stmt) */ /* 		struct yaffs_block_info *bi = yaffs_get_block_info(dev, i); */ 
5715: /* MUTANT (del_stmt) */ /* 		yaffs_verify_blk(dev, bi, i); */ 
5715: /* MUTANT (negate) */		yaffs_verif(!y_blk(dev, bi, i));
5717: /* MUTANT (rep_op) */		if (bi->block_state <= YAFFS_NUMBER_OF_BLOCK_STATES)
5717: /* MUTANT (rep_op) */		if (bi->block_state > YAFFS_NUMBER_OF_BLOCK_STATES)
5717: /* MUTANT (rep_op) */		if (bi->block_state >= YAFFS_NUMBER_OF_BLOCK_STATES)
5717: /* MUTANT (rep_op) */		if (bi->block_state == YAFFS_NUMBER_OF_BLOCK_STATES)
5717: /* MUTANT (rep_op) */		if (bi->block_state != YAFFS_NUMBER_OF_BLOCK_STATES)
5717: /* MUTANT (negate) */		if(! (bi->block_state < YAFFS_NUMBER_OF_BLOCK_STATES))
5718: /* MUTANT (rep_op) */			state_count[bi->block_state]--;
5720: /* MUTANT (rep_op) */			illegal_states--;
5728: /* MUTANT (rep_op) */	if (state_count[YAFFS_BLOCK_STATE_ALLOCATING] <= 1)
5728: /* MUTANT (rep_op) */	if (state_count[YAFFS_BLOCK_STATE_ALLOCATING] < 1)
5728: /* MUTANT (rep_op) */	if (state_count[YAFFS_BLOCK_STATE_ALLOCATING] >= 1)
5728: /* MUTANT (rep_op) */	if (state_count[YAFFS_BLOCK_STATE_ALLOCATING] == 1)
5728: /* MUTANT (rep_op) */	if (state_count[YAFFS_BLOCK_STATE_ALLOCATING] != 1)
5728: /* MUTANT (rep_const) */	if (state_count[YAFFS_BLOCK_STATE_ALLOCATING] > 0)
5728: /* MUTANT (rep_const) */	if (state_count[YAFFS_BLOCK_STATE_ALLOCATING] > -1)
5728: /* MUTANT (rep_const) */	if (state_count[YAFFS_BLOCK_STATE_ALLOCATING] > ((1)+1))
5728: /* MUTANT (negate) */	if(! (state_count[YAFFS_BLOCK_STATE_ALLOCATING] > 1))
5732: /* MUTANT (rep_op) */	for (i = 0; i <= YAFFS_NUMBER_OF_BLOCK_STATES; i++)
5732: /* MUTANT (rep_op) */	for (i = 0; i > YAFFS_NUMBER_OF_BLOCK_STATES; i++)
5732: /* MUTANT (rep_op) */	for (i = 0; i >= YAFFS_NUMBER_OF_BLOCK_STATES; i++)
5732: /* MUTANT (rep_op) */	for (i = 0; i == YAFFS_NUMBER_OF_BLOCK_STATES; i++)
5732: /* MUTANT (rep_op) */	for (i = 0; i != YAFFS_NUMBER_OF_BLOCK_STATES; i++)
5732: /* MUTANT (rep_op) */	for (i = 0; i < YAFFS_NUMBER_OF_BLOCK_STATES; i--)
5732: /* MUTANT (rep_const) */	for (i = 1; i < YAFFS_NUMBER_OF_BLOCK_STATES; i++)
5732: /* MUTANT (rep_const) */	for (i = -1; i < YAFFS_NUMBER_OF_BLOCK_STATES; i++)
5737: /* MUTANT (rep_op) */	if (dev->blocks_in_checkpt == state_count[YAFFS_BLOCK_STATE_CHECKPOINT])
5737: /* MUTANT (negate) */	if(! (dev->blocks_in_checkpt != state_count[YAFFS_BLOCK_STATE_CHECKPOINT]))
5743: /* MUTANT (rep_op) */	if (dev->n_erased_blocks == state_count[YAFFS_BLOCK_STATE_EMPTY])
5743: /* MUTANT (negate) */	if(! (dev->n_erased_blocks != state_count[YAFFS_BLOCK_STATE_EMPTY]))
5749: /* MUTANT (rep_op) */	if (state_count[YAFFS_BLOCK_STATE_COLLECTING] <= 1)
5749: /* MUTANT (rep_op) */	if (state_count[YAFFS_BLOCK_STATE_COLLECTING] < 1)
5749: /* MUTANT (rep_op) */	if (state_count[YAFFS_BLOCK_STATE_COLLECTING] >= 1)
5749: /* MUTANT (rep_op) */	if (state_count[YAFFS_BLOCK_STATE_COLLECTING] == 1)
5749: /* MUTANT (rep_op) */	if (state_count[YAFFS_BLOCK_STATE_COLLECTING] != 1)
5749: /* MUTANT (rep_const) */	if (state_count[YAFFS_BLOCK_STATE_COLLECTING] > 0)
5749: /* MUTANT (rep_const) */	if (state_count[YAFFS_BLOCK_STATE_COLLECTING] > -1)
5749: /* MUTANT (rep_const) */	if (state_count[YAFFS_BLOCK_STATE_COLLECTING] > ((1)+1))
5749: /* MUTANT (negate) */	if(! (state_count[YAFFS_BLOCK_STATE_COLLECTING] > 1))
5751: /* MUTANT (rep_const) */			"Too many collecting blocks %d (max is 0)",
5751: /* MUTANT (rep_const) */			"Too many collecting blocks %d (max is -1)",
5751: /* MUTANT (rep_const) */			"Too many collecting blocks %d (max is ((1)+1))",
5762: /* MUTANT (rep_op) */	if (obj || yaffs_skip_verification(obj->my_dev))
5762: /* MUTANT (negate) */	if(! (obj && yaffs_skip_verification(obj->my_dev)))
5765: /* MUTANT (rep_op) */	if (!(tags || obj && oh)) {
5765: /* MUTANT (rep_op) */	if (!(tags && obj || oh)) {
5765: /* MUTANT (negate) */	if(! (!(tags && obj && oh))) {
5769: /* MUTANT (del_stmt) */ /* 		return; */ 
5772: /* MUTANT (rep_op) */	if (oh->type < YAFFS_OBJECT_TYPE_UNKNOWN ||
5772: /* MUTANT (rep_op) */	if (oh->type > YAFFS_OBJECT_TYPE_UNKNOWN ||
5772: /* MUTANT (rep_op) */	if (oh->type >= YAFFS_OBJECT_TYPE_UNKNOWN ||
5772: /* MUTANT (rep_op) */	if (oh->type == YAFFS_OBJECT_TYPE_UNKNOWN ||
5772: /* MUTANT (rep_op) */	if (oh->type != YAFFS_OBJECT_TYPE_UNKNOWN ||
5772: /* MUTANT (rep_op) */	if (oh->type <= YAFFS_OBJECT_TYPE_UNKNOWN &&
5773: /* MUTANT (rep_op) */	    oh->type <= YAFFS_OBJECT_TYPE_MAX)
5773: /* MUTANT (rep_op) */	    oh->type < YAFFS_OBJECT_TYPE_MAX)
5773: /* MUTANT (rep_op) */	    oh->type >= YAFFS_OBJECT_TYPE_MAX)
5773: /* MUTANT (rep_op) */	    oh->type == YAFFS_OBJECT_TYPE_MAX)
5773: /* MUTANT (rep_op) */	    oh->type != YAFFS_OBJECT_TYPE_MAX)
5775: /* MUTANT (rep_const) */			"Obj %d header type is illegal value 1x%x",
5775: /* MUTANT (rep_const) */			"Obj %d header type is illegal value -1x%x",
5778: /* MUTANT (rep_op) */	if (tags->obj_id == obj->obj_id)
5778: /* MUTANT (negate) */	if(! (tags->obj_id != obj->obj_id))
5789: /* MUTANT (rep_op) */	if (parent_check || tags->obj_id > 1 && !obj->parent)
5789: /* MUTANT (rep_op) */	if (parent_check && tags->obj_id <= 1 && !obj->parent)
5789: /* MUTANT (rep_op) */	if (parent_check && tags->obj_id < 1 && !obj->parent)
5789: /* MUTANT (rep_op) */	if (parent_check && tags->obj_id >= 1 && !obj->parent)
5789: /* MUTANT (rep_op) */	if (parent_check && tags->obj_id == 1 && !obj->parent)
5789: /* MUTANT (rep_op) */	if (parent_check && tags->obj_id != 1 && !obj->parent)
5789: /* MUTANT (rep_op) */	if (parent_check && tags->obj_id > 1 || !obj->parent)
5789: /* MUTANT (rep_const) */	if (parent_check && tags->obj_id > 0 && !obj->parent)
5789: /* MUTANT (rep_const) */	if (parent_check && tags->obj_id > -1 && !obj->parent)
5789: /* MUTANT (rep_const) */	if (parent_check && tags->obj_id > ((1)+1) && !obj->parent)
5789: /* MUTANT (negate) */	if(! (parent_check && tags->obj_id > 1 && !obj->parent))
5794: /* MUTANT (rep_op) */	if (parent_check || obj->parent &&
5794: /* MUTANT (rep_op) */	if (parent_check && obj->parent ||
5795: /* MUTANT (rep_op) */	    oh->parent_obj_id == obj->parent->obj_id &&
5795: /* MUTANT (rep_op) */	    oh->parent_obj_id != obj->parent->obj_id ||
5796: /* MUTANT (rep_op) */	    (oh->parent_obj_id == YAFFS_OBJECTID_UNLINKED ||
5796: /* MUTANT (rep_op) */	    (oh->parent_obj_id != YAFFS_OBJECTID_UNLINKED &&
5797: /* MUTANT (rep_op) */	     obj->parent->obj_id == YAFFS_OBJECTID_DELETED))
5803: /* MUTANT (rep_op) */	if (tags->obj_id <= 1 && oh->name[0] == 0)	/* Null name */
5803: /* MUTANT (rep_op) */	if (tags->obj_id < 1 && oh->name[0] == 0)	/* Null name */
5803: /* MUTANT (rep_op) */	if (tags->obj_id >= 1 && oh->name[0] == 0)	/* Null name */
5803: /* MUTANT (rep_op) */	if (tags->obj_id == 1 && oh->name[0] == 0)	/* Null name */
5803: /* MUTANT (rep_op) */	if (tags->obj_id != 1 && oh->name[0] == 0)	/* Null name */
5803: /* MUTANT (rep_op) */	if (tags->obj_id > 1 || oh->name[0] == 0)	/* Null name */
5803: /* MUTANT (rep_op) */	if (tags->obj_id > 1 && oh->name[0] != 0)	/* Null name */
5803: /* MUTANT (rep_const) */	if (tags->obj_id > 0 && oh->name[0] == 0)	/* Null name */
5803: /* MUTANT (rep_const) */	if (tags->obj_id > -1 && oh->name[0] == 0)	/* Null name */
5803: /* MUTANT (rep_const) */	if (tags->obj_id > ((1)+1) && oh->name[0] == 0)	/* Null name */
5803: /* MUTANT (rep_const) */	if (tags->obj_id > 1 && oh->name[1] == 0)	/* Null name */
5803: /* MUTANT (rep_const) */	if (tags->obj_id > 1 && oh->name[-1] == 0)	/* Null name */
5803: /* MUTANT (rep_const) */	if (tags->obj_id > 1 && oh->name[0] == 1)	/* Null name */
5803: /* MUTANT (rep_const) */	if (tags->obj_id > 1 && oh->name[0] == -1)	/* Null name */
5803: /* MUTANT (negate) */	if(! (tags->obj_id > 1 && oh->name[0] == 0))	/* Null name */
5808: /* MUTANT (rep_op) */	if (tags->obj_id <= 1 && ((u8) (oh->name[0])) == 0xff)	/* Junk name */
5808: /* MUTANT (rep_op) */	if (tags->obj_id < 1 && ((u8) (oh->name[0])) == 0xff)	/* Junk name */
5808: /* MUTANT (rep_op) */	if (tags->obj_id >= 1 && ((u8) (oh->name[0])) == 0xff)	/* Junk name */
5808: /* MUTANT (rep_op) */	if (tags->obj_id == 1 && ((u8) (oh->name[0])) == 0xff)	/* Junk name */
5808: /* MUTANT (rep_op) */	if (tags->obj_id != 1 && ((u8) (oh->name[0])) == 0xff)	/* Junk name */
5808: /* MUTANT (rep_op) */	if (tags->obj_id > 1 || ((u8) (oh->name[0])) == 0xff)	/* Junk name */
5808: /* MUTANT (rep_op) */	if (tags->obj_id > 1 && ((u8) (oh->name[0])) != 0xff)	/* Junk name */
5808: /* MUTANT (rep_const) */	if (tags->obj_id > 0 && ((u8) (oh->name[0])) == 0xff)	/* Junk name */
5808: /* MUTANT (rep_const) */	if (tags->obj_id > -1 && ((u8) (oh->name[0])) == 0xff)	/* Junk name */
5808: /* MUTANT (rep_const) */	if (tags->obj_id > ((1)+1) && ((u8) (oh->name[0])) == 0xff)	/* Junk name */
5808: /* MUTANT (rep_const) */	if (tags->obj_id > 1 && ((u8) (oh->name[1])) == 0xff)	/* Junk name */
5808: /* MUTANT (rep_const) */	if (tags->obj_id > 1 && ((u8) (oh->name[-1])) == 0xff)	/* Junk name */
5808: /* MUTANT (rep_const) */	if (tags->obj_id > 1 && ((u8) (oh->name[0])) == 1xff)	/* Junk name */
5808: /* MUTANT (rep_const) */	if (tags->obj_id > 1 && ((u8) (oh->name[0])) == -1xff)	/* Junk name */
5808: /* MUTANT (negate) */	if(! (tags->obj_id > 1 && ((u8) (oh->name[0])) == 0xff))	/* Junk name */
5810: /* MUTANT (rep_const) */			"Obj %d header name is 1xff",
5810: /* MUTANT (rep_const) */			"Obj %d header name is -1xff",
5814: /* MUTANT (negate) */void yaffs_verif(!y_file(struct yaffs_obj *obj))
5816: /* MUTANT (del_stmt) */ /* 	int required_depth; */ 
5817: /* MUTANT (del_stmt) */ /* 	int actual_depth; */ 
5818: /* MUTANT (del_stmt) */ /* 	u32 last_chunk; */ 
5819: /* MUTANT (del_stmt) */ /* 	u32 the_chunk; */ 
5820: /* MUTANT (del_stmt) */ /* 	u32 x; */ 
5821: /* MUTANT (del_stmt) */ /* 	u32 i; */ 
5822: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev; */ 
5823: /* MUTANT (del_stmt) */ /* 	struct yaffs_ext_tags tags; */ 
5824: /* MUTANT (del_stmt) */ /* 	struct yaffs_tnode *tn; */ 
5825: /* MUTANT (del_stmt) */ /* 	u32 obj_id; */ 
5827: /* MUTANT (negate) */	if(! (!obj))
5830: /* MUTANT (negate) */	if(! (yaffs_skip_verification(obj->my_dev)))
5833: /* MUTANT (del_stmt) */ /* 	dev = obj->my_dev; */ 
5834: /* MUTANT (del_stmt) */ /* 	obj_id = obj->obj_id; */ 
5838: /* MUTANT (rep_op) */	    obj->variant.file_variant.file_size / dev->data_bytes_per_chunk - 1;
5838: /* MUTANT (rep_op) */	    obj->variant.file_variant.file_size / dev->data_bytes_per_chunk * 1;
5838: /* MUTANT (rep_op) */	    obj->variant.file_variant.file_size / dev->data_bytes_per_chunk % 1;
5838: /* MUTANT (rep_const) */	    obj->variant.file_variant.file_size / dev->data_bytes_per_chunk + 0;
5838: /* MUTANT (rep_const) */	    obj->variant.file_variant.file_size / dev->data_bytes_per_chunk + -1;
5838: /* MUTANT (rep_const) */	    obj->variant.file_variant.file_size / dev->data_bytes_per_chunk + ((1)+1);
5839: /* MUTANT (del_stmt) */ /* 	x = last_chunk >> YAFFS_TNODES_LEVEL0_BITS; */ 
5840: /* MUTANT (del_stmt) */ /* 	required_depth = 0; */ 
5840: /* MUTANT (rep_const) */	required_depth = 1;
5840: /* MUTANT (rep_const) */	required_depth = -1;
5841: /* MUTANT (rep_op) */	while (x <= 0) {
5841: /* MUTANT (rep_op) */	while (x < 0) {
5841: /* MUTANT (rep_op) */	while (x >= 0) {
5841: /* MUTANT (rep_op) */	while (x == 0) {
5841: /* MUTANT (rep_op) */	while (x != 0) {
5841: /* MUTANT (rep_const) */	while (x > 1) {
5841: /* MUTANT (rep_const) */	while (x > -1) {
5841: /* MUTANT (negate) */	while(! (x > 0)) {
5842: /* MUTANT (del_stmt) */ /* 		x >>= YAFFS_TNODES_INTERNAL_BITS; */ 
5843: /* MUTANT (del_stmt) */ /* 		required_depth++; */ 
5843: /* MUTANT (rep_op) */		required_depth--;
5853: /* MUTANT (negate) */	if(! (yaffs_skip_nand_verification(dev)))
5856: /* MUTANT (rep_op) */	for (i = 1; i < last_chunk; i++) {
5856: /* MUTANT (rep_op) */	for (i = 1; i > last_chunk; i++) {
5856: /* MUTANT (rep_op) */	for (i = 1; i >= last_chunk; i++) {
5856: /* MUTANT (rep_op) */	for (i = 1; i == last_chunk; i++) {
5856: /* MUTANT (rep_op) */	for (i = 1; i != last_chunk; i++) {
5856: /* MUTANT (rep_op) */	for (i = 1; i <= last_chunk; i--) {
5856: /* MUTANT (rep_const) */	for (i = 0; i <= last_chunk; i++) {
5856: /* MUTANT (rep_const) */	for (i = -1; i <= last_chunk; i++) {
5856: /* MUTANT (rep_const) */	for (i = ((1)+1); i <= last_chunk; i++) {
5857: /* MUTANT (del_stmt) */ /* 		tn = yaffs_find_tnode_0(dev, &obj->variant.file_variant, i); */ 
5859: /* MUTANT (negate) */		if(! (!tn))
5862: /* MUTANT (del_stmt) */ /* 		the_chunk = yaffs_get_group_base(dev, tn, i); */ 
5863: /* MUTANT (rep_op) */		if (the_chunk <= 0) {
5863: /* MUTANT (rep_op) */		if (the_chunk < 0) {
5863: /* MUTANT (rep_op) */		if (the_chunk >= 0) {
5863: /* MUTANT (rep_op) */		if (the_chunk == 0) {
5863: /* MUTANT (rep_op) */		if (the_chunk != 0) {
5863: /* MUTANT (rep_const) */		if (the_chunk > 1) {
5863: /* MUTANT (rep_const) */		if (the_chunk > -1) {
5863: /* MUTANT (negate) */		if(! (the_chunk > 0)) {
5866: /* MUTANT (rep_op) */			if (tags.obj_id == obj_id || tags.chunk_id != i)
5866: /* MUTANT (rep_op) */			if (tags.obj_id != obj_id && tags.chunk_id != i)
5866: /* MUTANT (rep_op) */			if (tags.obj_id != obj_id || tags.chunk_id == i)
5866: /* MUTANT (negate) */			if(! (tags.obj_id != obj_id || tags.chunk_id != i))
5875: /* MUTANT (negate) */void yaffs_verif(!y_link(struct yaffs_obj *obj))
5877: /* MUTANT (rep_op) */	if (obj || yaffs_skip_verification(obj->my_dev))
5877: /* MUTANT (negate) */	if(! (obj && yaffs_skip_verification(obj->my_dev)))
5883: /* MUTANT (negate) */void yaffs_verif(!y_symlink(struct yaffs_obj *obj))
5885: /* MUTANT (rep_op) */	if (obj || yaffs_skip_verification(obj->my_dev))
5885: /* MUTANT (negate) */	if(! (obj && yaffs_skip_verification(obj->my_dev)))
5891: /* MUTANT (negate) */void yaffs_verif(!y_special(struct yaffs_obj *obj))
5893: /* MUTANT (rep_op) */	if (obj || yaffs_skip_verification(obj->my_dev))
5893: /* MUTANT (negate) */	if(! (obj && yaffs_skip_verification(obj->my_dev)))
5897: /* MUTANT (negate) */void yaffs_verif(!y_obj(struct yaffs_obj *obj))
5899: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev; */ 
5900: /* MUTANT (del_stmt) */ /* 	u32 chunk_min; */ 
5901: /* MUTANT (del_stmt) */ /* 	u32 chunk_max; */ 
5902: /* MUTANT (del_stmt) */ /* 	u32 chunk_id_ok; */ 
5903: /* MUTANT (del_stmt) */ /* 	u32 chunk_in_range; */ 
5904: /* MUTANT (del_stmt) */ /* 	u32 chunk_wrongly_deleted; */ 
5905: /* MUTANT (del_stmt) */ /* 	u32 chunk_valid; */ 
5907: /* MUTANT (negate) */	if(! (!obj))
5910: /* MUTANT (negate) */	if(! (obj->being_created))
5913: /* MUTANT (del_stmt) */ /* 	dev = obj->my_dev; */ 
5915: /* MUTANT (negate) */	if(! (yaffs_skip_verification(dev)))
5920: /* MUTANT (del_stmt) */ /* 	chunk_min = dev->internal_start_block * dev->param.chunks_per_block; */ 
5922: /* MUTANT (rep_op) */	    (dev->internal_end_block - 1) * dev->param.chunks_per_block - 1;
5922: /* MUTANT (rep_op) */	    (dev->internal_end_block * 1) * dev->param.chunks_per_block - 1;
5922: /* MUTANT (rep_op) */	    (dev->internal_end_block % 1) * dev->param.chunks_per_block - 1;
5922: /* MUTANT (rep_const) */	    (dev->internal_end_block + 0) * dev->param.chunks_per_block - 1;
5922: /* MUTANT (rep_const) */	    (dev->internal_end_block + -1) * dev->param.chunks_per_block - 1;
5922: /* MUTANT (rep_const) */	    (dev->internal_end_block + ((1)+1)) * dev->param.chunks_per_block - 1;
5922: /* MUTANT (rep_const) */	    (dev->internal_end_block + 1) * dev->param.chunks_per_block - 0;
5922: /* MUTANT (rep_const) */	    (dev->internal_end_block + 1) * dev->param.chunks_per_block - -1;
5922: /* MUTANT (rep_const) */	    (dev->internal_end_block + 1) * dev->param.chunks_per_block - ((1)+1);
5924: /* MUTANT (rep_op) */	chunk_in_range = (((unsigned)(obj->hdr_chunk)) <= chunk_min &&
5924: /* MUTANT (rep_op) */	chunk_in_range = (((unsigned)(obj->hdr_chunk)) < chunk_min &&
5924: /* MUTANT (rep_op) */	chunk_in_range = (((unsigned)(obj->hdr_chunk)) > chunk_min &&
5924: /* MUTANT (rep_op) */	chunk_in_range = (((unsigned)(obj->hdr_chunk)) == chunk_min &&
5924: /* MUTANT (rep_op) */	chunk_in_range = (((unsigned)(obj->hdr_chunk)) != chunk_min &&
5924: /* MUTANT (rep_op) */	chunk_in_range = (((unsigned)(obj->hdr_chunk)) >= chunk_min ||
5925: /* MUTANT (rep_op) */			  ((unsigned)(obj->hdr_chunk)) < chunk_max);
5925: /* MUTANT (rep_op) */			  ((unsigned)(obj->hdr_chunk)) > chunk_max);
5925: /* MUTANT (rep_op) */			  ((unsigned)(obj->hdr_chunk)) >= chunk_max);
5925: /* MUTANT (rep_op) */			  ((unsigned)(obj->hdr_chunk)) == chunk_max);
5925: /* MUTANT (rep_op) */			  ((unsigned)(obj->hdr_chunk)) != chunk_max);
5926: /* MUTANT (del_stmt) */ /* 	chunk_id_ok = chunk_in_range || (obj->hdr_chunk == 0); */ 
5926: /* MUTANT (rep_op) */	chunk_id_ok = chunk_in_range && (obj->hdr_chunk == 0);
5926: /* MUTANT (rep_op) */	chunk_id_ok = chunk_in_range || (obj->hdr_chunk != 0);
5926: /* MUTANT (rep_const) */	chunk_id_ok = chunk_in_range || (obj->hdr_chunk == 1);
5926: /* MUTANT (rep_const) */	chunk_id_ok = chunk_in_range || (obj->hdr_chunk == -1);
5927: /* MUTANT (rep_op) */	chunk_valid = chunk_in_range ||
5930: /* MUTANT (rep_op) */				  obj->hdr_chunk + dev->param.chunks_per_block);
5930: /* MUTANT (rep_op) */				  obj->hdr_chunk - dev->param.chunks_per_block);
5930: /* MUTANT (rep_op) */				  obj->hdr_chunk * dev->param.chunks_per_block);
5931: /* MUTANT (del_stmt) */ /* 	chunk_wrongly_deleted = chunk_in_range && !chunk_valid; */ 
5931: /* MUTANT (rep_op) */	chunk_wrongly_deleted = chunk_in_range || !chunk_valid;
5933: /* MUTANT (rep_op) */	if (!obj->fake || (!chunk_id_ok || chunk_wrongly_deleted))
5933: /* MUTANT (rep_op) */	if (!obj->fake && (!chunk_id_ok && chunk_wrongly_deleted))
5933: /* MUTANT (negate) */	if(! (!obj->fake && (!chunk_id_ok || chunk_wrongly_deleted)))
5940: /* MUTANT (rep_op) */	if (chunk_valid || !yaffs_skip_nand_verification(dev)) {
5940: /* MUTANT (negate) */	if(! (chunk_valid && !yaffs_skip_nand_verification(dev))) {
5941: /* MUTANT (del_stmt) */ /* 		struct yaffs_ext_tags tags; */ 
5942: /* MUTANT (del_stmt) */ /* 		struct yaffs_obj_hdr *oh; */ 
5943: /* MUTANT (del_stmt) */ /* 		u8 *buffer = yaffs_get_temp_buffer(dev); */ 
5945: /* MUTANT (del_stmt) */ /* 		oh = (struct yaffs_obj_hdr *)buffer; */ 
5947: /* MUTANT (del_stmt) */ /* 		yaffs_rd_chunk_tags_nand(dev, obj->hdr_chunk, buffer, &tags); */ 
5949: /* MUTANT (del_stmt) */ /* 		yaffs_verify_oh(obj, oh, &tags, 1); */ 
5949: /* MUTANT (rep_const) */		yaffs_verify_oh(obj, oh, &tags, 0);
5949: /* MUTANT (rep_const) */		yaffs_verify_oh(obj, oh, &tags, -1);
5949: /* MUTANT (rep_const) */		yaffs_verify_oh(obj, oh, &tags, ((1)+1));
5949: /* MUTANT (negate) */		yaffs_verif(!y_oh(obj, oh, &tags, 1));
5951: /* MUTANT (del_stmt) */ /* 		yaffs_release_temp_buffer(dev, buffer); */ 
5955: /* MUTANT (rep_op) */	if (obj || !obj->fake && (!obj->parent || obj->parent->my_dev != dev)) {
5955: /* MUTANT (rep_op) */	if (obj && !obj->fake || (!obj->parent || obj->parent->my_dev != dev)) {
5955: /* MUTANT (rep_op) */	if (obj && !obj->fake && (!obj->parent && obj->parent->my_dev != dev)) {
5955: /* MUTANT (rep_op) */	if (obj && !obj->fake && (!obj->parent || obj->parent->my_dev == dev)) {
5955: /* MUTANT (negate) */	if(! (obj && !obj->fake && (!obj->parent || obj->parent->my_dev != dev))) {
5962: /* MUTANT (rep_op) */	if (obj->parent ||
5963: /* MUTANT (rep_op) */	    obj->parent->variant_type == YAFFS_OBJECT_TYPE_DIRECTORY) {
5971: /* MUTANT (negate) */		yaffs_verif(!y_file(obj));
5972: /* MUTANT (del_stmt) */ /* 		break; */ 
5974: /* MUTANT (negate) */		yaffs_verif(!y_symlink(obj));
5975: /* MUTANT (del_stmt) */ /* 		break; */ 
5977: /* MUTANT (negate) */		yaffs_verif(!y_dir(obj));
5978: /* MUTANT (del_stmt) */ /* 		break; */ 
5980: /* MUTANT (negate) */		yaffs_verif(!y_link(obj));
5981: /* MUTANT (del_stmt) */ /* 		break; */ 
5983: /* MUTANT (negate) */		yaffs_verif(!y_special(obj));
5984: /* MUTANT (del_stmt) */ /* 		break; */ 
5990: /* MUTANT (del_stmt) */ /* 		break; */ 
5994: /* MUTANT (negate) */void yaffs_verif(!y_objects(struct yaffs_dev *dev))
5996: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj; */ 
5997: /* MUTANT (del_stmt) */ /* 	int i; */ 
5998: /* MUTANT (del_stmt) */ /* 	struct list_head *lh; */ 
6000: /* MUTANT (negate) */	if(! (yaffs_skip_verification(dev)))
6005: /* MUTANT (rep_op) */	for (i = 0; i <= YAFFS_NOBJECT_BUCKETS; i++) {
6005: /* MUTANT (rep_op) */	for (i = 0; i > YAFFS_NOBJECT_BUCKETS; i++) {
6005: /* MUTANT (rep_op) */	for (i = 0; i >= YAFFS_NOBJECT_BUCKETS; i++) {
6005: /* MUTANT (rep_op) */	for (i = 0; i == YAFFS_NOBJECT_BUCKETS; i++) {
6005: /* MUTANT (rep_op) */	for (i = 0; i != YAFFS_NOBJECT_BUCKETS; i++) {
6005: /* MUTANT (rep_op) */	for (i = 0; i < YAFFS_NOBJECT_BUCKETS; i--) {
6005: /* MUTANT (rep_const) */	for (i = 1; i < YAFFS_NOBJECT_BUCKETS; i++) {
6005: /* MUTANT (rep_const) */	for (i = -1; i < YAFFS_NOBJECT_BUCKETS; i++) {
6007: /* MUTANT (del_stmt) */ /* 			obj = list_entry(lh, struct yaffs_obj, hash_link); */ 
6008: /* MUTANT (del_stmt) */ /* 			yaffs_verify_obj(obj); */ 
6008: /* MUTANT (negate) */			yaffs_verif(!y_obj(obj));
6013: /* MUTANT (negate) */void yaffs_verif(!y_obj_in_dir(struct yaffs_obj *obj))
6015: /* MUTANT (del_stmt) */ /* 	struct list_head *lh; */ 
6016: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *list_obj; */ 
6017: /* MUTANT (del_stmt) */ /* 	int count = 0; */ 
6017: /* MUTANT (rep_const) */	int count = 1;
6017: /* MUTANT (rep_const) */	int count = -1;
6019: /* MUTANT (negate) */	if(! (!obj)) {
6020: /* MUTANT (del_stmt) */ /* 		yaffs_trace(YAFFS_TRACE_ALWAYS, "No object to verify"); */ 
6021: /* MUTANT (del_stmt) */ /* 		BUG(); */ 
6022: /* MUTANT (del_stmt) */ /* 		return; */ 
6025: /* MUTANT (negate) */	if(! (yaffs_skip_verification(obj->my_dev)))
6028: /* MUTANT (negate) */	if(! (!obj->parent)) {
6029: /* MUTANT (del_stmt) */ /* 		yaffs_trace(YAFFS_TRACE_ALWAYS, "Object does not have parent"); */ 
6030: /* MUTANT (del_stmt) */ /* 		BUG(); */ 
6031: /* MUTANT (del_stmt) */ /* 		return; */ 
6034: /* MUTANT (rep_op) */	if (obj->parent->variant_type == YAFFS_OBJECT_TYPE_DIRECTORY) {
6034: /* MUTANT (negate) */	if(! (obj->parent->variant_type != YAFFS_OBJECT_TYPE_DIRECTORY)) {
6035: /* MUTANT (del_stmt) */ /* 		yaffs_trace(YAFFS_TRACE_ALWAYS, "Parent is not directory"); */ 
6036: /* MUTANT (del_stmt) */ /* 		BUG(); */ 
6042: /* MUTANT (del_stmt) */ /* 		list_obj = list_entry(lh, struct yaffs_obj, siblings); */ 
6043: /* MUTANT (del_stmt) */ /* 		yaffs_verify_obj(list_obj); */ 
6043: /* MUTANT (negate) */		yaffs_verif(!y_obj(list_obj));
6044: /* MUTANT (rep_op) */		if (obj != list_obj)
6044: /* MUTANT (negate) */		if(! (obj == list_obj))
6045: /* MUTANT (rep_op) */			count--;
6048: /* MUTANT (rep_op) */	if (count == 1) {
6048: /* MUTANT (rep_const) */	if (count != 0) {
6048: /* MUTANT (rep_const) */	if (count != -1) {
6048: /* MUTANT (rep_const) */	if (count != ((1)+1)) {
6048: /* MUTANT (negate) */	if(! (count != 1)) {
6052: /* MUTANT (del_stmt) */ /* 		BUG(); */ 
6056: /* MUTANT (negate) */void yaffs_verif(!y_dir(struct yaffs_obj *directory))
6058: /* MUTANT (del_stmt) */ /* 	struct list_head *lh; */ 
6059: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *list_obj; */ 
6061: /* MUTANT (negate) */	if(! (!directory)) {
6062: /* MUTANT (del_stmt) */ /* 		BUG(); */ 
6063: /* MUTANT (del_stmt) */ /* 		return; */ 
6066: /* MUTANT (negate) */	if(! (yaffs_skip_full_verification(directory->my_dev)))
6069: /* MUTANT (rep_op) */	if (directory->variant_type == YAFFS_OBJECT_TYPE_DIRECTORY) {
6069: /* MUTANT (negate) */	if(! (directory->variant_type != YAFFS_OBJECT_TYPE_DIRECTORY)) {
6073: /* MUTANT (del_stmt) */ /* 		BUG(); */ 
6079: /* MUTANT (del_stmt) */ /* 		list_obj = list_entry(lh, struct yaffs_obj, siblings); */ 
6080: /* MUTANT (rep_op) */		if (list_obj->parent == directory) {
6080: /* MUTANT (negate) */		if(! (list_obj->parent != directory)) {
6084: /* MUTANT (del_stmt) */ /* 			BUG(); */ 
6086: /* MUTANT (negate) */		yaffs_verif(!y_obj_in_dir(list_obj));
6092: /* MUTANT (negate) */void yaffs_verif(!y_free_chunks(struct yaffs_dev *dev))
6094: /* MUTANT (del_stmt) */ /* 	int counted; */ 
6095: /* MUTANT (del_stmt) */ /* 	int difference; */ 
6097: /* MUTANT (negate) */	if(! (yaffs_skip_verification(dev)))
6100: /* MUTANT (del_stmt) */ /* 	counted = yaffs_count_free_chunks(dev); */ 
6102: /* MUTANT (del_stmt) */ /* 	difference = dev->n_free_chunks - counted; */ 
6104: /* MUTANT (negate) */	if(! (difference)) {
6108: /* MUTANT (del_stmt) */ /* 		yaffs_free_verification_failures++; */ 
6108: /* MUTANT (rep_op) */		yaffs_free_verification_failures--;
6112: /* MUTANT (negate) */int yaffs_verif(!y_file_sane(struct yaffs_obj *in))
6114: /* MUTANT (del_stmt) */ /* 	in = in; */ 
6115: /* MUTANT (del_stmt) */ /* 	return YAFFS_OK; */ 
6139: /* MUTANT (rep_op) */	if (blk <= dev->internal_start_block || blk > dev->internal_end_block) {
6139: /* MUTANT (rep_op) */	if (blk > dev->internal_start_block || blk > dev->internal_end_block) {
6139: /* MUTANT (rep_op) */	if (blk >= dev->internal_start_block || blk > dev->internal_end_block) {
6139: /* MUTANT (rep_op) */	if (blk == dev->internal_start_block || blk > dev->internal_end_block) {
6139: /* MUTANT (rep_op) */	if (blk != dev->internal_start_block || blk > dev->internal_end_block) {
6139: /* MUTANT (rep_op) */	if (blk < dev->internal_start_block && blk > dev->internal_end_block) {
6139: /* MUTANT (rep_op) */	if (blk < dev->internal_start_block || blk <= dev->internal_end_block) {
6139: /* MUTANT (rep_op) */	if (blk < dev->internal_start_block || blk < dev->internal_end_block) {
6139: /* MUTANT (rep_op) */	if (blk < dev->internal_start_block || blk >= dev->internal_end_block) {
6139: /* MUTANT (rep_op) */	if (blk < dev->internal_start_block || blk == dev->internal_end_block) {
6139: /* MUTANT (rep_op) */	if (blk < dev->internal_start_block || blk != dev->internal_end_block) {
6139: /* MUTANT (negate) */	if(! (blk < dev->internal_start_block || blk > dev->internal_end_block)) {
6143: /* MUTANT (del_stmt) */ /* 		BUG(); */ 
6145: /* MUTANT (rep_op) */	return dev->chunk_bits -
6145: /* MUTANT (rep_op) */	return dev->chunk_bits *
6145: /* MUTANT (rep_op) */	return dev->chunk_bits %
6149: /* MUTANT (negate) */void yaffs_verif(!y_chunk_bit_id(struct yaffs_dev *dev, int blk, int chunk))
6151: /* MUTANT (rep_op) */	if (blk <= dev->internal_start_block || blk > dev->internal_end_block ||
6151: /* MUTANT (rep_op) */	if (blk > dev->internal_start_block || blk > dev->internal_end_block ||
6151: /* MUTANT (rep_op) */	if (blk >= dev->internal_start_block || blk > dev->internal_end_block ||
6151: /* MUTANT (rep_op) */	if (blk == dev->internal_start_block || blk > dev->internal_end_block ||
6151: /* MUTANT (rep_op) */	if (blk != dev->internal_start_block || blk > dev->internal_end_block ||
6151: /* MUTANT (rep_op) */	if (blk < dev->internal_start_block && blk > dev->internal_end_block ||
6151: /* MUTANT (rep_op) */	if (blk < dev->internal_start_block || blk <= dev->internal_end_block ||
6151: /* MUTANT (rep_op) */	if (blk < dev->internal_start_block || blk < dev->internal_end_block ||
6151: /* MUTANT (rep_op) */	if (blk < dev->internal_start_block || blk >= dev->internal_end_block ||
6151: /* MUTANT (rep_op) */	if (blk < dev->internal_start_block || blk == dev->internal_end_block ||
6151: /* MUTANT (rep_op) */	if (blk < dev->internal_start_block || blk != dev->internal_end_block ||
6151: /* MUTANT (rep_op) */	if (blk < dev->internal_start_block || blk > dev->internal_end_block &&
6152: /* MUTANT (rep_op) */	    chunk <= 0 || chunk >= dev->param.chunks_per_block) {
6152: /* MUTANT (rep_op) */	    chunk > 0 || chunk >= dev->param.chunks_per_block) {
6152: /* MUTANT (rep_op) */	    chunk >= 0 || chunk >= dev->param.chunks_per_block) {
6152: /* MUTANT (rep_op) */	    chunk == 0 || chunk >= dev->param.chunks_per_block) {
6152: /* MUTANT (rep_op) */	    chunk != 0 || chunk >= dev->param.chunks_per_block) {
6152: /* MUTANT (rep_op) */	    chunk < 0 && chunk >= dev->param.chunks_per_block) {
6152: /* MUTANT (rep_op) */	    chunk < 0 || chunk <= dev->param.chunks_per_block) {
6152: /* MUTANT (rep_op) */	    chunk < 0 || chunk < dev->param.chunks_per_block) {
6152: /* MUTANT (rep_op) */	    chunk < 0 || chunk > dev->param.chunks_per_block) {
6152: /* MUTANT (rep_op) */	    chunk < 0 || chunk == dev->param.chunks_per_block) {
6152: /* MUTANT (rep_op) */	    chunk < 0 || chunk != dev->param.chunks_per_block) {
6152: /* MUTANT (rep_const) */	    chunk < 1 || chunk >= dev->param.chunks_per_block) {
6152: /* MUTANT (rep_const) */	    chunk < -1 || chunk >= dev->param.chunks_per_block) {
6156: /* MUTANT (del_stmt) */ /* 		BUG(); */ 
6162: /* MUTANT (del_stmt) */ /* 	u8 *blk_bits = yaffs_block_bits(dev, blk); */ 
6164: /* MUTANT (del_stmt) */ /* 	mymemset(blk_bits, 0, dev->chunk_bit_stride); */ 
6164: /* MUTANT (rep_const) */	mymemset(blk_bits, 1, dev->chunk_bit_stride);
6164: /* MUTANT (rep_const) */	mymemset(blk_bits, -1, dev->chunk_bit_stride);
6169: /* MUTANT (del_stmt) */ /* 	u8 *blk_bits = yaffs_block_bits(dev, blk); */ 
6171: /* MUTANT (del_stmt) */ /* 	yaffs_verify_chunk_bit_id(dev, blk, chunk); */ 
6171: /* MUTANT (negate) */	yaffs_verif(!y_chunk_bit_id(dev, blk, chunk));
6172: /* MUTANT (del_stmt) */ /* 	blk_bits[chunk / 8] &= ~(1 << (chunk & 7)); */ 
6172: /* MUTANT (rep_const) */	blk_bits[chunk / 0] &= ~(1 << (chunk & 7));
6172: /* MUTANT (rep_const) */	blk_bits[chunk / 1] &= ~(1 << (chunk & 7));
6172: /* MUTANT (rep_const) */	blk_bits[chunk / -1] &= ~(1 << (chunk & 7));
6172: /* MUTANT (rep_const) */	blk_bits[chunk / ((8)+1)] &= ~(1 << (chunk & 7));
6172: /* MUTANT (rep_const) */	blk_bits[chunk / ((8)-1)] &= ~(1 << (chunk & 7));
6172: /* MUTANT (rep_const) */	blk_bits[chunk / 8] &= ~(0 << (chunk & 7));
6172: /* MUTANT (rep_const) */	blk_bits[chunk / 8] &= ~(-1 << (chunk & 7));
6172: /* MUTANT (rep_const) */	blk_bits[chunk / 8] &= ~(((1)+1) << (chunk & 7));
6172: /* MUTANT (rep_const) */	blk_bits[chunk / 8] &= ~(1 << (chunk & 0));
6172: /* MUTANT (rep_const) */	blk_bits[chunk / 8] &= ~(1 << (chunk & 1));
6172: /* MUTANT (rep_const) */	blk_bits[chunk / 8] &= ~(1 << (chunk & -1));
6172: /* MUTANT (rep_const) */	blk_bits[chunk / 8] &= ~(1 << (chunk & ((7)+1)));
6172: /* MUTANT (rep_const) */	blk_bits[chunk / 8] &= ~(1 << (chunk & ((7)-1)));
6177: /* MUTANT (del_stmt) */ /* 	u8 *blk_bits = yaffs_block_bits(dev, blk); */ 
6179: /* MUTANT (del_stmt) */ /* 	yaffs_verify_chunk_bit_id(dev, blk, chunk); */ 
6179: /* MUTANT (negate) */	yaffs_verif(!y_chunk_bit_id(dev, blk, chunk));
6180: /* MUTANT (del_stmt) */ /* 	blk_bits[chunk / 8] |= (1 << (chunk & 7)); */ 
6180: /* MUTANT (rep_const) */	blk_bits[chunk / 0] |= (1 << (chunk & 7));
6180: /* MUTANT (rep_const) */	blk_bits[chunk / 1] |= (1 << (chunk & 7));
6180: /* MUTANT (rep_const) */	blk_bits[chunk / -1] |= (1 << (chunk & 7));
6180: /* MUTANT (rep_const) */	blk_bits[chunk / ((8)+1)] |= (1 << (chunk & 7));
6180: /* MUTANT (rep_const) */	blk_bits[chunk / ((8)-1)] |= (1 << (chunk & 7));
6180: /* MUTANT (rep_const) */	blk_bits[chunk / 8] |= (0 << (chunk & 7));
6180: /* MUTANT (rep_const) */	blk_bits[chunk / 8] |= (-1 << (chunk & 7));
6180: /* MUTANT (rep_const) */	blk_bits[chunk / 8] |= (((1)+1) << (chunk & 7));
6180: /* MUTANT (rep_const) */	blk_bits[chunk / 8] |= (1 << (chunk & 0));
6180: /* MUTANT (rep_const) */	blk_bits[chunk / 8] |= (1 << (chunk & 1));
6180: /* MUTANT (rep_const) */	blk_bits[chunk / 8] |= (1 << (chunk & -1));
6180: /* MUTANT (rep_const) */	blk_bits[chunk / 8] |= (1 << (chunk & ((7)+1)));
6180: /* MUTANT (rep_const) */	blk_bits[chunk / 8] |= (1 << (chunk & ((7)-1)));
6185: /* MUTANT (del_stmt) */ /* 	u8 *blk_bits = yaffs_block_bits(dev, blk); */ 
6187: /* MUTANT (del_stmt) */ /* 	yaffs_verify_chunk_bit_id(dev, blk, chunk); */ 
6187: /* MUTANT (negate) */	yaffs_verif(!y_chunk_bit_id(dev, blk, chunk));
6188: /* MUTANT (del_stmt) */ /* 	return (blk_bits[chunk / 8] & (1 << (chunk & 7))) ? 1 : 0; */ 
6188: /* MUTANT (rep_const) */	return (blk_bits[chunk / 0] & (1 << (chunk & 7))) ? 1 : 0;
6188: /* MUTANT (rep_const) */	return (blk_bits[chunk / 1] & (1 << (chunk & 7))) ? 1 : 0;
6188: /* MUTANT (rep_const) */	return (blk_bits[chunk / -1] & (1 << (chunk & 7))) ? 1 : 0;
6188: /* MUTANT (rep_const) */	return (blk_bits[chunk / ((8)+1)] & (1 << (chunk & 7))) ? 1 : 0;
6188: /* MUTANT (rep_const) */	return (blk_bits[chunk / ((8)-1)] & (1 << (chunk & 7))) ? 1 : 0;
6188: /* MUTANT (rep_const) */	return (blk_bits[chunk / 8] & (0 << (chunk & 7))) ? 1 : 0;
6188: /* MUTANT (rep_const) */	return (blk_bits[chunk / 8] & (-1 << (chunk & 7))) ? 1 : 0;
6188: /* MUTANT (rep_const) */	return (blk_bits[chunk / 8] & (((1)+1) << (chunk & 7))) ? 1 : 0;
6188: /* MUTANT (rep_const) */	return (blk_bits[chunk / 8] & (1 << (chunk & 0))) ? 1 : 0;
6188: /* MUTANT (rep_const) */	return (blk_bits[chunk / 8] & (1 << (chunk & 1))) ? 1 : 0;
6188: /* MUTANT (rep_const) */	return (blk_bits[chunk / 8] & (1 << (chunk & -1))) ? 1 : 0;
6188: /* MUTANT (rep_const) */	return (blk_bits[chunk / 8] & (1 << (chunk & ((7)+1)))) ? 1 : 0;
6188: /* MUTANT (rep_const) */	return (blk_bits[chunk / 8] & (1 << (chunk & ((7)-1)))) ? 1 : 0;
6188: /* MUTANT (rep_const) */	return (blk_bits[chunk / 8] & (1 << (chunk & 7))) ? 0 : 0;
6188: /* MUTANT (rep_const) */	return (blk_bits[chunk / 8] & (1 << (chunk & 7))) ? -1 : 0;
6188: /* MUTANT (rep_const) */	return (blk_bits[chunk / 8] & (1 << (chunk & 7))) ? ((1)+1) : 0;
6188: /* MUTANT (rep_const) */	return (blk_bits[chunk / 8] & (1 << (chunk & 7))) ? 1 : 1;
6188: /* MUTANT (rep_const) */	return (blk_bits[chunk / 8] & (1 << (chunk & 7))) ? 1 : -1;
6193: /* MUTANT (del_stmt) */ /* 	u8 *blk_bits = yaffs_block_bits(dev, blk); */ 
6194: /* MUTANT (del_stmt) */ /* 	int i; */ 
6196: /* MUTANT (rep_op) */	for (i = 0; i <= dev->chunk_bit_stride; i++) {
6196: /* MUTANT (rep_op) */	for (i = 0; i > dev->chunk_bit_stride; i++) {
6196: /* MUTANT (rep_op) */	for (i = 0; i >= dev->chunk_bit_stride; i++) {
6196: /* MUTANT (rep_op) */	for (i = 0; i == dev->chunk_bit_stride; i++) {
6196: /* MUTANT (rep_op) */	for (i = 0; i != dev->chunk_bit_stride; i++) {
6196: /* MUTANT (rep_op) */	for (i = 0; i < dev->chunk_bit_stride; i--) {
6196: /* MUTANT (rep_const) */	for (i = 1; i < dev->chunk_bit_stride; i++) {
6196: /* MUTANT (rep_const) */	for (i = -1; i < dev->chunk_bit_stride; i++) {
6197: /* MUTANT (negate) */		if(! (*blk_bits))
6198: /* MUTANT (rep_const) */			return 0;
6198: /* MUTANT (rep_const) */			return -1;
6198: /* MUTANT (rep_const) */			return ((1)+1);
6199: /* MUTANT (del_stmt) */ /* 		blk_bits++; */ 
6199: /* MUTANT (rep_op) */		blk_bits--;
6201: /* MUTANT (rep_const) */	return 1;
6201: /* MUTANT (rep_const) */	return -1;
6206: /* MUTANT (del_stmt) */ /* 	u8 *blk_bits = yaffs_block_bits(dev, blk); */ 
6207: /* MUTANT (del_stmt) */ /* 	int i; */ 
6208: /* MUTANT (del_stmt) */ /* 	int n = 0; */ 
6208: /* MUTANT (rep_const) */	int n = 1;
6208: /* MUTANT (rep_const) */	int n = -1;
6210: /* MUTANT (rep_op) */	for (i = 0; i <= dev->chunk_bit_stride; i++, blk_bits++)
6210: /* MUTANT (rep_op) */	for (i = 0; i > dev->chunk_bit_stride; i++, blk_bits++)
6210: /* MUTANT (rep_op) */	for (i = 0; i >= dev->chunk_bit_stride; i++, blk_bits++)
6210: /* MUTANT (rep_op) */	for (i = 0; i == dev->chunk_bit_stride; i++, blk_bits++)
6210: /* MUTANT (rep_op) */	for (i = 0; i != dev->chunk_bit_stride; i++, blk_bits++)
6210: /* MUTANT (rep_op) */	for (i = 0; i < dev->chunk_bit_stride; i--, blk_bits++)
6210: /* MUTANT (rep_op) */	for (i = 0; i < dev->chunk_bit_stride; i++, blk_bits--)
6210: /* MUTANT (rep_const) */	for (i = 1; i < dev->chunk_bit_stride; i++, blk_bits++)
6210: /* MUTANT (rep_const) */	for (i = -1; i < dev->chunk_bit_stride; i++, blk_bits++)
6211: /* MUTANT (rep_op) */		n -= hweight8(*blk_bits);
6211: /* MUTANT (rep_op) */		n *= hweight8(*blk_bits);
6211: /* MUTANT (rep_op) */		n %= hweight8(*blk_bits);
6213: /* MUTANT (del_stmt) */ /* 	return n; */ 
6235: /* MUTANT (rep_const) */static const char yaffs_count_bits_table[0] = {
6235: /* MUTANT (rep_const) */static const char yaffs_count_bits_table[1] = {
6235: /* MUTANT (rep_const) */static const char yaffs_count_bits_table[-1] = {
6235: /* MUTANT (rep_const) */static const char yaffs_count_bits_table[((256)+1)] = {
6235: /* MUTANT (rep_const) */static const char yaffs_count_bits_table[((256)-1)] = {
6236: /* MUTANT (rep_const) */	1, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	-1, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 0, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, -1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, ((1)+1), 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 0, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, -1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, ((1)+1), 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 0, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 1, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, -1, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, ((2)+1), 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, ((2)-1), 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 0, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, -1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, ((1)+1), 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 0, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 1, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, -1, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, ((2)+1), 2, 3, 1, 2, 2, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, ((2)-1), 2, 3, 1, 2, 2, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 0, 3, 1, 2, 2, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 1, 3, 1, 2, 2, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, -1, 3, 1, 2, 2, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, ((2)+1), 3, 1, 2, 2, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, ((2)-1), 3, 1, 2, 2, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, 0, 1, 2, 2, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, 1, 1, 2, 2, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, -1, 1, 2, 2, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, ((3)+1), 1, 2, 2, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, ((3)-1), 1, 2, 2, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, 3, 0, 2, 2, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, 3, -1, 2, 2, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, 3, ((1)+1), 2, 2, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, 3, 1, 0, 2, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, 3, 1, 1, 2, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, 3, 1, -1, 2, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, 3, 1, ((2)+1), 2, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, 3, 1, ((2)-1), 2, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 0, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 1, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, 3, 1, 2, -1, 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, 3, 1, 2, ((2)+1), 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, 3, 1, 2, ((2)-1), 3, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 0, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 1, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, -1, 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, ((3)+1), 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, ((3)-1), 2, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 0, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 1, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, -1, 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, ((2)+1), 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, ((2)-1), 3, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 0, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 1, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, -1, 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, ((3)+1), 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, ((3)-1), 3, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 0, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 1, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, -1, 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, ((3)+1), 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, ((3)-1), 4,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 0,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 1,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, -1,
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, ((4)+1),
6236: /* MUTANT (rep_const) */	0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, ((4)-1),
6237: /* MUTANT (rep_const) */	0, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	-1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	((1)+1), 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 0, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 1, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, -1, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, ((2)+1), 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, ((2)-1), 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 0, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 1, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, -1, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, ((2)+1), 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, ((2)-1), 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 0, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 1, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, -1, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, ((3)+1), 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, ((3)-1), 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 0, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 1, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, -1, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, ((2)+1), 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, ((2)-1), 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 0, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 1, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, -1, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, ((3)+1), 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, ((3)-1), 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 0, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 1, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, -1, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, ((3)+1), 4, 2, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, ((3)-1), 4, 2, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 0, 2, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 1, 2, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, -1, 2, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, ((4)+1), 2, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, ((4)-1), 2, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 0, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 1, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, -1, 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, ((2)+1), 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, ((2)-1), 3, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 0, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 1, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, -1, 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, ((3)+1), 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, ((3)-1), 3, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 0, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 1, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, -1, 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, ((3)+1), 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, ((3)-1), 4, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 0, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 1, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, -1, 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, ((4)+1), 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, ((4)-1), 3, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 0, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 1, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, -1, 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, ((3)+1), 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, ((3)-1), 4, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 0, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 1, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, -1, 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, ((4)+1), 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, ((4)-1), 4, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 0, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 1, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, -1, 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, ((4)+1), 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, ((4)-1), 5,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 0,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 1,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, -1,
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, ((5)+1),
6237: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, ((5)-1),
6238: /* MUTANT (rep_const) */	0, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	-1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	((1)+1), 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 0, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 1, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, -1, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, ((2)+1), 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, ((2)-1), 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 0, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 1, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, -1, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, ((2)+1), 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, ((2)-1), 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 0, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 1, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, -1, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, ((3)+1), 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, ((3)-1), 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 0, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 1, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, -1, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, ((2)+1), 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, ((2)-1), 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 0, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 1, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, -1, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, ((3)+1), 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, ((3)-1), 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 0, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 1, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, -1, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, ((3)+1), 4, 2, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, ((3)-1), 4, 2, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 0, 2, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 1, 2, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, -1, 2, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, ((4)+1), 2, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, ((4)-1), 2, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 0, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 1, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, -1, 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, ((2)+1), 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, ((2)-1), 3, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 0, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 1, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, -1, 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, ((3)+1), 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, ((3)-1), 3, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 0, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 1, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, -1, 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, ((3)+1), 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, ((3)-1), 4, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 0, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 1, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, -1, 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, ((4)+1), 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, ((4)-1), 3, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 0, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 1, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, -1, 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, ((3)+1), 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, ((3)-1), 4, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 0, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 1, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, -1, 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, ((4)+1), 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, ((4)-1), 4, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 0, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 1, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, -1, 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, ((4)+1), 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, ((4)-1), 5,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 0,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 1,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, -1,
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, ((5)+1),
6238: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, ((5)-1),
6239: /* MUTANT (rep_const) */	0, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	1, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	-1, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	((2)+1), 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	((2)-1), 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 0, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 1, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, -1, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, ((3)+1), 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, ((3)-1), 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 0, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 1, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, -1, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, ((3)+1), 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, ((3)-1), 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 0, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 1, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, -1, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, ((4)+1), 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, ((4)-1), 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 0, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 1, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, -1, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, ((3)+1), 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, ((3)-1), 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 0, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 1, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, -1, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, ((4)+1), 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, ((4)-1), 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 0, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 1, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, -1, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, ((4)+1), 5, 3, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, ((4)-1), 5, 3, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 0, 3, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 1, 3, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, -1, 3, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, ((5)+1), 3, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, ((5)-1), 3, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 0, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 1, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, -1, 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, ((3)+1), 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, ((3)-1), 4, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 0, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 1, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, -1, 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, ((4)+1), 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, ((4)-1), 4, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 0, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 1, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, -1, 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, ((4)+1), 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, ((4)-1), 5, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 0, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 1, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, -1, 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, ((5)+1), 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, ((5)-1), 4, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 0, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 1, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, -1, 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, ((4)+1), 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, ((4)-1), 5, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 0, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 1, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, -1, 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, ((5)+1), 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, ((5)-1), 5, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 0, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 1, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, -1, 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, ((5)+1), 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, ((5)-1), 6,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 0,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 1,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, -1,
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, ((6)+1),
6239: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, ((6)-1),
6240: /* MUTANT (rep_const) */	0, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	-1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	((1)+1), 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 0, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 1, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, -1, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, ((2)+1), 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, ((2)-1), 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 0, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 1, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, -1, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, ((2)+1), 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, ((2)-1), 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 0, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 1, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, -1, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, ((3)+1), 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, ((3)-1), 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 0, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 1, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, -1, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, ((2)+1), 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, ((2)-1), 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 0, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 1, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, -1, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, ((3)+1), 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, ((3)-1), 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 0, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 1, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, -1, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, ((3)+1), 4, 2, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, ((3)-1), 4, 2, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 0, 2, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 1, 2, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, -1, 2, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, ((4)+1), 2, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, ((4)-1), 2, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 0, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 1, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, -1, 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, ((2)+1), 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, ((2)-1), 3, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 0, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 1, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, -1, 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, ((3)+1), 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, ((3)-1), 3, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 0, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 1, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, -1, 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, ((3)+1), 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, ((3)-1), 4, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 0, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 1, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, -1, 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, ((4)+1), 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, ((4)-1), 3, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 0, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 1, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, -1, 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, ((3)+1), 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, ((3)-1), 4, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 0, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 1, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, -1, 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, ((4)+1), 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, ((4)-1), 4, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 0, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 1, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, -1, 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, ((4)+1), 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, ((4)-1), 5,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 0,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 1,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, -1,
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, ((5)+1),
6240: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, ((5)-1),
6241: /* MUTANT (rep_const) */	0, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	1, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	-1, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	((2)+1), 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	((2)-1), 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 0, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 1, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, -1, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, ((3)+1), 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, ((3)-1), 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 0, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 1, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, -1, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, ((3)+1), 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, ((3)-1), 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 0, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 1, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, -1, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, ((4)+1), 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, ((4)-1), 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 0, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 1, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, -1, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, ((3)+1), 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, ((3)-1), 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 0, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 1, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, -1, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, ((4)+1), 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, ((4)-1), 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 0, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 1, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, -1, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, ((4)+1), 5, 3, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, ((4)-1), 5, 3, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 0, 3, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 1, 3, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, -1, 3, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, ((5)+1), 3, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, ((5)-1), 3, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 0, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 1, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, -1, 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, ((3)+1), 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, ((3)-1), 4, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 0, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 1, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, -1, 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, ((4)+1), 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, ((4)-1), 4, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 0, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 1, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, -1, 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, ((4)+1), 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, ((4)-1), 5, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 0, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 1, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, -1, 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, ((5)+1), 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, ((5)-1), 4, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 0, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 1, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, -1, 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, ((4)+1), 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, ((4)-1), 5, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 0, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 1, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, -1, 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, ((5)+1), 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, ((5)-1), 5, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 0, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 1, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, -1, 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, ((5)+1), 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, ((5)-1), 6,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 0,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 1,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, -1,
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, ((6)+1),
6241: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, ((6)-1),
6242: /* MUTANT (rep_const) */	0, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	1, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	-1, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	((2)+1), 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	((2)-1), 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 0, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 1, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, -1, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, ((3)+1), 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, ((3)-1), 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 0, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 1, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, -1, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, ((3)+1), 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, ((3)-1), 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 0, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 1, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, -1, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, ((4)+1), 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, ((4)-1), 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 0, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 1, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, -1, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, ((3)+1), 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, ((3)-1), 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 0, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 1, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, -1, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, ((4)+1), 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, ((4)-1), 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 0, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 1, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, -1, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, ((4)+1), 5, 3, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, ((4)-1), 5, 3, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 0, 3, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 1, 3, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, -1, 3, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, ((5)+1), 3, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, ((5)-1), 3, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 0, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 1, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, -1, 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, ((3)+1), 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, ((3)-1), 4, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 0, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 1, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, -1, 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, ((4)+1), 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, ((4)-1), 4, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 0, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 1, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, -1, 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, ((4)+1), 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, ((4)-1), 5, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 0, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 1, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, -1, 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, ((5)+1), 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, ((5)-1), 4, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 0, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 1, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, -1, 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, ((4)+1), 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, ((4)-1), 5, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 0, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 1, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, -1, 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, ((5)+1), 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, ((5)-1), 5, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 0, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 1, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, -1, 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, ((5)+1), 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, ((5)-1), 6,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 0,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 1,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, -1,
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, ((6)+1),
6242: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, ((6)-1),
6243: /* MUTANT (rep_const) */	0, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	1, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	-1, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	((3)+1), 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	((3)-1), 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 0, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 1, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, -1, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, ((4)+1), 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, ((4)-1), 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 0, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 1, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, -1, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, ((4)+1), 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, ((4)-1), 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 0, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 1, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, -1, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, ((5)+1), 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, ((5)-1), 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 0, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 1, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, -1, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, ((4)+1), 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, ((4)-1), 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 0, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 1, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, -1, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, ((5)+1), 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, ((5)-1), 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 0, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 1, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, -1, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, ((5)+1), 6, 4, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, ((5)-1), 6, 4, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 0, 4, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 1, 4, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, -1, 4, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, ((6)+1), 4, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, ((6)-1), 4, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 0, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 1, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, -1, 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, ((4)+1), 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, ((4)-1), 5, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 0, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 1, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, -1, 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, ((5)+1), 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, ((5)-1), 5, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 0, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 1, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, -1, 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, ((5)+1), 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, ((5)-1), 6, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 0, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 1, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, -1, 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, ((6)+1), 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, ((6)-1), 5, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 0, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 1, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, -1, 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, ((5)+1), 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, ((5)-1), 6, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 0, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 1, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, -1, 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, ((6)+1), 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, ((6)-1), 6, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 0, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 1, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, -1, 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, ((6)+1), 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, ((6)-1), 7,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 0,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 1,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, -1,
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, ((7)+1),
6243: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, ((7)-1),
6244: /* MUTANT (rep_const) */	0, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	-1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	((1)+1), 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 0, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 1, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, -1, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, ((2)+1), 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, ((2)-1), 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 0, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 1, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, -1, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, ((2)+1), 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, ((2)-1), 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 0, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 1, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, -1, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, ((3)+1), 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, ((3)-1), 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 0, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 1, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, -1, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, ((2)+1), 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, ((2)-1), 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 0, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 1, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, -1, 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, ((3)+1), 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, ((3)-1), 3, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 0, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 1, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, -1, 4, 2, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, ((3)+1), 4, 2, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, ((3)-1), 4, 2, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 0, 2, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 1, 2, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, -1, 2, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, ((4)+1), 2, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, ((4)-1), 2, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 0, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 1, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, -1, 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, ((2)+1), 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, ((2)-1), 3, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 0, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 1, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, -1, 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, ((3)+1), 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, ((3)-1), 3, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 0, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 1, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, -1, 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, ((3)+1), 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, ((3)-1), 4, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 0, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 1, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, -1, 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, ((4)+1), 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, ((4)-1), 3, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 0, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 1, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, -1, 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, ((3)+1), 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, ((3)-1), 4, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 0, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 1, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, -1, 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, ((4)+1), 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, ((4)-1), 4, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 0, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 1, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, -1, 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, ((4)+1), 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, ((4)-1), 5,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 0,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, 1,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, -1,
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, ((5)+1),
6244: /* MUTANT (rep_const) */	1, 2, 2, 3, 2, 3, 3, 4, 2, 3, 3, 4, 3, 4, 4, ((5)-1),
6245: /* MUTANT (rep_const) */	0, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	1, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	-1, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	((2)+1), 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	((2)-1), 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 0, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 1, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, -1, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, ((3)+1), 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, ((3)-1), 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 0, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 1, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, -1, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, ((3)+1), 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, ((3)-1), 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 0, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 1, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, -1, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, ((4)+1), 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, ((4)-1), 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 0, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 1, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, -1, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, ((3)+1), 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, ((3)-1), 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 0, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 1, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, -1, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, ((4)+1), 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, ((4)-1), 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 0, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 1, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, -1, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, ((4)+1), 5, 3, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, ((4)-1), 5, 3, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 0, 3, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 1, 3, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, -1, 3, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, ((5)+1), 3, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, ((5)-1), 3, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 0, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 1, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, -1, 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, ((3)+1), 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, ((3)-1), 4, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 0, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 1, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, -1, 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, ((4)+1), 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, ((4)-1), 4, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 0, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 1, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, -1, 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, ((4)+1), 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, ((4)-1), 5, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 0, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 1, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, -1, 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, ((5)+1), 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, ((5)-1), 4, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 0, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 1, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, -1, 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, ((4)+1), 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, ((4)-1), 5, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 0, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 1, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, -1, 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, ((5)+1), 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, ((5)-1), 5, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 0, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 1, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, -1, 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, ((5)+1), 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, ((5)-1), 6,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 0,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 1,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, -1,
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, ((6)+1),
6245: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, ((6)-1),
6246: /* MUTANT (rep_const) */	0, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	1, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	-1, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	((2)+1), 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	((2)-1), 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 0, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 1, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, -1, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, ((3)+1), 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, ((3)-1), 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 0, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 1, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, -1, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, ((3)+1), 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, ((3)-1), 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 0, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 1, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, -1, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, ((4)+1), 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, ((4)-1), 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 0, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 1, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, -1, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, ((3)+1), 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, ((3)-1), 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 0, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 1, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, -1, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, ((4)+1), 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, ((4)-1), 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 0, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 1, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, -1, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, ((4)+1), 5, 3, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, ((4)-1), 5, 3, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 0, 3, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 1, 3, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, -1, 3, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, ((5)+1), 3, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, ((5)-1), 3, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 0, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 1, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, -1, 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, ((3)+1), 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, ((3)-1), 4, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 0, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 1, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, -1, 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, ((4)+1), 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, ((4)-1), 4, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 0, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 1, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, -1, 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, ((4)+1), 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, ((4)-1), 5, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 0, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 1, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, -1, 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, ((5)+1), 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, ((5)-1), 4, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 0, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 1, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, -1, 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, ((4)+1), 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, ((4)-1), 5, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 0, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 1, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, -1, 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, ((5)+1), 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, ((5)-1), 5, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 0, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 1, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, -1, 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, ((5)+1), 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, ((5)-1), 6,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 0,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 1,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, -1,
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, ((6)+1),
6246: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, ((6)-1),
6247: /* MUTANT (rep_const) */	0, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	1, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	-1, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	((3)+1), 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	((3)-1), 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 0, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 1, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, -1, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, ((4)+1), 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, ((4)-1), 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 0, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 1, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, -1, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, ((4)+1), 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, ((4)-1), 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 0, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 1, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, -1, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, ((5)+1), 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, ((5)-1), 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 0, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 1, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, -1, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, ((4)+1), 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, ((4)-1), 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 0, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 1, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, -1, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, ((5)+1), 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, ((5)-1), 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 0, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 1, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, -1, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, ((5)+1), 6, 4, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, ((5)-1), 6, 4, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 0, 4, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 1, 4, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, -1, 4, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, ((6)+1), 4, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, ((6)-1), 4, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 0, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 1, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, -1, 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, ((4)+1), 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, ((4)-1), 5, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 0, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 1, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, -1, 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, ((5)+1), 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, ((5)-1), 5, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 0, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 1, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, -1, 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, ((5)+1), 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, ((5)-1), 6, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 0, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 1, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, -1, 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, ((6)+1), 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, ((6)-1), 5, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 0, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 1, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, -1, 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, ((5)+1), 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, ((5)-1), 6, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 0, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 1, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, -1, 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, ((6)+1), 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, ((6)-1), 6, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 0, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 1, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, -1, 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, ((6)+1), 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, ((6)-1), 7,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 0,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 1,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, -1,
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, ((7)+1),
6247: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, ((7)-1),
6248: /* MUTANT (rep_const) */	0, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	1, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	-1, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	((2)+1), 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	((2)-1), 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 0, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 1, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, -1, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, ((3)+1), 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, ((3)-1), 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 0, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 1, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, -1, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, ((3)+1), 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, ((3)-1), 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 0, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 1, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, -1, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, ((4)+1), 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, ((4)-1), 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 0, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 1, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, -1, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, ((3)+1), 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, ((3)-1), 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 0, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 1, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, -1, 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, ((4)+1), 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, ((4)-1), 4, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 0, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 1, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, -1, 5, 3, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, ((4)+1), 5, 3, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, ((4)-1), 5, 3, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 0, 3, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 1, 3, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, -1, 3, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, ((5)+1), 3, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, ((5)-1), 3, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 0, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 1, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, -1, 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, ((3)+1), 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, ((3)-1), 4, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 0, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 1, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, -1, 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, ((4)+1), 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, ((4)-1), 4, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 0, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 1, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, -1, 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, ((4)+1), 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, ((4)-1), 5, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 0, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 1, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, -1, 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, ((5)+1), 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, ((5)-1), 4, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 0, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 1, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, -1, 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, ((4)+1), 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, ((4)-1), 5, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 0, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 1, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, -1, 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, ((5)+1), 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, ((5)-1), 5, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 0, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 1, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, -1, 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, ((5)+1), 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, ((5)-1), 6,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 0,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, 1,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, -1,
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, ((6)+1),
6248: /* MUTANT (rep_const) */	2, 3, 3, 4, 3, 4, 4, 5, 3, 4, 4, 5, 4, 5, 5, ((6)-1),
6249: /* MUTANT (rep_const) */	0, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	1, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	-1, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	((3)+1), 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	((3)-1), 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 0, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 1, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, -1, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, ((4)+1), 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, ((4)-1), 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 0, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 1, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, -1, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, ((4)+1), 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, ((4)-1), 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 0, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 1, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, -1, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, ((5)+1), 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, ((5)-1), 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 0, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 1, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, -1, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, ((4)+1), 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, ((4)-1), 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 0, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 1, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, -1, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, ((5)+1), 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, ((5)-1), 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 0, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 1, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, -1, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, ((5)+1), 6, 4, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, ((5)-1), 6, 4, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 0, 4, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 1, 4, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, -1, 4, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, ((6)+1), 4, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, ((6)-1), 4, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 0, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 1, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, -1, 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, ((4)+1), 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, ((4)-1), 5, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 0, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 1, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, -1, 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, ((5)+1), 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, ((5)-1), 5, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 0, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 1, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, -1, 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, ((5)+1), 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, ((5)-1), 6, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 0, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 1, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, -1, 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, ((6)+1), 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, ((6)-1), 5, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 0, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 1, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, -1, 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, ((5)+1), 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, ((5)-1), 6, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 0, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 1, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, -1, 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, ((6)+1), 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, ((6)-1), 6, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 0, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 1, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, -1, 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, ((6)+1), 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, ((6)-1), 7,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 0,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 1,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, -1,
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, ((7)+1),
6249: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, ((7)-1),
6250: /* MUTANT (rep_const) */	0, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	1, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	-1, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	((3)+1), 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	((3)-1), 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 0, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 1, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, -1, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, ((4)+1), 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, ((4)-1), 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 0, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 1, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, -1, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, ((4)+1), 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, ((4)-1), 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 0, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 1, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, -1, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, ((5)+1), 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, ((5)-1), 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 0, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 1, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, -1, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, ((4)+1), 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, ((4)-1), 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 0, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 1, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, -1, 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, ((5)+1), 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, ((5)-1), 5, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 0, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 1, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, -1, 6, 4, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, ((5)+1), 6, 4, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, ((5)-1), 6, 4, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 0, 4, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 1, 4, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, -1, 4, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, ((6)+1), 4, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, ((6)-1), 4, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 0, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 1, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, -1, 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, ((4)+1), 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, ((4)-1), 5, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 0, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 1, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, -1, 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, ((5)+1), 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, ((5)-1), 5, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 0, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 1, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, -1, 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, ((5)+1), 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, ((5)-1), 6, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 0, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 1, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, -1, 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, ((6)+1), 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, ((6)-1), 5, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 0, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 1, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, -1, 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, ((5)+1), 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, ((5)-1), 6, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 0, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 1, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, -1, 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, ((6)+1), 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, ((6)-1), 6, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 0, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 1, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, -1, 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, ((6)+1), 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, ((6)-1), 7,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 0,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, 1,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, -1,
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, ((7)+1),
6250: /* MUTANT (rep_const) */	3, 4, 4, 5, 4, 5, 5, 6, 4, 5, 5, 6, 5, 6, 6, ((7)-1),
6251: /* MUTANT (rep_const) */	0, 5, 5, 6, 5, 6, 6, 7, 5, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	1, 5, 5, 6, 5, 6, 6, 7, 5, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	-1, 5, 5, 6, 5, 6, 6, 7, 5, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	((4)+1), 5, 5, 6, 5, 6, 6, 7, 5, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	((4)-1), 5, 5, 6, 5, 6, 6, 7, 5, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 0, 5, 6, 5, 6, 6, 7, 5, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 1, 5, 6, 5, 6, 6, 7, 5, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, -1, 5, 6, 5, 6, 6, 7, 5, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, ((5)+1), 5, 6, 5, 6, 6, 7, 5, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, ((5)-1), 5, 6, 5, 6, 6, 7, 5, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 0, 6, 5, 6, 6, 7, 5, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 1, 6, 5, 6, 6, 7, 5, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, -1, 6, 5, 6, 6, 7, 5, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, ((5)+1), 6, 5, 6, 6, 7, 5, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, ((5)-1), 6, 5, 6, 6, 7, 5, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 0, 5, 6, 6, 7, 5, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 1, 5, 6, 6, 7, 5, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, -1, 5, 6, 6, 7, 5, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, ((6)+1), 5, 6, 6, 7, 5, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, ((6)-1), 5, 6, 6, 7, 5, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 0, 6, 6, 7, 5, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 1, 6, 6, 7, 5, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, -1, 6, 6, 7, 5, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, ((5)+1), 6, 6, 7, 5, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, ((5)-1), 6, 6, 7, 5, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 0, 6, 7, 5, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 1, 6, 7, 5, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, -1, 6, 7, 5, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, ((6)+1), 6, 7, 5, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, ((6)-1), 6, 7, 5, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 0, 7, 5, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 1, 7, 5, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, -1, 7, 5, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, ((6)+1), 7, 5, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, ((6)-1), 7, 5, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 0, 5, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 1, 5, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, -1, 5, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, ((7)+1), 5, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, ((7)-1), 5, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 7, 0, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 7, 1, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 7, -1, 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 7, ((5)+1), 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 7, ((5)-1), 6, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 7, 5, 0, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 7, 5, 1, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 7, 5, -1, 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 7, 5, ((6)+1), 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 7, 5, ((6)-1), 6, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 7, 5, 6, 0, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 7, 5, 6, 1, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 7, 5, 6, -1, 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 7, 5, 6, ((6)+1), 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 7, 5, 6, ((6)-1), 7, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 7, 5, 6, 6, 0, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 7, 5, 6, 6, 1, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 7, 5, 6, 6, -1, 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 7, 5, 6, 6, ((7)+1), 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 7, 5, 6, 6, ((7)-1), 6, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 7, 5, 6, 6, 7, 0, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 7, 5, 6, 6, 7, 1, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 7, 5, 6, 6, 7, -1, 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 7, 5, 6, 6, 7, ((6)+1), 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 7, 5, 6, 6, 7, ((6)-1), 7, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 7, 5, 6, 6, 7, 6, 0, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 7, 5, 6, 6, 7, 6, 1, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 7, 5, 6, 6, 7, 6, -1, 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 7, 5, 6, 6, 7, 6, ((7)+1), 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 7, 5, 6, 6, 7, 6, ((7)-1), 7, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 7, 5, 6, 6, 7, 6, 7, 0, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 7, 5, 6, 6, 7, 6, 7, 1, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 7, 5, 6, 6, 7, 6, 7, -1, 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 7, 5, 6, 6, 7, 6, 7, ((7)+1), 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 7, 5, 6, 6, 7, 6, 7, ((7)-1), 8
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 7, 5, 6, 6, 7, 6, 7, 7, 0
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 7, 5, 6, 6, 7, 6, 7, 7, 1
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 7, 5, 6, 6, 7, 6, 7, 7, -1
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 7, 5, 6, 6, 7, 6, 7, 7, ((8)+1)
6251: /* MUTANT (rep_const) */	4, 5, 5, 6, 5, 6, 6, 7, 5, 6, 6, 7, 6, 7, 7, ((8)-1)
6256: /* MUTANT (del_stmt) */ /* 	int ret_val; */ 
6257: /* MUTANT (del_stmt) */ /* 	ret_val = yaffs_count_bits_table[x]; */ 
6258: /* MUTANT (del_stmt) */ /* 	return ret_val; */ 
6263: /* MUTANT (rep_op) */	return yaffs_hweight8(x & 0xff) - 
6263: /* MUTANT (rep_op) */	return yaffs_hweight8(x & 0xff) * 
6263: /* MUTANT (rep_op) */	return yaffs_hweight8(x & 0xff) % 
6263: /* MUTANT (rep_const) */	return yaffs_hweight8(x & 1xff) + 
6263: /* MUTANT (rep_const) */	return yaffs_hweight8(x & -1xff) + 
6264: /* MUTANT (rep_op) */		yaffs_hweight8((x >> 8) & 0xff) -
6264: /* MUTANT (rep_op) */		yaffs_hweight8((x >> 8) & 0xff) *
6264: /* MUTANT (rep_op) */		yaffs_hweight8((x >> 8) & 0xff) %
6264: /* MUTANT (rep_const) */		yaffs_hweight8((x >> 0) & 0xff) +
6264: /* MUTANT (rep_const) */		yaffs_hweight8((x >> 1) & 0xff) +
6264: /* MUTANT (rep_const) */		yaffs_hweight8((x >> -1) & 0xff) +
6264: /* MUTANT (rep_const) */		yaffs_hweight8((x >> ((8)+1)) & 0xff) +
6264: /* MUTANT (rep_const) */		yaffs_hweight8((x >> ((8)-1)) & 0xff) +
6264: /* MUTANT (rep_const) */		yaffs_hweight8((x >> 8) & 1xff) +
6264: /* MUTANT (rep_const) */		yaffs_hweight8((x >> 8) & -1xff) +
6265: /* MUTANT (rep_op) */		yaffs_hweight8((x >> 16) & 0xff) -
6265: /* MUTANT (rep_op) */		yaffs_hweight8((x >> 16) & 0xff) *
6265: /* MUTANT (rep_op) */		yaffs_hweight8((x >> 16) & 0xff) %
6265: /* MUTANT (rep_const) */		yaffs_hweight8((x >> 0) & 0xff) +
6265: /* MUTANT (rep_const) */		yaffs_hweight8((x >> 1) & 0xff) +
6265: /* MUTANT (rep_const) */		yaffs_hweight8((x >> -1) & 0xff) +
6265: /* MUTANT (rep_const) */		yaffs_hweight8((x >> ((16)+1)) & 0xff) +
6265: /* MUTANT (rep_const) */		yaffs_hweight8((x >> ((16)-1)) & 0xff) +
6265: /* MUTANT (rep_const) */		yaffs_hweight8((x >> 16) & 1xff) +
6265: /* MUTANT (rep_const) */		yaffs_hweight8((x >> 16) & -1xff) +
6266: /* MUTANT (rep_const) */		yaffs_hweight8((x >> 0) & 0xff);
6266: /* MUTANT (rep_const) */		yaffs_hweight8((x >> 1) & 0xff);
6266: /* MUTANT (rep_const) */		yaffs_hweight8((x >> -1) & 0xff);
6266: /* MUTANT (rep_const) */		yaffs_hweight8((x >> ((24)+1)) & 0xff);
6266: /* MUTANT (rep_const) */		yaffs_hweight8((x >> ((24)-1)) & 0xff);
6266: /* MUTANT (rep_const) */		yaffs_hweight8((x >> 24) & 1xff);
6266: /* MUTANT (rep_const) */		yaffs_hweight8((x >> 24) & -1xff);
6307: /* MUTANT (rep_const) */const char *yaffs_norif1_c_version = "$Id: yaffs_norif1.c,v 1.0 2010-02-18 01:18:04 charles Exp $";
6307: /* MUTANT (rep_const) */const char *yaffs_norif1_c_version = "$Id: yaffs_norif1.c,v 1.1 2010-02-18 01:18:04 charles Exp $";
6307: /* MUTANT (rep_const) */const char *yaffs_norif1_c_version = "$Id: yaffs_norif1.c,v 1.-1 2010-02-18 01:18:04 charles Exp $";
6307: /* MUTANT (rep_const) */const char *yaffs_norif1_c_version = "$Id: yaffs_norif1.c,v 1.((6)+1) 2010-02-18 01:18:04 charles Exp $";
6307: /* MUTANT (rep_const) */const char *yaffs_norif1_c_version = "$Id: yaffs_norif1.c,v 1.((6)-1) 2010-02-18 01:18:04 charles Exp $";
6307: /* MUTANT (rep_const) */const char *yaffs_norif1_c_version = "$Id: yaffs_norif1.c,v 1.6 0-02-18 01:18:04 charles Exp $";
6307: /* MUTANT (rep_const) */const char *yaffs_norif1_c_version = "$Id: yaffs_norif1.c,v 1.6 1-02-18 01:18:04 charles Exp $";
6307: /* MUTANT (rep_const) */const char *yaffs_norif1_c_version = "$Id: yaffs_norif1.c,v 1.6 -1-02-18 01:18:04 charles Exp $";
6307: /* MUTANT (rep_const) */const char *yaffs_norif1_c_version = "$Id: yaffs_norif1.c,v 1.6 ((2010)+1)-02-18 01:18:04 charles Exp $";
6307: /* MUTANT (rep_const) */const char *yaffs_norif1_c_version = "$Id: yaffs_norif1.c,v 1.6 ((2010)-1)-02-18 01:18:04 charles Exp $";
6307: /* MUTANT (rep_const) */const char *yaffs_norif1_c_version = "$Id: yaffs_norif1.c,v 1.6 20100-18 01:18:04 charles Exp $";
6307: /* MUTANT (rep_const) */const char *yaffs_norif1_c_version = "$Id: yaffs_norif1.c,v 1.6 20101-18 01:18:04 charles Exp $";
6307: /* MUTANT (rep_const) */const char *yaffs_norif1_c_version = "$Id: yaffs_norif1.c,v 1.6 2010-1-18 01:18:04 charles Exp $";
6307: /* MUTANT (rep_const) */const char *yaffs_norif1_c_version = "$Id: yaffs_norif1.c,v 1.6 2010((-02)+1)-18 01:18:04 charles Exp $";
6307: /* MUTANT (rep_const) */const char *yaffs_norif1_c_version = "$Id: yaffs_norif1.c,v 1.6 2010((-02)-1)-18 01:18:04 charles Exp $";
6307: /* MUTANT (rep_const) */const char *yaffs_norif1_c_version = "$Id: yaffs_norif1.c,v 1.6 2010-020 01:18:04 charles Exp $";
6307: /* MUTANT (rep_const) */const char *yaffs_norif1_c_version = "$Id: yaffs_norif1.c,v 1.6 2010-021 01:18:04 charles Exp $";
6307: /* MUTANT (rep_const) */const char *yaffs_norif1_c_version = "$Id: yaffs_norif1.c,v 1.6 2010-02-1 01:18:04 charles Exp $";
6307: /* MUTANT (rep_const) */const char *yaffs_norif1_c_version = "$Id: yaffs_norif1.c,v 1.6 2010-02((-18)+1) 01:18:04 charles Exp $";
6307: /* MUTANT (rep_const) */const char *yaffs_norif1_c_version = "$Id: yaffs_norif1.c,v 1.6 2010-02((-18)-1) 01:18:04 charles Exp $";
6307: /* MUTANT (rep_const) */const char *yaffs_norif1_c_version = "$Id: yaffs_norif1.c,v 1.6 2010-02-18 0:18:04 charles Exp $";
6307: /* MUTANT (rep_const) */const char *yaffs_norif1_c_version = "$Id: yaffs_norif1.c,v 1.6 2010-02-18 1:18:04 charles Exp $";
6307: /* MUTANT (rep_const) */const char *yaffs_norif1_c_version = "$Id: yaffs_norif1.c,v 1.6 2010-02-18 -1:18:04 charles Exp $";
6307: /* MUTANT (rep_const) */const char *yaffs_norif1_c_version = "$Id: yaffs_norif1.c,v 1.6 2010-02-18 ((01)+1):18:04 charles Exp $";
6307: /* MUTANT (rep_const) */const char *yaffs_norif1_c_version = "$Id: yaffs_norif1.c,v 1.6 2010-02-18 ((01)-1):18:04 charles Exp $";
6307: /* MUTANT (rep_const) */const char *yaffs_norif1_c_version = "$Id: yaffs_norif1.c,v 1.6 2010-02-18 01:0:04 charles Exp $";
6307: /* MUTANT (rep_const) */const char *yaffs_norif1_c_version = "$Id: yaffs_norif1.c,v 1.6 2010-02-18 01:1:04 charles Exp $";
6307: /* MUTANT (rep_const) */const char *yaffs_norif1_c_version = "$Id: yaffs_norif1.c,v 1.6 2010-02-18 01:-1:04 charles Exp $";
6307: /* MUTANT (rep_const) */const char *yaffs_norif1_c_version = "$Id: yaffs_norif1.c,v 1.6 2010-02-18 01:((18)+1):04 charles Exp $";
6307: /* MUTANT (rep_const) */const char *yaffs_norif1_c_version = "$Id: yaffs_norif1.c,v 1.6 2010-02-18 01:((18)-1):04 charles Exp $";
6307: /* MUTANT (rep_const) */const char *yaffs_norif1_c_version = "$Id: yaffs_norif1.c,v 1.6 2010-02-18 01:18:0 charles Exp $";
6307: /* MUTANT (rep_const) */const char *yaffs_norif1_c_version = "$Id: yaffs_norif1.c,v 1.6 2010-02-18 01:18:1 charles Exp $";
6307: /* MUTANT (rep_const) */const char *yaffs_norif1_c_version = "$Id: yaffs_norif1.c,v 1.6 2010-02-18 01:18:-1 charles Exp $";
6307: /* MUTANT (rep_const) */const char *yaffs_norif1_c_version = "$Id: yaffs_norif1.c,v 1.6 2010-02-18 01:18:((04)+1) charles Exp $";
6307: /* MUTANT (rep_const) */const char *yaffs_norif1_c_version = "$Id: yaffs_norif1.c,v 1.6 2010-02-18 01:18:((04)-1) charles Exp $";
6317: #define SPARE_BYTES_PER_CHUNK	0 /* MUTANT (rep_const) */
6317: #define SPARE_BYTES_PER_CHUNK	1 /* MUTANT (rep_const) */
6317: #define SPARE_BYTES_PER_CHUNK	-1 /* MUTANT (rep_const) */
6317: #define SPARE_BYTES_PER_CHUNK	((16)+1) /* MUTANT (rep_const) */
6317: #define SPARE_BYTES_PER_CHUNK	((16)-1) /* MUTANT (rep_const) */
6318: #define M18_SKIP		0 /* MUTANT (rep_const) */
6318: #define M18_SKIP		1 /* MUTANT (rep_const) */
6318: #define M18_SKIP		-1 /* MUTANT (rep_const) */
6318: #define M18_SKIP		((16)+1) /* MUTANT (rep_const) */
6318: #define M18_SKIP		((16)-1) /* MUTANT (rep_const) */
6319: #define PROG_REGION_SIZE	0 /* MUTANT (rep_const) */
6319: #define PROG_REGION_SIZE	1 /* MUTANT (rep_const) */
6319: #define PROG_REGION_SIZE	-1 /* MUTANT (rep_const) */
6319: #define PROG_REGION_SIZE	((1024)+1) /* MUTANT (rep_const) */
6319: #define PROG_REGION_SIZE	((1024)-1) /* MUTANT (rep_const) */
6320: #define BLOCK_SIZE_IN_BYTES 	(0*1024) /* MUTANT (rep_const) */
6320: #define BLOCK_SIZE_IN_BYTES 	(1*1024) /* MUTANT (rep_const) */
6320: #define BLOCK_SIZE_IN_BYTES 	(-1*1024) /* MUTANT (rep_const) */
6320: #define BLOCK_SIZE_IN_BYTES 	(((256)+1)*1024) /* MUTANT (rep_const) */
6320: #define BLOCK_SIZE_IN_BYTES 	(((256)-1)*1024) /* MUTANT (rep_const) */
6320: #define BLOCK_SIZE_IN_BYTES 	(256*0) /* MUTANT (rep_const) */
6320: #define BLOCK_SIZE_IN_BYTES 	(256*1) /* MUTANT (rep_const) */
6320: #define BLOCK_SIZE_IN_BYTES 	(256*-1) /* MUTANT (rep_const) */
6320: #define BLOCK_SIZE_IN_BYTES 	(256*((1024)+1)) /* MUTANT (rep_const) */
6320: #define BLOCK_SIZE_IN_BYTES 	(256*((1024)-1)) /* MUTANT (rep_const) */
6321: #define CHUNKS_PER_BLOCK	0 /* MUTANT (rep_const) */
6321: #define CHUNKS_PER_BLOCK	1 /* MUTANT (rep_const) */
6321: #define CHUNKS_PER_BLOCK	-1 /* MUTANT (rep_const) */
6321: #define CHUNKS_PER_BLOCK	((248)+1) /* MUTANT (rep_const) */
6321: #define CHUNKS_PER_BLOCK	((248)-1) /* MUTANT (rep_const) */
6326: #define FORMAT_VALUE		1x1234 /* MUTANT (rep_const) */
6326: #define FORMAT_VALUE		-1x1234 /* MUTANT (rep_const) */
6328: #define DATA_BYTES_PER_CHUNK	0 /* MUTANT (rep_const) */
6328: #define DATA_BYTES_PER_CHUNK	1 /* MUTANT (rep_const) */
6328: #define DATA_BYTES_PER_CHUNK	-1 /* MUTANT (rep_const) */
6328: #define DATA_BYTES_PER_CHUNK	((1024)+1) /* MUTANT (rep_const) */
6328: #define DATA_BYTES_PER_CHUNK	((1024)-1) /* MUTANT (rep_const) */
6329: #define BLOCKS_IN_DEVICE        (0*1024/256) /* MUTANT (rep_const) */
6329: #define BLOCKS_IN_DEVICE        (1*1024/256) /* MUTANT (rep_const) */
6329: #define BLOCKS_IN_DEVICE        (-1*1024/256) /* MUTANT (rep_const) */
6329: #define BLOCKS_IN_DEVICE        (((8)+1)*1024/256) /* MUTANT (rep_const) */
6329: #define BLOCKS_IN_DEVICE        (((8)-1)*1024/256) /* MUTANT (rep_const) */
6329: #define BLOCKS_IN_DEVICE        (8*0/256) /* MUTANT (rep_const) */
6329: #define BLOCKS_IN_DEVICE        (8*1/256) /* MUTANT (rep_const) */
6329: #define BLOCKS_IN_DEVICE        (8*-1/256) /* MUTANT (rep_const) */
6329: #define BLOCKS_IN_DEVICE        (8*((1024)+1)/256) /* MUTANT (rep_const) */
6329: #define BLOCKS_IN_DEVICE        (8*((1024)-1)/256) /* MUTANT (rep_const) */
6329: #define BLOCKS_IN_DEVICE        (8*1024/0) /* MUTANT (rep_const) */
6329: #define BLOCKS_IN_DEVICE        (8*1024/1) /* MUTANT (rep_const) */
6329: #define BLOCKS_IN_DEVICE        (8*1024/-1) /* MUTANT (rep_const) */
6329: #define BLOCKS_IN_DEVICE        (8*1024/((256)+1)) /* MUTANT (rep_const) */
6329: #define BLOCKS_IN_DEVICE        (8*1024/((256)-1)) /* MUTANT (rep_const) */
6332: #define YNOR_PREMARKER          (1xF6) /* MUTANT (rep_const) */
6332: #define YNOR_PREMARKER          (-1xF6) /* MUTANT (rep_const) */
6333: #define YNOR_POSTMARKER         (1xF0) /* MUTANT (rep_const) */
6333: #define YNOR_POSTMARKER         (-1xF0) /* MUTANT (rep_const) */
6336: #if 0 /* MUTANT (rep_const) */
6336: #if -1 /* MUTANT (rep_const) */
6336: #if ((1)+1) /* MUTANT (rep_const) */
6350: #define ynorif1_FlashInit()  do{} while(1) /* MUTANT (rep_const) */
6350: #define ynorif1_FlashInit()  do{} while(-1) /* MUTANT (rep_const) */
6351: #define ynorif1_FlashDeinit() do {} while(1) /* MUTANT (rep_const) */
6351: #define ynorif1_FlashDeinit() do {} while(-1) /* MUTANT (rep_const) */
6355: #define DEVICE_BASE     (0 * 1024 * 1024) /* MUTANT (rep_const) */
6355: #define DEVICE_BASE     (1 * 1024 * 1024) /* MUTANT (rep_const) */
6355: #define DEVICE_BASE     (-1 * 1024 * 1024) /* MUTANT (rep_const) */
6355: #define DEVICE_BASE     (((32)+1) * 1024 * 1024) /* MUTANT (rep_const) */
6355: #define DEVICE_BASE     (((32)-1) * 1024 * 1024) /* MUTANT (rep_const) */
6355: #define DEVICE_BASE     (32 * 0 * 1024) /* MUTANT (rep_const) */
6355: #define DEVICE_BASE     (32 * 1 * 1024) /* MUTANT (rep_const) */
6355: #define DEVICE_BASE     (32 * -1 * 1024) /* MUTANT (rep_const) */
6355: #define DEVICE_BASE     (32 * ((1024)+1) * 1024) /* MUTANT (rep_const) */
6355: #define DEVICE_BASE     (32 * ((1024)-1) * 1024) /* MUTANT (rep_const) */
6355: #define DEVICE_BASE     (32 * 1024 * 0) /* MUTANT (rep_const) */
6355: #define DEVICE_BASE     (32 * 1024 * 1) /* MUTANT (rep_const) */
6355: #define DEVICE_BASE     (32 * 1024 * -1) /* MUTANT (rep_const) */
6355: #define DEVICE_BASE     (32 * 1024 * ((1024)+1)) /* MUTANT (rep_const) */
6355: #define DEVICE_BASE     (32 * 1024 * ((1024)-1)) /* MUTANT (rep_const) */
6360: /* MUTANT (del_stmt) */ /* 	u32 addr; */ 
6361: /* MUTANT (del_stmt) */ /* 	dev=dev; */ 
6363: /* MUTANT (del_stmt) */ /* 	addr = (u32) DEVICE_BASE; */ 
6364: /* MUTANT (del_stmt) */ /* 	addr += blockNumber * BLOCK_SIZE_IN_BYTES; */ 
6364: /* MUTANT (rep_op) */	addr -= blockNumber * BLOCK_SIZE_IN_BYTES;
6364: /* MUTANT (rep_op) */	addr *= blockNumber * BLOCK_SIZE_IN_BYTES;
6364: /* MUTANT (rep_op) */	addr %= blockNumber * BLOCK_SIZE_IN_BYTES;
6366: /* MUTANT (del_stmt) */ /* 	return (u32 *) addr; */ 
6371: /* MUTANT (del_stmt) */ /* 	u32 addr; */ 
6373: /* MUTANT (del_stmt) */ /* 	addr = (u32) Block2Addr(dev,blockNumber); */ 
6374: /* MUTANT (del_stmt) */ /* 	addr += FORMAT_OFFSET; */ 
6374: /* MUTANT (rep_op) */	addr -= FORMAT_OFFSET;
6374: /* MUTANT (rep_op) */	addr *= FORMAT_OFFSET;
6374: /* MUTANT (rep_op) */	addr %= FORMAT_OFFSET;
6376: /* MUTANT (del_stmt) */ /* 	return (u32 *)addr; */ 
6380: /* MUTANT (del_stmt) */ /* 	unsigned block; */ 
6381: /* MUTANT (del_stmt) */ /* 	unsigned chunkInBlock; */ 
6382: /* MUTANT (del_stmt) */ /* 	u32  addr; */ 
6384: /* MUTANT (del_stmt) */ /* 	block = chunk_id/dev->param.chunks_per_block; */ 
6385: /* MUTANT (del_stmt) */ /* 	chunkInBlock = chunk_id % dev->param.chunks_per_block; */ 
6385: /* MUTANT (rep_op) */	chunkInBlock = chunk_id + dev->param.chunks_per_block;
6385: /* MUTANT (rep_op) */	chunkInBlock = chunk_id - dev->param.chunks_per_block;
6385: /* MUTANT (rep_op) */	chunkInBlock = chunk_id * dev->param.chunks_per_block;
6387: /* MUTANT (del_stmt) */ /* 	addr = (u32) Block2Addr(dev,block); */ 
6388: /* MUTANT (del_stmt) */ /* 	addr += chunkInBlock * DATA_BYTES_PER_CHUNK; */ 
6388: /* MUTANT (rep_op) */	addr -= chunkInBlock * DATA_BYTES_PER_CHUNK;
6388: /* MUTANT (rep_op) */	addr *= chunkInBlock * DATA_BYTES_PER_CHUNK;
6388: /* MUTANT (rep_op) */	addr %= chunkInBlock * DATA_BYTES_PER_CHUNK;
6390: /* MUTANT (del_stmt) */ /* 	return (u32 *)addr; */ 
6395: /* MUTANT (del_stmt) */ /* 	unsigned block; */ 
6396: /* MUTANT (del_stmt) */ /* 	unsigned chunkInBlock; */ 
6397: /* MUTANT (del_stmt) */ /* 	u32 addr; */ 
6399: /* MUTANT (del_stmt) */ /* 	block = chunk_id/dev->param.chunks_per_block; */ 
6400: /* MUTANT (del_stmt) */ /* 	chunkInBlock = chunk_id % dev->param.chunks_per_block; */ 
6400: /* MUTANT (rep_op) */	chunkInBlock = chunk_id + dev->param.chunks_per_block;
6400: /* MUTANT (rep_op) */	chunkInBlock = chunk_id - dev->param.chunks_per_block;
6400: /* MUTANT (rep_op) */	chunkInBlock = chunk_id * dev->param.chunks_per_block;
6402: /* MUTANT (del_stmt) */ /* 	addr = (u32) Block2Addr(dev,block); */ 
6403: /* MUTANT (del_stmt) */ /* 	addr += SPARE_AREA_OFFSET; */ 
6403: /* MUTANT (rep_op) */	addr -= SPARE_AREA_OFFSET;
6403: /* MUTANT (rep_op) */	addr *= SPARE_AREA_OFFSET;
6403: /* MUTANT (rep_op) */	addr %= SPARE_AREA_OFFSET;
6404: /* MUTANT (del_stmt) */ /* 	addr += chunkInBlock * (SPARE_BYTES_PER_CHUNK + M18_SKIP); */ 
6404: /* MUTANT (rep_op) */	addr -= chunkInBlock * (SPARE_BYTES_PER_CHUNK + M18_SKIP);
6404: /* MUTANT (rep_op) */	addr *= chunkInBlock * (SPARE_BYTES_PER_CHUNK + M18_SKIP);
6404: /* MUTANT (rep_op) */	addr %= chunkInBlock * (SPARE_BYTES_PER_CHUNK + M18_SKIP);
6404: /* MUTANT (rep_op) */	addr += chunkInBlock * (SPARE_BYTES_PER_CHUNK - M18_SKIP);
6404: /* MUTANT (rep_op) */	addr += chunkInBlock * (SPARE_BYTES_PER_CHUNK * M18_SKIP);
6404: /* MUTANT (rep_op) */	addr += chunkInBlock * (SPARE_BYTES_PER_CHUNK % M18_SKIP);
6405: /* MUTANT (del_stmt) */ /* 	return (u32 *)addr; */ 
6409: /* MUTANT (negate) */void ynorif(!1_AndBytes(u8*target, const u8   *src, int nbytes))
6411: /* MUTANT (rep_op) */        while(nbytes <= 0){
6411: /* MUTANT (rep_op) */        while(nbytes < 0){
6411: /* MUTANT (rep_op) */        while(nbytes >= 0){
6411: /* MUTANT (rep_op) */        while(nbytes == 0){
6411: /* MUTANT (rep_op) */        while(nbytes != 0){
6411: /* MUTANT (rep_const) */        while(nbytes > 1){
6411: /* MUTANT (rep_const) */        while(nbytes > -1){
6411: /* MUTANT (negate) */        while(!(nbytes > 0)){
6412: /* MUTANT (del_stmt) */ /*                 *target &= *src; */ 
6413: /* MUTANT (del_stmt) */ /*                 target++; */ 
6413: /* MUTANT (rep_op) */                target--;
6414: /* MUTANT (del_stmt) */ /*                 src++; */ 
6414: /* MUTANT (rep_op) */                src--;
6415: /* MUTANT (del_stmt) */ /*                 nbytes--; */ 
6415: /* MUTANT (rep_op) */                nbytes++;
6419: /* MUTANT (negate) */int ynorif(!1_WriteChunkToNAND(struct yaffs_dev *dev,int nand_chunk,const u8 *data, const struct yaffs_spare *spare))
6421: /* MUTANT (del_stmt) */ /*         u32 *dataAddr = Chunk2DataAddr(dev,nand_chunk); */ 
6422: /* MUTANT (del_stmt) */ /*         u32 *spareAddr = Chunk2SpareAddr(dev,nand_chunk); */ 
6424: /* MUTANT (del_stmt) */ /*         struct yaffs_spare tmpSpare; */ 
6432: /* MUTANT (rep_op) */        if(sizeof(struct yaffs_spare) == 16)
6432: /* MUTANT (rep_const) */        if(sizeof(struct yaffs_spare) != 0)
6432: /* MUTANT (rep_const) */        if(sizeof(struct yaffs_spare) != 1)
6432: /* MUTANT (rep_const) */        if(sizeof(struct yaffs_spare) != -1)
6432: /* MUTANT (rep_const) */        if(sizeof(struct yaffs_spare) != ((16)+1))
6432: /* MUTANT (rep_const) */        if(sizeof(struct yaffs_spare) != ((16)-1))
6432: /* MUTANT (negate) */        if(!(sizeof(struct yaffs_spare) != 16))
6435: /* MUTANT (rep_op) */        if(data || spare)
6435: /* MUTANT (negate) */        if(!(data && spare))
6437: /* MUTANT (rep_op) */                if(spare->page_status == 0xff)
6437: /* MUTANT (rep_const) */                if(spare->page_status != 1xff)
6437: /* MUTANT (rep_const) */                if(spare->page_status != -1xff)
6437: /* MUTANT (negate) */                if(!(spare->page_status != 0xff))
6440: /* MUTANT (del_stmt) */ /*                 mymemset(&tmpSpare,0xff,sizeof(tmpSpare)); */ 
6440: /* MUTANT (rep_const) */                mymemset(&tmpSpare,1xff,sizeof(tmpSpare));
6440: /* MUTANT (rep_const) */                mymemset(&tmpSpare,-1xff,sizeof(tmpSpare));
6441: /* MUTANT (del_stmt) */ /*                 tmpSpare.page_status = YNOR_PREMARKER; */ 
6442: /* MUTANT (del_stmt) */ /*                 ynorif1_FlashWrite32(spareAddr,(u32 *)&tmpSpare,sizeof(struct yaffs_spare)/4); */ 
6442: /* MUTANT (rep_const) */                ynorif1_FlashWrite32(spareAddr,(u32 *)&tmpSpare,sizeof(struct yaffs_spare)/0);
6442: /* MUTANT (rep_const) */                ynorif1_FlashWrite32(spareAddr,(u32 *)&tmpSpare,sizeof(struct yaffs_spare)/1);
6442: /* MUTANT (rep_const) */                ynorif1_FlashWrite32(spareAddr,(u32 *)&tmpSpare,sizeof(struct yaffs_spare)/-1);
6442: /* MUTANT (rep_const) */                ynorif1_FlashWrite32(spareAddr,(u32 *)&tmpSpare,sizeof(struct yaffs_spare)/((4)+1));
6442: /* MUTANT (rep_const) */                ynorif1_FlashWrite32(spareAddr,(u32 *)&tmpSpare,sizeof(struct yaffs_spare)/((4)-1));
6442: /* MUTANT (negate) */                ynorif(!1_FlashWrite32(spareAddr,(u32 *)&tmpSpare,sizeof(struct yaffs_spare)/4));
6445: /* MUTANT (del_stmt) */ /*                 ynorif1_FlashWrite32(dataAddr,(u32 *)data,dev->param.total_bytes_per_chunk / 4); */ 
6445: /* MUTANT (rep_const) */                ynorif1_FlashWrite32(dataAddr,(u32 *)data,dev->param.total_bytes_per_chunk / 0);
6445: /* MUTANT (rep_const) */                ynorif1_FlashWrite32(dataAddr,(u32 *)data,dev->param.total_bytes_per_chunk / 1);
6445: /* MUTANT (rep_const) */                ynorif1_FlashWrite32(dataAddr,(u32 *)data,dev->param.total_bytes_per_chunk / -1);
6445: /* MUTANT (rep_const) */                ynorif1_FlashWrite32(dataAddr,(u32 *)data,dev->param.total_bytes_per_chunk / ((4)+1));
6445: /* MUTANT (rep_const) */                ynorif1_FlashWrite32(dataAddr,(u32 *)data,dev->param.total_bytes_per_chunk / ((4)-1));
6445: /* MUTANT (negate) */                ynorif(!1_FlashWrite32(dataAddr,(u32 *)data,dev->param.total_bytes_per_chunk / 4));
6448: /* MUTANT (del_stmt) */ /*                 mymemcpy(&tmpSpare,spare,sizeof(struct yaffs_spare)); */ 
6451: /* MUTANT (del_stmt) */ /*                 tmpSpare.page_status = YNOR_PREMARKER; */ 
6452: /* MUTANT (del_stmt) */ /*                 ynorif1_FlashWrite32(spareAddr,(u32 *)&tmpSpare,sizeof(struct yaffs_spare)/4); */ 
6452: /* MUTANT (rep_const) */                ynorif1_FlashWrite32(spareAddr,(u32 *)&tmpSpare,sizeof(struct yaffs_spare)/0);
6452: /* MUTANT (rep_const) */                ynorif1_FlashWrite32(spareAddr,(u32 *)&tmpSpare,sizeof(struct yaffs_spare)/1);
6452: /* MUTANT (rep_const) */                ynorif1_FlashWrite32(spareAddr,(u32 *)&tmpSpare,sizeof(struct yaffs_spare)/-1);
6452: /* MUTANT (rep_const) */                ynorif1_FlashWrite32(spareAddr,(u32 *)&tmpSpare,sizeof(struct yaffs_spare)/((4)+1));
6452: /* MUTANT (rep_const) */                ynorif1_FlashWrite32(spareAddr,(u32 *)&tmpSpare,sizeof(struct yaffs_spare)/((4)-1));
6452: /* MUTANT (negate) */                ynorif(!1_FlashWrite32(spareAddr,(u32 *)&tmpSpare,sizeof(struct yaffs_spare)/4));
6455: /* MUTANT (del_stmt) */ /*                 tmpSpare.page_status = YNOR_POSTMARKER; */ 
6456: /* MUTANT (del_stmt) */ /*                 ynorif1_FlashWrite32(spareAddr,(u32 *)&tmpSpare,sizeof(tmpSpare)/4); */   
6456: /* MUTANT (rep_const) */                ynorif1_FlashWrite32(spareAddr,(u32 *)&tmpSpare,sizeof(tmpSpare)/0);  
6456: /* MUTANT (rep_const) */                ynorif1_FlashWrite32(spareAddr,(u32 *)&tmpSpare,sizeof(tmpSpare)/1);  
6456: /* MUTANT (rep_const) */                ynorif1_FlashWrite32(spareAddr,(u32 *)&tmpSpare,sizeof(tmpSpare)/-1);  
6456: /* MUTANT (rep_const) */                ynorif1_FlashWrite32(spareAddr,(u32 *)&tmpSpare,sizeof(tmpSpare)/((4)+1));  
6456: /* MUTANT (rep_const) */                ynorif1_FlashWrite32(spareAddr,(u32 *)&tmpSpare,sizeof(tmpSpare)/((4)-1));  
6456: /* MUTANT (negate) */                ynorif(!1_FlashWrite32(spareAddr,(u32 *)&tmpSpare,sizeof(tmpSpare)/4));  
6458: /* MUTANT (negate) */        } else if(!(spare)){
6461: /* MUTANT (del_stmt) */ /*                 ynorif1_FlashRead32(spareAddr,(u32 *)&tmpSpare,16/ 4); */ 
6461: /* MUTANT (rep_const) */                ynorif1_FlashRead32(spareAddr,(u32 *)&tmpSpare,0/ 4);
6461: /* MUTANT (rep_const) */                ynorif1_FlashRead32(spareAddr,(u32 *)&tmpSpare,1/ 4);
6461: /* MUTANT (rep_const) */                ynorif1_FlashRead32(spareAddr,(u32 *)&tmpSpare,-1/ 4);
6461: /* MUTANT (rep_const) */                ynorif1_FlashRead32(spareAddr,(u32 *)&tmpSpare,((16)+1)/ 4);
6461: /* MUTANT (rep_const) */                ynorif1_FlashRead32(spareAddr,(u32 *)&tmpSpare,((16)-1)/ 4);
6461: /* MUTANT (rep_const) */                ynorif1_FlashRead32(spareAddr,(u32 *)&tmpSpare,16/ 0);
6461: /* MUTANT (rep_const) */                ynorif1_FlashRead32(spareAddr,(u32 *)&tmpSpare,16/ 1);
6461: /* MUTANT (rep_const) */                ynorif1_FlashRead32(spareAddr,(u32 *)&tmpSpare,16/ -1);
6461: /* MUTANT (rep_const) */                ynorif1_FlashRead32(spareAddr,(u32 *)&tmpSpare,16/ ((4)+1));
6461: /* MUTANT (rep_const) */                ynorif1_FlashRead32(spareAddr,(u32 *)&tmpSpare,16/ ((4)-1));
6461: /* MUTANT (negate) */                ynorif(!1_FlashRead32(spareAddr,(u32 *)&tmpSpare,16/ 4));
6463: /* MUTANT (del_stmt) */ /*                 ynorif1_AndBytes((u8 *)&tmpSpare,(u8 *)spare,sizeof(struct yaffs_spare)); */ 
6463: /* MUTANT (negate) */                ynorif(!1_AndBytes((u8 *)&tmpSpare,(u8 *)spare,sizeof(struct yaffs_spare)));
6465: /* MUTANT (del_stmt) */ /*                 ynorif1_FlashWrite32(spareAddr,(u32 *)&tmpSpare,16/ 4); */ 
6465: /* MUTANT (rep_const) */                ynorif1_FlashWrite32(spareAddr,(u32 *)&tmpSpare,0/ 4);
6465: /* MUTANT (rep_const) */                ynorif1_FlashWrite32(spareAddr,(u32 *)&tmpSpare,1/ 4);
6465: /* MUTANT (rep_const) */                ynorif1_FlashWrite32(spareAddr,(u32 *)&tmpSpare,-1/ 4);
6465: /* MUTANT (rep_const) */                ynorif1_FlashWrite32(spareAddr,(u32 *)&tmpSpare,((16)+1)/ 4);
6465: /* MUTANT (rep_const) */                ynorif1_FlashWrite32(spareAddr,(u32 *)&tmpSpare,((16)-1)/ 4);
6465: /* MUTANT (rep_const) */                ynorif1_FlashWrite32(spareAddr,(u32 *)&tmpSpare,16/ 0);
6465: /* MUTANT (rep_const) */                ynorif1_FlashWrite32(spareAddr,(u32 *)&tmpSpare,16/ 1);
6465: /* MUTANT (rep_const) */                ynorif1_FlashWrite32(spareAddr,(u32 *)&tmpSpare,16/ -1);
6465: /* MUTANT (rep_const) */                ynorif1_FlashWrite32(spareAddr,(u32 *)&tmpSpare,16/ ((4)+1));
6465: /* MUTANT (rep_const) */                ynorif1_FlashWrite32(spareAddr,(u32 *)&tmpSpare,16/ ((4)-1));
6465: /* MUTANT (negate) */                ynorif(!1_FlashWrite32(spareAddr,(u32 *)&tmpSpare,16/ 4));
6468: /* MUTANT (del_stmt) */ /*                 BUG(); */ 
6476: /* MUTANT (negate) */int ynorif(!1_ReadChunkFromNAND(struct yaffs_dev *dev,int nand_chunk, u8 *data, struct yaffs_spare *spare))
6479: /* MUTANT (del_stmt) */ /* 	u32 *dataAddr = Chunk2DataAddr(dev,nand_chunk); */ 
6480: /* MUTANT (del_stmt) */ /* 	u32 *spareAddr = Chunk2SpareAddr(dev,nand_chunk); */ 
6482: /* MUTANT (negate) */	if(!(data))
6484: /* MUTANT (del_stmt) */ /* 		ynorif1_FlashRead32(dataAddr,(u32 *)data,dev->param.total_bytes_per_chunk / 4); */ 
6484: /* MUTANT (rep_const) */		ynorif1_FlashRead32(dataAddr,(u32 *)data,dev->param.total_bytes_per_chunk / 0);
6484: /* MUTANT (rep_const) */		ynorif1_FlashRead32(dataAddr,(u32 *)data,dev->param.total_bytes_per_chunk / 1);
6484: /* MUTANT (rep_const) */		ynorif1_FlashRead32(dataAddr,(u32 *)data,dev->param.total_bytes_per_chunk / -1);
6484: /* MUTANT (rep_const) */		ynorif1_FlashRead32(dataAddr,(u32 *)data,dev->param.total_bytes_per_chunk / ((4)+1));
6484: /* MUTANT (rep_const) */		ynorif1_FlashRead32(dataAddr,(u32 *)data,dev->param.total_bytes_per_chunk / ((4)-1));
6484: /* MUTANT (negate) */		ynorif(!1_FlashRead32(dataAddr,(u32 *)data,dev->param.total_bytes_per_chunk / 4));
6487: /* MUTANT (negate) */        if(!(spare))
6489: /* MUTANT (del_stmt) */ /*                 ynorif1_FlashRead32(spareAddr,(u32 *)spare,16/ 4); */ 
6489: /* MUTANT (rep_const) */                ynorif1_FlashRead32(spareAddr,(u32 *)spare,0/ 4);
6489: /* MUTANT (rep_const) */                ynorif1_FlashRead32(spareAddr,(u32 *)spare,1/ 4);
6489: /* MUTANT (rep_const) */                ynorif1_FlashRead32(spareAddr,(u32 *)spare,-1/ 4);
6489: /* MUTANT (rep_const) */                ynorif1_FlashRead32(spareAddr,(u32 *)spare,((16)+1)/ 4);
6489: /* MUTANT (rep_const) */                ynorif1_FlashRead32(spareAddr,(u32 *)spare,((16)-1)/ 4);
6489: /* MUTANT (rep_const) */                ynorif1_FlashRead32(spareAddr,(u32 *)spare,16/ 0);
6489: /* MUTANT (rep_const) */                ynorif1_FlashRead32(spareAddr,(u32 *)spare,16/ 1);
6489: /* MUTANT (rep_const) */                ynorif1_FlashRead32(spareAddr,(u32 *)spare,16/ -1);
6489: /* MUTANT (rep_const) */                ynorif1_FlashRead32(spareAddr,(u32 *)spare,16/ ((4)+1));
6489: /* MUTANT (rep_const) */                ynorif1_FlashRead32(spareAddr,(u32 *)spare,16/ ((4)-1));
6489: /* MUTANT (negate) */                ynorif(!1_FlashRead32(spareAddr,(u32 *)spare,16/ 4));
6494: /* MUTANT (rep_op) */                if(spare->page_status != YNOR_POSTMARKER)
6494: /* MUTANT (negate) */                if(!(spare->page_status == YNOR_POSTMARKER))
6495: /* MUTANT (rep_const) */                        spare->page_status = 1xFF;
6495: /* MUTANT (rep_const) */                        spare->page_status = -1xFF;
6496: /* MUTANT (rep_op) */		else if(spare->page_status == 0xff &&
6496: /* MUTANT (rep_op) */		else if(spare->page_status != 0xff ||
6496: /* MUTANT (rep_const) */		else if(spare->page_status != 1xff &&
6496: /* MUTANT (rep_const) */		else if(spare->page_status != -1xff &&
6497: /* MUTANT (rep_op) */			(spare->page_status & YNOR_PREMARKER) != 0xff)
6497: /* MUTANT (rep_op) */			(spare->page_status | YNOR_PREMARKER) == 0xff)
6497: /* MUTANT (rep_const) */			(spare->page_status | YNOR_PREMARKER) != 1xff)
6497: /* MUTANT (rep_const) */			(spare->page_status | YNOR_PREMARKER) != -1xff)
6506: /* MUTANT (negate) */static int ynorif(!1_FormatBlock(struct yaffs_dev *dev, int blockNumber))
6508: /* MUTANT (del_stmt) */ /* 	u32 *blockAddr = Block2Addr(dev,blockNumber); */ 
6509: /* MUTANT (del_stmt) */ /* 	u32 *formatAddr = Block2FormatAddr(dev,blockNumber); */ 
6510: /* MUTANT (del_stmt) */ /* 	u32 formatValue = FORMAT_VALUE; */ 
6512: /* MUTANT (del_stmt) */ /* 	ynorif1_FlashEraseBlock(blockAddr); */ 
6512: /* MUTANT (negate) */	ynorif(!1_FlashEraseBlock(blockAddr));
6513: /* MUTANT (del_stmt) */ /* 	ynorif1_FlashWrite32(formatAddr,&formatValue,1); */ 
6513: /* MUTANT (rep_const) */	ynorif1_FlashWrite32(formatAddr,&formatValue,0);
6513: /* MUTANT (rep_const) */	ynorif1_FlashWrite32(formatAddr,&formatValue,-1);
6513: /* MUTANT (rep_const) */	ynorif1_FlashWrite32(formatAddr,&formatValue,((1)+1));
6513: /* MUTANT (negate) */	ynorif(!1_FlashWrite32(formatAddr,&formatValue,1));
6515: /* MUTANT (del_stmt) */ /* 	return YAFFS_OK; */ 
6518: /* MUTANT (negate) */static int ynorif(!1_UnformatBlock(struct yaffs_dev *dev, int blockNumber))
6520: /* MUTANT (del_stmt) */ /* 	u32 *formatAddr = Block2FormatAddr(dev,blockNumber); */ 
6521: /* MUTANT (del_stmt) */ /* 	u32 formatValue = 0; */ 
6521: /* MUTANT (rep_const) */	u32 formatValue = 1;
6521: /* MUTANT (rep_const) */	u32 formatValue = -1;
6523: /* MUTANT (del_stmt) */ /* 	ynorif1_FlashWrite32(formatAddr,&formatValue,1); */ 
6523: /* MUTANT (rep_const) */	ynorif1_FlashWrite32(formatAddr,&formatValue,0);
6523: /* MUTANT (rep_const) */	ynorif1_FlashWrite32(formatAddr,&formatValue,-1);
6523: /* MUTANT (rep_const) */	ynorif1_FlashWrite32(formatAddr,&formatValue,((1)+1));
6523: /* MUTANT (negate) */	ynorif(!1_FlashWrite32(formatAddr,&formatValue,1));
6525: /* MUTANT (del_stmt) */ /* 	return YAFFS_OK; */ 
6528: /* MUTANT (negate) */static int ynorif(!1_IsBlockFormatted(struct yaffs_dev *dev, int blockNumber))
6530: /* MUTANT (del_stmt) */ /* 	u32 *formatAddr = Block2FormatAddr(dev,blockNumber); */ 
6531: /* MUTANT (del_stmt) */ /* 	u32 formatValue; */ 
6534: /* MUTANT (del_stmt) */ /* 	ynorif1_FlashRead32(formatAddr,&formatValue,1); */ 
6534: /* MUTANT (rep_const) */	ynorif1_FlashRead32(formatAddr,&formatValue,0);
6534: /* MUTANT (rep_const) */	ynorif1_FlashRead32(formatAddr,&formatValue,-1);
6534: /* MUTANT (rep_const) */	ynorif1_FlashRead32(formatAddr,&formatValue,((1)+1));
6534: /* MUTANT (negate) */	ynorif(!1_FlashRead32(formatAddr,&formatValue,1));
6536: /* MUTANT (del_stmt) */ /* 	return (formatValue == FORMAT_VALUE); */ 
6536: /* MUTANT (rep_op) */	return (formatValue != FORMAT_VALUE);
6539: /* MUTANT (negate) */int ynorif(!1_EraseBlockInNAND(struct yaffs_dev *dev, int blockNumber))
6542: /* MUTANT (rep_op) */	if(blockNumber <= 0 || blockNumber >= BLOCKS_IN_DEVICE)
6542: /* MUTANT (rep_op) */	if(blockNumber > 0 || blockNumber >= BLOCKS_IN_DEVICE)
6542: /* MUTANT (rep_op) */	if(blockNumber >= 0 || blockNumber >= BLOCKS_IN_DEVICE)
6542: /* MUTANT (rep_op) */	if(blockNumber == 0 || blockNumber >= BLOCKS_IN_DEVICE)
6542: /* MUTANT (rep_op) */	if(blockNumber != 0 || blockNumber >= BLOCKS_IN_DEVICE)
6542: /* MUTANT (rep_op) */	if(blockNumber < 0 && blockNumber >= BLOCKS_IN_DEVICE)
6542: /* MUTANT (rep_op) */	if(blockNumber < 0 || blockNumber <= BLOCKS_IN_DEVICE)
6542: /* MUTANT (rep_op) */	if(blockNumber < 0 || blockNumber < BLOCKS_IN_DEVICE)
6542: /* MUTANT (rep_op) */	if(blockNumber < 0 || blockNumber > BLOCKS_IN_DEVICE)
6542: /* MUTANT (rep_op) */	if(blockNumber < 0 || blockNumber == BLOCKS_IN_DEVICE)
6542: /* MUTANT (rep_op) */	if(blockNumber < 0 || blockNumber != BLOCKS_IN_DEVICE)
6542: /* MUTANT (rep_const) */	if(blockNumber < 1 || blockNumber >= BLOCKS_IN_DEVICE)
6542: /* MUTANT (rep_const) */	if(blockNumber < -1 || blockNumber >= BLOCKS_IN_DEVICE)
6542: /* MUTANT (negate) */	if(!(blockNumber < 0 || blockNumber >= BLOCKS_IN_DEVICE))
6547: /* MUTANT (del_stmt) */ /* 		return YAFFS_FAIL; */ 
6551: /* MUTANT (del_stmt) */ /* 		ynorif1_UnformatBlock(dev,blockNumber); */ 
6551: /* MUTANT (negate) */		ynorif(!1_UnformatBlock(dev,blockNumber));
6552: /* MUTANT (del_stmt) */ /* 		ynorif1_FormatBlock(dev,blockNumber); */ 
6552: /* MUTANT (negate) */		ynorif(!1_FormatBlock(dev,blockNumber));
6553: /* MUTANT (del_stmt) */ /* 		return YAFFS_OK; */ 
6558: /* MUTANT (negate) */int ynorif(!1_InitialiseNAND(struct yaffs_dev *dev))
6560: /* MUTANT (del_stmt) */ /* 	int i; */ 
6562: /* MUTANT (del_stmt) */ /* 	ynorif1_FlashInit(); */ 
6562: /* MUTANT (negate) */	ynorif(!1_FlashInit());
6564: /* MUTANT (rep_op) */	for(i = dev->param.start_block; i < dev->param.end_block; i++){
6564: /* MUTANT (rep_op) */	for(i = dev->param.start_block; i > dev->param.end_block; i++){
6564: /* MUTANT (rep_op) */	for(i = dev->param.start_block; i >= dev->param.end_block; i++){
6564: /* MUTANT (rep_op) */	for(i = dev->param.start_block; i == dev->param.end_block; i++){
6564: /* MUTANT (rep_op) */	for(i = dev->param.start_block; i != dev->param.end_block; i++){
6564: /* MUTANT (rep_op) */	for(i = dev->param.start_block; i <= dev->param.end_block; i--){
6565: /* MUTANT (negate) */		if(!(!ynorif1_IsBlockFormatted(dev,i))){
6566: /* MUTANT (del_stmt) */ /* 			ynorif1_FormatBlock(dev,i); */ 
6566: /* MUTANT (negate) */			ynorif(!1_FormatBlock(dev,i));
6572: /* MUTANT (negate) */int ynorif(!1_Deinitialise_flash_fn(struct yaffs_dev *dev))
6574: /* MUTANT (del_stmt) */ /* 	dev=dev; */ 	
6575: /* MUTANT (del_stmt) */ /* 	ynorif1_FlashDeinit(); */ 
6575: /* MUTANT (negate) */	ynorif(!1_FlashDeinit());
6577: /* MUTANT (del_stmt) */ /* 	return YAFFS_OK; */ 
6605: /* MUTANT (del_stmt) */ /* 	struct yaffs_ext_tags tags; */ 
6606: /* MUTANT (del_stmt) */ /* 	int blk; */ 
6607: /* MUTANT (del_stmt) */ /* 	int result; */ 
6608: /* MUTANT (del_stmt) */ /* 	int chunk; */ 
6609: /* MUTANT (del_stmt) */ /* 	int c; */ 
6610: /* MUTANT (del_stmt) */ /* 	int deleted; */ 
6611: /* MUTANT (del_stmt) */ /* 	enum yaffs_block_state state; */ 
6612: /* MUTANT (del_stmt) */ /* 	LIST_HEAD(hard_list); */ 
6613: /* MUTANT (del_stmt) */ /* 	struct yaffs_block_info *bi; */ 
6614: /* MUTANT (del_stmt) */ /* 	u32 seq_number; */ 
6615: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj_hdr *oh; */ 
6616: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *in; */ 
6617: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *parent; */ 
6618: /* MUTANT (del_stmt) */ /* 	int alloc_failed = 0; */ 
6618: /* MUTANT (rep_const) */	int alloc_failed = 1;
6618: /* MUTANT (rep_const) */	int alloc_failed = -1;
6619: /* MUTANT (del_stmt) */ /* 	struct yaffs_shadow_fixer *shadow_fixers = NULL; */ 
6620: /* MUTANT (del_stmt) */ /* 	u8 *chunk_data; */ 
6626: /* MUTANT (del_stmt) */ /* 	chunk_data = yaffs_get_temp_buffer(dev); */ 
6628: /* MUTANT (del_stmt) */ /* 	dev->seq_number = YAFFS_LOWEST_SEQUENCE_NUMBER; */ 
6631: /* MUTANT (del_stmt) */ /* 	bi = dev->block_info; */ 
6632: /* MUTANT (rep_op) */	for (blk = dev->internal_start_block; blk < dev->internal_end_block;
6632: /* MUTANT (rep_op) */	for (blk = dev->internal_start_block; blk > dev->internal_end_block;
6632: /* MUTANT (rep_op) */	for (blk = dev->internal_start_block; blk >= dev->internal_end_block;
6632: /* MUTANT (rep_op) */	for (blk = dev->internal_start_block; blk == dev->internal_end_block;
6632: /* MUTANT (rep_op) */	for (blk = dev->internal_start_block; blk != dev->internal_end_block;
6633: /* MUTANT (rep_op) */	     blk--) {
6634: /* MUTANT (del_stmt) */ /* 		yaffs_clear_chunk_bits(dev, blk); */ 
6635: /* MUTANT (del_stmt) */ /* 		bi->pages_in_use = 0; */ 
6635: /* MUTANT (rep_const) */		bi->pages_in_use = 1;
6635: /* MUTANT (rep_const) */		bi->pages_in_use = -1;
6636: /* MUTANT (del_stmt) */ /* 		bi->soft_del_pages = 0; */ 
6636: /* MUTANT (rep_const) */		bi->soft_del_pages = 1;
6636: /* MUTANT (rep_const) */		bi->soft_del_pages = -1;
6638: /* MUTANT (del_stmt) */ /* 		yaffs_query_init_block_state(dev, blk, &state, &seq_number); */ 
6640: /* MUTANT (del_stmt) */ /* 		bi->block_state = state; */ 
6641: /* MUTANT (del_stmt) */ /* 		bi->seq_number = seq_number; */ 
6643: /* MUTANT (rep_op) */		if (bi->seq_number != YAFFS_SEQUENCE_BAD_BLOCK)
6643: /* MUTANT (negate) */		if(! (bi->seq_number == YAFFS_SEQUENCE_BAD_BLOCK))
6650: /* MUTANT (rep_op) */		if (state != YAFFS_BLOCK_STATE_DEAD) {
6650: /* MUTANT (negate) */		if(! (state == YAFFS_BLOCK_STATE_DEAD)) {
6653: /* MUTANT (rep_op) */		} else if (state != YAFFS_BLOCK_STATE_EMPTY) {
6653: /* MUTANT (negate) */		} else if(! (state == YAFFS_BLOCK_STATE_EMPTY)) {
6654: /* MUTANT (del_stmt) */ /* 			yaffs_trace(YAFFS_TRACE_SCAN_DEBUG, "Block empty "); */ 
6655: /* MUTANT (del_stmt) */ /* 			dev->n_erased_blocks++; */ 
6655: /* MUTANT (rep_op) */			dev->n_erased_blocks--;
6656: /* MUTANT (del_stmt) */ /* 			dev->n_free_chunks += dev->param.chunks_per_block; */ 
6656: /* MUTANT (rep_op) */			dev->n_free_chunks -= dev->param.chunks_per_block;
6656: /* MUTANT (rep_op) */			dev->n_free_chunks *= dev->param.chunks_per_block;
6656: /* MUTANT (rep_op) */			dev->n_free_chunks %= dev->param.chunks_per_block;
6658: /* MUTANT (rep_op) */		bi--;
6663: /* MUTANT (del_stmt) */ /* 	     !alloc_failed && blk <= dev->internal_end_block; */  blk++) {
6663: /* MUTANT (rep_op) */	     !alloc_failed || blk <= dev->internal_end_block; blk++) {
6663: /* MUTANT (rep_op) */	     !alloc_failed && blk < dev->internal_end_block; blk++) {
6663: /* MUTANT (rep_op) */	     !alloc_failed && blk > dev->internal_end_block; blk++) {
6663: /* MUTANT (rep_op) */	     !alloc_failed && blk >= dev->internal_end_block; blk++) {
6663: /* MUTANT (rep_op) */	     !alloc_failed && blk == dev->internal_end_block; blk++) {
6663: /* MUTANT (rep_op) */	     !alloc_failed && blk != dev->internal_end_block; blk++) {
6663: /* MUTANT (rep_op) */	     !alloc_failed && blk <= dev->internal_end_block; blk--) {
6665: /* MUTANT (del_stmt) */ /* 		cond_resched(); */ 
6667: /* MUTANT (del_stmt) */ /* 		bi = yaffs_get_block_info(dev, blk); */ 
6668: /* MUTANT (del_stmt) */ /* 		state = bi->block_state; */ 
6670: /* MUTANT (del_stmt) */ /* 		deleted = 0; */ 
6670: /* MUTANT (rep_const) */		deleted = 1;
6670: /* MUTANT (rep_const) */		deleted = -1;
6673: /* MUTANT (rep_const) */		for (c = 1;
6673: /* MUTANT (rep_const) */		for (c = -1;
6674: /* MUTANT (rep_op) */			!alloc_failed || c < dev->param.chunks_per_block &&
6674: /* MUTANT (rep_op) */			!alloc_failed && c <= dev->param.chunks_per_block &&
6674: /* MUTANT (rep_op) */			!alloc_failed && c > dev->param.chunks_per_block &&
6674: /* MUTANT (rep_op) */			!alloc_failed && c >= dev->param.chunks_per_block &&
6674: /* MUTANT (rep_op) */			!alloc_failed && c == dev->param.chunks_per_block &&
6674: /* MUTANT (rep_op) */			!alloc_failed && c != dev->param.chunks_per_block &&
6674: /* MUTANT (rep_op) */			!alloc_failed && c < dev->param.chunks_per_block ||
6675: /* MUTANT (rep_op) */			state != YAFFS_BLOCK_STATE_NEEDS_SCAN; c++) {
6675: /* MUTANT (rep_op) */			state == YAFFS_BLOCK_STATE_NEEDS_SCAN; c--) {
6677: /* MUTANT (del_stmt) */ /* 			chunk = blk * dev->param.chunks_per_block + c; */ 
6677: /* MUTANT (rep_op) */			chunk = blk * dev->param.chunks_per_block - c;
6677: /* MUTANT (rep_op) */			chunk = blk * dev->param.chunks_per_block * c;
6677: /* MUTANT (rep_op) */			chunk = blk * dev->param.chunks_per_block % c;
6684: /* MUTANT (rep_op) */			if (tags.ecc_result != YAFFS_ECC_RESULT_UNFIXED ||
6684: /* MUTANT (rep_op) */			if (tags.ecc_result == YAFFS_ECC_RESULT_UNFIXED &&
6689: /* MUTANT (del_stmt) */ /* 				deleted++; */ 
6689: /* MUTANT (rep_op) */				deleted--;
6690: /* MUTANT (del_stmt) */ /* 				dev->n_free_chunks++; */ 
6690: /* MUTANT (rep_op) */				dev->n_free_chunks--;
6691: /* MUTANT (negate) */			} else if(! (!tags.chunk_used)) {
6697: /* MUTANT (rep_op) */				if (c != 0) {
6697: /* MUTANT (rep_const) */				if (c == 1) {
6697: /* MUTANT (rep_const) */				if (c == -1) {
6697: /* MUTANT (negate) */				if(! (c == 0)) {
6700: /* MUTANT (del_stmt) */ /* 					state = YAFFS_BLOCK_STATE_EMPTY; */ 
6701: /* MUTANT (del_stmt) */ /* 					dev->n_erased_blocks++; */ 
6701: /* MUTANT (rep_op) */					dev->n_erased_blocks--;
6707: /* MUTANT (del_stmt) */ /* 					state = YAFFS_BLOCK_STATE_ALLOCATING; */ 
6708: /* MUTANT (del_stmt) */ /* 					dev->alloc_block = blk; */ 
6709: /* MUTANT (del_stmt) */ /* 					dev->alloc_page = c; */ 
6710: /* MUTANT (del_stmt) */ /* 					dev->alloc_block_finder = blk; */ 
6714: /* MUTANT (rep_op) */				dev->n_free_chunks -=
6714: /* MUTANT (rep_op) */				dev->n_free_chunks *=
6714: /* MUTANT (rep_op) */				dev->n_free_chunks %=
6716: /* MUTANT (rep_op) */			} else if (tags.chunk_id <= 0) {
6716: /* MUTANT (rep_op) */			} else if (tags.chunk_id < 0) {
6716: /* MUTANT (rep_op) */			} else if (tags.chunk_id >= 0) {
6716: /* MUTANT (rep_op) */			} else if (tags.chunk_id == 0) {
6716: /* MUTANT (rep_op) */			} else if (tags.chunk_id != 0) {
6716: /* MUTANT (rep_const) */			} else if (tags.chunk_id > 1) {
6716: /* MUTANT (rep_const) */			} else if (tags.chunk_id > -1) {
6716: /* MUTANT (negate) */			} else if(! (tags.chunk_id > 0)) {
6718: /* MUTANT (del_stmt) */ /* 				unsigned int endpos; */ 
6720: /* MUTANT (del_stmt) */ /* 				yaffs_set_chunk_bit(dev, blk, c); */ 
6721: /* MUTANT (del_stmt) */ /* 				bi->pages_in_use++; */ 
6721: /* MUTANT (rep_op) */				bi->pages_in_use--;
6730: /* MUTANT (negate) */				if(! (!in))
6731: /* MUTANT (rep_const) */					alloc_failed = 0;
6731: /* MUTANT (rep_const) */					alloc_failed = -1;
6731: /* MUTANT (rep_const) */					alloc_failed = ((1)+1);
6733: /* MUTANT (negate) */				if(! (in)) {
6735: /* MUTANT (rep_const) */					    (in, tags.chunk_id, chunk, 0))
6735: /* MUTANT (rep_const) */					    (in, tags.chunk_id, chunk, -1))
6735: /* MUTANT (rep_const) */					    (in, tags.chunk_id, chunk, ((1)+1)))
6736: /* MUTANT (rep_const) */						alloc_failed = 0;
6736: /* MUTANT (rep_const) */						alloc_failed = -1;
6736: /* MUTANT (rep_const) */						alloc_failed = ((1)+1);
6740: /* MUTANT (rep_const) */				    (tags.chunk_id - 0) *
6740: /* MUTANT (rep_const) */				    (tags.chunk_id - -1) *
6740: /* MUTANT (rep_const) */				    (tags.chunk_id - ((1)+1)) *
6741: /* MUTANT (rep_op) */				    dev->data_bytes_per_chunk -
6741: /* MUTANT (rep_op) */				    dev->data_bytes_per_chunk *
6741: /* MUTANT (rep_op) */				    dev->data_bytes_per_chunk %
6743: /* MUTANT (rep_op) */				if (in ||
6744: /* MUTANT (rep_op) */				    in->variant_type !=
6745: /* MUTANT (rep_op) */				     YAFFS_OBJECT_TYPE_FILE ||
6746: /* MUTANT (rep_op) */				    in->variant.file_variant.scanned_size <=
6746: /* MUTANT (rep_op) */				    in->variant.file_variant.scanned_size >
6746: /* MUTANT (rep_op) */				    in->variant.file_variant.scanned_size >=
6746: /* MUTANT (rep_op) */				    in->variant.file_variant.scanned_size ==
6746: /* MUTANT (rep_op) */				    in->variant.file_variant.scanned_size !=
6750: /* MUTANT (negate) */					if(! (!dev->param.use_header_file_size)) {
6762: /* MUTANT (del_stmt) */ /* 				yaffs_set_chunk_bit(dev, blk, c); */ 
6763: /* MUTANT (del_stmt) */ /* 				bi->pages_in_use++; */ 
6763: /* MUTANT (rep_op) */				bi->pages_in_use--;
6769: /* MUTANT (del_stmt) */ /* 				oh = (struct yaffs_obj_hdr *)chunk_data; */ 
6771: /* MUTANT (del_stmt) */ /* 				in = yaffs_find_by_number(dev, tags.obj_id); */ 
6772: /* MUTANT (rep_op) */				if (in || in->variant_type != oh->type) {
6772: /* MUTANT (rep_op) */				if (in && in->variant_type == oh->type) {
6772: /* MUTANT (negate) */				if(! (in && in->variant_type != oh->type)) {
6780: /* MUTANT (del_stmt) */ /* 					yaffs_del_obj(in); */ 
6781: /* MUTANT (del_stmt) */ /* 					in = NULL; */ 
6788: /* MUTANT (negate) */				if(! (!in))
6789: /* MUTANT (rep_const) */					alloc_failed = 0;
6789: /* MUTANT (rep_const) */					alloc_failed = -1;
6789: /* MUTANT (rep_const) */					alloc_failed = ((1)+1);
6791: /* MUTANT (rep_op) */				if (in || oh->shadows_obj > 0) {
6791: /* MUTANT (rep_op) */				if (in && oh->shadows_obj <= 0) {
6791: /* MUTANT (rep_op) */				if (in && oh->shadows_obj < 0) {
6791: /* MUTANT (rep_op) */				if (in && oh->shadows_obj >= 0) {
6791: /* MUTANT (rep_op) */				if (in && oh->shadows_obj == 0) {
6791: /* MUTANT (rep_op) */				if (in && oh->shadows_obj != 0) {
6791: /* MUTANT (rep_const) */				if (in && oh->shadows_obj > 1) {
6791: /* MUTANT (rep_const) */				if (in && oh->shadows_obj > -1) {
6791: /* MUTANT (negate) */				if(! (in && oh->shadows_obj > 0)) {
6793: /* MUTANT (del_stmt) */ /* 					struct yaffs_shadow_fixer *fixer; */ 
6798: /* MUTANT (negate) */					if(! (fixer)) {
6799: /* MUTANT (del_stmt) */ /* 						fixer->next = shadow_fixers; */ 
6800: /* MUTANT (del_stmt) */ /* 						shadow_fixers = fixer; */ 
6801: /* MUTANT (del_stmt) */ /* 						fixer->obj_id = tags.obj_id; */ 
6813: /* MUTANT (rep_op) */				if (in || in->valid) {
6813: /* MUTANT (negate) */				if(! (in && in->valid)) {
6818: /* MUTANT (del_stmt) */ /* 					unsigned existing_serial = in->serial; */ 
6822: /* MUTANT (rep_op) */					if (((existing_serial - 1) & 3) ==
6822: /* MUTANT (rep_op) */					if (((existing_serial * 1) & 3) ==
6822: /* MUTANT (rep_op) */					if (((existing_serial % 1) & 3) ==
6822: /* MUTANT (rep_op) */					if (((existing_serial + 1) & 3) !=
6822: /* MUTANT (rep_const) */					if (((existing_serial + 0) & 3) ==
6822: /* MUTANT (rep_const) */					if (((existing_serial + -1) & 3) ==
6822: /* MUTANT (rep_const) */					if (((existing_serial + ((1)+1)) & 3) ==
6822: /* MUTANT (rep_const) */					if (((existing_serial + 1) & 0) ==
6822: /* MUTANT (rep_const) */					if (((existing_serial + 1) & 1) ==
6822: /* MUTANT (rep_const) */					if (((existing_serial + 1) & -1) ==
6822: /* MUTANT (rep_const) */					if (((existing_serial + 1) & ((3)+1)) ==
6822: /* MUTANT (rep_const) */					if (((existing_serial + 1) & ((3)-1)) ==
6828: /* MUTANT (rep_const) */								0, __LINE__);
6828: /* MUTANT (rep_const) */								-1, __LINE__);
6828: /* MUTANT (rep_const) */								((1)+1), __LINE__);
6829: /* MUTANT (del_stmt) */ /* 						in->valid = 0; */ 
6829: /* MUTANT (rep_const) */						in->valid = 1;
6829: /* MUTANT (rep_const) */						in->valid = -1;
6833: /* MUTANT (rep_const) */						yaffs_chunk_del(dev, chunk, 0,
6833: /* MUTANT (rep_const) */						yaffs_chunk_del(dev, chunk, -1,
6833: /* MUTANT (rep_const) */						yaffs_chunk_del(dev, chunk, ((1)+1),
6838: /* MUTANT (rep_op) */				if (in || !in->valid &&
6838: /* MUTANT (rep_op) */				if (in && !in->valid ||
6839: /* MUTANT (rep_op) */				    (tags.obj_id != YAFFS_OBJECTID_ROOT ||
6839: /* MUTANT (rep_op) */				    (tags.obj_id == YAFFS_OBJECTID_ROOT &&
6840: /* MUTANT (rep_op) */				     tags.obj_id !=
6844: /* MUTANT (del_stmt) */ /* 					in->valid = 1; */ 
6844: /* MUTANT (rep_const) */					in->valid = 0;
6844: /* MUTANT (rep_const) */					in->valid = -1;
6844: /* MUTANT (rep_const) */					in->valid = ((1)+1);
6845: /* MUTANT (del_stmt) */ /* 					in->variant_type = oh->type; */ 
6847: /* MUTANT (del_stmt) */ /* 					in->yst_mode = oh->yst_mode; */ 
6848: /* MUTANT (del_stmt) */ /* 					yaffs_load_attribs(in, oh); */ 
6849: /* MUTANT (del_stmt) */ /* 					in->hdr_chunk = chunk; */ 
6850: /* MUTANT (del_stmt) */ /* 					in->serial = tags.serial_number; */ 
6852: /* MUTANT (rep_op) */				} else if (in || !in->valid) {
6852: /* MUTANT (negate) */				} else if(! (in && !in->valid)) {
6855: /* MUTANT (del_stmt) */ /* 					in->valid = 1; */ 
6855: /* MUTANT (rep_const) */					in->valid = 0;
6855: /* MUTANT (rep_const) */					in->valid = -1;
6855: /* MUTANT (rep_const) */					in->valid = ((1)+1);
6856: /* MUTANT (del_stmt) */ /* 					in->variant_type = oh->type; */ 
6858: /* MUTANT (del_stmt) */ /* 					in->yst_mode = oh->yst_mode; */ 
6859: /* MUTANT (del_stmt) */ /* 					yaffs_load_attribs(in, oh); */ 
6860: /* MUTANT (del_stmt) */ /* 					in->hdr_chunk = chunk; */ 
6861: /* MUTANT (del_stmt) */ /* 					in->serial = tags.serial_number; */ 
6863: /* MUTANT (del_stmt) */ /* 					yaffs_set_obj_name_from_oh(in, oh); */ 
6864: /* MUTANT (del_stmt) */ /* 					in->dirty = 0; */ 
6864: /* MUTANT (rep_const) */					in->dirty = 1;
6864: /* MUTANT (rep_const) */					in->dirty = -1;
6874: /* MUTANT (negate) */					if(! (!parent))
6875: /* MUTANT (rep_const) */						alloc_failed = 0;
6875: /* MUTANT (rep_const) */						alloc_failed = -1;
6875: /* MUTANT (rep_const) */						alloc_failed = ((1)+1);
6876: /* MUTANT (rep_op) */					if (parent || parent->variant_type ==
6876: /* MUTANT (rep_op) */					if (parent && parent->variant_type !=
6884: /* MUTANT (rep_op) */					} else if (!parent &&
6885: /* MUTANT (rep_op) */						parent->variant_type ==
6895: /* MUTANT (del_stmt) */ /* 						parent = dev->lost_n_found; */ 
6912: /* MUTANT (del_stmt) */ /* 						break; */ 
6919: /* MUTANT (del_stmt) */ /* 						break; */ 
6932: /* MUTANT (rep_const) */							alloc_failed = 0;
6932: /* MUTANT (rep_const) */							alloc_failed = -1;
6932: /* MUTANT (rep_const) */							alloc_failed = ((1)+1);
6933: /* MUTANT (del_stmt) */ /* 						break; */ 
6939: /* MUTANT (rep_op) */		if (state != YAFFS_BLOCK_STATE_NEEDS_SCAN) {
6939: /* MUTANT (negate) */		if(! (state == YAFFS_BLOCK_STATE_NEEDS_SCAN)) {
6942: /* MUTANT (del_stmt) */ /* 			state = YAFFS_BLOCK_STATE_FULL; */ 
6945: /* MUTANT (rep_op) */		if (state != YAFFS_BLOCK_STATE_ALLOCATING) {
6945: /* MUTANT (negate) */		if(! (state == YAFFS_BLOCK_STATE_ALLOCATING)) {
6948: /* MUTANT (del_stmt) */ /* 			state = YAFFS_BLOCK_STATE_FULL; */ 
6949: /* MUTANT (del_stmt) */ /* 			dev->alloc_block = -1; */ 
6949: /* MUTANT (rep_const) */			dev->alloc_block = 0;
6949: /* MUTANT (rep_const) */			dev->alloc_block = 1;
6949: /* MUTANT (rep_const) */			dev->alloc_block = ((-1)+1);
6949: /* MUTANT (rep_const) */			dev->alloc_block = ((-1)-1);
6955: /* MUTANT (rep_op) */		if (bi->pages_in_use != 0 &&
6955: /* MUTANT (rep_op) */		if (bi->pages_in_use == 0 ||
6955: /* MUTANT (rep_const) */		if (bi->pages_in_use == 1 &&
6955: /* MUTANT (rep_const) */		if (bi->pages_in_use == -1 &&
6956: /* MUTANT (rep_op) */		    !bi->has_shrink_hdr ||
6957: /* MUTANT (rep_op) */		    bi->block_state != YAFFS_BLOCK_STATE_FULL)
6974: /* MUTANT (del_stmt) */ /* 		struct yaffs_shadow_fixer *fixer; */ 
6975: /* MUTANT (del_stmt) */ /* 		struct yaffs_obj *obj; */ 
6977: /* MUTANT (negate) */		while(! (shadow_fixers)) {
6978: /* MUTANT (del_stmt) */ /* 			fixer = shadow_fixers; */ 
6979: /* MUTANT (del_stmt) */ /* 			shadow_fixers = fixer->next; */ 
6984: /* MUTANT (del_stmt) */ /* 			obj = yaffs_find_by_number(dev, fixer->shadowed_id); */ 
6985: /* MUTANT (negate) */			if(! (obj))
6988: /* MUTANT (del_stmt) */ /* 			obj = yaffs_find_by_number(dev, fixer->obj_id); */ 
6990: /* MUTANT (negate) */			if(! (obj))
6991: /* MUTANT (rep_const) */				yaffs_update_oh(obj, NULL, 0, 0, 0, NULL);
6991: /* MUTANT (rep_const) */				yaffs_update_oh(obj, NULL, -1, 0, 0, NULL);
6991: /* MUTANT (rep_const) */				yaffs_update_oh(obj, NULL, ((1)+1), 0, 0, NULL);
6991: /* MUTANT (rep_const) */				yaffs_update_oh(obj, NULL, 1, 1, 0, NULL);
6991: /* MUTANT (rep_const) */				yaffs_update_oh(obj, NULL, 1, -1, 0, NULL);
6991: /* MUTANT (rep_const) */				yaffs_update_oh(obj, NULL, 1, 0, 1, NULL);
6991: /* MUTANT (rep_const) */				yaffs_update_oh(obj, NULL, 1, 0, -1, NULL);
6993: /* MUTANT (del_stmt) */ /* 			kfree(fixer); */ 
6999: /* MUTANT (negate) */	if(! (alloc_failed))
7002: /* MUTANT (del_stmt) */ /* 	yaffs_trace(YAFFS_TRACE_SCAN, "yaffs1_scan ends"); */ 
7004: /* MUTANT (del_stmt) */ /* 	return YAFFS_OK; */ 
7041: /* MUTANT (rep_op) */	YAFFS_TRACE_SCAN &  
7042: /* MUTANT (rep_op) */	YAFFS_TRACE_GC &
7043: /* MUTANT (rep_op) */	YAFFS_TRACE_ERASE & 
7044: /* MUTANT (rep_op) */	YAFFS_TRACE_ERROR & 
7045: /* MUTANT (rep_op) */	YAFFS_TRACE_TRACING & 
7046: /* MUTANT (rep_op) */	YAFFS_TRACE_ALLOCATE & 
7047: /* MUTANT (rep_op) */	YAFFS_TRACE_BAD_BLOCKS &
7048: /* MUTANT (rep_op) */	YAFFS_TRACE_VERIFY & 
7050: /* MUTANT (rep_const) */	1;
7050: /* MUTANT (rep_const) */	-1;
7063: /* MUTANT (del_stmt) */ /* struct yaffs_dev m18_1Dev; */ 
7069: /* MUTANT (del_stmt) */ /* 	yaffsfs_OSInitialisation(); */ 
7070: #if 1 /* MUTANT (rep_const) */
7070: #if -1 /* MUTANT (rep_const) */
7073: /* MUTANT (rep_const) */	mymemset(&ram1Dev,1,sizeof(ram1Dev));
7073: /* MUTANT (rep_const) */	mymemset(&ram1Dev,-1,sizeof(ram1Dev));
7074: /* MUTANT (del_stmt) */ /* 	ram1Dev.param.name = "ram1"; */ 
7075: /* MUTANT (del_stmt) */ /* 	ram1Dev.param.total_bytes_per_chunk = 512; */ 
7075: /* MUTANT (rep_const) */	ram1Dev.param.total_bytes_per_chunk = 0;
7075: /* MUTANT (rep_const) */	ram1Dev.param.total_bytes_per_chunk = 1;
7075: /* MUTANT (rep_const) */	ram1Dev.param.total_bytes_per_chunk = -1;
7075: /* MUTANT (rep_const) */	ram1Dev.param.total_bytes_per_chunk = ((512)+1);
7075: /* MUTANT (rep_const) */	ram1Dev.param.total_bytes_per_chunk = ((512)-1);
7076: /* MUTANT (del_stmt) */ /* 	ram1Dev.param.chunks_per_block = 32; */ 
7076: /* MUTANT (rep_const) */	ram1Dev.param.chunks_per_block = 0;
7076: /* MUTANT (rep_const) */	ram1Dev.param.chunks_per_block = 1;
7076: /* MUTANT (rep_const) */	ram1Dev.param.chunks_per_block = -1;
7076: /* MUTANT (rep_const) */	ram1Dev.param.chunks_per_block = ((32)+1);
7076: /* MUTANT (rep_const) */	ram1Dev.param.chunks_per_block = ((32)-1);
7077: /* MUTANT (del_stmt) */ /* 	ram1Dev.param.n_reserved_blocks = 2; */  // Set this smaller for RAM
7077: /* MUTANT (rep_const) */	ram1Dev.param.n_reserved_blocks = 0; // Set this smaller for RAM
7077: /* MUTANT (rep_const) */	ram1Dev.param.n_reserved_blocks = 1; // Set this smaller for RAM
7077: /* MUTANT (rep_const) */	ram1Dev.param.n_reserved_blocks = -1; // Set this smaller for RAM
7077: /* MUTANT (rep_const) */	ram1Dev.param.n_reserved_blocks = ((2)+1); // Set this smaller for RAM
7077: /* MUTANT (rep_const) */	ram1Dev.param.n_reserved_blocks = ((2)-1); // Set this smaller for RAM
7078: /* MUTANT (del_stmt) */ /* 	ram1Dev.param.start_block = 0; */  // Can use block 0
7078: /* MUTANT (rep_const) */	ram1Dev.param.start_block = 1; // Can use block 0
7078: /* MUTANT (rep_const) */	ram1Dev.param.start_block = -1; // Can use block 0
7079: /* MUTANT (del_stmt) */ /* 	ram1Dev.param.end_block = 127; */  // Last block in 2MB.	
7079: /* MUTANT (rep_const) */	ram1Dev.param.end_block = 0; // Last block in 2MB.	
7079: /* MUTANT (rep_const) */	ram1Dev.param.end_block = 1; // Last block in 2MB.	
7079: /* MUTANT (rep_const) */	ram1Dev.param.end_block = -1; // Last block in 2MB.	
7079: /* MUTANT (rep_const) */	ram1Dev.param.end_block = ((127)+1); // Last block in 2MB.	
7079: /* MUTANT (rep_const) */	ram1Dev.param.end_block = ((127)-1); // Last block in 2MB.	
7081: /* MUTANT (del_stmt) */ /* 	ram1Dev.param.n_caches = 0; */ 	// Disable caching on this device.
7081: /* MUTANT (rep_const) */	ram1Dev.param.n_caches = 1;	// Disable caching on this device.
7081: /* MUTANT (rep_const) */	ram1Dev.param.n_caches = -1;	// Disable caching on this device.
7082: /* MUTANT (del_stmt) */ /* 	ram1Dev.driver_context = (void *) 0; */ 	// Used to identify the device in fstat.
7082: /* MUTANT (rep_const) */	ram1Dev.driver_context = (void *) 1;	// Used to identify the device in fstat.
7082: /* MUTANT (rep_const) */	ram1Dev.driver_context = (void *) -1;	// Used to identify the device in fstat.
7083: /* MUTANT (del_stmt) */ /* 	ram1Dev.param.write_chunk_tags_fn = yramdisk_wr_chunk; */ 
7084: /* MUTANT (del_stmt) */ /* 	ram1Dev.param.read_chunk_tags_fn = yramdisk_rd_chunk; */ 
7085: /* MUTANT (del_stmt) */ /* 	ram1Dev.param.erase_fn = yramdisk_erase; */ 
7086: /* MUTANT (del_stmt) */ /* 	ram1Dev.param.initialise_flash_fn = yramdisk_initialise; */ 
7088: /* MUTANT (del_stmt) */ /* 	yaffs_add_device(&ram1Dev); */ 
7092: /* MUTANT (rep_const) */	mymemset(&m18_1Dev,1,sizeof(m18_1Dev));
7092: /* MUTANT (rep_const) */	mymemset(&m18_1Dev,-1,sizeof(m18_1Dev));
7093: /* MUTANT (del_stmt) */ /* 	m18_1Dev.param.name = "M18-1"; */ 
7093: /* MUTANT (rep_const) */	m18_1Dev.param.name = "M18-0";
7093: /* MUTANT (rep_const) */	m18_1Dev.param.name = "M18--1";
7093: /* MUTANT (rep_const) */	m18_1Dev.param.name = "M18-((1)+1)";
7094: /* MUTANT (del_stmt) */ /* 	m18_1Dev.param.total_bytes_per_chunk = 1024; */ 
7094: /* MUTANT (rep_const) */	m18_1Dev.param.total_bytes_per_chunk = 0;
7094: /* MUTANT (rep_const) */	m18_1Dev.param.total_bytes_per_chunk = 1;
7094: /* MUTANT (rep_const) */	m18_1Dev.param.total_bytes_per_chunk = -1;
7094: /* MUTANT (rep_const) */	m18_1Dev.param.total_bytes_per_chunk = ((1024)+1);
7094: /* MUTANT (rep_const) */	m18_1Dev.param.total_bytes_per_chunk = ((1024)-1);
7095: /* MUTANT (del_stmt) */ /* 	m18_1Dev.param.chunks_per_block =248; */ 
7095: /* MUTANT (rep_const) */	m18_1Dev.param.chunks_per_block =0;
7095: /* MUTANT (rep_const) */	m18_1Dev.param.chunks_per_block =1;
7095: /* MUTANT (rep_const) */	m18_1Dev.param.chunks_per_block =-1;
7095: /* MUTANT (rep_const) */	m18_1Dev.param.chunks_per_block =((248)+1);
7095: /* MUTANT (rep_const) */	m18_1Dev.param.chunks_per_block =((248)-1);
7096: /* MUTANT (del_stmt) */ /* 	m18_1Dev.param.n_reserved_blocks = 2; */ 
7096: /* MUTANT (rep_const) */	m18_1Dev.param.n_reserved_blocks = 0;
7096: /* MUTANT (rep_const) */	m18_1Dev.param.n_reserved_blocks = 1;
7096: /* MUTANT (rep_const) */	m18_1Dev.param.n_reserved_blocks = -1;
7096: /* MUTANT (rep_const) */	m18_1Dev.param.n_reserved_blocks = ((2)+1);
7096: /* MUTANT (rep_const) */	m18_1Dev.param.n_reserved_blocks = ((2)-1);
7097: /* MUTANT (del_stmt) */ /* 	m18_1Dev.param.start_block = 0; */  // Can use block 0
7097: /* MUTANT (rep_const) */	m18_1Dev.param.start_block = 1; // Can use block 0
7097: /* MUTANT (rep_const) */	m18_1Dev.param.start_block = -1; // Can use block 0
7098: /* MUTANT (del_stmt) */ /* 	m18_1Dev.param.end_block = 31; */  // Last block
7098: /* MUTANT (rep_const) */	m18_1Dev.param.end_block = 0; // Last block
7098: /* MUTANT (rep_const) */	m18_1Dev.param.end_block = 1; // Last block
7098: /* MUTANT (rep_const) */	m18_1Dev.param.end_block = -1; // Last block
7098: /* MUTANT (rep_const) */	m18_1Dev.param.end_block = ((31)+1); // Last block
7098: /* MUTANT (rep_const) */	m18_1Dev.param.end_block = ((31)-1); // Last block
7099: /* MUTANT (del_stmt) */ /* 	m18_1Dev.param.use_nand_ecc = 0; */  // use YAFFS's ECC
7099: /* MUTANT (rep_const) */	m18_1Dev.param.use_nand_ecc = 1; // use YAFFS's ECC
7099: /* MUTANT (rep_const) */	m18_1Dev.param.use_nand_ecc = -1; // use YAFFS's ECC
7100: /* MUTANT (del_stmt) */ /* 	m18_1Dev.param.n_caches = 10; */  // Use caches
7100: /* MUTANT (rep_const) */	m18_1Dev.param.n_caches = 0; // Use caches
7100: /* MUTANT (rep_const) */	m18_1Dev.param.n_caches = 1; // Use caches
7100: /* MUTANT (rep_const) */	m18_1Dev.param.n_caches = -1; // Use caches
7100: /* MUTANT (rep_const) */	m18_1Dev.param.n_caches = ((10)+1); // Use caches
7100: /* MUTANT (rep_const) */	m18_1Dev.param.n_caches = ((10)-1); // Use caches
7101: /* MUTANT (del_stmt) */ /* 	m18_1Dev.driver_context = (void *) 1; */ 	// Used to identify the device in fstat.
7101: /* MUTANT (rep_const) */	m18_1Dev.driver_context = (void *) 0;	// Used to identify the device in fstat.
7101: /* MUTANT (rep_const) */	m18_1Dev.driver_context = (void *) -1;	// Used to identify the device in fstat.
7101: /* MUTANT (rep_const) */	m18_1Dev.driver_context = (void *) ((1)+1);	// Used to identify the device in fstat.
7102: /* MUTANT (del_stmt) */ /* 	m18_1Dev.param.write_chunk_fn = ynorif1_WriteChunkToNAND; */ 
7103: /* MUTANT (del_stmt) */ /* 	m18_1Dev.param.read_chunk_fn = ynorif1_ReadChunkFromNAND; */ 
7104: /* MUTANT (del_stmt) */ /* 	m18_1Dev.param.erase_fn = ynorif1_EraseBlockInNAND; */ 
7105: /* MUTANT (del_stmt) */ /* 	m18_1Dev.param.initialise_flash_fn = ynorif1_InitialiseNAND; */ 
7106: /* MUTANT (del_stmt) */ /* 	m18_1Dev.param.deinitialise_flash_fn = ynorif1_Deinitialise_flash_fn; */ 
7110: /* MUTANT (del_stmt) */ /* 	yaffs_add_device(&m18_1Dev); */ 
7115: /* MUTANT (del_stmt) */ /* 	mymemset(&flashDev,0,sizeof(flashDev)); */ 
7115: /* MUTANT (rep_const) */	mymemset(&flashDev,1,sizeof(flashDev));
7115: /* MUTANT (rep_const) */	mymemset(&flashDev,-1,sizeof(flashDev));
7116: /* MUTANT (del_stmt) */ /* 	flashDev.param.name = "yaffs2"; */ 
7117: /* MUTANT (del_stmt) */ /* 	flashDev.param.total_bytes_per_chunk = 2048; */ 
7117: /* MUTANT (rep_const) */	flashDev.param.total_bytes_per_chunk = 0;
7117: /* MUTANT (rep_const) */	flashDev.param.total_bytes_per_chunk = 1;
7117: /* MUTANT (rep_const) */	flashDev.param.total_bytes_per_chunk = -1;
7117: /* MUTANT (rep_const) */	flashDev.param.total_bytes_per_chunk = ((2048)+1);
7117: /* MUTANT (rep_const) */	flashDev.param.total_bytes_per_chunk = ((2048)-1);
7118: /* MUTANT (del_stmt) */ /* 	flashDev.param.chunks_per_block = 64; */ 
7118: /* MUTANT (rep_const) */	flashDev.param.chunks_per_block = 0;
7118: /* MUTANT (rep_const) */	flashDev.param.chunks_per_block = 1;
7118: /* MUTANT (rep_const) */	flashDev.param.chunks_per_block = -1;
7118: /* MUTANT (rep_const) */	flashDev.param.chunks_per_block = ((64)+1);
7118: /* MUTANT (rep_const) */	flashDev.param.chunks_per_block = ((64)-1);
7119: /* MUTANT (del_stmt) */ /* 	flashDev.param.n_reserved_blocks = 2; */ 
7119: /* MUTANT (rep_const) */	flashDev.param.n_reserved_blocks = 0;
7119: /* MUTANT (rep_const) */	flashDev.param.n_reserved_blocks = 1;
7119: /* MUTANT (rep_const) */	flashDev.param.n_reserved_blocks = -1;
7119: /* MUTANT (rep_const) */	flashDev.param.n_reserved_blocks = ((2)+1);
7119: /* MUTANT (rep_const) */	flashDev.param.n_reserved_blocks = ((2)-1);
7120: /* MUTANT (del_stmt) */ /* 	flashDev.param.inband_tags = 0; */ 
7120: /* MUTANT (rep_const) */	flashDev.param.inband_tags = 1;
7120: /* MUTANT (rep_const) */	flashDev.param.inband_tags = -1;
7121: /* MUTANT (del_stmt) */ /* 	flashDev.param.start_block = 0; */ 
7121: /* MUTANT (rep_const) */	flashDev.param.start_block = 1;
7121: /* MUTANT (rep_const) */	flashDev.param.start_block = -1;
7122: /* MUTANT (del_stmt) */ /* 	flashDev.param.end_block = nandemul2k_GetNumberOfBlocks()-1; */ 
7122: /* MUTANT (rep_const) */	flashDev.param.end_block = nandemul2k_GetNumberOfBlocks()0;
7122: /* MUTANT (rep_const) */	flashDev.param.end_block = nandemul2k_GetNumberOfBlocks()1;
7122: /* MUTANT (rep_const) */	flashDev.param.end_block = nandemul2k_GetNumberOfBlocks()((-1)+1);
7122: /* MUTANT (rep_const) */	flashDev.param.end_block = nandemul2k_GetNumberOfBlocks()((-1)-1);
7123: /* MUTANT (del_stmt) */ /* 	flashDev.param.is_yaffs2 = 1; */ 
7123: /* MUTANT (rep_const) */	flashDev.param.is_yaffs2 = 0;
7123: /* MUTANT (rep_const) */	flashDev.param.is_yaffs2 = -1;
7123: /* MUTANT (rep_const) */	flashDev.param.is_yaffs2 = ((1)+1);
7124: /* MUTANT (del_stmt) */ /* 	flashDev.param.use_nand_ecc=1; */ 
7124: /* MUTANT (rep_const) */	flashDev.param.use_nand_ecc=0;
7124: /* MUTANT (rep_const) */	flashDev.param.use_nand_ecc=-1;
7124: /* MUTANT (rep_const) */	flashDev.param.use_nand_ecc=((1)+1);
7125: /* MUTANT (del_stmt) */ /* 	flashDev.param.wide_tnodes_disabled=0; */ 
7125: /* MUTANT (rep_const) */	flashDev.param.wide_tnodes_disabled=1;
7125: /* MUTANT (rep_const) */	flashDev.param.wide_tnodes_disabled=-1;
7126: /* MUTANT (del_stmt) */ /* 	flashDev.param.refresh_period = 1000; */ 
7126: /* MUTANT (rep_const) */	flashDev.param.refresh_period = 0;
7126: /* MUTANT (rep_const) */	flashDev.param.refresh_period = 1;
7126: /* MUTANT (rep_const) */	flashDev.param.refresh_period = -1;
7126: /* MUTANT (rep_const) */	flashDev.param.refresh_period = ((1000)+1);
7126: /* MUTANT (rep_const) */	flashDev.param.refresh_period = ((1000)-1);
7127: /* MUTANT (del_stmt) */ /* 	flashDev.param.n_caches = 10; */  // Use caches
7127: /* MUTANT (rep_const) */	flashDev.param.n_caches = 0; // Use caches
7127: /* MUTANT (rep_const) */	flashDev.param.n_caches = 1; // Use caches
7127: /* MUTANT (rep_const) */	flashDev.param.n_caches = -1; // Use caches
7127: /* MUTANT (rep_const) */	flashDev.param.n_caches = ((10)+1); // Use caches
7127: /* MUTANT (rep_const) */	flashDev.param.n_caches = ((10)-1); // Use caches
7128: /* MUTANT (del_stmt) */ /* 	flashDev.driver_context = (void *) 2; */ 	// Used to identify the device in fstat.
7128: /* MUTANT (rep_const) */	flashDev.driver_context = (void *) 0;	// Used to identify the device in fstat.
7128: /* MUTANT (rep_const) */	flashDev.driver_context = (void *) 1;	// Used to identify the device in fstat.
7128: /* MUTANT (rep_const) */	flashDev.driver_context = (void *) -1;	// Used to identify the device in fstat.
7128: /* MUTANT (rep_const) */	flashDev.driver_context = (void *) ((2)+1);	// Used to identify the device in fstat.
7128: /* MUTANT (rep_const) */	flashDev.driver_context = (void *) ((2)-1);	// Used to identify the device in fstat.
7129: /* MUTANT (del_stmt) */ /* 	flashDev.param.write_chunk_tags_fn = nandemul2k_WriteChunkWithTagsToNAND; */ 
7130: /* MUTANT (del_stmt) */ /* 	flashDev.param.read_chunk_tags_fn = nandemul2k_ReadChunkWithTagsFromNAND; */ 
7131: /* MUTANT (del_stmt) */ /* 	flashDev.param.erase_fn = nandemul2k_EraseBlockInNAND; */ 
7132: /* MUTANT (del_stmt) */ /* 	flashDev.param.initialise_flash_fn = nandemul2k_InitialiseNAND; */ 
7133: /* MUTANT (del_stmt) */ /* 	flashDev.param.bad_block_fn = nandemul2k_MarkNANDBlockBad; */ 
7134: /* MUTANT (del_stmt) */ /* 	flashDev.param.query_block_fn = nandemul2k_QueryNANDBlock; */ 
7135: /* MUTANT (del_stmt) */ /* 	flashDev.param.enable_xattr = 1; */ 
7135: /* MUTANT (rep_const) */	flashDev.param.enable_xattr = 0;
7135: /* MUTANT (rep_const) */	flashDev.param.enable_xattr = -1;
7135: /* MUTANT (rep_const) */	flashDev.param.enable_xattr = ((1)+1);
7137: /* MUTANT (del_stmt) */ /* 	yaffs_add_device(&flashDev); */ 
7141: /* MUTANT (del_stmt) */ /* 	return 0; */ 
7141: /* MUTANT (rep_const) */	return 1;
7141: /* MUTANT (rep_const) */	return -1;
7181: /* MUTANT (del_stmt) */ /* 	int pos = 0; */ 
7181: /* MUTANT (rep_const) */	int pos = 1;
7181: /* MUTANT (rep_const) */	int pos = -1;
7182: /* MUTANT (del_stmt) */ /* 	int size; */ 
7184: /* MUTANT (del_stmt) */ /* 	mymemcpy(&size, xb, sizeof(int)); */ 
7185: /* MUTANT (rep_op) */	while (size <= 0 && (size < xb_size) && (pos + size < xb_size)) {
7185: /* MUTANT (rep_op) */	while (size < 0 && (size < xb_size) && (pos + size < xb_size)) {
7185: /* MUTANT (rep_op) */	while (size >= 0 && (size < xb_size) && (pos + size < xb_size)) {
7185: /* MUTANT (rep_op) */	while (size == 0 && (size < xb_size) && (pos + size < xb_size)) {
7185: /* MUTANT (rep_op) */	while (size != 0 && (size < xb_size) && (pos + size < xb_size)) {
7185: /* MUTANT (rep_op) */	while (size > 0 || (size < xb_size) && (pos + size < xb_size)) {
7185: /* MUTANT (rep_op) */	while (size > 0 && (size <= xb_size) && (pos + size < xb_size)) {
7185: /* MUTANT (rep_op) */	while (size > 0 && (size > xb_size) && (pos + size < xb_size)) {
7185: /* MUTANT (rep_op) */	while (size > 0 && (size >= xb_size) && (pos + size < xb_size)) {
7185: /* MUTANT (rep_op) */	while (size > 0 && (size == xb_size) && (pos + size < xb_size)) {
7185: /* MUTANT (rep_op) */	while (size > 0 && (size != xb_size) && (pos + size < xb_size)) {
7185: /* MUTANT (rep_op) */	while (size > 0 && (size < xb_size) || (pos + size < xb_size)) {
7185: /* MUTANT (rep_op) */	while (size > 0 && (size < xb_size) && (pos - size < xb_size)) {
7185: /* MUTANT (rep_op) */	while (size > 0 && (size < xb_size) && (pos * size < xb_size)) {
7185: /* MUTANT (rep_op) */	while (size > 0 && (size < xb_size) && (pos % size < xb_size)) {
7185: /* MUTANT (rep_op) */	while (size > 0 && (size < xb_size) && (pos + size <= xb_size)) {
7185: /* MUTANT (rep_op) */	while (size > 0 && (size < xb_size) && (pos + size > xb_size)) {
7185: /* MUTANT (rep_op) */	while (size > 0 && (size < xb_size) && (pos + size >= xb_size)) {
7185: /* MUTANT (rep_op) */	while (size > 0 && (size < xb_size) && (pos + size == xb_size)) {
7185: /* MUTANT (rep_op) */	while (size > 0 && (size < xb_size) && (pos + size != xb_size)) {
7185: /* MUTANT (rep_const) */	while (size > 1 && (size < xb_size) && (pos + size < xb_size)) {
7185: /* MUTANT (rep_const) */	while (size > -1 && (size < xb_size) && (pos + size < xb_size)) {
7185: /* MUTANT (negate) */	while(! (size > 0 && (size < xb_size) && (pos + size < xb_size))) {
7186: /* MUTANT (rep_op) */		if (!mystrncmp((YCHAR *) (xb - pos + sizeof(int)), name, size)) {
7186: /* MUTANT (rep_op) */		if (!mystrncmp((YCHAR *) (xb * pos + sizeof(int)), name, size)) {
7186: /* MUTANT (rep_op) */		if (!mystrncmp((YCHAR *) (xb % pos + sizeof(int)), name, size)) {
7186: /* MUTANT (rep_op) */		if (!mystrncmp((YCHAR *) (xb + pos - sizeof(int)), name, size)) {
7186: /* MUTANT (rep_op) */		if (!mystrncmp((YCHAR *) (xb + pos * sizeof(int)), name, size)) {
7186: /* MUTANT (rep_op) */		if (!mystrncmp((YCHAR *) (xb + pos % sizeof(int)), name, size)) {
7186: /* MUTANT (negate) */		if(! (!mystrncmp((YCHAR *) (xb + pos + sizeof(int)), name, size))) {
7187: /* MUTANT (negate) */			if(! (exist_size))
7189: /* MUTANT (del_stmt) */ /* 			return pos; */ 
7191: /* MUTANT (rep_op) */		pos -= size;
7191: /* MUTANT (rep_op) */		pos *= size;
7191: /* MUTANT (rep_op) */		pos %= size;
7192: /* MUTANT (rep_op) */		if (pos <= xb_size - sizeof(int))
7192: /* MUTANT (rep_op) */		if (pos > xb_size - sizeof(int))
7192: /* MUTANT (rep_op) */		if (pos >= xb_size - sizeof(int))
7192: /* MUTANT (rep_op) */		if (pos == xb_size - sizeof(int))
7192: /* MUTANT (rep_op) */		if (pos != xb_size - sizeof(int))
7192: /* MUTANT (negate) */		if(! (pos < xb_size - sizeof(int)))
7193: /* MUTANT (rep_op) */			mymemcpy(&size, xb - pos, sizeof(int));
7193: /* MUTANT (rep_op) */			mymemcpy(&size, xb * pos, sizeof(int));
7193: /* MUTANT (rep_op) */			mymemcpy(&size, xb % pos, sizeof(int));
7195: /* MUTANT (rep_const) */			size = 1;
7195: /* MUTANT (rep_const) */			size = -1;
7197: /* MUTANT (negate) */	if(! (exist_size))
7198: /* MUTANT (rep_const) */		*exist_size = 1;
7198: /* MUTANT (rep_const) */		*exist_size = -1;
7199: /* MUTANT (del_stmt) */ /* 	return -ENODATA; */ 
7204: /* MUTANT (del_stmt) */ /* 	int pos = 0; */ 
7204: /* MUTANT (rep_const) */	int pos = 1;
7204: /* MUTANT (rep_const) */	int pos = -1;
7205: /* MUTANT (del_stmt) */ /* 	int size; */ 
7207: /* MUTANT (del_stmt) */ /* 	mymemcpy(&size, xb + pos, sizeof(int)); */ 
7207: /* MUTANT (rep_op) */	mymemcpy(&size, xb - pos, sizeof(int));
7207: /* MUTANT (rep_op) */	mymemcpy(&size, xb * pos, sizeof(int));
7207: /* MUTANT (rep_op) */	mymemcpy(&size, xb % pos, sizeof(int));
7208: /* MUTANT (rep_op) */	while (size <= 0 && (size < xb_size) && (pos + size < xb_size)) {
7208: /* MUTANT (rep_op) */	while (size < 0 && (size < xb_size) && (pos + size < xb_size)) {
7208: /* MUTANT (rep_op) */	while (size >= 0 && (size < xb_size) && (pos + size < xb_size)) {
7208: /* MUTANT (rep_op) */	while (size == 0 && (size < xb_size) && (pos + size < xb_size)) {
7208: /* MUTANT (rep_op) */	while (size != 0 && (size < xb_size) && (pos + size < xb_size)) {
7208: /* MUTANT (rep_op) */	while (size > 0 || (size < xb_size) && (pos + size < xb_size)) {
7208: /* MUTANT (rep_op) */	while (size > 0 && (size <= xb_size) && (pos + size < xb_size)) {
7208: /* MUTANT (rep_op) */	while (size > 0 && (size > xb_size) && (pos + size < xb_size)) {
7208: /* MUTANT (rep_op) */	while (size > 0 && (size >= xb_size) && (pos + size < xb_size)) {
7208: /* MUTANT (rep_op) */	while (size > 0 && (size == xb_size) && (pos + size < xb_size)) {
7208: /* MUTANT (rep_op) */	while (size > 0 && (size != xb_size) && (pos + size < xb_size)) {
7208: /* MUTANT (rep_op) */	while (size > 0 && (size < xb_size) || (pos + size < xb_size)) {
7208: /* MUTANT (rep_op) */	while (size > 0 && (size < xb_size) && (pos - size < xb_size)) {
7208: /* MUTANT (rep_op) */	while (size > 0 && (size < xb_size) && (pos * size < xb_size)) {
7208: /* MUTANT (rep_op) */	while (size > 0 && (size < xb_size) && (pos % size < xb_size)) {
7208: /* MUTANT (rep_op) */	while (size > 0 && (size < xb_size) && (pos + size <= xb_size)) {
7208: /* MUTANT (rep_op) */	while (size > 0 && (size < xb_size) && (pos + size > xb_size)) {
7208: /* MUTANT (rep_op) */	while (size > 0 && (size < xb_size) && (pos + size >= xb_size)) {
7208: /* MUTANT (rep_op) */	while (size > 0 && (size < xb_size) && (pos + size == xb_size)) {
7208: /* MUTANT (rep_op) */	while (size > 0 && (size < xb_size) && (pos + size != xb_size)) {
7208: /* MUTANT (rep_const) */	while (size > 1 && (size < xb_size) && (pos + size < xb_size)) {
7208: /* MUTANT (rep_const) */	while (size > -1 && (size < xb_size) && (pos + size < xb_size)) {
7208: /* MUTANT (negate) */	while(! (size > 0 && (size < xb_size) && (pos + size < xb_size))) {
7209: /* MUTANT (del_stmt) */ /* 		pos += size; */ 
7209: /* MUTANT (rep_op) */		pos -= size;
7209: /* MUTANT (rep_op) */		pos *= size;
7209: /* MUTANT (rep_op) */		pos %= size;
7210: /* MUTANT (rep_op) */		if (pos <= xb_size - sizeof(int))
7210: /* MUTANT (rep_op) */		if (pos > xb_size - sizeof(int))
7210: /* MUTANT (rep_op) */		if (pos >= xb_size - sizeof(int))
7210: /* MUTANT (rep_op) */		if (pos == xb_size - sizeof(int))
7210: /* MUTANT (rep_op) */		if (pos != xb_size - sizeof(int))
7210: /* MUTANT (negate) */		if(! (pos < xb_size - sizeof(int)))
7211: /* MUTANT (rep_op) */			mymemcpy(&size, xb - pos, sizeof(int));
7211: /* MUTANT (rep_op) */			mymemcpy(&size, xb * pos, sizeof(int));
7211: /* MUTANT (rep_op) */			mymemcpy(&size, xb % pos, sizeof(int));
7213: /* MUTANT (rep_const) */			size = 1;
7213: /* MUTANT (rep_const) */			size = -1;
7220: /* MUTANT (del_stmt) */ /* 	int pos = nval_find(xb, xb_size, name, NULL); */ 
7221: /* MUTANT (del_stmt) */ /* 	int size; */ 
7223: /* MUTANT (rep_op) */	if (pos <= 0 || pos >= xb_size)
7223: /* MUTANT (rep_op) */	if (pos > 0 || pos >= xb_size)
7223: /* MUTANT (rep_op) */	if (pos >= 0 || pos >= xb_size)
7223: /* MUTANT (rep_op) */	if (pos == 0 || pos >= xb_size)
7223: /* MUTANT (rep_op) */	if (pos != 0 || pos >= xb_size)
7223: /* MUTANT (rep_op) */	if (pos < 0 && pos >= xb_size)
7223: /* MUTANT (rep_op) */	if (pos < 0 || pos <= xb_size)
7223: /* MUTANT (rep_op) */	if (pos < 0 || pos < xb_size)
7223: /* MUTANT (rep_op) */	if (pos < 0 || pos > xb_size)
7223: /* MUTANT (rep_op) */	if (pos < 0 || pos == xb_size)
7223: /* MUTANT (rep_op) */	if (pos < 0 || pos != xb_size)
7223: /* MUTANT (rep_const) */	if (pos < 1 || pos >= xb_size)
7223: /* MUTANT (rep_const) */	if (pos < -1 || pos >= xb_size)
7223: /* MUTANT (negate) */	if(! (pos < 0 || pos >= xb_size))
7228: /* MUTANT (del_stmt) */ /* 	mymemcpy(&size, xb + pos, sizeof(int)); */ 
7228: /* MUTANT (rep_op) */	mymemcpy(&size, xb - pos, sizeof(int));
7228: /* MUTANT (rep_op) */	mymemcpy(&size, xb * pos, sizeof(int));
7228: /* MUTANT (rep_op) */	mymemcpy(&size, xb % pos, sizeof(int));
7229: /* MUTANT (del_stmt) */ /* 	mymemcpy(xb + pos, xb + pos + size, xb_size - (pos + size)); */ 
7229: /* MUTANT (rep_op) */	mymemcpy(xb - pos, xb + pos + size, xb_size - (pos + size));
7229: /* MUTANT (rep_op) */	mymemcpy(xb * pos, xb + pos + size, xb_size - (pos + size));
7229: /* MUTANT (rep_op) */	mymemcpy(xb % pos, xb + pos + size, xb_size - (pos + size));
7229: /* MUTANT (rep_op) */	mymemcpy(xb + pos, xb - pos + size, xb_size - (pos + size));
7229: /* MUTANT (rep_op) */	mymemcpy(xb + pos, xb * pos + size, xb_size - (pos + size));
7229: /* MUTANT (rep_op) */	mymemcpy(xb + pos, xb % pos + size, xb_size - (pos + size));
7229: /* MUTANT (rep_op) */	mymemcpy(xb + pos, xb + pos - size, xb_size - (pos + size));
7229: /* MUTANT (rep_op) */	mymemcpy(xb + pos, xb + pos * size, xb_size - (pos + size));
7229: /* MUTANT (rep_op) */	mymemcpy(xb + pos, xb + pos % size, xb_size - (pos + size));
7229: /* MUTANT (rep_op) */	mymemcpy(xb + pos, xb + pos + size, xb_size - (pos - size));
7229: /* MUTANT (rep_op) */	mymemcpy(xb + pos, xb + pos + size, xb_size - (pos * size));
7229: /* MUTANT (rep_op) */	mymemcpy(xb + pos, xb + pos + size, xb_size - (pos % size));
7230: /* MUTANT (del_stmt) */ /* 	mymemset(xb + (xb_size - size), 0, size); */ 
7230: /* MUTANT (rep_op) */	mymemset(xb - (xb_size - size), 0, size);
7230: /* MUTANT (rep_op) */	mymemset(xb * (xb_size - size), 0, size);
7230: /* MUTANT (rep_op) */	mymemset(xb % (xb_size - size), 0, size);
7230: /* MUTANT (rep_const) */	mymemset(xb + (xb_size - size), 1, size);
7230: /* MUTANT (rep_const) */	mymemset(xb + (xb_size - size), -1, size);
7231: /* MUTANT (del_stmt) */ /* 	return 0; */ 
7231: /* MUTANT (rep_const) */	return 1;
7231: /* MUTANT (rep_const) */	return -1;
7237: /* MUTANT (del_stmt) */ /* 	int pos; */ 
7238: /* MUTANT (del_stmt) */ /* 	int namelen = mystrnlen(name, xb_size); */ 
7239: /* MUTANT (del_stmt) */ /* 	int reclen; */ 
7240: /* MUTANT (del_stmt) */ /* 	int size_exist = 0; */ 
7240: /* MUTANT (rep_const) */	int size_exist = 1;
7240: /* MUTANT (rep_const) */	int size_exist = -1;
7241: /* MUTANT (del_stmt) */ /* 	int space; */ 
7242: /* MUTANT (del_stmt) */ /* 	int start; */ 
7244: /* MUTANT (del_stmt) */ /* 	pos = nval_find(xb, xb_size, name, &size_exist); */ 
7246: /* MUTANT (rep_op) */	if (flags & XATTR_CREATE || pos >= 0)
7246: /* MUTANT (rep_op) */	if (flags & XATTR_CREATE && pos <= 0)
7246: /* MUTANT (rep_op) */	if (flags & XATTR_CREATE && pos < 0)
7246: /* MUTANT (rep_op) */	if (flags & XATTR_CREATE && pos > 0)
7246: /* MUTANT (rep_op) */	if (flags & XATTR_CREATE && pos == 0)
7246: /* MUTANT (rep_op) */	if (flags & XATTR_CREATE && pos != 0)
7246: /* MUTANT (rep_const) */	if (flags & XATTR_CREATE && pos >= 1)
7246: /* MUTANT (rep_const) */	if (flags & XATTR_CREATE && pos >= -1)
7246: /* MUTANT (negate) */	if(! (flags & XATTR_CREATE && pos >= 0))
7248: /* MUTANT (rep_op) */	if (flags & XATTR_REPLACE || pos < 0)
7248: /* MUTANT (rep_op) */	if (flags & XATTR_REPLACE && pos <= 0)
7248: /* MUTANT (rep_op) */	if (flags & XATTR_REPLACE && pos > 0)
7248: /* MUTANT (rep_op) */	if (flags & XATTR_REPLACE && pos >= 0)
7248: /* MUTANT (rep_op) */	if (flags & XATTR_REPLACE && pos == 0)
7248: /* MUTANT (rep_op) */	if (flags & XATTR_REPLACE && pos != 0)
7248: /* MUTANT (rep_const) */	if (flags & XATTR_REPLACE && pos < 1)
7248: /* MUTANT (rep_const) */	if (flags & XATTR_REPLACE && pos < -1)
7248: /* MUTANT (negate) */	if(! (flags & XATTR_REPLACE && pos < 0))
7251: /* MUTANT (del_stmt) */ /* 	start = nval_used(xb, xb_size); */ 
7252: /* MUTANT (del_stmt) */ /* 	space = xb_size - start + size_exist; */ 
7252: /* MUTANT (rep_op) */	space = xb_size - start - size_exist;
7252: /* MUTANT (rep_op) */	space = xb_size - start * size_exist;
7252: /* MUTANT (rep_op) */	space = xb_size - start % size_exist;
7254: /* MUTANT (del_stmt) */ /* 	reclen = (sizeof(int) + namelen + 1 + bsize); */ 
7254: /* MUTANT (rep_op) */	reclen = (sizeof(int) - namelen + 1 + bsize);
7254: /* MUTANT (rep_op) */	reclen = (sizeof(int) * namelen + 1 + bsize);
7254: /* MUTANT (rep_op) */	reclen = (sizeof(int) % namelen + 1 + bsize);
7254: /* MUTANT (rep_op) */	reclen = (sizeof(int) + namelen - 1 + bsize);
7254: /* MUTANT (rep_op) */	reclen = (sizeof(int) + namelen * 1 + bsize);
7254: /* MUTANT (rep_op) */	reclen = (sizeof(int) + namelen % 1 + bsize);
7254: /* MUTANT (rep_op) */	reclen = (sizeof(int) + namelen + 1 - bsize);
7254: /* MUTANT (rep_op) */	reclen = (sizeof(int) + namelen + 1 * bsize);
7254: /* MUTANT (rep_op) */	reclen = (sizeof(int) + namelen + 1 % bsize);
7254: /* MUTANT (rep_const) */	reclen = (sizeof(int) + namelen + 0 + bsize);
7254: /* MUTANT (rep_const) */	reclen = (sizeof(int) + namelen + -1 + bsize);
7254: /* MUTANT (rep_const) */	reclen = (sizeof(int) + namelen + ((1)+1) + bsize);
7256: /* MUTANT (rep_op) */	if (reclen <= space)
7256: /* MUTANT (rep_op) */	if (reclen < space)
7256: /* MUTANT (rep_op) */	if (reclen >= space)
7256: /* MUTANT (rep_op) */	if (reclen == space)
7256: /* MUTANT (rep_op) */	if (reclen != space)
7256: /* MUTANT (negate) */	if(! (reclen > space))
7259: /* MUTANT (rep_op) */	if (pos <= 0) {
7259: /* MUTANT (rep_op) */	if (pos < 0) {
7259: /* MUTANT (rep_op) */	if (pos > 0) {
7259: /* MUTANT (rep_op) */	if (pos == 0) {
7259: /* MUTANT (rep_op) */	if (pos != 0) {
7259: /* MUTANT (rep_const) */	if (pos >= 1) {
7259: /* MUTANT (rep_const) */	if (pos >= -1) {
7259: /* MUTANT (negate) */	if(! (pos >= 0)) {
7260: /* MUTANT (del_stmt) */ /* 		nval_del(xb, xb_size, name); */ 
7261: /* MUTANT (del_stmt) */ /* 		start = nval_used(xb, xb_size); */ 
7266: /* MUTANT (del_stmt) */ /* 	mymemcpy(xb + pos, &reclen, sizeof(int)); */ 
7266: /* MUTANT (rep_op) */	mymemcpy(xb - pos, &reclen, sizeof(int));
7266: /* MUTANT (rep_op) */	mymemcpy(xb * pos, &reclen, sizeof(int));
7266: /* MUTANT (rep_op) */	mymemcpy(xb % pos, &reclen, sizeof(int));
7267: /* MUTANT (del_stmt) */ /* 	pos += sizeof(int); */ 
7267: /* MUTANT (rep_op) */	pos -= sizeof(int);
7267: /* MUTANT (rep_op) */	pos *= sizeof(int);
7267: /* MUTANT (rep_op) */	pos %= sizeof(int);
7268: /* MUTANT (del_stmt) */ /* 	mystrncpy((YCHAR *) (xb + pos), name, reclen); */ 
7268: /* MUTANT (rep_op) */	mystrncpy((YCHAR *) (xb - pos), name, reclen);
7268: /* MUTANT (rep_op) */	mystrncpy((YCHAR *) (xb * pos), name, reclen);
7268: /* MUTANT (rep_op) */	mystrncpy((YCHAR *) (xb % pos), name, reclen);
7269: /* MUTANT (del_stmt) */ /* 	pos += (namelen + 1); */ 
7269: /* MUTANT (rep_op) */	pos -= (namelen + 1);
7269: /* MUTANT (rep_op) */	pos *= (namelen + 1);
7269: /* MUTANT (rep_op) */	pos %= (namelen + 1);
7269: /* MUTANT (rep_op) */	pos += (namelen - 1);
7269: /* MUTANT (rep_op) */	pos += (namelen * 1);
7269: /* MUTANT (rep_op) */	pos += (namelen % 1);
7269: /* MUTANT (rep_const) */	pos += (namelen + 0);
7269: /* MUTANT (rep_const) */	pos += (namelen + -1);
7269: /* MUTANT (rep_const) */	pos += (namelen + ((1)+1));
7270: /* MUTANT (del_stmt) */ /* 	mymemcpy(xb + pos, buf, bsize); */ 
7270: /* MUTANT (rep_op) */	mymemcpy(xb - pos, buf, bsize);
7270: /* MUTANT (rep_op) */	mymemcpy(xb * pos, buf, bsize);
7270: /* MUTANT (rep_op) */	mymemcpy(xb % pos, buf, bsize);
7271: /* MUTANT (del_stmt) */ /* 	return 0; */ 
7271: /* MUTANT (rep_const) */	return 1;
7271: /* MUTANT (rep_const) */	return -1;
7277: /* MUTANT (del_stmt) */ /* 	int pos = nval_find(xb, xb_size, name, NULL); */ 
7278: /* MUTANT (del_stmt) */ /* 	int size; */ 
7280: /* MUTANT (rep_op) */	if (pos <= 0 && pos < xb_size) {
7280: /* MUTANT (rep_op) */	if (pos < 0 && pos < xb_size) {
7280: /* MUTANT (rep_op) */	if (pos > 0 && pos < xb_size) {
7280: /* MUTANT (rep_op) */	if (pos == 0 && pos < xb_size) {
7280: /* MUTANT (rep_op) */	if (pos != 0 && pos < xb_size) {
7280: /* MUTANT (rep_op) */	if (pos >= 0 || pos < xb_size) {
7280: /* MUTANT (rep_op) */	if (pos >= 0 && pos <= xb_size) {
7280: /* MUTANT (rep_op) */	if (pos >= 0 && pos > xb_size) {
7280: /* MUTANT (rep_op) */	if (pos >= 0 && pos >= xb_size) {
7280: /* MUTANT (rep_op) */	if (pos >= 0 && pos == xb_size) {
7280: /* MUTANT (rep_op) */	if (pos >= 0 && pos != xb_size) {
7280: /* MUTANT (rep_const) */	if (pos >= 1 && pos < xb_size) {
7280: /* MUTANT (rep_const) */	if (pos >= -1 && pos < xb_size) {
7280: /* MUTANT (negate) */	if(! (pos >= 0 && pos < xb_size)) {
7282: /* MUTANT (del_stmt) */ /* 		mymemcpy(&size, xb + pos, sizeof(int)); */ 
7282: /* MUTANT (rep_op) */		mymemcpy(&size, xb - pos, sizeof(int));
7282: /* MUTANT (rep_op) */		mymemcpy(&size, xb * pos, sizeof(int));
7282: /* MUTANT (rep_op) */		mymemcpy(&size, xb % pos, sizeof(int));
7283: /* MUTANT (del_stmt) */ /* 		pos += sizeof(int); */ 	/* advance past record length */
7283: /* MUTANT (rep_op) */		pos -= sizeof(int);	/* advance past record length */
7283: /* MUTANT (rep_op) */		pos *= sizeof(int);	/* advance past record length */
7283: /* MUTANT (rep_op) */		pos %= sizeof(int);	/* advance past record length */
7284: /* MUTANT (del_stmt) */ /* 		size -= sizeof(int); */ 
7284: /* MUTANT (rep_op) */		size += sizeof(int);
7284: /* MUTANT (rep_op) */		size *= sizeof(int);
7284: /* MUTANT (rep_op) */		size %= sizeof(int);
7287: /* MUTANT (rep_op) */		while (xb[pos] || size > 0 && pos < xb_size) {
7287: /* MUTANT (rep_op) */		while (xb[pos] && size <= 0 && pos < xb_size) {
7287: /* MUTANT (rep_op) */		while (xb[pos] && size < 0 && pos < xb_size) {
7287: /* MUTANT (rep_op) */		while (xb[pos] && size >= 0 && pos < xb_size) {
7287: /* MUTANT (rep_op) */		while (xb[pos] && size == 0 && pos < xb_size) {
7287: /* MUTANT (rep_op) */		while (xb[pos] && size != 0 && pos < xb_size) {
7287: /* MUTANT (rep_op) */		while (xb[pos] && size > 0 || pos < xb_size) {
7287: /* MUTANT (rep_op) */		while (xb[pos] && size > 0 && pos <= xb_size) {
7287: /* MUTANT (rep_op) */		while (xb[pos] && size > 0 && pos > xb_size) {
7287: /* MUTANT (rep_op) */		while (xb[pos] && size > 0 && pos >= xb_size) {
7287: /* MUTANT (rep_op) */		while (xb[pos] && size > 0 && pos == xb_size) {
7287: /* MUTANT (rep_op) */		while (xb[pos] && size > 0 && pos != xb_size) {
7287: /* MUTANT (rep_const) */		while (xb[pos] && size > 1 && pos < xb_size) {
7287: /* MUTANT (rep_const) */		while (xb[pos] && size > -1 && pos < xb_size) {
7287: /* MUTANT (negate) */		while(! (xb[pos] && size > 0 && pos < xb_size)) {
7288: /* MUTANT (del_stmt) */ /* 			pos++; */ 
7288: /* MUTANT (rep_op) */			pos--;
7289: /* MUTANT (del_stmt) */ /* 			size--; */ 
7289: /* MUTANT (rep_op) */			size++;
7292: /* MUTANT (rep_op) */		pos--;
7293: /* MUTANT (del_stmt) */ /* 		size--; */ 
7293: /* MUTANT (rep_op) */		size++;
7298: /* MUTANT (negate) */		if(! (!bsize))
7301: /* MUTANT (rep_op) */		if (size < bsize) {
7301: /* MUTANT (rep_op) */		if (size > bsize) {
7301: /* MUTANT (rep_op) */		if (size >= bsize) {
7301: /* MUTANT (rep_op) */		if (size == bsize) {
7301: /* MUTANT (rep_op) */		if (size != bsize) {
7301: /* MUTANT (negate) */		if(! (size <= bsize)) {
7302: /* MUTANT (del_stmt) */ /* 			mymemcpy(buf, xb + pos, size); */ 
7302: /* MUTANT (rep_op) */			mymemcpy(buf, xb - pos, size);
7302: /* MUTANT (rep_op) */			mymemcpy(buf, xb * pos, size);
7302: /* MUTANT (rep_op) */			mymemcpy(buf, xb % pos, size);
7303: /* MUTANT (del_stmt) */ /* 			return size; */ 
7306: /* MUTANT (rep_op) */	if (pos <= 0)
7306: /* MUTANT (rep_op) */	if (pos < 0)
7306: /* MUTANT (rep_op) */	if (pos > 0)
7306: /* MUTANT (rep_op) */	if (pos == 0)
7306: /* MUTANT (rep_op) */	if (pos != 0)
7306: /* MUTANT (rep_const) */	if (pos >= 1)
7306: /* MUTANT (rep_const) */	if (pos >= -1)
7306: /* MUTANT (negate) */	if(! (pos >= 0))
7309: /* MUTANT (del_stmt) */ /* 	return -ENODATA; */ 
7314: /* MUTANT (del_stmt) */ /* 	int pos = 0; */ 
7314: /* MUTANT (rep_const) */	int pos = 1;
7314: /* MUTANT (rep_const) */	int pos = -1;
7315: /* MUTANT (del_stmt) */ /* 	int size; */ 
7316: /* MUTANT (del_stmt) */ /* 	int name_len; */ 
7317: /* MUTANT (del_stmt) */ /* 	int ncopied = 0; */ 
7317: /* MUTANT (rep_const) */	int ncopied = 1;
7317: /* MUTANT (rep_const) */	int ncopied = -1;
7318: /* MUTANT (del_stmt) */ /* 	int filled = 0; */ 
7318: /* MUTANT (rep_const) */	int filled = 1;
7318: /* MUTANT (rep_const) */	int filled = -1;
7320: /* MUTANT (del_stmt) */ /* 	mymemcpy(&size, xb + pos, sizeof(int)); */ 
7320: /* MUTANT (rep_op) */	mymemcpy(&size, xb - pos, sizeof(int));
7320: /* MUTANT (rep_op) */	mymemcpy(&size, xb * pos, sizeof(int));
7320: /* MUTANT (rep_op) */	mymemcpy(&size, xb % pos, sizeof(int));
7321: /* MUTANT (rep_op) */	while (size <= sizeof(int) &&
7321: /* MUTANT (rep_op) */	while (size < sizeof(int) &&
7321: /* MUTANT (rep_op) */	while (size >= sizeof(int) &&
7321: /* MUTANT (rep_op) */	while (size == sizeof(int) &&
7321: /* MUTANT (rep_op) */	while (size != sizeof(int) &&
7321: /* MUTANT (rep_op) */	while (size > sizeof(int) ||
7322: /* MUTANT (rep_op) */		size < xb_size &&
7322: /* MUTANT (rep_op) */		size > xb_size &&
7322: /* MUTANT (rep_op) */		size >= xb_size &&
7322: /* MUTANT (rep_op) */		size == xb_size &&
7322: /* MUTANT (rep_op) */		size != xb_size &&
7322: /* MUTANT (rep_op) */		size <= xb_size ||
7323: /* MUTANT (rep_op) */		(pos - size) < xb_size &&
7323: /* MUTANT (rep_op) */		(pos * size) < xb_size &&
7323: /* MUTANT (rep_op) */		(pos % size) < xb_size &&
7323: /* MUTANT (rep_op) */		(pos + size) <= xb_size &&
7323: /* MUTANT (rep_op) */		(pos + size) > xb_size &&
7323: /* MUTANT (rep_op) */		(pos + size) >= xb_size &&
7323: /* MUTANT (rep_op) */		(pos + size) == xb_size &&
7323: /* MUTANT (rep_op) */		(pos + size) != xb_size &&
7323: /* MUTANT (rep_op) */		(pos + size) < xb_size ||
7325: /* MUTANT (del_stmt) */ /* 		pos += sizeof(int); */ 
7325: /* MUTANT (rep_op) */		pos -= sizeof(int);
7325: /* MUTANT (rep_op) */		pos *= sizeof(int);
7325: /* MUTANT (rep_op) */		pos %= sizeof(int);
7326: /* MUTANT (del_stmt) */ /* 		size -= sizeof(int); */ 
7326: /* MUTANT (rep_op) */		size += sizeof(int);
7326: /* MUTANT (rep_op) */		size *= sizeof(int);
7326: /* MUTANT (rep_op) */		size %= sizeof(int);
7327: /* MUTANT (del_stmt) */ /* 		name_len = mystrnlen((YCHAR *) (xb + pos), size); */ 
7327: /* MUTANT (rep_op) */		name_len = mystrnlen((YCHAR *) (xb - pos), size);
7327: /* MUTANT (rep_op) */		name_len = mystrnlen((YCHAR *) (xb * pos), size);
7327: /* MUTANT (rep_op) */		name_len = mystrnlen((YCHAR *) (xb % pos), size);
7328: /* MUTANT (rep_op) */		if (ncopied - name_len + 1 < bsize) {
7328: /* MUTANT (rep_op) */		if (ncopied * name_len + 1 < bsize) {
7328: /* MUTANT (rep_op) */		if (ncopied % name_len + 1 < bsize) {
7328: /* MUTANT (rep_op) */		if (ncopied + name_len - 1 < bsize) {
7328: /* MUTANT (rep_op) */		if (ncopied + name_len * 1 < bsize) {
7328: /* MUTANT (rep_op) */		if (ncopied + name_len % 1 < bsize) {
7328: /* MUTANT (rep_op) */		if (ncopied + name_len + 1 <= bsize) {
7328: /* MUTANT (rep_op) */		if (ncopied + name_len + 1 > bsize) {
7328: /* MUTANT (rep_op) */		if (ncopied + name_len + 1 >= bsize) {
7328: /* MUTANT (rep_op) */		if (ncopied + name_len + 1 == bsize) {
7328: /* MUTANT (rep_op) */		if (ncopied + name_len + 1 != bsize) {
7328: /* MUTANT (rep_const) */		if (ncopied + name_len + 0 < bsize) {
7328: /* MUTANT (rep_const) */		if (ncopied + name_len + -1 < bsize) {
7328: /* MUTANT (rep_const) */		if (ncopied + name_len + ((1)+1) < bsize) {
7328: /* MUTANT (negate) */		if(! (ncopied + name_len + 1 < bsize)) {
7329: /* MUTANT (del_stmt) */ /* 			mymemcpy(buf, xb + pos, name_len * sizeof(YCHAR)); */ 
7329: /* MUTANT (rep_op) */			mymemcpy(buf, xb - pos, name_len * sizeof(YCHAR));
7329: /* MUTANT (rep_op) */			mymemcpy(buf, xb * pos, name_len * sizeof(YCHAR));
7329: /* MUTANT (rep_op) */			mymemcpy(buf, xb % pos, name_len * sizeof(YCHAR));
7330: /* MUTANT (del_stmt) */ /* 			buf += name_len; */ 
7330: /* MUTANT (rep_op) */			buf -= name_len;
7330: /* MUTANT (rep_op) */			buf *= name_len;
7330: /* MUTANT (rep_op) */			buf %= name_len;
7331: /* MUTANT (del_stmt) */ /* 			*buf = '\0'; */ 
7331: /* MUTANT (rep_const) */			*buf = '\1';
7331: /* MUTANT (rep_const) */			*buf = '\-1';
7332: /* MUTANT (del_stmt) */ /* 			buf++; */ 
7332: /* MUTANT (rep_op) */			buf--;
7333: /* MUTANT (rep_op) */			if (sizeof(YCHAR) <= 1) {
7333: /* MUTANT (rep_op) */			if (sizeof(YCHAR) < 1) {
7333: /* MUTANT (rep_op) */			if (sizeof(YCHAR) >= 1) {
7333: /* MUTANT (rep_op) */			if (sizeof(YCHAR) == 1) {
7333: /* MUTANT (rep_op) */			if (sizeof(YCHAR) != 1) {
7333: /* MUTANT (rep_const) */			if (sizeof(YCHAR) > 0) {
7333: /* MUTANT (rep_const) */			if (sizeof(YCHAR) > -1) {
7333: /* MUTANT (rep_const) */			if (sizeof(YCHAR) > ((1)+1)) {
7333: /* MUTANT (negate) */			if(! (sizeof(YCHAR) > 1)) {
7334: /* MUTANT (del_stmt) */ /* 				*buf = '\0'; */ 
7334: /* MUTANT (rep_const) */				*buf = '\1';
7334: /* MUTANT (rep_const) */				*buf = '\-1';
7335: /* MUTANT (del_stmt) */ /* 				buf++; */ 
7335: /* MUTANT (rep_op) */				buf--;
7337: /* MUTANT (rep_op) */			ncopied -= (name_len + 1);
7337: /* MUTANT (rep_op) */			ncopied *= (name_len + 1);
7337: /* MUTANT (rep_op) */			ncopied %= (name_len + 1);
7337: /* MUTANT (rep_op) */			ncopied += (name_len - 1);
7337: /* MUTANT (rep_op) */			ncopied += (name_len * 1);
7337: /* MUTANT (rep_op) */			ncopied += (name_len % 1);
7337: /* MUTANT (rep_const) */			ncopied += (name_len + 0);
7337: /* MUTANT (rep_const) */			ncopied += (name_len + -1);
7337: /* MUTANT (rep_const) */			ncopied += (name_len + ((1)+1));
7339: /* MUTANT (del_stmt) */ /* 			filled = 1; */ 
7339: /* MUTANT (rep_const) */			filled = 0;
7339: /* MUTANT (rep_const) */			filled = -1;
7339: /* MUTANT (rep_const) */			filled = ((1)+1);
7341: /* MUTANT (rep_op) */		pos -= size;
7341: /* MUTANT (rep_op) */		pos *= size;
7341: /* MUTANT (rep_op) */		pos %= size;
7342: /* MUTANT (rep_op) */		if (pos <= xb_size - sizeof(int))
7342: /* MUTANT (rep_op) */		if (pos > xb_size - sizeof(int))
7342: /* MUTANT (rep_op) */		if (pos >= xb_size - sizeof(int))
7342: /* MUTANT (rep_op) */		if (pos == xb_size - sizeof(int))
7342: /* MUTANT (rep_op) */		if (pos != xb_size - sizeof(int))
7342: /* MUTANT (negate) */		if(! (pos < xb_size - sizeof(int)))
7343: /* MUTANT (rep_op) */			mymemcpy(&size, xb - pos, sizeof(int));
7343: /* MUTANT (rep_op) */			mymemcpy(&size, xb * pos, sizeof(int));
7343: /* MUTANT (rep_op) */			mymemcpy(&size, xb % pos, sizeof(int));
7345: /* MUTANT (rep_const) */			size = 1;
7345: /* MUTANT (rep_const) */			size = -1;
7352: /* MUTANT (del_stmt) */ /* 	return nval_used(xb, xb_size) > 0; */ 
7352: /* MUTANT (rep_op) */	return nval_used(xb, xb_size) <= 0;
7352: /* MUTANT (rep_op) */	return nval_used(xb, xb_size) < 0;
7352: /* MUTANT (rep_op) */	return nval_used(xb, xb_size) >= 0;
7352: /* MUTANT (rep_op) */	return nval_used(xb, xb_size) == 0;
7352: /* MUTANT (rep_op) */	return nval_used(xb, xb_size) != 0;
7352: /* MUTANT (rep_const) */	return nval_used(xb, xb_size) > 1;
7352: /* MUTANT (rep_const) */	return nval_used(xb, xb_size) > -1;
7386: /* MUTANT (del_stmt) */ /* 	yaffsfs_lastError = err; */ 
7391: /* MUTANT (del_stmt) */ /* 	return yaffsfs_lastError; */ 
7402: /* MUTANT (del_stmt) */ /* 	pthread_mutex_lock( &mutex1 ); */ 
7407: /* MUTANT (del_stmt) */ /* 	pthread_mutex_unlock( &mutex1 ); */ 
7412: /* MUTANT (del_stmt) */ /* 	pthread_mutex_init( &mutex1, NULL); */ 
7432: /* MUTANT (del_stmt) */ /* 	return time(NULL); */ 
7436: /* MUTANT (rep_const) */static int yaffs_kill_alloc = 1;
7436: /* MUTANT (rep_const) */static int yaffs_kill_alloc = -1;
7437: /* MUTANT (del_stmt) */ /* static size_t total_malloced = 0; */ 
7437: /* MUTANT (rep_const) */static size_t total_malloced = 1;
7437: /* MUTANT (rep_const) */static size_t total_malloced = -1;
7438: /* MUTANT (del_stmt) */ /* static size_t malloc_limit = 0 & 6000000; */ 
7438: /* MUTANT (rep_const) */static size_t malloc_limit = 1 & 6000000;
7438: /* MUTANT (rep_const) */static size_t malloc_limit = -1 & 6000000;
7438: /* MUTANT (rep_const) */static size_t malloc_limit = 0 & 0;
7438: /* MUTANT (rep_const) */static size_t malloc_limit = 0 & 1;
7438: /* MUTANT (rep_const) */static size_t malloc_limit = 0 & -1;
7438: /* MUTANT (rep_const) */static size_t malloc_limit = 0 & ((6000000)+1);
7438: /* MUTANT (rep_const) */static size_t malloc_limit = 0 & ((6000000)-1);
7442: /* MUTANT (del_stmt) */ /* 	void * this; */ 
7443: /* MUTANT (negate) */	if(!(yaffs_kill_alloc))
7445: /* MUTANT (rep_op) */	if(malloc_limit || malloc_limit <(total_malloced + size) )
7445: /* MUTANT (rep_op) */	if(malloc_limit && malloc_limit <=(total_malloced + size) )
7445: /* MUTANT (rep_op) */	if(malloc_limit && malloc_limit >(total_malloced + size) )
7445: /* MUTANT (rep_op) */	if(malloc_limit && malloc_limit >=(total_malloced + size) )
7445: /* MUTANT (rep_op) */	if(malloc_limit && malloc_limit ==(total_malloced + size) )
7445: /* MUTANT (rep_op) */	if(malloc_limit && malloc_limit !=(total_malloced + size) )
7445: /* MUTANT (rep_op) */	if(malloc_limit && malloc_limit <(total_malloced - size) )
7445: /* MUTANT (rep_op) */	if(malloc_limit && malloc_limit <(total_malloced * size) )
7445: /* MUTANT (rep_op) */	if(malloc_limit && malloc_limit <(total_malloced % size) )
7445: /* MUTANT (negate) */	if(!(malloc_limit && malloc_limit <(total_malloced + size) ))
7448: /* MUTANT (del_stmt) */ /* 	this = malloc(size); */ 
7449: /* MUTANT (negate) */	if(!(this))
7450: /* MUTANT (rep_op) */		total_malloced -= size;
7450: /* MUTANT (rep_op) */		total_malloced *= size;
7450: /* MUTANT (rep_op) */		total_malloced %= size;
7451: /* MUTANT (del_stmt) */ /* 	return this; */ 
7456: /* MUTANT (del_stmt) */ /* 	free(ptr); */ 
7461: /* MUTANT (del_stmt) */ /* 	yaffsfs_LockInit(); */ 
7484: /* MUTANT (rep_const) */const char *yaffs_ramem2k_c_version = "$Id: yaffs_ramem2k.c,v 1.0 2010-02-18 01:18:04 charles Exp $";
7484: /* MUTANT (rep_const) */const char *yaffs_ramem2k_c_version = "$Id: yaffs_ramem2k.c,v 1.1 2010-02-18 01:18:04 charles Exp $";
7484: /* MUTANT (rep_const) */const char *yaffs_ramem2k_c_version = "$Id: yaffs_ramem2k.c,v 1.-1 2010-02-18 01:18:04 charles Exp $";
7484: /* MUTANT (rep_const) */const char *yaffs_ramem2k_c_version = "$Id: yaffs_ramem2k.c,v 1.((8)+1) 2010-02-18 01:18:04 charles Exp $";
7484: /* MUTANT (rep_const) */const char *yaffs_ramem2k_c_version = "$Id: yaffs_ramem2k.c,v 1.((8)-1) 2010-02-18 01:18:04 charles Exp $";
7484: /* MUTANT (rep_const) */const char *yaffs_ramem2k_c_version = "$Id: yaffs_ramem2k.c,v 1.8 0-02-18 01:18:04 charles Exp $";
7484: /* MUTANT (rep_const) */const char *yaffs_ramem2k_c_version = "$Id: yaffs_ramem2k.c,v 1.8 1-02-18 01:18:04 charles Exp $";
7484: /* MUTANT (rep_const) */const char *yaffs_ramem2k_c_version = "$Id: yaffs_ramem2k.c,v 1.8 -1-02-18 01:18:04 charles Exp $";
7484: /* MUTANT (rep_const) */const char *yaffs_ramem2k_c_version = "$Id: yaffs_ramem2k.c,v 1.8 ((2010)+1)-02-18 01:18:04 charles Exp $";
7484: /* MUTANT (rep_const) */const char *yaffs_ramem2k_c_version = "$Id: yaffs_ramem2k.c,v 1.8 ((2010)-1)-02-18 01:18:04 charles Exp $";
7484: /* MUTANT (rep_const) */const char *yaffs_ramem2k_c_version = "$Id: yaffs_ramem2k.c,v 1.8 20100-18 01:18:04 charles Exp $";
7484: /* MUTANT (rep_const) */const char *yaffs_ramem2k_c_version = "$Id: yaffs_ramem2k.c,v 1.8 20101-18 01:18:04 charles Exp $";
7484: /* MUTANT (rep_const) */const char *yaffs_ramem2k_c_version = "$Id: yaffs_ramem2k.c,v 1.8 2010-1-18 01:18:04 charles Exp $";
7484: /* MUTANT (rep_const) */const char *yaffs_ramem2k_c_version = "$Id: yaffs_ramem2k.c,v 1.8 2010((-02)+1)-18 01:18:04 charles Exp $";
7484: /* MUTANT (rep_const) */const char *yaffs_ramem2k_c_version = "$Id: yaffs_ramem2k.c,v 1.8 2010((-02)-1)-18 01:18:04 charles Exp $";
7484: /* MUTANT (rep_const) */const char *yaffs_ramem2k_c_version = "$Id: yaffs_ramem2k.c,v 1.8 2010-020 01:18:04 charles Exp $";
7484: /* MUTANT (rep_const) */const char *yaffs_ramem2k_c_version = "$Id: yaffs_ramem2k.c,v 1.8 2010-021 01:18:04 charles Exp $";
7484: /* MUTANT (rep_const) */const char *yaffs_ramem2k_c_version = "$Id: yaffs_ramem2k.c,v 1.8 2010-02-1 01:18:04 charles Exp $";
7484: /* MUTANT (rep_const) */const char *yaffs_ramem2k_c_version = "$Id: yaffs_ramem2k.c,v 1.8 2010-02((-18)+1) 01:18:04 charles Exp $";
7484: /* MUTANT (rep_const) */const char *yaffs_ramem2k_c_version = "$Id: yaffs_ramem2k.c,v 1.8 2010-02((-18)-1) 01:18:04 charles Exp $";
7484: /* MUTANT (rep_const) */const char *yaffs_ramem2k_c_version = "$Id: yaffs_ramem2k.c,v 1.8 2010-02-18 0:18:04 charles Exp $";
7484: /* MUTANT (rep_const) */const char *yaffs_ramem2k_c_version = "$Id: yaffs_ramem2k.c,v 1.8 2010-02-18 1:18:04 charles Exp $";
7484: /* MUTANT (rep_const) */const char *yaffs_ramem2k_c_version = "$Id: yaffs_ramem2k.c,v 1.8 2010-02-18 -1:18:04 charles Exp $";
7484: /* MUTANT (rep_const) */const char *yaffs_ramem2k_c_version = "$Id: yaffs_ramem2k.c,v 1.8 2010-02-18 ((01)+1):18:04 charles Exp $";
7484: /* MUTANT (rep_const) */const char *yaffs_ramem2k_c_version = "$Id: yaffs_ramem2k.c,v 1.8 2010-02-18 ((01)-1):18:04 charles Exp $";
7484: /* MUTANT (rep_const) */const char *yaffs_ramem2k_c_version = "$Id: yaffs_ramem2k.c,v 1.8 2010-02-18 01:0:04 charles Exp $";
7484: /* MUTANT (rep_const) */const char *yaffs_ramem2k_c_version = "$Id: yaffs_ramem2k.c,v 1.8 2010-02-18 01:1:04 charles Exp $";
7484: /* MUTANT (rep_const) */const char *yaffs_ramem2k_c_version = "$Id: yaffs_ramem2k.c,v 1.8 2010-02-18 01:-1:04 charles Exp $";
7484: /* MUTANT (rep_const) */const char *yaffs_ramem2k_c_version = "$Id: yaffs_ramem2k.c,v 1.8 2010-02-18 01:((18)+1):04 charles Exp $";
7484: /* MUTANT (rep_const) */const char *yaffs_ramem2k_c_version = "$Id: yaffs_ramem2k.c,v 1.8 2010-02-18 01:((18)-1):04 charles Exp $";
7484: /* MUTANT (rep_const) */const char *yaffs_ramem2k_c_version = "$Id: yaffs_ramem2k.c,v 1.8 2010-02-18 01:18:0 charles Exp $";
7484: /* MUTANT (rep_const) */const char *yaffs_ramem2k_c_version = "$Id: yaffs_ramem2k.c,v 1.8 2010-02-18 01:18:1 charles Exp $";
7484: /* MUTANT (rep_const) */const char *yaffs_ramem2k_c_version = "$Id: yaffs_ramem2k.c,v 1.8 2010-02-18 01:18:-1 charles Exp $";
7484: /* MUTANT (rep_const) */const char *yaffs_ramem2k_c_version = "$Id: yaffs_ramem2k.c,v 1.8 2010-02-18 01:18:((04)+1) charles Exp $";
7484: /* MUTANT (rep_const) */const char *yaffs_ramem2k_c_version = "$Id: yaffs_ramem2k.c,v 1.8 2010-02-18 01:18:((04)-1) charles Exp $";
7503: #define EM_SIZE_IN_MEG (0) /* MUTANT (rep_const) */
7503: #define EM_SIZE_IN_MEG (1) /* MUTANT (rep_const) */
7503: #define EM_SIZE_IN_MEG (-1) /* MUTANT (rep_const) */
7503: #define EM_SIZE_IN_MEG (((8)+1)) /* MUTANT (rep_const) */
7503: #define EM_SIZE_IN_MEG (((8)-1)) /* MUTANT (rep_const) */
7504: #define PAGE_DATA_SIZE  (0) /* MUTANT (rep_const) */
7504: #define PAGE_DATA_SIZE  (1) /* MUTANT (rep_const) */
7504: #define PAGE_DATA_SIZE  (-1) /* MUTANT (rep_const) */
7504: #define PAGE_DATA_SIZE  (((2048)+1)) /* MUTANT (rep_const) */
7504: #define PAGE_DATA_SIZE  (((2048)-1)) /* MUTANT (rep_const) */
7505: #define PAGE_SPARE_SIZE (0) /* MUTANT (rep_const) */
7505: #define PAGE_SPARE_SIZE (1) /* MUTANT (rep_const) */
7505: #define PAGE_SPARE_SIZE (-1) /* MUTANT (rep_const) */
7505: #define PAGE_SPARE_SIZE (((64)+1)) /* MUTANT (rep_const) */
7505: #define PAGE_SPARE_SIZE (((64)-1)) /* MUTANT (rep_const) */
7506: #define PAGES_PER_BLOCK (0) /* MUTANT (rep_const) */
7506: #define PAGES_PER_BLOCK (1) /* MUTANT (rep_const) */
7506: #define PAGES_PER_BLOCK (-1) /* MUTANT (rep_const) */
7506: #define PAGES_PER_BLOCK (((64)+1)) /* MUTANT (rep_const) */
7506: #define PAGES_PER_BLOCK (((64)-1)) /* MUTANT (rep_const) */
7510: #define EM_SIZE_IN_BYTES (EM_SIZE_IN_MEG * (0<<20)) /* MUTANT (rep_const) */
7510: #define EM_SIZE_IN_BYTES (EM_SIZE_IN_MEG * (-1<<20)) /* MUTANT (rep_const) */
7510: #define EM_SIZE_IN_BYTES (EM_SIZE_IN_MEG * (((1)+1)<<20)) /* MUTANT (rep_const) */
7510: #define EM_SIZE_IN_BYTES (EM_SIZE_IN_MEG * (1<<0)) /* MUTANT (rep_const) */
7510: #define EM_SIZE_IN_BYTES (EM_SIZE_IN_MEG * (1<<1)) /* MUTANT (rep_const) */
7510: #define EM_SIZE_IN_BYTES (EM_SIZE_IN_MEG * (1<<-1)) /* MUTANT (rep_const) */
7510: #define EM_SIZE_IN_BYTES (EM_SIZE_IN_MEG * (1<<((20)+1))) /* MUTANT (rep_const) */
7510: #define EM_SIZE_IN_BYTES (EM_SIZE_IN_MEG * (1<<((20)-1))) /* MUTANT (rep_const) */
7516: #define BLOCKS_PER_MEG ((0<<20)/(PAGES_PER_BLOCK * PAGE_DATA_SIZE)) /* MUTANT (rep_const) */
7516: #define BLOCKS_PER_MEG ((-1<<20)/(PAGES_PER_BLOCK * PAGE_DATA_SIZE)) /* MUTANT (rep_const) */
7516: #define BLOCKS_PER_MEG ((((1)+1)<<20)/(PAGES_PER_BLOCK * PAGE_DATA_SIZE)) /* MUTANT (rep_const) */
7516: #define BLOCKS_PER_MEG ((1<<0)/(PAGES_PER_BLOCK * PAGE_DATA_SIZE)) /* MUTANT (rep_const) */
7516: #define BLOCKS_PER_MEG ((1<<1)/(PAGES_PER_BLOCK * PAGE_DATA_SIZE)) /* MUTANT (rep_const) */
7516: #define BLOCKS_PER_MEG ((1<<-1)/(PAGES_PER_BLOCK * PAGE_DATA_SIZE)) /* MUTANT (rep_const) */
7516: #define BLOCKS_PER_MEG ((1<<((20)+1))/(PAGES_PER_BLOCK * PAGE_DATA_SIZE)) /* MUTANT (rep_const) */
7516: #define BLOCKS_PER_MEG ((1<<((20)-1))/(PAGES_PER_BLOCK * PAGE_DATA_SIZE)) /* MUTANT (rep_const) */
7521: /* MUTANT (del_stmt) */ /* 	u8 data[PAGE_TOTAL_SIZE]; */  // Data + spare
7522: /* MUTANT (del_stmt) */ /* 	int empty; */       // is this empty?
7523: /* MUTANT (del_stmt) */ /* } nandemul_Page; */ 
7528: /* MUTANT (del_stmt) */ /* 	nandemul_Page *page[PAGES_PER_BLOCK]; */ 
7529: /* MUTANT (del_stmt) */ /* 	int damaged; */ 	
7530: /* MUTANT (del_stmt) */ /* } nandemul_Block; */ 
7536: /* MUTANT (del_stmt) */ /* 	nandemul_Block**block; */ 
7537: /* MUTANT (del_stmt) */ /* 	int nBlocks; */ 
7538: /* MUTANT (del_stmt) */ /* } nandemul_Device; */ 
7540: /* MUTANT (del_stmt) */ /* static nandemul_Device ned; */ 
7542: /* MUTANT (del_stmt) */ /* static int sizeInMB = EM_SIZE_IN_MEG; */ 
7548: /* MUTANT (rep_op) */	if(n <= 0) schedule_timeout(n);
7548: /* MUTANT (rep_op) */	if(n < 0) schedule_timeout(n);
7548: /* MUTANT (rep_op) */	if(n >= 0) schedule_timeout(n);
7548: /* MUTANT (rep_op) */	if(n == 0) schedule_timeout(n);
7548: /* MUTANT (rep_op) */	if(n != 0) schedule_timeout(n);
7548: /* MUTANT (rep_const) */	if(n > 1) schedule_timeout(n);
7548: /* MUTANT (rep_const) */	if(n > -1) schedule_timeout(n);
7548: /* MUTANT (negate) */	if(!(n > 0)) schedule_timeout(n);
7556: /* MUTANT (del_stmt) */ /* 	int i; */ 
7558: /* MUTANT (del_stmt) */ /* 	nandemul_Block *blk; */ 
7560: /* MUTANT (rep_op) */	if(blockNumber <= 0 || blockNumber >= ned.nBlocks)
7560: /* MUTANT (rep_op) */	if(blockNumber > 0 || blockNumber >= ned.nBlocks)
7560: /* MUTANT (rep_op) */	if(blockNumber >= 0 || blockNumber >= ned.nBlocks)
7560: /* MUTANT (rep_op) */	if(blockNumber == 0 || blockNumber >= ned.nBlocks)
7560: /* MUTANT (rep_op) */	if(blockNumber != 0 || blockNumber >= ned.nBlocks)
7560: /* MUTANT (rep_op) */	if(blockNumber < 0 && blockNumber >= ned.nBlocks)
7560: /* MUTANT (rep_op) */	if(blockNumber < 0 || blockNumber <= ned.nBlocks)
7560: /* MUTANT (rep_op) */	if(blockNumber < 0 || blockNumber < ned.nBlocks)
7560: /* MUTANT (rep_op) */	if(blockNumber < 0 || blockNumber > ned.nBlocks)
7560: /* MUTANT (rep_op) */	if(blockNumber < 0 || blockNumber == ned.nBlocks)
7560: /* MUTANT (rep_op) */	if(blockNumber < 0 || blockNumber != ned.nBlocks)
7560: /* MUTANT (rep_const) */	if(blockNumber < 1 || blockNumber >= ned.nBlocks)
7560: /* MUTANT (rep_const) */	if(blockNumber < -1 || blockNumber >= ned.nBlocks)
7560: /* MUTANT (negate) */	if(!(blockNumber < 0 || blockNumber >= ned.nBlocks))
7562: /* MUTANT (del_stmt) */ /* 		return; */ 
7567: /* MUTANT (rep_op) */	for(i = 0; i <= PAGES_PER_BLOCK; i++)
7567: /* MUTANT (rep_op) */	for(i = 0; i > PAGES_PER_BLOCK; i++)
7567: /* MUTANT (rep_op) */	for(i = 0; i >= PAGES_PER_BLOCK; i++)
7567: /* MUTANT (rep_op) */	for(i = 0; i == PAGES_PER_BLOCK; i++)
7567: /* MUTANT (rep_op) */	for(i = 0; i != PAGES_PER_BLOCK; i++)
7567: /* MUTANT (rep_op) */	for(i = 0; i < PAGES_PER_BLOCK; i--)
7567: /* MUTANT (rep_const) */	for(i = 1; i < PAGES_PER_BLOCK; i++)
7567: /* MUTANT (rep_const) */	for(i = -1; i < PAGES_PER_BLOCK; i++)
7569: /* MUTANT (del_stmt) */ /* 		mymemset(blk->page[i],0xff,sizeof(nandemul_Page)); */ 
7569: /* MUTANT (rep_const) */		mymemset(blk->page[i],1xff,sizeof(nandemul_Page));
7569: /* MUTANT (rep_const) */		mymemset(blk->page[i],-1xff,sizeof(nandemul_Page));
7570: /* MUTANT (del_stmt) */ /* 		blk->page[i]->empty = 1; */ 
7570: /* MUTANT (rep_const) */		blk->page[i]->empty = 0;
7570: /* MUTANT (rep_const) */		blk->page[i]->empty = -1;
7570: /* MUTANT (rep_const) */		blk->page[i]->empty = ((1)+1);
7572: /* MUTANT (rep_const) */	nandemul_yield(0);
7572: /* MUTANT (rep_const) */	nandemul_yield(1);
7572: /* MUTANT (rep_const) */	nandemul_yield(-1);
7572: /* MUTANT (rep_const) */	nandemul_yield(((2)+1));
7572: /* MUTANT (rep_const) */	nandemul_yield(((2)-1));
7578: /* MUTANT (del_stmt) */ /* 	return EM_SIZE_IN_MEG * BLOCKS_PER_MEG; */ 
7585: /* MUTANT (del_stmt) */ /* 	static int initialised = 0; */ 
7585: /* MUTANT (rep_const) */	static int initialised = 1;
7585: /* MUTANT (rep_const) */	static int initialised = -1;
7587: /* MUTANT (del_stmt) */ /* 	int i,j; */ 
7589: /* MUTANT (del_stmt) */ /* 	int fail = 0; */ 
7589: /* MUTANT (rep_const) */	int fail = 1;
7589: /* MUTANT (rep_const) */	int fail = -1;
7590: /* MUTANT (del_stmt) */ /* 	int nBlocks; */  
7592: /* MUTANT (del_stmt) */ /* 	int nAllocated = 0; */ 
7592: /* MUTANT (rep_const) */	int nAllocated = 1;
7592: /* MUTANT (rep_const) */	int nAllocated = -1;
7594: /* MUTANT (negate) */	if(!(initialised)) 
7596: /* MUTANT (del_stmt) */ /* 		return YAFFS_OK; */ 
7603: /* MUTANT (del_stmt) */ /* 	ned.block = malloc(sizeof(nandemul_Block*) * nBlocks ); */ 
7605: /* MUTANT (del_stmt) */ /* 	if(!ned.block) return YAFFS_FAIL; */ 
7605: /* MUTANT (negate) */	if(!(!ned.block)) return YAFFS_FAIL;
7611: /* MUTANT (rep_op) */	for(i=fail=0; i <=nBlocks; i++)
7611: /* MUTANT (rep_op) */	for(i=fail=0; i >nBlocks; i++)
7611: /* MUTANT (rep_op) */	for(i=fail=0; i >=nBlocks; i++)
7611: /* MUTANT (rep_op) */	for(i=fail=0; i ==nBlocks; i++)
7611: /* MUTANT (rep_op) */	for(i=fail=0; i !=nBlocks; i++)
7611: /* MUTANT (rep_op) */	for(i=fail=0; i <nBlocks; i--)
7611: /* MUTANT (rep_const) */	for(i=fail=1; i <nBlocks; i++)
7611: /* MUTANT (rep_const) */	for(i=fail=-1; i <nBlocks; i++)
7614: /* MUTANT (del_stmt) */ /* 		nandemul_Block *blk; */ 
7616: /* MUTANT (negate) */		if(!(!(blk = ned.block[i] = malloc(sizeof(nandemul_Block)))))
7618: /* MUTANT (del_stmt) */ /* 		 fail = 1; */ 
7618: /* MUTANT (rep_const) */		 fail = 0;
7618: /* MUTANT (rep_const) */		 fail = -1;
7618: /* MUTANT (rep_const) */		 fail = ((1)+1);
7622: /* MUTANT (rep_op) */			for(j = 0; j <= PAGES_PER_BLOCK; j++)
7622: /* MUTANT (rep_op) */			for(j = 0; j > PAGES_PER_BLOCK; j++)
7622: /* MUTANT (rep_op) */			for(j = 0; j >= PAGES_PER_BLOCK; j++)
7622: /* MUTANT (rep_op) */			for(j = 0; j == PAGES_PER_BLOCK; j++)
7622: /* MUTANT (rep_op) */			for(j = 0; j != PAGES_PER_BLOCK; j++)
7622: /* MUTANT (rep_op) */			for(j = 0; j < PAGES_PER_BLOCK; j--)
7622: /* MUTANT (rep_const) */			for(j = 1; j < PAGES_PER_BLOCK; j++)
7622: /* MUTANT (rep_const) */			for(j = -1; j < PAGES_PER_BLOCK; j++)
7624: /* MUTANT (rep_op) */				if((blk->page[j] = malloc(sizeof(nandemul_Page))) != 0)
7624: /* MUTANT (rep_const) */				if((blk->page[j] = malloc(sizeof(nandemul_Page))) == 1)
7624: /* MUTANT (rep_const) */				if((blk->page[j] = malloc(sizeof(nandemul_Page))) == -1)
7624: /* MUTANT (negate) */				if(!((blk->page[j] = malloc(sizeof(nandemul_Page))) == 0))
7626: /* MUTANT (del_stmt) */ /* 					fail = 1; */ 
7626: /* MUTANT (rep_const) */					fail = 0;
7626: /* MUTANT (rep_const) */					fail = -1;
7626: /* MUTANT (rep_const) */					fail = ((1)+1);
7630: /* MUTANT (del_stmt) */ /* 			ned.block[i]->damaged = 0; */ 
7630: /* MUTANT (rep_const) */			ned.block[i]->damaged = 1;
7630: /* MUTANT (rep_const) */			ned.block[i]->damaged = -1;
7631: /* MUTANT (del_stmt) */ /* 			nAllocated++; */ 
7631: /* MUTANT (rep_op) */			nAllocated--;
7635: /* MUTANT (negate) */	if(!(fail))
7639: /* MUTANT (rep_op) */		for(i = 0; i <= nAllocated; i++)
7639: /* MUTANT (rep_op) */		for(i = 0; i > nAllocated; i++)
7639: /* MUTANT (rep_op) */		for(i = 0; i >= nAllocated; i++)
7639: /* MUTANT (rep_op) */		for(i = 0; i == nAllocated; i++)
7639: /* MUTANT (rep_op) */		for(i = 0; i != nAllocated; i++)
7639: /* MUTANT (rep_op) */		for(i = 0; i < nAllocated; i--)
7639: /* MUTANT (rep_const) */		for(i = 1; i < nAllocated; i++)
7639: /* MUTANT (rep_const) */		for(i = -1; i < nAllocated; i++)
7641: /* MUTANT (del_stmt) */ /* 			kfree(ned.block[i]); */ 
7647: /* MUTANT (rep_const) */			nAllocated/0,sizeInMB);
7647: /* MUTANT (rep_const) */			nAllocated/1,sizeInMB);
7647: /* MUTANT (rep_const) */			nAllocated/-1,sizeInMB);
7647: /* MUTANT (rep_const) */			nAllocated/((64)+1),sizeInMB);
7647: /* MUTANT (rep_const) */			nAllocated/((64)-1),sizeInMB);
7648: /* MUTANT (del_stmt) */ /* 		return 0; */ 
7648: /* MUTANT (rep_const) */		return 1;
7648: /* MUTANT (rep_const) */		return -1;
7653: /* MUTANT (del_stmt) */ /* 	initialised = 1; */ 
7653: /* MUTANT (rep_const) */	initialised = 0;
7653: /* MUTANT (rep_const) */	initialised = -1;
7653: /* MUTANT (rep_const) */	initialised = ((1)+1);
7655: /* MUTANT (del_stmt) */ /* 	return 1; */ 
7655: /* MUTANT (rep_const) */	return 0;
7655: /* MUTANT (rep_const) */	return -1;
7655: /* MUTANT (rep_const) */	return ((1)+1);
7660: /* MUTANT (del_stmt) */ /* 	int blk; */ 
7661: /* MUTANT (del_stmt) */ /* 	int pg; */ 
7662: /* MUTANT (del_stmt) */ /* 	int i; */ 
7664: /* MUTANT (del_stmt) */ /* 	u8 *x; */ 
7667: /* MUTANT (del_stmt) */ /* 	blk = nand_chunk/PAGES_PER_BLOCK; */ 
7668: /* MUTANT (del_stmt) */ /* 	pg = nand_chunk%PAGES_PER_BLOCK; */ 
7668: /* MUTANT (rep_op) */	pg = nand_chunk+PAGES_PER_BLOCK;
7668: /* MUTANT (rep_op) */	pg = nand_chunk-PAGES_PER_BLOCK;
7668: /* MUTANT (rep_op) */	pg = nand_chunk*PAGES_PER_BLOCK;
7671: /* MUTANT (negate) */	if(!(data))
7673: /* MUTANT (del_stmt) */ /* 		x = ned.block[blk]->page[pg]->data; */ 
7675: /* MUTANT (rep_op) */		for(i = 0; i <= PAGE_DATA_SIZE; i++)
7675: /* MUTANT (rep_op) */		for(i = 0; i > PAGE_DATA_SIZE; i++)
7675: /* MUTANT (rep_op) */		for(i = 0; i >= PAGE_DATA_SIZE; i++)
7675: /* MUTANT (rep_op) */		for(i = 0; i == PAGE_DATA_SIZE; i++)
7675: /* MUTANT (rep_op) */		for(i = 0; i != PAGE_DATA_SIZE; i++)
7675: /* MUTANT (rep_op) */		for(i = 0; i < PAGE_DATA_SIZE; i--)
7675: /* MUTANT (rep_const) */		for(i = 1; i < PAGE_DATA_SIZE; i++)
7675: /* MUTANT (rep_const) */		for(i = -1; i < PAGE_DATA_SIZE; i++)
7677: /* MUTANT (del_stmt) */ /* 			x[i] &=data[i]; */ 
7680: /* MUTANT (rep_const) */		ned.block[blk]->page[pg]->empty = 1;
7680: /* MUTANT (rep_const) */		ned.block[blk]->page[pg]->empty = -1;
7684: /* MUTANT (negate) */	if(!(tags))
7686: /* MUTANT (del_stmt) */ /* 		x = &ned.block[blk]->page[pg]->data[PAGE_DATA_SIZE]; */ 
7688: /* MUTANT (del_stmt) */ /* 		yaffs_pack_tags2((struct yaffs_packed_tags2 *)x,tags, !dev->param.no_tags_ecc); */ 
7692: /* MUTANT (rep_op) */	if(tags && data)
7692: /* MUTANT (negate) */	if(!(tags || data))
7694: /* MUTANT (del_stmt) */ /* 		nandemul_yield(1); */ 
7694: /* MUTANT (rep_const) */		nandemul_yield(0);
7694: /* MUTANT (rep_const) */		nandemul_yield(-1);
7694: /* MUTANT (rep_const) */		nandemul_yield(((1)+1));
7703: /* MUTANT (del_stmt) */ /* 	int blk; */ 
7704: /* MUTANT (del_stmt) */ /* 	int pg; */ 
7706: /* MUTANT (del_stmt) */ /* 	u8 *x; */ 
7710: /* MUTANT (del_stmt) */ /* 	blk = nand_chunk/PAGES_PER_BLOCK; */ 
7711: /* MUTANT (del_stmt) */ /* 	pg = nand_chunk%PAGES_PER_BLOCK; */ 
7711: /* MUTANT (rep_op) */	pg = nand_chunk+PAGES_PER_BLOCK;
7711: /* MUTANT (rep_op) */	pg = nand_chunk-PAGES_PER_BLOCK;
7711: /* MUTANT (rep_op) */	pg = nand_chunk*PAGES_PER_BLOCK;
7714: /* MUTANT (negate) */	if(!(data))
7716: /* MUTANT (del_stmt) */ /* 		mymemcpy(data,ned.block[blk]->page[pg]->data,PAGE_DATA_SIZE); */ 
7720: /* MUTANT (negate) */	if(!(tags))
7722: /* MUTANT (del_stmt) */ /* 		x = &ned.block[blk]->page[pg]->data[PAGE_DATA_SIZE]; */ 
7724: /* MUTANT (del_stmt) */ /* 		yaffs_unpack_tags2(tags,(struct yaffs_packed_tags2 *)x, !dev->param.no_tags_ecc); */ 
7733: /* MUTANT (del_stmt) */ /* 	int blk; */ 
7734: /* MUTANT (del_stmt) */ /* 	int pg; */ 
7735: /* MUTANT (del_stmt) */ /* 	int i; */ 
7739: /* MUTANT (del_stmt) */ /* 	blk = nand_chunk/PAGES_PER_BLOCK; */ 
7740: /* MUTANT (del_stmt) */ /* 	pg = nand_chunk%PAGES_PER_BLOCK; */ 
7740: /* MUTANT (rep_op) */	pg = nand_chunk+PAGES_PER_BLOCK;
7740: /* MUTANT (rep_op) */	pg = nand_chunk-PAGES_PER_BLOCK;
7740: /* MUTANT (rep_op) */	pg = nand_chunk*PAGES_PER_BLOCK;
7743: /* MUTANT (rep_op) */	for(i = 0; i <= PAGE_TOTAL_SIZE; i++)
7743: /* MUTANT (rep_op) */	for(i = 0; i > PAGE_TOTAL_SIZE; i++)
7743: /* MUTANT (rep_op) */	for(i = 0; i >= PAGE_TOTAL_SIZE; i++)
7743: /* MUTANT (rep_op) */	for(i = 0; i == PAGE_TOTAL_SIZE; i++)
7743: /* MUTANT (rep_op) */	for(i = 0; i != PAGE_TOTAL_SIZE; i++)
7743: /* MUTANT (rep_op) */	for(i = 0; i < PAGE_TOTAL_SIZE; i--)
7743: /* MUTANT (rep_const) */	for(i = 1; i < PAGE_TOTAL_SIZE; i++)
7743: /* MUTANT (rep_const) */	for(i = -1; i < PAGE_TOTAL_SIZE; i++)
7745: /* MUTANT (rep_op) */		if(ned.block[blk]->page[pg]->data[i] == 0xFF)
7745: /* MUTANT (rep_const) */		if(ned.block[blk]->page[pg]->data[i] != 1xFF)
7745: /* MUTANT (rep_const) */		if(ned.block[blk]->page[pg]->data[i] != -1xFF)
7745: /* MUTANT (negate) */		if(!(ned.block[blk]->page[pg]->data[i] != 0xFF))
7747: /* MUTANT (del_stmt) */ /* 			return YAFFS_FAIL; */ 
7759: /* MUTANT (rep_op) */	if(blockNumber <= 0 || blockNumber >= ned.nBlocks)
7759: /* MUTANT (rep_op) */	if(blockNumber > 0 || blockNumber >= ned.nBlocks)
7759: /* MUTANT (rep_op) */	if(blockNumber >= 0 || blockNumber >= ned.nBlocks)
7759: /* MUTANT (rep_op) */	if(blockNumber == 0 || blockNumber >= ned.nBlocks)
7759: /* MUTANT (rep_op) */	if(blockNumber != 0 || blockNumber >= ned.nBlocks)
7759: /* MUTANT (rep_op) */	if(blockNumber < 0 && blockNumber >= ned.nBlocks)
7759: /* MUTANT (rep_op) */	if(blockNumber < 0 || blockNumber <= ned.nBlocks)
7759: /* MUTANT (rep_op) */	if(blockNumber < 0 || blockNumber < ned.nBlocks)
7759: /* MUTANT (rep_op) */	if(blockNumber < 0 || blockNumber > ned.nBlocks)
7759: /* MUTANT (rep_op) */	if(blockNumber < 0 || blockNumber == ned.nBlocks)
7759: /* MUTANT (rep_op) */	if(blockNumber < 0 || blockNumber != ned.nBlocks)
7759: /* MUTANT (rep_const) */	if(blockNumber < 1 || blockNumber >= ned.nBlocks)
7759: /* MUTANT (rep_const) */	if(blockNumber < -1 || blockNumber >= ned.nBlocks)
7759: /* MUTANT (negate) */	if(!(blockNumber < 0 || blockNumber >= ned.nBlocks))
7765: /* MUTANT (negate) */	else if(!(ned.block[blockNumber]->damaged))
7773: /* MUTANT (del_stmt) */ /* 		nandemul_ReallyEraseBlock(blockNumber); */ 
7781: /* MUTANT (del_stmt) */ /* 	CheckInit(); */ 
7782: /* MUTANT (del_stmt) */ /* 	return YAFFS_OK; */ 
7788: /* MUTANT (del_stmt) */ /* 	u8 *x; */ 
7790: /* MUTANT (del_stmt) */ /* 	x = &ned.block[block_no]->page[0]->data[PAGE_DATA_SIZE]; */ 
7790: /* MUTANT (rep_const) */	x = &ned.block[block_no]->page[1]->data[PAGE_DATA_SIZE];
7790: /* MUTANT (rep_const) */	x = &ned.block[block_no]->page[-1]->data[PAGE_DATA_SIZE];
7792: /* MUTANT (del_stmt) */ /* 	mymemset(x,0,sizeof(struct yaffs_packed_tags2)); */ 
7792: /* MUTANT (rep_const) */	mymemset(x,1,sizeof(struct yaffs_packed_tags2));
7792: /* MUTANT (rep_const) */	mymemset(x,-1,sizeof(struct yaffs_packed_tags2));
7795: /* MUTANT (del_stmt) */ /* 	return YAFFS_OK; */ 
7801: /* MUTANT (del_stmt) */ /* 	struct yaffs_ext_tags tags; */ 
7802: /* MUTANT (del_stmt) */ /* 	int chunkNo; */ 
7804: /* MUTANT (del_stmt) */ /* 	*seq_number = 0; */ 
7804: /* MUTANT (rep_const) */	*seq_number = 1;
7804: /* MUTANT (rep_const) */	*seq_number = -1;
7806: /* MUTANT (del_stmt) */ /* 	chunkNo = block_no * dev->param.chunks_per_block; */ 
7808: /* MUTANT (del_stmt) */ /* 	nandemul2k_ReadChunkWithTagsFromNAND(dev,chunkNo,NULL,&tags); */ 
7809: /* MUTANT (negate) */	if(!(tags.block_bad))
7811: /* MUTANT (del_stmt) */ /* 		*state = YAFFS_BLOCK_STATE_DEAD; */ 
7813: /* MUTANT (negate) */	else if(!(!tags.chunk_used))
7815: /* MUTANT (del_stmt) */ /* 		*state = YAFFS_BLOCK_STATE_EMPTY; */ 
7817: /* MUTANT (negate) */	else if(!(tags.chunk_used))
7819: /* MUTANT (del_stmt) */ /* 		*state = YAFFS_BLOCK_STATE_NEEDS_SCAN; */ 
7820: /* MUTANT (del_stmt) */ /* 		*seq_number = tags.seq_number; */ 
7864: #define YAFFS_CHECKPOINT_MIN_BLOCKS 0 /* MUTANT (rep_const) */
7864: #define YAFFS_CHECKPOINT_MIN_BLOCKS 1 /* MUTANT (rep_const) */
7864: #define YAFFS_CHECKPOINT_MIN_BLOCKS -1 /* MUTANT (rep_const) */
7864: #define YAFFS_CHECKPOINT_MIN_BLOCKS ((60)+1) /* MUTANT (rep_const) */
7864: #define YAFFS_CHECKPOINT_MIN_BLOCKS ((60)-1) /* MUTANT (rep_const) */
7865: #define YAFFS_SMALL_HOLE_THRESHOLD 0 /* MUTANT (rep_const) */
7865: #define YAFFS_SMALL_HOLE_THRESHOLD 1 /* MUTANT (rep_const) */
7865: #define YAFFS_SMALL_HOLE_THRESHOLD -1 /* MUTANT (rep_const) */
7865: #define YAFFS_SMALL_HOLE_THRESHOLD ((4)+1) /* MUTANT (rep_const) */
7865: #define YAFFS_SMALL_HOLE_THRESHOLD ((4)-1) /* MUTANT (rep_const) */
7877: /* MUTANT (del_stmt) */ /* 	int i; */ 
7878: /* MUTANT (del_stmt) */ /* 	unsigned seq; */ 
7879: /* MUTANT (del_stmt) */ /* 	unsigned block_no = 0; */ 
7879: /* MUTANT (rep_const) */	unsigned block_no = 1;
7879: /* MUTANT (rep_const) */	unsigned block_no = -1;
7880: /* MUTANT (del_stmt) */ /* 	struct yaffs_block_info *b; */ 
7882: /* MUTANT (negate) */	if(! (!dev->param.is_yaffs2))
7886: /* MUTANT (del_stmt) */ /* 	seq = dev->seq_number + 1; */ 
7886: /* MUTANT (rep_op) */	seq = dev->seq_number - 1;
7886: /* MUTANT (rep_op) */	seq = dev->seq_number * 1;
7886: /* MUTANT (rep_op) */	seq = dev->seq_number % 1;
7886: /* MUTANT (rep_const) */	seq = dev->seq_number + 0;
7886: /* MUTANT (rep_const) */	seq = dev->seq_number + -1;
7886: /* MUTANT (rep_const) */	seq = dev->seq_number + ((1)+1);
7887: /* MUTANT (del_stmt) */ /* 	b = dev->block_info; */ 
7888: /* MUTANT (rep_op) */	for (i = dev->internal_start_block; i < dev->internal_end_block; i++) {
7888: /* MUTANT (rep_op) */	for (i = dev->internal_start_block; i > dev->internal_end_block; i++) {
7888: /* MUTANT (rep_op) */	for (i = dev->internal_start_block; i >= dev->internal_end_block; i++) {
7888: /* MUTANT (rep_op) */	for (i = dev->internal_start_block; i == dev->internal_end_block; i++) {
7888: /* MUTANT (rep_op) */	for (i = dev->internal_start_block; i != dev->internal_end_block; i++) {
7888: /* MUTANT (rep_op) */	for (i = dev->internal_start_block; i <= dev->internal_end_block; i--) {
7889: /* MUTANT (rep_op) */		if (b->block_state != YAFFS_BLOCK_STATE_FULL &&
7889: /* MUTANT (rep_op) */		if (b->block_state == YAFFS_BLOCK_STATE_FULL ||
7890: /* MUTANT (rep_op) */		    (b->pages_in_use - b->soft_del_pages) <=
7890: /* MUTANT (rep_op) */		    (b->pages_in_use - b->soft_del_pages) >
7890: /* MUTANT (rep_op) */		    (b->pages_in_use - b->soft_del_pages) >=
7890: /* MUTANT (rep_op) */		    (b->pages_in_use - b->soft_del_pages) ==
7890: /* MUTANT (rep_op) */		    (b->pages_in_use - b->soft_del_pages) !=
7891: /* MUTANT (rep_op) */		    dev->param.chunks_per_block ||
7892: /* MUTANT (rep_op) */		    b->seq_number <= seq) {
7892: /* MUTANT (rep_op) */		    b->seq_number > seq) {
7892: /* MUTANT (rep_op) */		    b->seq_number >= seq) {
7892: /* MUTANT (rep_op) */		    b->seq_number == seq) {
7892: /* MUTANT (rep_op) */		    b->seq_number != seq) {
7893: /* MUTANT (del_stmt) */ /* 			seq = b->seq_number; */ 
7894: /* MUTANT (del_stmt) */ /* 			block_no = i; */ 
7896: /* MUTANT (rep_op) */		b--;
7899: /* MUTANT (negate) */	if(! (block_no)) {
7900: /* MUTANT (del_stmt) */ /* 		dev->oldest_dirty_seq = seq; */ 
7901: /* MUTANT (del_stmt) */ /* 		dev->oldest_dirty_block = block_no; */ 
7907: /* MUTANT (negate) */	if(! (!dev->param.is_yaffs2))
7910: /* MUTANT (negate) */	if(! (!dev->oldest_dirty_seq))
7924: /* MUTANT (negate) */	if(! (!dev->param.is_yaffs2))
7927: /* MUTANT (rep_op) */	if (!bi && bi->seq_number == dev->oldest_dirty_seq) {
7927: /* MUTANT (rep_op) */	if (!bi || bi->seq_number != dev->oldest_dirty_seq) {
7927: /* MUTANT (negate) */	if(! (!bi || bi->seq_number == dev->oldest_dirty_seq)) {
7928: /* MUTANT (del_stmt) */ /* 		dev->oldest_dirty_seq = 0; */ 
7928: /* MUTANT (rep_const) */		dev->oldest_dirty_seq = 1;
7928: /* MUTANT (rep_const) */		dev->oldest_dirty_seq = -1;
7929: /* MUTANT (del_stmt) */ /* 		dev->oldest_dirty_block = 0; */ 
7929: /* MUTANT (rep_const) */		dev->oldest_dirty_block = 1;
7929: /* MUTANT (rep_const) */		dev->oldest_dirty_block = -1;
7941: /* MUTANT (negate) */	if(! (!dev->param.is_yaffs2))
7944: /* MUTANT (negate) */	if(! (dev->oldest_dirty_seq)) {
7945: /* MUTANT (rep_op) */		if (dev->oldest_dirty_seq <= bi->seq_number) {
7945: /* MUTANT (rep_op) */		if (dev->oldest_dirty_seq < bi->seq_number) {
7945: /* MUTANT (rep_op) */		if (dev->oldest_dirty_seq >= bi->seq_number) {
7945: /* MUTANT (rep_op) */		if (dev->oldest_dirty_seq == bi->seq_number) {
7945: /* MUTANT (rep_op) */		if (dev->oldest_dirty_seq != bi->seq_number) {
7945: /* MUTANT (negate) */		if(! (dev->oldest_dirty_seq > bi->seq_number)) {
7946: /* MUTANT (del_stmt) */ /* 			dev->oldest_dirty_seq = bi->seq_number; */ 
7947: /* MUTANT (del_stmt) */ /* 			dev->oldest_dirty_block = block_no; */ 
7955: /* MUTANT (negate) */	if(! (!dev->param.is_yaffs2))
7956: /* MUTANT (rep_const) */		return 0;	/* disqualification only applies to yaffs2. */
7956: /* MUTANT (rep_const) */		return -1;	/* disqualification only applies to yaffs2. */
7956: /* MUTANT (rep_const) */		return ((1)+1);	/* disqualification only applies to yaffs2. */
7958: /* MUTANT (negate) */	if(! (!bi->has_shrink_hdr))
7959: /* MUTANT (rep_const) */		return 0;	/* can gc */
7959: /* MUTANT (rep_const) */		return -1;	/* can gc */
7959: /* MUTANT (rep_const) */		return ((1)+1);	/* can gc */
7961: /* MUTANT (del_stmt) */ /* 	yaffs2_find_oldest_dirty_seq(dev); */ 
7966: /* MUTANT (del_stmt) */ /* 	return (bi->seq_number <= dev->oldest_dirty_seq); */ 
7966: /* MUTANT (rep_op) */	return (bi->seq_number < dev->oldest_dirty_seq);
7966: /* MUTANT (rep_op) */	return (bi->seq_number > dev->oldest_dirty_seq);
7966: /* MUTANT (rep_op) */	return (bi->seq_number >= dev->oldest_dirty_seq);
7966: /* MUTANT (rep_op) */	return (bi->seq_number == dev->oldest_dirty_seq);
7966: /* MUTANT (rep_op) */	return (bi->seq_number != dev->oldest_dirty_seq);
7976: /* MUTANT (del_stmt) */ /* 	u32 b; */ 
7977: /* MUTANT (del_stmt) */ /* 	u32 oldest = 0; */ 
7977: /* MUTANT (rep_const) */	u32 oldest = 1;
7977: /* MUTANT (rep_const) */	u32 oldest = -1;
7978: /* MUTANT (del_stmt) */ /* 	u32 oldest_seq = 0; */ 
7978: /* MUTANT (rep_const) */	u32 oldest_seq = 1;
7978: /* MUTANT (rep_const) */	u32 oldest_seq = -1;
7979: /* MUTANT (del_stmt) */ /* 	struct yaffs_block_info *bi; */ 
7981: /* MUTANT (negate) */	if(! (!dev->param.is_yaffs2))
7987: /* MUTANT (rep_op) */	if (dev->param.refresh_period <= 10)
7987: /* MUTANT (rep_op) */	if (dev->param.refresh_period > 10)
7987: /* MUTANT (rep_op) */	if (dev->param.refresh_period >= 10)
7987: /* MUTANT (rep_op) */	if (dev->param.refresh_period == 10)
7987: /* MUTANT (rep_op) */	if (dev->param.refresh_period != 10)
7987: /* MUTANT (rep_const) */	if (dev->param.refresh_period < 0)
7987: /* MUTANT (rep_const) */	if (dev->param.refresh_period < 1)
7987: /* MUTANT (rep_const) */	if (dev->param.refresh_period < -1)
7987: /* MUTANT (rep_const) */	if (dev->param.refresh_period < ((10)+1))
7987: /* MUTANT (rep_const) */	if (dev->param.refresh_period < ((10)-1))
7987: /* MUTANT (negate) */	if(! (dev->param.refresh_period < 10))
7993: /* MUTANT (rep_op) */	if (dev->refresh_skip <= dev->param.refresh_period)
7993: /* MUTANT (rep_op) */	if (dev->refresh_skip < dev->param.refresh_period)
7993: /* MUTANT (rep_op) */	if (dev->refresh_skip >= dev->param.refresh_period)
7993: /* MUTANT (rep_op) */	if (dev->refresh_skip == dev->param.refresh_period)
7993: /* MUTANT (rep_op) */	if (dev->refresh_skip != dev->param.refresh_period)
7993: /* MUTANT (negate) */	if(! (dev->refresh_skip > dev->param.refresh_period))
7996: /* MUTANT (rep_op) */	if (dev->refresh_skip <= 0)
7996: /* MUTANT (rep_op) */	if (dev->refresh_skip < 0)
7996: /* MUTANT (rep_op) */	if (dev->refresh_skip >= 0)
7996: /* MUTANT (rep_op) */	if (dev->refresh_skip == 0)
7996: /* MUTANT (rep_op) */	if (dev->refresh_skip != 0)
7996: /* MUTANT (rep_const) */	if (dev->refresh_skip > 1)
7996: /* MUTANT (rep_const) */	if (dev->refresh_skip > -1)
7996: /* MUTANT (negate) */	if(! (dev->refresh_skip > 0))
8004: /* MUTANT (del_stmt) */ /* 	dev->refresh_skip = dev->param.refresh_period; */ 
8005: /* MUTANT (del_stmt) */ /* 	dev->refresh_count++; */ 
8005: /* MUTANT (rep_op) */	dev->refresh_count--;
8006: /* MUTANT (del_stmt) */ /* 	bi = dev->block_info; */ 
8007: /* MUTANT (rep_op) */	for (b = dev->internal_start_block; b < dev->internal_end_block; b++) {
8007: /* MUTANT (rep_op) */	for (b = dev->internal_start_block; b > dev->internal_end_block; b++) {
8007: /* MUTANT (rep_op) */	for (b = dev->internal_start_block; b >= dev->internal_end_block; b++) {
8007: /* MUTANT (rep_op) */	for (b = dev->internal_start_block; b == dev->internal_end_block; b++) {
8007: /* MUTANT (rep_op) */	for (b = dev->internal_start_block; b != dev->internal_end_block; b++) {
8007: /* MUTANT (rep_op) */	for (b = dev->internal_start_block; b <= dev->internal_end_block; b--) {
8009: /* MUTANT (rep_op) */		if (bi->block_state != YAFFS_BLOCK_STATE_FULL) {
8009: /* MUTANT (negate) */		if(! (bi->block_state == YAFFS_BLOCK_STATE_FULL)) {
8011: /* MUTANT (rep_op) */			if (oldest <= 1 || bi->seq_number < oldest_seq) {
8011: /* MUTANT (rep_op) */			if (oldest > 1 || bi->seq_number < oldest_seq) {
8011: /* MUTANT (rep_op) */			if (oldest >= 1 || bi->seq_number < oldest_seq) {
8011: /* MUTANT (rep_op) */			if (oldest == 1 || bi->seq_number < oldest_seq) {
8011: /* MUTANT (rep_op) */			if (oldest != 1 || bi->seq_number < oldest_seq) {
8011: /* MUTANT (rep_op) */			if (oldest < 1 && bi->seq_number < oldest_seq) {
8011: /* MUTANT (rep_op) */			if (oldest < 1 || bi->seq_number <= oldest_seq) {
8011: /* MUTANT (rep_op) */			if (oldest < 1 || bi->seq_number > oldest_seq) {
8011: /* MUTANT (rep_op) */			if (oldest < 1 || bi->seq_number >= oldest_seq) {
8011: /* MUTANT (rep_op) */			if (oldest < 1 || bi->seq_number == oldest_seq) {
8011: /* MUTANT (rep_op) */			if (oldest < 1 || bi->seq_number != oldest_seq) {
8011: /* MUTANT (rep_const) */			if (oldest < 0 || bi->seq_number < oldest_seq) {
8011: /* MUTANT (rep_const) */			if (oldest < -1 || bi->seq_number < oldest_seq) {
8011: /* MUTANT (rep_const) */			if (oldest < ((1)+1) || bi->seq_number < oldest_seq) {
8011: /* MUTANT (negate) */			if(! (oldest < 1 || bi->seq_number < oldest_seq)) {
8012: /* MUTANT (del_stmt) */ /* 				oldest = b; */ 
8013: /* MUTANT (del_stmt) */ /* 				oldest_seq = bi->seq_number; */ 
8016: /* MUTANT (rep_op) */		bi--;
8019: /* MUTANT (rep_op) */	if (oldest <= 0) {
8019: /* MUTANT (rep_op) */	if (oldest < 0) {
8019: /* MUTANT (rep_op) */	if (oldest >= 0) {
8019: /* MUTANT (rep_op) */	if (oldest == 0) {
8019: /* MUTANT (rep_op) */	if (oldest != 0) {
8019: /* MUTANT (rep_const) */	if (oldest > 1) {
8019: /* MUTANT (rep_const) */	if (oldest > -1) {
8019: /* MUTANT (negate) */	if(! (oldest > 0)) {
8030: /* MUTANT (del_stmt) */ /* 	int nblocks; */ 
8032: /* MUTANT (negate) */	if(! (!dev->param.is_yaffs2))
8033: /* MUTANT (rep_const) */		return 1;
8033: /* MUTANT (rep_const) */		return -1;
8035: /* MUTANT (del_stmt) */ /* 	nblocks = dev->internal_end_block - dev->internal_start_block + 1; */ 
8035: /* MUTANT (rep_op) */	nblocks = dev->internal_end_block - dev->internal_start_block - 1;
8035: /* MUTANT (rep_op) */	nblocks = dev->internal_end_block - dev->internal_start_block * 1;
8035: /* MUTANT (rep_op) */	nblocks = dev->internal_end_block - dev->internal_start_block % 1;
8035: /* MUTANT (rep_const) */	nblocks = dev->internal_end_block - dev->internal_start_block + 0;
8035: /* MUTANT (rep_const) */	nblocks = dev->internal_end_block - dev->internal_start_block + -1;
8035: /* MUTANT (rep_const) */	nblocks = dev->internal_end_block - dev->internal_start_block + ((1)+1);
8037: /* MUTANT (rep_op) */	return !dev->param.skip_checkpt_wr ||
8038: /* MUTANT (rep_op) */	    !dev->read_only || (nblocks >= YAFFS_CHECKPOINT_MIN_BLOCKS);
8038: /* MUTANT (rep_op) */	    !dev->read_only && (nblocks <= YAFFS_CHECKPOINT_MIN_BLOCKS);
8038: /* MUTANT (rep_op) */	    !dev->read_only && (nblocks < YAFFS_CHECKPOINT_MIN_BLOCKS);
8038: /* MUTANT (rep_op) */	    !dev->read_only && (nblocks > YAFFS_CHECKPOINT_MIN_BLOCKS);
8038: /* MUTANT (rep_op) */	    !dev->read_only && (nblocks == YAFFS_CHECKPOINT_MIN_BLOCKS);
8038: /* MUTANT (rep_op) */	    !dev->read_only && (nblocks != YAFFS_CHECKPOINT_MIN_BLOCKS);
8043: /* MUTANT (del_stmt) */ /* 	int retval; */ 
8044: /* MUTANT (del_stmt) */ /* 	int n_bytes = 0; */ 
8044: /* MUTANT (rep_const) */	int n_bytes = 1;
8044: /* MUTANT (rep_const) */	int n_bytes = -1;
8045: /* MUTANT (del_stmt) */ /* 	int n_blocks; */ 
8046: /* MUTANT (del_stmt) */ /* 	int dev_blocks; */ 
8048: /* MUTANT (negate) */	if(! (!dev->param.is_yaffs2))
8049: /* MUTANT (rep_const) */		return 1;
8049: /* MUTANT (rep_const) */		return -1;
8051: /* MUTANT (rep_op) */	if (!dev->checkpoint_blocks_required || yaffs2_checkpt_required(dev)) {
8051: /* MUTANT (negate) */	if(! (!dev->checkpoint_blocks_required && yaffs2_checkpt_required(dev))) {
8053: /* MUTANT (del_stmt) */ /* 		dev_blocks = dev->param.end_block - dev->param.start_block + 1; */ 
8053: /* MUTANT (rep_op) */		dev_blocks = dev->param.end_block - dev->param.start_block - 1;
8053: /* MUTANT (rep_op) */		dev_blocks = dev->param.end_block - dev->param.start_block * 1;
8053: /* MUTANT (rep_op) */		dev_blocks = dev->param.end_block - dev->param.start_block % 1;
8053: /* MUTANT (rep_const) */		dev_blocks = dev->param.end_block - dev->param.start_block + 0;
8053: /* MUTANT (rep_const) */		dev_blocks = dev->param.end_block - dev->param.start_block + -1;
8053: /* MUTANT (rep_const) */		dev_blocks = dev->param.end_block - dev->param.start_block + ((1)+1);
8054: /* MUTANT (del_stmt) */ /* 		n_bytes += sizeof(struct yaffs_checkpt_validity); */ 
8054: /* MUTANT (rep_op) */		n_bytes -= sizeof(struct yaffs_checkpt_validity);
8054: /* MUTANT (rep_op) */		n_bytes *= sizeof(struct yaffs_checkpt_validity);
8054: /* MUTANT (rep_op) */		n_bytes %= sizeof(struct yaffs_checkpt_validity);
8055: /* MUTANT (del_stmt) */ /* 		n_bytes += sizeof(struct yaffs_checkpt_dev); */ 
8055: /* MUTANT (rep_op) */		n_bytes -= sizeof(struct yaffs_checkpt_dev);
8055: /* MUTANT (rep_op) */		n_bytes *= sizeof(struct yaffs_checkpt_dev);
8055: /* MUTANT (rep_op) */		n_bytes %= sizeof(struct yaffs_checkpt_dev);
8056: /* MUTANT (del_stmt) */ /* 		n_bytes += dev_blocks * sizeof(struct yaffs_block_info); */ 
8056: /* MUTANT (rep_op) */		n_bytes -= dev_blocks * sizeof(struct yaffs_block_info);
8056: /* MUTANT (rep_op) */		n_bytes *= dev_blocks * sizeof(struct yaffs_block_info);
8056: /* MUTANT (rep_op) */		n_bytes %= dev_blocks * sizeof(struct yaffs_block_info);
8057: /* MUTANT (del_stmt) */ /* 		n_bytes += dev_blocks * dev->chunk_bit_stride; */ 
8057: /* MUTANT (rep_op) */		n_bytes -= dev_blocks * dev->chunk_bit_stride;
8057: /* MUTANT (rep_op) */		n_bytes *= dev_blocks * dev->chunk_bit_stride;
8057: /* MUTANT (rep_op) */		n_bytes %= dev_blocks * dev->chunk_bit_stride;
8058: /* MUTANT (rep_op) */		n_bytes -=
8058: /* MUTANT (rep_op) */		n_bytes *=
8058: /* MUTANT (rep_op) */		n_bytes %=
8059: /* MUTANT (rep_op) */		    (sizeof(struct yaffs_checkpt_obj) - sizeof(u32)) *
8059: /* MUTANT (rep_op) */		    (sizeof(struct yaffs_checkpt_obj) * sizeof(u32)) *
8059: /* MUTANT (rep_op) */		    (sizeof(struct yaffs_checkpt_obj) % sizeof(u32)) *
8061: /* MUTANT (del_stmt) */ /* 		n_bytes += (dev->tnode_size + sizeof(u32)) * dev->n_tnodes; */ 
8061: /* MUTANT (rep_op) */		n_bytes -= (dev->tnode_size + sizeof(u32)) * dev->n_tnodes;
8061: /* MUTANT (rep_op) */		n_bytes *= (dev->tnode_size + sizeof(u32)) * dev->n_tnodes;
8061: /* MUTANT (rep_op) */		n_bytes %= (dev->tnode_size + sizeof(u32)) * dev->n_tnodes;
8061: /* MUTANT (rep_op) */		n_bytes += (dev->tnode_size - sizeof(u32)) * dev->n_tnodes;
8061: /* MUTANT (rep_op) */		n_bytes += (dev->tnode_size * sizeof(u32)) * dev->n_tnodes;
8061: /* MUTANT (rep_op) */		n_bytes += (dev->tnode_size % sizeof(u32)) * dev->n_tnodes;
8062: /* MUTANT (del_stmt) */ /* 		n_bytes += sizeof(struct yaffs_checkpt_validity); */ 
8062: /* MUTANT (rep_op) */		n_bytes -= sizeof(struct yaffs_checkpt_validity);
8062: /* MUTANT (rep_op) */		n_bytes *= sizeof(struct yaffs_checkpt_validity);
8062: /* MUTANT (rep_op) */		n_bytes %= sizeof(struct yaffs_checkpt_validity);
8063: /* MUTANT (del_stmt) */ /* 		n_bytes += sizeof(u32); */ 	/* checksum */
8063: /* MUTANT (rep_op) */		n_bytes -= sizeof(u32);	/* checksum */
8063: /* MUTANT (rep_op) */		n_bytes *= sizeof(u32);	/* checksum */
8063: /* MUTANT (rep_op) */		n_bytes %= sizeof(u32);	/* checksum */
8071: /* MUTANT (rep_op) */		      dev->param.chunks_per_block)) - 3;
8071: /* MUTANT (rep_op) */		      dev->param.chunks_per_block)) * 3;
8071: /* MUTANT (rep_op) */		      dev->param.chunks_per_block)) % 3;
8071: /* MUTANT (rep_const) */		      dev->param.chunks_per_block)) + 0;
8071: /* MUTANT (rep_const) */		      dev->param.chunks_per_block)) + 1;
8071: /* MUTANT (rep_const) */		      dev->param.chunks_per_block)) + -1;
8071: /* MUTANT (rep_const) */		      dev->param.chunks_per_block)) + ((3)+1);
8071: /* MUTANT (rep_const) */		      dev->param.chunks_per_block)) + ((3)-1);
8073: /* MUTANT (del_stmt) */ /* 		dev->checkpoint_blocks_required = n_blocks; */ 
8077: /* MUTANT (rep_op) */	if (retval <= 0)
8077: /* MUTANT (rep_op) */	if (retval > 0)
8077: /* MUTANT (rep_op) */	if (retval >= 0)
8077: /* MUTANT (rep_op) */	if (retval == 0)
8077: /* MUTANT (rep_op) */	if (retval != 0)
8077: /* MUTANT (rep_const) */	if (retval < 1)
8077: /* MUTANT (rep_const) */	if (retval < -1)
8077: /* MUTANT (negate) */	if(! (retval < 0))
8078: /* MUTANT (rep_const) */		retval = 1;
8078: /* MUTANT (rep_const) */		retval = -1;
8079: /* MUTANT (del_stmt) */ /* 	return retval; */ 
8086: /* MUTANT (del_stmt) */ /* 	struct yaffs_checkpt_validity cp; */ 
8088: /* MUTANT (del_stmt) */ /* 	mymemset(&cp, 0, sizeof(cp)); */ 
8088: /* MUTANT (rep_const) */	mymemset(&cp, 1, sizeof(cp));
8088: /* MUTANT (rep_const) */	mymemset(&cp, -1, sizeof(cp));
8090: /* MUTANT (del_stmt) */ /* 	cp.struct_type = sizeof(cp); */ 
8091: /* MUTANT (del_stmt) */ /* 	cp.magic = YAFFS_MAGIC; */ 
8092: /* MUTANT (del_stmt) */ /* 	cp.version = YAFFS_CHECKPOINT_VERSION; */ 
8093: /* MUTANT (del_stmt) */ /* 	cp.head = (head) ? 1 : 0; */ 
8093: /* MUTANT (rep_const) */	cp.head = (head) ? 0 : 0;
8093: /* MUTANT (rep_const) */	cp.head = (head) ? -1 : 0;
8093: /* MUTANT (rep_const) */	cp.head = (head) ? ((1)+1) : 0;
8093: /* MUTANT (rep_const) */	cp.head = (head) ? 1 : 1;
8093: /* MUTANT (rep_const) */	cp.head = (head) ? 1 : -1;
8095: /* MUTANT (del_stmt) */ /* 	return (yaffs2_checkpt_wr(dev, &cp, sizeof(cp)) == sizeof(cp)) ? 1 : 0; */ 
8095: /* MUTANT (rep_op) */	return (yaffs2_checkpt_wr(dev, &cp, sizeof(cp)) != sizeof(cp)) ? 1 : 0;
8095: /* MUTANT (rep_const) */	return (yaffs2_checkpt_wr(dev, &cp, sizeof(cp)) == sizeof(cp)) ? 0 : 0;
8095: /* MUTANT (rep_const) */	return (yaffs2_checkpt_wr(dev, &cp, sizeof(cp)) == sizeof(cp)) ? -1 : 0;
8095: /* MUTANT (rep_const) */	return (yaffs2_checkpt_wr(dev, &cp, sizeof(cp)) == sizeof(cp)) ? ((1)+1) : 0;
8095: /* MUTANT (rep_const) */	return (yaffs2_checkpt_wr(dev, &cp, sizeof(cp)) == sizeof(cp)) ? 1 : 1;
8095: /* MUTANT (rep_const) */	return (yaffs2_checkpt_wr(dev, &cp, sizeof(cp)) == sizeof(cp)) ? 1 : -1;
8100: /* MUTANT (del_stmt) */ /* 	struct yaffs_checkpt_validity cp; */ 
8101: /* MUTANT (del_stmt) */ /* 	int ok; */ 
8103: /* MUTANT (del_stmt) */ /* 	ok = (yaffs2_checkpt_rd(dev, &cp, sizeof(cp)) == sizeof(cp)); */ 
8103: /* MUTANT (rep_op) */	ok = (yaffs2_checkpt_rd(dev, &cp, sizeof(cp)) != sizeof(cp));
8105: /* MUTANT (negate) */	if(! (ok))
8106: /* MUTANT (rep_op) */		ok = (cp.struct_type != sizeof(cp)) &&
8106: /* MUTANT (rep_op) */		ok = (cp.struct_type == sizeof(cp)) ||
8107: /* MUTANT (rep_op) */		    (cp.magic != YAFFS_MAGIC) &&
8107: /* MUTANT (rep_op) */		    (cp.magic == YAFFS_MAGIC) ||
8108: /* MUTANT (rep_op) */		    (cp.version != YAFFS_CHECKPOINT_VERSION) &&
8108: /* MUTANT (rep_op) */		    (cp.version == YAFFS_CHECKPOINT_VERSION) ||
8109: /* MUTANT (rep_op) */		    (cp.head != ((head) ? 1 : 0));
8109: /* MUTANT (rep_const) */		    (cp.head == ((head) ? 0 : 0));
8109: /* MUTANT (rep_const) */		    (cp.head == ((head) ? -1 : 0));
8109: /* MUTANT (rep_const) */		    (cp.head == ((head) ? ((1)+1) : 0));
8109: /* MUTANT (rep_const) */		    (cp.head == ((head) ? 1 : 1));
8109: /* MUTANT (rep_const) */		    (cp.head == ((head) ? 1 : -1));
8110: /* MUTANT (del_stmt) */ /* 	return ok ? 1 : 0; */ 
8110: /* MUTANT (rep_const) */	return ok ? 0 : 0;
8110: /* MUTANT (rep_const) */	return ok ? -1 : 0;
8110: /* MUTANT (rep_const) */	return ok ? ((1)+1) : 0;
8110: /* MUTANT (rep_const) */	return ok ? 1 : 1;
8110: /* MUTANT (rep_const) */	return ok ? 1 : -1;
8116: /* MUTANT (del_stmt) */ /* 	cp->n_erased_blocks = dev->n_erased_blocks; */ 
8117: /* MUTANT (del_stmt) */ /* 	cp->alloc_block = dev->alloc_block; */ 
8118: /* MUTANT (del_stmt) */ /* 	cp->alloc_page = dev->alloc_page; */ 
8119: /* MUTANT (del_stmt) */ /* 	cp->n_free_chunks = dev->n_free_chunks; */ 
8121: /* MUTANT (del_stmt) */ /* 	cp->n_deleted_files = dev->n_deleted_files; */ 
8122: /* MUTANT (del_stmt) */ /* 	cp->n_unlinked_files = dev->n_unlinked_files; */ 
8123: /* MUTANT (del_stmt) */ /* 	cp->n_bg_deletions = dev->n_bg_deletions; */ 
8124: /* MUTANT (del_stmt) */ /* 	cp->seq_number = dev->seq_number; */ 
8131: /* MUTANT (del_stmt) */ /* 	dev->n_erased_blocks = cp->n_erased_blocks; */ 
8132: /* MUTANT (del_stmt) */ /* 	dev->alloc_block = cp->alloc_block; */ 
8133: /* MUTANT (del_stmt) */ /* 	dev->alloc_page = cp->alloc_page; */ 
8134: /* MUTANT (del_stmt) */ /* 	dev->n_free_chunks = cp->n_free_chunks; */ 
8136: /* MUTANT (del_stmt) */ /* 	dev->n_deleted_files = cp->n_deleted_files; */ 
8137: /* MUTANT (del_stmt) */ /* 	dev->n_unlinked_files = cp->n_unlinked_files; */ 
8138: /* MUTANT (del_stmt) */ /* 	dev->n_bg_deletions = cp->n_bg_deletions; */ 
8139: /* MUTANT (del_stmt) */ /* 	dev->seq_number = cp->seq_number; */ 
8144: /* MUTANT (del_stmt) */ /* 	struct yaffs_checkpt_dev cp; */ 
8145: /* MUTANT (del_stmt) */ /* 	u32 n_bytes; */ 
8146: /* MUTANT (del_stmt) */ /* 	u32 n_blocks = dev->internal_end_block - dev->internal_start_block + 1; */ 
8146: /* MUTANT (rep_op) */	u32 n_blocks = dev->internal_end_block - dev->internal_start_block - 1;
8146: /* MUTANT (rep_op) */	u32 n_blocks = dev->internal_end_block - dev->internal_start_block * 1;
8146: /* MUTANT (rep_op) */	u32 n_blocks = dev->internal_end_block - dev->internal_start_block % 1;
8146: /* MUTANT (rep_const) */	u32 n_blocks = dev->internal_end_block - dev->internal_start_block + 0;
8146: /* MUTANT (rep_const) */	u32 n_blocks = dev->internal_end_block - dev->internal_start_block + -1;
8146: /* MUTANT (rep_const) */	u32 n_blocks = dev->internal_end_block - dev->internal_start_block + ((1)+1);
8147: /* MUTANT (del_stmt) */ /* 	int ok; */ 
8150: /* MUTANT (del_stmt) */ /* 	yaffs2_dev_to_checkpt_dev(&cp, dev); */ 
8151: /* MUTANT (del_stmt) */ /* 	cp.struct_type = sizeof(cp); */ 
8153: /* MUTANT (del_stmt) */ /* 	ok = (yaffs2_checkpt_wr(dev, &cp, sizeof(cp)) == sizeof(cp)); */ 
8153: /* MUTANT (rep_op) */	ok = (yaffs2_checkpt_wr(dev, &cp, sizeof(cp)) != sizeof(cp));
8154: /* MUTANT (negate) */	if(! (!ok))
8155: /* MUTANT (rep_const) */		return 1;
8155: /* MUTANT (rep_const) */		return -1;
8158: /* MUTANT (del_stmt) */ /* 	n_bytes = n_blocks * sizeof(struct yaffs_block_info); */ 
8159: /* MUTANT (del_stmt) */ /* 	ok = (yaffs2_checkpt_wr(dev, dev->block_info, n_bytes) == n_bytes); */ 
8159: /* MUTANT (rep_op) */	ok = (yaffs2_checkpt_wr(dev, dev->block_info, n_bytes) != n_bytes);
8160: /* MUTANT (negate) */	if(! (!ok))
8161: /* MUTANT (rep_const) */		return 1;
8161: /* MUTANT (rep_const) */		return -1;
8164: /* MUTANT (del_stmt) */ /* 	n_bytes = n_blocks * dev->chunk_bit_stride; */ 
8165: /* MUTANT (del_stmt) */ /* 	ok = (yaffs2_checkpt_wr(dev, dev->chunk_bits, n_bytes) == n_bytes); */ 
8165: /* MUTANT (rep_op) */	ok = (yaffs2_checkpt_wr(dev, dev->chunk_bits, n_bytes) != n_bytes);
8167: /* MUTANT (del_stmt) */ /* 	return ok ? 1 : 0; */ 
8167: /* MUTANT (rep_const) */	return ok ? 0 : 0;
8167: /* MUTANT (rep_const) */	return ok ? -1 : 0;
8167: /* MUTANT (rep_const) */	return ok ? ((1)+1) : 0;
8167: /* MUTANT (rep_const) */	return ok ? 1 : 1;
8167: /* MUTANT (rep_const) */	return ok ? 1 : -1;
8172: /* MUTANT (del_stmt) */ /* 	struct yaffs_checkpt_dev cp; */ 
8173: /* MUTANT (del_stmt) */ /* 	u32 n_bytes; */ 
8175: /* MUTANT (rep_op) */	    (dev->internal_end_block - dev->internal_start_block - 1);
8175: /* MUTANT (rep_op) */	    (dev->internal_end_block - dev->internal_start_block * 1);
8175: /* MUTANT (rep_op) */	    (dev->internal_end_block - dev->internal_start_block % 1);
8175: /* MUTANT (rep_const) */	    (dev->internal_end_block - dev->internal_start_block + 0);
8175: /* MUTANT (rep_const) */	    (dev->internal_end_block - dev->internal_start_block + -1);
8175: /* MUTANT (rep_const) */	    (dev->internal_end_block - dev->internal_start_block + ((1)+1));
8176: /* MUTANT (del_stmt) */ /* 	int ok; */ 
8178: /* MUTANT (del_stmt) */ /* 	ok = (yaffs2_checkpt_rd(dev, &cp, sizeof(cp)) == sizeof(cp)); */ 
8178: /* MUTANT (rep_op) */	ok = (yaffs2_checkpt_rd(dev, &cp, sizeof(cp)) != sizeof(cp));
8179: /* MUTANT (negate) */	if(! (!ok))
8180: /* MUTANT (rep_const) */		return 1;
8180: /* MUTANT (rep_const) */		return -1;
8182: /* MUTANT (rep_op) */	if (cp.struct_type == sizeof(cp))
8182: /* MUTANT (negate) */	if(! (cp.struct_type != sizeof(cp)))
8183: /* MUTANT (rep_const) */		return 1;
8183: /* MUTANT (rep_const) */		return -1;
8185: /* MUTANT (del_stmt) */ /* 	yaffs_checkpt_dev_to_dev(dev, &cp); */ 
8187: /* MUTANT (del_stmt) */ /* 	n_bytes = n_blocks * sizeof(struct yaffs_block_info); */ 
8189: /* MUTANT (del_stmt) */ /* 	ok = (yaffs2_checkpt_rd(dev, dev->block_info, n_bytes) == n_bytes); */ 
8189: /* MUTANT (rep_op) */	ok = (yaffs2_checkpt_rd(dev, dev->block_info, n_bytes) != n_bytes);
8191: /* MUTANT (negate) */	if(! (!ok))
8192: /* MUTANT (rep_const) */		return 1;
8192: /* MUTANT (rep_const) */		return -1;
8194: /* MUTANT (del_stmt) */ /* 	n_bytes = n_blocks * dev->chunk_bit_stride; */ 
8196: /* MUTANT (del_stmt) */ /* 	ok = (yaffs2_checkpt_rd(dev, dev->chunk_bits, n_bytes) == n_bytes); */ 
8196: /* MUTANT (rep_op) */	ok = (yaffs2_checkpt_rd(dev, dev->chunk_bits, n_bytes) != n_bytes);
8198: /* MUTANT (del_stmt) */ /* 	return ok ? 1 : 0; */ 
8198: /* MUTANT (rep_const) */	return ok ? 0 : 0;
8198: /* MUTANT (rep_const) */	return ok ? -1 : 0;
8198: /* MUTANT (rep_const) */	return ok ? ((1)+1) : 0;
8198: /* MUTANT (rep_const) */	return ok ? 1 : 1;
8198: /* MUTANT (rep_const) */	return ok ? 1 : -1;
8204: /* MUTANT (del_stmt) */ /* 	cp->obj_id = obj->obj_id; */ 
8205: /* MUTANT (del_stmt) */ /* 	cp->parent_id = (obj->parent) ? obj->parent->obj_id : 0; */ 
8205: /* MUTANT (rep_const) */	cp->parent_id = (obj->parent) ? obj->parent->obj_id : 1;
8205: /* MUTANT (rep_const) */	cp->parent_id = (obj->parent) ? obj->parent->obj_id : -1;
8206: /* MUTANT (del_stmt) */ /* 	cp->hdr_chunk = obj->hdr_chunk; */ 
8207: /* MUTANT (del_stmt) */ /* 	cp->variant_type = obj->variant_type; */ 
8208: /* MUTANT (del_stmt) */ /* 	cp->deleted = obj->deleted; */ 
8209: /* MUTANT (del_stmt) */ /* 	cp->soft_del = obj->soft_del; */ 
8210: /* MUTANT (del_stmt) */ /* 	cp->unlinked = obj->unlinked; */ 
8211: /* MUTANT (del_stmt) */ /* 	cp->fake = obj->fake; */ 
8212: /* MUTANT (del_stmt) */ /* 	cp->rename_allowed = obj->rename_allowed; */ 
8213: /* MUTANT (del_stmt) */ /* 	cp->unlink_allowed = obj->unlink_allowed; */ 
8214: /* MUTANT (del_stmt) */ /* 	cp->serial = obj->serial; */ 
8215: /* MUTANT (del_stmt) */ /* 	cp->n_data_chunks = obj->n_data_chunks; */ 
8217: /* MUTANT (rep_op) */	if (obj->variant_type != YAFFS_OBJECT_TYPE_FILE)
8217: /* MUTANT (negate) */	if(! (obj->variant_type == YAFFS_OBJECT_TYPE_FILE))
8219: /* MUTANT (rep_op) */	else if (obj->variant_type != YAFFS_OBJECT_TYPE_HARDLINK)
8219: /* MUTANT (negate) */	else if(! (obj->variant_type == YAFFS_OBJECT_TYPE_HARDLINK))
8226: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *parent; */ 
8228: /* MUTANT (rep_op) */	if (obj->variant_type == cp->variant_type) {
8228: /* MUTANT (negate) */	if(! (obj->variant_type != cp->variant_type)) {
8233: /* MUTANT (del_stmt) */ /* 		return 0; */ 
8233: /* MUTANT (rep_const) */		return 1;
8233: /* MUTANT (rep_const) */		return -1;
8238: /* MUTANT (negate) */	if(! (cp->parent_id))
8245: /* MUTANT (negate) */	if(! (parent)) {
8246: /* MUTANT (rep_op) */		if (parent->variant_type == YAFFS_OBJECT_TYPE_DIRECTORY) {
8246: /* MUTANT (negate) */		if(! (parent->variant_type != YAFFS_OBJECT_TYPE_DIRECTORY)) {
8252: /* MUTANT (del_stmt) */ /* 			return 0; */ 
8252: /* MUTANT (rep_const) */			return 1;
8252: /* MUTANT (rep_const) */			return -1;
8258: /* MUTANT (del_stmt) */ /* 	obj->variant_type = cp->variant_type; */ 
8259: /* MUTANT (del_stmt) */ /* 	obj->deleted = cp->deleted; */ 
8260: /* MUTANT (del_stmt) */ /* 	obj->soft_del = cp->soft_del; */ 
8261: /* MUTANT (del_stmt) */ /* 	obj->unlinked = cp->unlinked; */ 
8262: /* MUTANT (del_stmt) */ /* 	obj->fake = cp->fake; */ 
8263: /* MUTANT (del_stmt) */ /* 	obj->rename_allowed = cp->rename_allowed; */ 
8264: /* MUTANT (del_stmt) */ /* 	obj->unlink_allowed = cp->unlink_allowed; */ 
8265: /* MUTANT (del_stmt) */ /* 	obj->serial = cp->serial; */ 
8266: /* MUTANT (del_stmt) */ /* 	obj->n_data_chunks = cp->n_data_chunks; */ 
8268: /* MUTANT (rep_op) */	if (obj->variant_type != YAFFS_OBJECT_TYPE_FILE)
8268: /* MUTANT (negate) */	if(! (obj->variant_type == YAFFS_OBJECT_TYPE_FILE))
8270: /* MUTANT (rep_op) */	else if (obj->variant_type != YAFFS_OBJECT_TYPE_HARDLINK)
8270: /* MUTANT (negate) */	else if(! (obj->variant_type == YAFFS_OBJECT_TYPE_HARDLINK))
8273: /* MUTANT (rep_op) */	if (obj->hdr_chunk <= 0)
8273: /* MUTANT (rep_op) */	if (obj->hdr_chunk < 0)
8273: /* MUTANT (rep_op) */	if (obj->hdr_chunk >= 0)
8273: /* MUTANT (rep_op) */	if (obj->hdr_chunk == 0)
8273: /* MUTANT (rep_op) */	if (obj->hdr_chunk != 0)
8273: /* MUTANT (rep_const) */	if (obj->hdr_chunk > 1)
8273: /* MUTANT (rep_const) */	if (obj->hdr_chunk > -1)
8273: /* MUTANT (negate) */	if(! (obj->hdr_chunk > 0))
8274: /* MUTANT (rep_const) */		obj->lazy_loaded = 0;
8274: /* MUTANT (rep_const) */		obj->lazy_loaded = -1;
8274: /* MUTANT (rep_const) */		obj->lazy_loaded = ((1)+1);
8275: /* MUTANT (del_stmt) */ /* 	return 1; */ 
8275: /* MUTANT (rep_const) */	return 0;
8275: /* MUTANT (rep_const) */	return -1;
8275: /* MUTANT (rep_const) */	return ((1)+1);
8282: /* MUTANT (del_stmt) */ /* 	int i; */ 
8283: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev = in->my_dev; */ 
8284: /* MUTANT (del_stmt) */ /* 	int ok = 1; */ 
8284: /* MUTANT (rep_const) */	int ok = 0;
8284: /* MUTANT (rep_const) */	int ok = -1;
8284: /* MUTANT (rep_const) */	int ok = ((1)+1);
8285: /* MUTANT (del_stmt) */ /* 	u32 base_offset; */ 
8287: /* MUTANT (negate) */	if(! (!tn))
8288: /* MUTANT (rep_const) */		return 0;
8288: /* MUTANT (rep_const) */		return -1;
8288: /* MUTANT (rep_const) */		return ((1)+1);
8290: /* MUTANT (rep_op) */	if (level <= 0) {
8290: /* MUTANT (rep_op) */	if (level < 0) {
8290: /* MUTANT (rep_op) */	if (level >= 0) {
8290: /* MUTANT (rep_op) */	if (level == 0) {
8290: /* MUTANT (rep_op) */	if (level != 0) {
8290: /* MUTANT (rep_const) */	if (level > 1) {
8290: /* MUTANT (rep_const) */	if (level > -1) {
8290: /* MUTANT (negate) */	if(! (level > 0)) {
8291: /* MUTANT (rep_op) */		for (i = 0; i <= YAFFS_NTNODES_INTERNAL && ok; i++) {
8291: /* MUTANT (rep_op) */		for (i = 0; i > YAFFS_NTNODES_INTERNAL && ok; i++) {
8291: /* MUTANT (rep_op) */		for (i = 0; i >= YAFFS_NTNODES_INTERNAL && ok; i++) {
8291: /* MUTANT (rep_op) */		for (i = 0; i == YAFFS_NTNODES_INTERNAL && ok; i++) {
8291: /* MUTANT (rep_op) */		for (i = 0; i != YAFFS_NTNODES_INTERNAL && ok; i++) {
8291: /* MUTANT (rep_op) */		for (i = 0; i < YAFFS_NTNODES_INTERNAL || ok; i++) {
8291: /* MUTANT (rep_op) */		for (i = 0; i < YAFFS_NTNODES_INTERNAL && ok; i--) {
8291: /* MUTANT (rep_const) */		for (i = 1; i < YAFFS_NTNODES_INTERNAL && ok; i++) {
8291: /* MUTANT (rep_const) */		for (i = -1; i < YAFFS_NTNODES_INTERNAL && ok; i++) {
8292: /* MUTANT (negate) */			if(! (!tn->internal[i]))
8296: /* MUTANT (rep_const) */				 level - 0,
8296: /* MUTANT (rep_const) */				 level - -1,
8296: /* MUTANT (rep_const) */				 level - ((1)+1),
8298: /* MUTANT (rep_op) */				  YAFFS_TNODES_INTERNAL_BITS) - i);
8298: /* MUTANT (rep_op) */				  YAFFS_TNODES_INTERNAL_BITS) * i);
8298: /* MUTANT (rep_op) */				  YAFFS_TNODES_INTERNAL_BITS) % i);
8305: /* MUTANT (rep_op) */	ok = (yaffs2_checkpt_wr(dev, &base_offset, sizeof(base_offset)) !=
8307: /* MUTANT (negate) */	if(! (ok))
8308: /* MUTANT (rep_op) */		ok = (yaffs2_checkpt_wr(dev, tn, dev->tnode_size) !=
8311: /* MUTANT (del_stmt) */ /* 	return ok; */ 
8316: /* MUTANT (del_stmt) */ /* 	u32 end_marker = ~0; */ 
8316: /* MUTANT (rep_const) */	u32 end_marker = ~1;
8316: /* MUTANT (rep_const) */	u32 end_marker = ~-1;
8317: /* MUTANT (del_stmt) */ /* 	int ok = 1; */ 
8317: /* MUTANT (rep_const) */	int ok = 0;
8317: /* MUTANT (rep_const) */	int ok = -1;
8317: /* MUTANT (rep_const) */	int ok = ((1)+1);
8319: /* MUTANT (rep_op) */	if (obj->variant_type == YAFFS_OBJECT_TYPE_FILE)
8319: /* MUTANT (negate) */	if(! (obj->variant_type != YAFFS_OBJECT_TYPE_FILE))
8325: /* MUTANT (rep_const) */					 top_level, 1);
8325: /* MUTANT (rep_const) */					 top_level, -1);
8326: /* MUTANT (negate) */	if(! (ok))
8328: /* MUTANT (rep_op) */				sizeof(end_marker)) != sizeof(end_marker));
8330: /* MUTANT (del_stmt) */ /* 	return ok ? 1 : 0; */ 
8330: /* MUTANT (rep_const) */	return ok ? 0 : 0;
8330: /* MUTANT (rep_const) */	return ok ? -1 : 0;
8330: /* MUTANT (rep_const) */	return ok ? ((1)+1) : 0;
8330: /* MUTANT (rep_const) */	return ok ? 1 : 1;
8330: /* MUTANT (rep_const) */	return ok ? 1 : -1;
8335: /* MUTANT (del_stmt) */ /* 	u32 base_chunk; */ 
8336: /* MUTANT (del_stmt) */ /* 	int ok = 1; */ 
8336: /* MUTANT (rep_const) */	int ok = 0;
8336: /* MUTANT (rep_const) */	int ok = -1;
8336: /* MUTANT (rep_const) */	int ok = ((1)+1);
8337: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev = obj->my_dev; */ 
8338: /* MUTANT (del_stmt) */ /* 	struct yaffs_file_var *file_stuct_ptr = &obj->variant.file_variant; */ 
8339: /* MUTANT (del_stmt) */ /* 	struct yaffs_tnode *tn; */ 
8340: /* MUTANT (del_stmt) */ /* 	int nread = 0; */ 
8340: /* MUTANT (rep_const) */	int nread = 1;
8340: /* MUTANT (rep_const) */	int nread = -1;
8342: /* MUTANT (rep_op) */	ok = (yaffs2_checkpt_rd(dev, &base_chunk, sizeof(base_chunk)) !=
8345: /* MUTANT (rep_op) */	while (ok || (~base_chunk)) {
8345: /* MUTANT (negate) */	while(! (ok && (~base_chunk))) {
8346: /* MUTANT (del_stmt) */ /* 		nread++; */ 
8346: /* MUTANT (rep_op) */		nread--;
8349: /* MUTANT (del_stmt) */ /* 		tn = yaffs_get_tnode(dev); */ 
8350: /* MUTANT (negate) */		if(! (tn))
8351: /* MUTANT (rep_op) */			ok = (yaffs2_checkpt_rd(dev, tn, dev->tnode_size) !=
8354: /* MUTANT (rep_const) */			ok = 1;
8354: /* MUTANT (rep_const) */			ok = -1;
8356: /* MUTANT (rep_op) */		if (tn || ok)
8356: /* MUTANT (negate) */		if(! (tn && ok))
8359: /* MUTANT (rep_const) */						    base_chunk, tn) ? 0 : 0;
8359: /* MUTANT (rep_const) */						    base_chunk, tn) ? -1 : 0;
8359: /* MUTANT (rep_const) */						    base_chunk, tn) ? ((1)+1) : 0;
8359: /* MUTANT (rep_const) */						    base_chunk, tn) ? 1 : 1;
8359: /* MUTANT (rep_const) */						    base_chunk, tn) ? 1 : -1;
8361: /* MUTANT (negate) */		if(! (ok))
8364: /* MUTANT (rep_op) */			       sizeof(base_chunk)) != sizeof(base_chunk));
8371: /* MUTANT (del_stmt) */ /* 	return ok ? 1 : 0; */ 
8371: /* MUTANT (rep_const) */	return ok ? 0 : 0;
8371: /* MUTANT (rep_const) */	return ok ? -1 : 0;
8371: /* MUTANT (rep_const) */	return ok ? ((1)+1) : 0;
8371: /* MUTANT (rep_const) */	return ok ? 1 : 1;
8371: /* MUTANT (rep_const) */	return ok ? 1 : -1;
8376: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj; */ 
8377: /* MUTANT (del_stmt) */ /* 	struct yaffs_checkpt_obj cp; */ 
8378: /* MUTANT (del_stmt) */ /* 	int i; */ 
8379: /* MUTANT (del_stmt) */ /* 	int ok = 1; */ 
8379: /* MUTANT (rep_const) */	int ok = 0;
8379: /* MUTANT (rep_const) */	int ok = -1;
8379: /* MUTANT (rep_const) */	int ok = ((1)+1);
8380: /* MUTANT (del_stmt) */ /* 	struct list_head *lh; */ 
8386: /* MUTANT (rep_op) */	for (i = 0; ok || i < YAFFS_NOBJECT_BUCKETS; i++) {
8386: /* MUTANT (rep_op) */	for (i = 0; ok && i <= YAFFS_NOBJECT_BUCKETS; i++) {
8386: /* MUTANT (rep_op) */	for (i = 0; ok && i > YAFFS_NOBJECT_BUCKETS; i++) {
8386: /* MUTANT (rep_op) */	for (i = 0; ok && i >= YAFFS_NOBJECT_BUCKETS; i++) {
8386: /* MUTANT (rep_op) */	for (i = 0; ok && i == YAFFS_NOBJECT_BUCKETS; i++) {
8386: /* MUTANT (rep_op) */	for (i = 0; ok && i != YAFFS_NOBJECT_BUCKETS; i++) {
8386: /* MUTANT (rep_op) */	for (i = 0; ok && i < YAFFS_NOBJECT_BUCKETS; i--) {
8386: /* MUTANT (rep_const) */	for (i = 1; ok && i < YAFFS_NOBJECT_BUCKETS; i++) {
8386: /* MUTANT (rep_const) */	for (i = -1; ok && i < YAFFS_NOBJECT_BUCKETS; i++) {
8388: /* MUTANT (del_stmt) */ /* 			obj = list_entry(lh, struct yaffs_obj, hash_link); */ 
8389: /* MUTANT (negate) */			if(! (!obj->defered_free)) {
8390: /* MUTANT (del_stmt) */ /* 				yaffs2_obj_checkpt_obj(&cp, obj); */ 
8391: /* MUTANT (del_stmt) */ /* 				cp.struct_type = sizeof(cp); */ 
8399: /* MUTANT (rep_op) */						sizeof(cp)) != sizeof(cp));
8401: /* MUTANT (rep_op) */				if (ok ||
8402: /* MUTANT (rep_op) */					obj->variant_type !=
8410: /* MUTANT (rep_const) */	mymemset(&cp, 1xff, sizeof(struct yaffs_checkpt_obj));
8410: /* MUTANT (rep_const) */	mymemset(&cp, -1xff, sizeof(struct yaffs_checkpt_obj));
8411: /* MUTANT (del_stmt) */ /* 	cp.struct_type = sizeof(cp); */ 
8413: /* MUTANT (negate) */	if(! (ok))
8414: /* MUTANT (rep_op) */		ok = (yaffs2_checkpt_wr(dev, &cp, sizeof(cp)) != sizeof(cp));
8416: /* MUTANT (del_stmt) */ /* 	return ok ? 1 : 0; */ 
8416: /* MUTANT (rep_const) */	return ok ? 0 : 0;
8416: /* MUTANT (rep_const) */	return ok ? -1 : 0;
8416: /* MUTANT (rep_const) */	return ok ? ((1)+1) : 0;
8416: /* MUTANT (rep_const) */	return ok ? 1 : 1;
8416: /* MUTANT (rep_const) */	return ok ? 1 : -1;
8421: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj; */ 
8422: /* MUTANT (del_stmt) */ /* 	struct yaffs_checkpt_obj cp; */ 
8423: /* MUTANT (del_stmt) */ /* 	int ok = 1; */ 
8423: /* MUTANT (rep_const) */	int ok = 0;
8423: /* MUTANT (rep_const) */	int ok = -1;
8423: /* MUTANT (rep_const) */	int ok = ((1)+1);
8424: /* MUTANT (del_stmt) */ /* 	int done = 0; */ 
8424: /* MUTANT (rep_const) */	int done = 1;
8424: /* MUTANT (rep_const) */	int done = -1;
8425: /* MUTANT (del_stmt) */ /* 	LIST_HEAD(hard_list); */ 
8428: /* MUTANT (rep_op) */	while (ok || !done) {
8428: /* MUTANT (negate) */	while(! (ok && !done)) {
8429: /* MUTANT (del_stmt) */ /* 		ok = (yaffs2_checkpt_rd(dev, &cp, sizeof(cp)) == sizeof(cp)); */ 
8429: /* MUTANT (rep_op) */		ok = (yaffs2_checkpt_rd(dev, &cp, sizeof(cp)) != sizeof(cp));
8430: /* MUTANT (rep_op) */		if (cp.struct_type == sizeof(cp)) {
8430: /* MUTANT (negate) */		if(! (cp.struct_type != sizeof(cp))) {
8434: /* MUTANT (del_stmt) */ /* 			ok = 0; */ 
8434: /* MUTANT (rep_const) */			ok = 1;
8434: /* MUTANT (rep_const) */			ok = -1;
8442: /* MUTANT (rep_op) */		if (ok || cp.obj_id == ~0) {
8442: /* MUTANT (rep_op) */		if (ok && cp.obj_id != ~0) {
8442: /* MUTANT (rep_const) */		if (ok && cp.obj_id == ~1) {
8442: /* MUTANT (rep_const) */		if (ok && cp.obj_id == ~-1) {
8442: /* MUTANT (negate) */		if(! (ok && cp.obj_id == ~0)) {
8443: /* MUTANT (del_stmt) */ /* 			done = 1; */ 
8443: /* MUTANT (rep_const) */			done = 0;
8443: /* MUTANT (rep_const) */			done = -1;
8443: /* MUTANT (rep_const) */			done = ((1)+1);
8444: /* MUTANT (negate) */		} else if(! (ok)) {
8448: /* MUTANT (negate) */			if(! (obj)) {
8449: /* MUTANT (del_stmt) */ /* 				ok = yaffs2_checkpt_obj_to_obj(obj, &cp); */ 
8450: /* MUTANT (negate) */				if(! (!ok))
8452: /* MUTANT (rep_op) */				if (obj->variant_type !=
8454: /* MUTANT (del_stmt) */ /* 					ok = yaffs2_rd_checkpt_tnodes(obj); */ 
8455: /* MUTANT (rep_op) */				} else if (obj->variant_type !=
8457: /* MUTANT (del_stmt) */ /* 					list_add(&obj->hard_links, &hard_list); */ 
8460: /* MUTANT (del_stmt) */ /* 				ok = 0; */ 
8460: /* MUTANT (rep_const) */				ok = 1;
8460: /* MUTANT (rep_const) */				ok = -1;
8465: /* MUTANT (negate) */	if(! (ok))
8468: /* MUTANT (del_stmt) */ /* 	return ok ? 1 : 0; */ 
8468: /* MUTANT (rep_const) */	return ok ? 0 : 0;
8468: /* MUTANT (rep_const) */	return ok ? -1 : 0;
8468: /* MUTANT (rep_const) */	return ok ? ((1)+1) : 0;
8468: /* MUTANT (rep_const) */	return ok ? 1 : 1;
8468: /* MUTANT (rep_const) */	return ok ? 1 : -1;
8473: /* MUTANT (del_stmt) */ /* 	u32 checkpt_sum; */ 
8474: /* MUTANT (del_stmt) */ /* 	int ok; */ 
8476: /* MUTANT (del_stmt) */ /* 	yaffs2_get_checkpt_sum(dev, &checkpt_sum); */ 
8478: /* MUTANT (rep_op) */	ok = (yaffs2_checkpt_wr(dev, &checkpt_sum, sizeof(checkpt_sum)) !=
8481: /* MUTANT (negate) */	if(! (!ok))
8482: /* MUTANT (rep_const) */		return 1;
8482: /* MUTANT (rep_const) */		return -1;
8484: /* MUTANT (del_stmt) */ /* 	return 1; */ 
8484: /* MUTANT (rep_const) */	return 0;
8484: /* MUTANT (rep_const) */	return -1;
8484: /* MUTANT (rep_const) */	return ((1)+1);
8489: /* MUTANT (del_stmt) */ /* 	u32 checkpt_sum0; */ 
8490: /* MUTANT (del_stmt) */ /* 	u32 checkpt_sum1; */ 
8491: /* MUTANT (del_stmt) */ /* 	int ok; */ 
8493: /* MUTANT (del_stmt) */ /* 	yaffs2_get_checkpt_sum(dev, &checkpt_sum0); */ 
8495: /* MUTANT (rep_op) */	ok = (yaffs2_checkpt_rd(dev, &checkpt_sum1, sizeof(checkpt_sum1)) !=
8498: /* MUTANT (negate) */	if(! (!ok))
8499: /* MUTANT (rep_const) */		return 1;
8499: /* MUTANT (rep_const) */		return -1;
8501: /* MUTANT (rep_op) */	if (checkpt_sum0 == checkpt_sum1)
8501: /* MUTANT (negate) */	if(! (checkpt_sum0 != checkpt_sum1))
8502: /* MUTANT (rep_const) */		return 1;
8502: /* MUTANT (rep_const) */		return -1;
8504: /* MUTANT (del_stmt) */ /* 	return 1; */ 
8504: /* MUTANT (rep_const) */	return 0;
8504: /* MUTANT (rep_const) */	return -1;
8504: /* MUTANT (rep_const) */	return ((1)+1);
8509: /* MUTANT (del_stmt) */ /* 	int ok = 1; */ 
8509: /* MUTANT (rep_const) */	int ok = 0;
8509: /* MUTANT (rep_const) */	int ok = -1;
8509: /* MUTANT (rep_const) */	int ok = ((1)+1);
8511: /* MUTANT (negate) */	if(! (!yaffs2_checkpt_required(dev))) {
8514: /* MUTANT (del_stmt) */ /* 		ok = 0; */ 
8514: /* MUTANT (rep_const) */		ok = 1;
8514: /* MUTANT (rep_const) */		ok = -1;
8517: /* MUTANT (negate) */	if(! (ok))
8518: /* MUTANT (rep_const) */		ok = yaffs2_checkpt_open(dev, 0);
8518: /* MUTANT (rep_const) */		ok = yaffs2_checkpt_open(dev, -1);
8518: /* MUTANT (rep_const) */		ok = yaffs2_checkpt_open(dev, ((1)+1));
8520: /* MUTANT (negate) */	if(! (ok)) {
8523: /* MUTANT (del_stmt) */ /* 		ok = yaffs2_wr_checkpt_validity_marker(dev, 1); */ 
8523: /* MUTANT (rep_const) */		ok = yaffs2_wr_checkpt_validity_marker(dev, 0);
8523: /* MUTANT (rep_const) */		ok = yaffs2_wr_checkpt_validity_marker(dev, -1);
8523: /* MUTANT (rep_const) */		ok = yaffs2_wr_checkpt_validity_marker(dev, ((1)+1));
8525: /* MUTANT (negate) */	if(! (ok)) {
8528: /* MUTANT (del_stmt) */ /* 		ok = yaffs2_wr_checkpt_dev(dev); */ 
8530: /* MUTANT (negate) */	if(! (ok)) {
8533: /* MUTANT (del_stmt) */ /* 		ok = yaffs2_wr_checkpt_objs(dev); */ 
8535: /* MUTANT (negate) */	if(! (ok)) {
8538: /* MUTANT (del_stmt) */ /* 		ok = yaffs2_wr_checkpt_validity_marker(dev, 0); */ 
8538: /* MUTANT (rep_const) */		ok = yaffs2_wr_checkpt_validity_marker(dev, 1);
8538: /* MUTANT (rep_const) */		ok = yaffs2_wr_checkpt_validity_marker(dev, -1);
8541: /* MUTANT (negate) */	if(! (ok))
8544: /* MUTANT (negate) */	if(! (!yaffs_checkpt_close(dev)))
8545: /* MUTANT (rep_const) */		ok = 1;
8545: /* MUTANT (rep_const) */		ok = -1;
8547: /* MUTANT (negate) */	if(! (ok))
8548: /* MUTANT (rep_const) */		dev->is_checkpointed = 0;
8548: /* MUTANT (rep_const) */		dev->is_checkpointed = -1;
8548: /* MUTANT (rep_const) */		dev->is_checkpointed = ((1)+1);
8550: /* MUTANT (rep_const) */		dev->is_checkpointed = 1;
8550: /* MUTANT (rep_const) */		dev->is_checkpointed = -1;
8552: /* MUTANT (del_stmt) */ /* 	return dev->is_checkpointed; */ 
8557: /* MUTANT (del_stmt) */ /* 	int ok = 1; */ 
8557: /* MUTANT (rep_const) */	int ok = 0;
8557: /* MUTANT (rep_const) */	int ok = -1;
8557: /* MUTANT (rep_const) */	int ok = ((1)+1);
8559: /* MUTANT (negate) */	if(! (!dev->param.is_yaffs2))
8560: /* MUTANT (rep_const) */		ok = 1;
8560: /* MUTANT (rep_const) */		ok = -1;
8562: /* MUTANT (rep_op) */	if (ok || dev->param.skip_checkpt_rd) {
8562: /* MUTANT (negate) */	if(! (ok && dev->param.skip_checkpt_rd)) {
8565: /* MUTANT (del_stmt) */ /* 		ok = 0; */ 
8565: /* MUTANT (rep_const) */		ok = 1;
8565: /* MUTANT (rep_const) */		ok = -1;
8568: /* MUTANT (negate) */	if(! (ok))
8569: /* MUTANT (rep_const) */		ok = yaffs2_checkpt_open(dev, 1); /* open for read */
8569: /* MUTANT (rep_const) */		ok = yaffs2_checkpt_open(dev, -1); /* open for read */
8571: /* MUTANT (negate) */	if(! (ok)) {
8574: /* MUTANT (del_stmt) */ /* 		ok = yaffs2_rd_checkpt_validity_marker(dev, 1); */ 
8574: /* MUTANT (rep_const) */		ok = yaffs2_rd_checkpt_validity_marker(dev, 0);
8574: /* MUTANT (rep_const) */		ok = yaffs2_rd_checkpt_validity_marker(dev, -1);
8574: /* MUTANT (rep_const) */		ok = yaffs2_rd_checkpt_validity_marker(dev, ((1)+1));
8576: /* MUTANT (negate) */	if(! (ok)) {
8579: /* MUTANT (del_stmt) */ /* 		ok = yaffs2_rd_checkpt_dev(dev); */ 
8581: /* MUTANT (negate) */	if(! (ok)) {
8584: /* MUTANT (del_stmt) */ /* 		ok = yaffs2_rd_checkpt_objs(dev); */ 
8586: /* MUTANT (negate) */	if(! (ok)) {
8589: /* MUTANT (del_stmt) */ /* 		ok = yaffs2_rd_checkpt_validity_marker(dev, 0); */ 
8589: /* MUTANT (rep_const) */		ok = yaffs2_rd_checkpt_validity_marker(dev, 1);
8589: /* MUTANT (rep_const) */		ok = yaffs2_rd_checkpt_validity_marker(dev, -1);
8592: /* MUTANT (negate) */	if(! (ok)) {
8593: /* MUTANT (del_stmt) */ /* 		ok = yaffs2_rd_checkpt_sum(dev); */ 
8598: /* MUTANT (negate) */	if(! (!yaffs_checkpt_close(dev)))
8599: /* MUTANT (rep_const) */		ok = 1;
8599: /* MUTANT (rep_const) */		ok = -1;
8601: /* MUTANT (negate) */	if(! (ok))
8602: /* MUTANT (rep_const) */		dev->is_checkpointed = 0;
8602: /* MUTANT (rep_const) */		dev->is_checkpointed = -1;
8602: /* MUTANT (rep_const) */		dev->is_checkpointed = ((1)+1);
8604: /* MUTANT (rep_const) */		dev->is_checkpointed = 1;
8604: /* MUTANT (rep_const) */		dev->is_checkpointed = -1;
8606: /* MUTANT (del_stmt) */ /* 	return ok ? 1 : 0; */ 
8606: /* MUTANT (rep_const) */	return ok ? 0 : 0;
8606: /* MUTANT (rep_const) */	return ok ? -1 : 0;
8606: /* MUTANT (rep_const) */	return ok ? ((1)+1) : 0;
8606: /* MUTANT (rep_const) */	return ok ? 1 : 1;
8606: /* MUTANT (rep_const) */	return ok ? 1 : -1;
8611: /* MUTANT (rep_op) */	if (dev->is_checkpointed && dev->blocks_in_checkpt > 0) {
8611: /* MUTANT (rep_op) */	if (dev->is_checkpointed || dev->blocks_in_checkpt <= 0) {
8611: /* MUTANT (rep_op) */	if (dev->is_checkpointed || dev->blocks_in_checkpt < 0) {
8611: /* MUTANT (rep_op) */	if (dev->is_checkpointed || dev->blocks_in_checkpt >= 0) {
8611: /* MUTANT (rep_op) */	if (dev->is_checkpointed || dev->blocks_in_checkpt == 0) {
8611: /* MUTANT (rep_op) */	if (dev->is_checkpointed || dev->blocks_in_checkpt != 0) {
8611: /* MUTANT (rep_const) */	if (dev->is_checkpointed || dev->blocks_in_checkpt > 1) {
8611: /* MUTANT (rep_const) */	if (dev->is_checkpointed || dev->blocks_in_checkpt > -1) {
8611: /* MUTANT (negate) */	if(! (dev->is_checkpointed || dev->blocks_in_checkpt > 0)) {
8612: /* MUTANT (del_stmt) */ /* 		dev->is_checkpointed = 0; */ 
8612: /* MUTANT (rep_const) */		dev->is_checkpointed = 1;
8612: /* MUTANT (rep_const) */		dev->is_checkpointed = -1;
8613: /* MUTANT (del_stmt) */ /* 		yaffs2_checkpt_invalidate_stream(dev); */ 
8615: /* MUTANT (negate) */	if(! (dev->param.sb_dirty_fn))
8625: /* MUTANT (del_stmt) */ /* 	yaffs_verify_objects(dev); */ 
8625: /* MUTANT (negate) */	yaffs_verif(!y_objects(dev));
8626: /* MUTANT (del_stmt) */ /* 	yaffs_verify_blocks(dev); */ 
8626: /* MUTANT (negate) */	yaffs_verif(!y_blocks(dev));
8627: /* MUTANT (del_stmt) */ /* 	yaffs_verify_free_chunks(dev); */ 
8627: /* MUTANT (negate) */	yaffs_verif(!y_free_chunks(dev));
8629: /* MUTANT (negate) */	if(! (!dev->is_checkpointed)) {
8630: /* MUTANT (del_stmt) */ /* 		yaffs2_checkpt_invalidate(dev); */ 
8631: /* MUTANT (del_stmt) */ /* 		yaffs2_wr_checkpt_data(dev); */ 
8634: /* MUTANT (rep_op) */	yaffs_trace(YAFFS_TRACE_CHECKPOINT & YAFFS_TRACE_MOUNT,
8638: /* MUTANT (del_stmt) */ /* 	return dev->is_checkpointed; */ 
8643: /* MUTANT (del_stmt) */ /* 	int retval; */ 
8649: /* MUTANT (del_stmt) */ /* 	retval = yaffs2_rd_checkpt_data(dev); */ 
8651: /* MUTANT (negate) */	if(! (dev->is_checkpointed)) {
8652: /* MUTANT (del_stmt) */ /* 		yaffs_verify_objects(dev); */ 
8652: /* MUTANT (negate) */		yaffs_verif(!y_objects(dev));
8653: /* MUTANT (del_stmt) */ /* 		yaffs_verify_blocks(dev); */ 
8653: /* MUTANT (negate) */		yaffs_verif(!y_blocks(dev));
8654: /* MUTANT (del_stmt) */ /* 		yaffs_verify_free_chunks(dev); */ 
8654: /* MUTANT (negate) */		yaffs_verif(!y_free_chunks(dev));
8661: /* MUTANT (del_stmt) */ /* 	return retval; */ 
8671: /* MUTANT (del_stmt) */ /* 	loff_t old_file_size; */ 
8672: /* MUTANT (del_stmt) */ /* 	int increase; */ 
8673: /* MUTANT (del_stmt) */ /* 	int small_hole; */ 
8674: /* MUTANT (del_stmt) */ /* 	int result = YAFFS_OK; */ 
8675: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev = NULL; */ 
8676: /* MUTANT (del_stmt) */ /* 	u8 *local_buffer = NULL; */ 
8677: /* MUTANT (del_stmt) */ /* 	int small_increase_ok = 0; */ 
8677: /* MUTANT (rep_const) */	int small_increase_ok = 1;
8677: /* MUTANT (rep_const) */	int small_increase_ok = -1;
8679: /* MUTANT (negate) */	if(! (!obj))
8682: /* MUTANT (rep_op) */	if (obj->variant_type == YAFFS_OBJECT_TYPE_FILE)
8682: /* MUTANT (negate) */	if(! (obj->variant_type != YAFFS_OBJECT_TYPE_FILE))
8685: /* MUTANT (del_stmt) */ /* 	dev = obj->my_dev; */ 
8688: /* MUTANT (negate) */	if(! (!dev->param.is_yaffs2))
8691: /* MUTANT (del_stmt) */ /* 	old_file_size = obj->variant.file_variant.file_size; */ 
8693: /* MUTANT (rep_op) */	if (new_size < old_file_size)
8693: /* MUTANT (rep_op) */	if (new_size > old_file_size)
8693: /* MUTANT (rep_op) */	if (new_size >= old_file_size)
8693: /* MUTANT (rep_op) */	if (new_size == old_file_size)
8693: /* MUTANT (rep_op) */	if (new_size != old_file_size)
8693: /* MUTANT (negate) */	if(! (new_size <= old_file_size))
8696: /* MUTANT (del_stmt) */ /* 	increase = new_size - old_file_size; */ 
8698: /* MUTANT (rep_op) */	if (increase <= YAFFS_SMALL_HOLE_THRESHOLD * dev->data_bytes_per_chunk &&
8698: /* MUTANT (rep_op) */	if (increase > YAFFS_SMALL_HOLE_THRESHOLD * dev->data_bytes_per_chunk &&
8698: /* MUTANT (rep_op) */	if (increase >= YAFFS_SMALL_HOLE_THRESHOLD * dev->data_bytes_per_chunk &&
8698: /* MUTANT (rep_op) */	if (increase == YAFFS_SMALL_HOLE_THRESHOLD * dev->data_bytes_per_chunk &&
8698: /* MUTANT (rep_op) */	if (increase != YAFFS_SMALL_HOLE_THRESHOLD * dev->data_bytes_per_chunk &&
8698: /* MUTANT (rep_op) */	if (increase < YAFFS_SMALL_HOLE_THRESHOLD * dev->data_bytes_per_chunk ||
8699: /* MUTANT (rep_op) */	    yaffs_check_alloc_available(dev, YAFFS_SMALL_HOLE_THRESHOLD - 1))
8699: /* MUTANT (rep_op) */	    yaffs_check_alloc_available(dev, YAFFS_SMALL_HOLE_THRESHOLD * 1))
8699: /* MUTANT (rep_op) */	    yaffs_check_alloc_available(dev, YAFFS_SMALL_HOLE_THRESHOLD % 1))
8699: /* MUTANT (rep_const) */	    yaffs_check_alloc_available(dev, YAFFS_SMALL_HOLE_THRESHOLD + 0))
8699: /* MUTANT (rep_const) */	    yaffs_check_alloc_available(dev, YAFFS_SMALL_HOLE_THRESHOLD + -1))
8699: /* MUTANT (rep_const) */	    yaffs_check_alloc_available(dev, YAFFS_SMALL_HOLE_THRESHOLD + ((1)+1)))
8700: /* MUTANT (rep_const) */		small_hole = 0;
8700: /* MUTANT (rep_const) */		small_hole = -1;
8700: /* MUTANT (rep_const) */		small_hole = ((1)+1);
8702: /* MUTANT (rep_const) */		small_hole = 1;
8702: /* MUTANT (rep_const) */		small_hole = -1;
8704: /* MUTANT (negate) */	if(! (small_hole))
8707: /* MUTANT (negate) */	if(! (local_buffer)) {
8709: /* MUTANT (del_stmt) */ /* 		int pos = old_file_size; */ 
8710: /* MUTANT (del_stmt) */ /* 		int this_write; */ 
8711: /* MUTANT (del_stmt) */ /* 		int written; */ 
8712: /* MUTANT (del_stmt) */ /* 		mymemset(local_buffer, 0, dev->data_bytes_per_chunk); */ 
8712: /* MUTANT (rep_const) */		mymemset(local_buffer, 1, dev->data_bytes_per_chunk);
8712: /* MUTANT (rep_const) */		mymemset(local_buffer, -1, dev->data_bytes_per_chunk);
8713: /* MUTANT (del_stmt) */ /* 		small_increase_ok = 1; */ 
8713: /* MUTANT (rep_const) */		small_increase_ok = 0;
8713: /* MUTANT (rep_const) */		small_increase_ok = -1;
8713: /* MUTANT (rep_const) */		small_increase_ok = ((1)+1);
8715: /* MUTANT (rep_op) */		while (increase <= 0 && small_increase_ok) {
8715: /* MUTANT (rep_op) */		while (increase < 0 && small_increase_ok) {
8715: /* MUTANT (rep_op) */		while (increase >= 0 && small_increase_ok) {
8715: /* MUTANT (rep_op) */		while (increase == 0 && small_increase_ok) {
8715: /* MUTANT (rep_op) */		while (increase != 0 && small_increase_ok) {
8715: /* MUTANT (rep_op) */		while (increase > 0 || small_increase_ok) {
8715: /* MUTANT (rep_const) */		while (increase > 1 && small_increase_ok) {
8715: /* MUTANT (rep_const) */		while (increase > -1 && small_increase_ok) {
8715: /* MUTANT (negate) */		while(! (increase > 0 && small_increase_ok)) {
8716: /* MUTANT (del_stmt) */ /* 			this_write = increase; */ 
8717: /* MUTANT (rep_op) */			if (this_write <= dev->data_bytes_per_chunk)
8717: /* MUTANT (rep_op) */			if (this_write < dev->data_bytes_per_chunk)
8717: /* MUTANT (rep_op) */			if (this_write >= dev->data_bytes_per_chunk)
8717: /* MUTANT (rep_op) */			if (this_write == dev->data_bytes_per_chunk)
8717: /* MUTANT (rep_op) */			if (this_write != dev->data_bytes_per_chunk)
8717: /* MUTANT (negate) */			if(! (this_write > dev->data_bytes_per_chunk))
8721: /* MUTANT (rep_const) */					     1);
8721: /* MUTANT (rep_const) */					     -1);
8722: /* MUTANT (rep_op) */			if (written != this_write) {
8722: /* MUTANT (negate) */			if(! (written == this_write)) {
8723: /* MUTANT (del_stmt) */ /* 				pos += this_write; */ 
8723: /* MUTANT (rep_op) */				pos -= this_write;
8723: /* MUTANT (rep_op) */				pos *= this_write;
8723: /* MUTANT (rep_op) */				pos %= this_write;
8724: /* MUTANT (del_stmt) */ /* 				increase -= this_write; */ 
8724: /* MUTANT (rep_op) */				increase += this_write;
8724: /* MUTANT (rep_op) */				increase *= this_write;
8724: /* MUTANT (rep_op) */				increase %= this_write;
8726: /* MUTANT (del_stmt) */ /* 				small_increase_ok = 0; */ 
8726: /* MUTANT (rep_const) */				small_increase_ok = 1;
8726: /* MUTANT (rep_const) */				small_increase_ok = -1;
8733: /* MUTANT (negate) */		if(! (!small_increase_ok))
8737: /* MUTANT (rep_op) */	if (!small_increase_ok ||
8738: /* MUTANT (rep_op) */	    obj->parent ||
8739: /* MUTANT (rep_op) */	    obj->parent->obj_id == YAFFS_OBJECTID_UNLINKED &&
8739: /* MUTANT (rep_op) */	    obj->parent->obj_id != YAFFS_OBJECTID_UNLINKED ||
8740: /* MUTANT (rep_op) */	    obj->parent->obj_id == YAFFS_OBJECTID_DELETED) {
8742: /* MUTANT (del_stmt) */ /* 		yaffs_update_oh(obj, NULL, 0, 1, 0, NULL); */ 
8742: /* MUTANT (rep_const) */		yaffs_update_oh(obj, NULL, 1, 1, 0, NULL);
8742: /* MUTANT (rep_const) */		yaffs_update_oh(obj, NULL, -1, 1, 0, NULL);
8742: /* MUTANT (rep_const) */		yaffs_update_oh(obj, NULL, 0, 0, 0, NULL);
8742: /* MUTANT (rep_const) */		yaffs_update_oh(obj, NULL, 0, -1, 0, NULL);
8742: /* MUTANT (rep_const) */		yaffs_update_oh(obj, NULL, 0, ((1)+1), 0, NULL);
8742: /* MUTANT (rep_const) */		yaffs_update_oh(obj, NULL, 0, 1, 1, NULL);
8742: /* MUTANT (rep_const) */		yaffs_update_oh(obj, NULL, 0, 1, -1, NULL);
8749: /* MUTANT (del_stmt) */ /* 	int seq; */ 
8750: /* MUTANT (del_stmt) */ /* 	int block; */ 
8751: /* MUTANT (del_stmt) */ /* }; */ 
8755: /* MUTANT (del_stmt) */ /* 	int aseq = ((struct yaffs_block_index *)a)->seq; */ 
8756: /* MUTANT (del_stmt) */ /* 	int bseq = ((struct yaffs_block_index *)b)->seq; */ 
8757: /* MUTANT (del_stmt) */ /* 	int ablock = ((struct yaffs_block_index *)a)->block; */ 
8758: /* MUTANT (del_stmt) */ /* 	int bblock = ((struct yaffs_block_index *)b)->block; */ 
8760: /* MUTANT (rep_op) */	if (aseq != bseq)
8760: /* MUTANT (negate) */	if(! (aseq == bseq))
8763: /* MUTANT (del_stmt) */ /* 	return aseq - bseq; */ 
8774: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj_hdr *oh; */ 
8775: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *in; */ 
8776: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *parent; */ 
8777: /* MUTANT (del_stmt) */ /* 	int equiv_id; */ 
8778: /* MUTANT (del_stmt) */ /* 	int file_size; */ 
8779: /* MUTANT (del_stmt) */ /* 	int is_shrink; */ 
8780: /* MUTANT (del_stmt) */ /* 	int is_unlinked; */ 
8781: /* MUTANT (del_stmt) */ /* 	struct yaffs_ext_tags tags; */ 
8782: /* MUTANT (del_stmt) */ /* 	int result; */ 
8783: /* MUTANT (del_stmt) */ /* 	int alloc_failed = 0; */ 
8783: /* MUTANT (rep_const) */	int alloc_failed = 1;
8783: /* MUTANT (rep_const) */	int alloc_failed = -1;
8784: /* MUTANT (del_stmt) */ /* 	int chunk = blk * dev->param.chunks_per_block + chunk_in_block; */ 
8784: /* MUTANT (rep_op) */	int chunk = blk * dev->param.chunks_per_block - chunk_in_block;
8784: /* MUTANT (rep_op) */	int chunk = blk * dev->param.chunks_per_block * chunk_in_block;
8784: /* MUTANT (rep_op) */	int chunk = blk * dev->param.chunks_per_block % chunk_in_block;
8785: /* MUTANT (del_stmt) */ /* 	struct yaffs_file_var *file_var; */ 
8786: /* MUTANT (del_stmt) */ /* 	struct yaffs_hardlink_var *hl_var; */ 
8787: /* MUTANT (del_stmt) */ /* 	struct yaffs_symlink_var *sl_var; */ 
8789: /* MUTANT (negate) */	if(! (summary_available)) {
8790: /* MUTANT (del_stmt) */ /* 		result = yaffs_summary_fetch(dev, &tags, chunk_in_block); */ 
8791: /* MUTANT (del_stmt) */ /* 		tags.seq_number = bi->seq_number; */ 
8794: /* MUTANT (rep_op) */	if (!summary_available && tags.obj_id == 0) {
8794: /* MUTANT (rep_op) */	if (!summary_available || tags.obj_id != 0) {
8794: /* MUTANT (rep_const) */	if (!summary_available || tags.obj_id == 1) {
8794: /* MUTANT (rep_const) */	if (!summary_available || tags.obj_id == -1) {
8794: /* MUTANT (negate) */	if(! (!summary_available || tags.obj_id == 0)) {
8795: /* MUTANT (del_stmt) */ /* 		result = yaffs_rd_chunk_tags_nand(dev, chunk, NULL, &tags); */ 
8796: /* MUTANT (del_stmt) */ /* 		dev->tags_used++; */ 
8796: /* MUTANT (rep_op) */		dev->tags_used--;
8798: /* MUTANT (del_stmt) */ /* 		dev->summary_used++; */ 
8798: /* MUTANT (rep_op) */		dev->summary_used--;
8803: /* MUTANT (negate) */	if(! (!tags.chunk_used)) {
8815: /* MUTANT (negate) */		if(! (*found_chunks)) {
8818: /* MUTANT (rep_op) */		} else if (chunk_in_block != 0) {
8818: /* MUTANT (rep_const) */		} else if (chunk_in_block == 1) {
8818: /* MUTANT (rep_const) */		} else if (chunk_in_block == -1) {
8818: /* MUTANT (negate) */		} else if(! (chunk_in_block == 0)) {
8821: /* MUTANT (del_stmt) */ /* 			bi->block_state = YAFFS_BLOCK_STATE_EMPTY; */ 
8822: /* MUTANT (del_stmt) */ /* 			dev->n_erased_blocks++; */ 
8822: /* MUTANT (rep_op) */			dev->n_erased_blocks--;
8824: /* MUTANT (rep_op) */			if (bi->block_state != YAFFS_BLOCK_STATE_NEEDS_SCAN ||
8824: /* MUTANT (rep_op) */			if (bi->block_state == YAFFS_BLOCK_STATE_NEEDS_SCAN &&
8825: /* MUTANT (rep_op) */			    bi->block_state != YAFFS_BLOCK_STATE_ALLOCATING) {
8826: /* MUTANT (rep_op) */				if (dev->seq_number != bi->seq_number) {
8826: /* MUTANT (negate) */				if(! (dev->seq_number == bi->seq_number)) {
8834: /* MUTANT (del_stmt) */ /* 					dev->alloc_block = blk; */ 
8835: /* MUTANT (del_stmt) */ /* 					dev->alloc_page = chunk_in_block; */ 
8836: /* MUTANT (del_stmt) */ /* 					dev->alloc_block_finder = blk; */ 
8849: /* MUTANT (rep_op) */		dev->n_free_chunks--;
8851: /* MUTANT (rep_op) */	} else if (tags.ecc_result !=
8856: /* MUTANT (del_stmt) */ /* 			dev->n_free_chunks++; */ 
8856: /* MUTANT (rep_op) */			dev->n_free_chunks--;
8857: /* MUTANT (rep_op) */	} else if (tags.obj_id <= YAFFS_MAX_OBJECT_ID ||
8857: /* MUTANT (rep_op) */	} else if (tags.obj_id < YAFFS_MAX_OBJECT_ID ||
8857: /* MUTANT (rep_op) */	} else if (tags.obj_id >= YAFFS_MAX_OBJECT_ID ||
8857: /* MUTANT (rep_op) */	} else if (tags.obj_id == YAFFS_MAX_OBJECT_ID ||
8857: /* MUTANT (rep_op) */	} else if (tags.obj_id != YAFFS_MAX_OBJECT_ID ||
8857: /* MUTANT (rep_op) */	} else if (tags.obj_id > YAFFS_MAX_OBJECT_ID &&
8858: /* MUTANT (rep_op) */		   tags.chunk_id <= YAFFS_MAX_CHUNK_ID ||
8858: /* MUTANT (rep_op) */		   tags.chunk_id < YAFFS_MAX_CHUNK_ID ||
8858: /* MUTANT (rep_op) */		   tags.chunk_id >= YAFFS_MAX_CHUNK_ID ||
8858: /* MUTANT (rep_op) */		   tags.chunk_id == YAFFS_MAX_CHUNK_ID ||
8858: /* MUTANT (rep_op) */		   tags.chunk_id != YAFFS_MAX_CHUNK_ID ||
8858: /* MUTANT (rep_op) */		   tags.chunk_id > YAFFS_MAX_CHUNK_ID &&
8859: /* MUTANT (rep_op) */		   tags.obj_id != YAFFS_OBJECTID_SUMMARY ||
8859: /* MUTANT (rep_op) */		   tags.obj_id == YAFFS_OBJECTID_SUMMARY &&
8860: /* MUTANT (rep_op) */		   (tags.chunk_id <= 0 &&
8860: /* MUTANT (rep_op) */		   (tags.chunk_id < 0 &&
8860: /* MUTANT (rep_op) */		   (tags.chunk_id >= 0 &&
8860: /* MUTANT (rep_op) */		   (tags.chunk_id == 0 &&
8860: /* MUTANT (rep_op) */		   (tags.chunk_id != 0 &&
8860: /* MUTANT (rep_op) */		   (tags.chunk_id > 0 ||
8860: /* MUTANT (rep_const) */		   (tags.chunk_id > 1 &&
8860: /* MUTANT (rep_const) */		   (tags.chunk_id > -1 &&
8861: /* MUTANT (rep_op) */		     tags.n_bytes <= dev->data_bytes_per_chunk) ||
8861: /* MUTANT (rep_op) */		     tags.n_bytes < dev->data_bytes_per_chunk) ||
8861: /* MUTANT (rep_op) */		     tags.n_bytes >= dev->data_bytes_per_chunk) ||
8861: /* MUTANT (rep_op) */		     tags.n_bytes == dev->data_bytes_per_chunk) ||
8861: /* MUTANT (rep_op) */		     tags.n_bytes != dev->data_bytes_per_chunk) ||
8861: /* MUTANT (rep_op) */		     tags.n_bytes > dev->data_bytes_per_chunk) &&
8862: /* MUTANT (rep_op) */		   tags.seq_number == bi->seq_number) {
8867: /* MUTANT (del_stmt) */ /* 		dev->n_free_chunks++; */ 
8867: /* MUTANT (rep_op) */		dev->n_free_chunks--;
8868: /* MUTANT (rep_op) */	} else if (tags.chunk_id <= 0) {
8868: /* MUTANT (rep_op) */	} else if (tags.chunk_id < 0) {
8868: /* MUTANT (rep_op) */	} else if (tags.chunk_id >= 0) {
8868: /* MUTANT (rep_op) */	} else if (tags.chunk_id == 0) {
8868: /* MUTANT (rep_op) */	} else if (tags.chunk_id != 0) {
8868: /* MUTANT (rep_const) */	} else if (tags.chunk_id > 1) {
8868: /* MUTANT (rep_const) */	} else if (tags.chunk_id > -1) {
8868: /* MUTANT (negate) */	} else if(! (tags.chunk_id > 0)) {
8870: /* MUTANT (del_stmt) */ /* 		unsigned int endpos; */ 
8871: /* MUTANT (rep_const) */		u32 chunk_base = (tags.chunk_id - 0) *
8871: /* MUTANT (rep_const) */		u32 chunk_base = (tags.chunk_id - -1) *
8871: /* MUTANT (rep_const) */		u32 chunk_base = (tags.chunk_id - ((1)+1)) *
8874: /* MUTANT (del_stmt) */ /* 		*found_chunks = 1; */ 
8874: /* MUTANT (rep_const) */		*found_chunks = 0;
8874: /* MUTANT (rep_const) */		*found_chunks = -1;
8874: /* MUTANT (rep_const) */		*found_chunks = ((1)+1);
8876: /* MUTANT (del_stmt) */ /* 		yaffs_set_chunk_bit(dev, blk, chunk_in_block); */ 
8877: /* MUTANT (del_stmt) */ /* 		bi->pages_in_use++; */ 
8877: /* MUTANT (rep_op) */		bi->pages_in_use--;
8882: /* MUTANT (negate) */		if(! (!in))
8884: /* MUTANT (rep_const) */			alloc_failed = 0;
8884: /* MUTANT (rep_const) */			alloc_failed = -1;
8884: /* MUTANT (rep_const) */			alloc_failed = ((1)+1);
8886: /* MUTANT (rep_op) */		if (in ||
8887: /* MUTANT (rep_op) */		    in->variant_type != YAFFS_OBJECT_TYPE_FILE &&
8887: /* MUTANT (rep_op) */		    in->variant_type == YAFFS_OBJECT_TYPE_FILE ||
8888: /* MUTANT (rep_op) */		    chunk_base <= in->variant.file_variant.shrink_size) {
8888: /* MUTANT (rep_op) */		    chunk_base > in->variant.file_variant.shrink_size) {
8888: /* MUTANT (rep_op) */		    chunk_base >= in->variant.file_variant.shrink_size) {
8888: /* MUTANT (rep_op) */		    chunk_base == in->variant.file_variant.shrink_size) {
8888: /* MUTANT (rep_op) */		    chunk_base != in->variant.file_variant.shrink_size) {
8892: /* MUTANT (rep_const) */								chunk, 0))
8892: /* MUTANT (rep_const) */								chunk, 1))
8892: /* MUTANT (rep_const) */								chunk, ((-1)+1)))
8892: /* MUTANT (rep_const) */								chunk, ((-1)-1)))
8893: /* MUTANT (rep_const) */				alloc_failed = 0;
8893: /* MUTANT (rep_const) */				alloc_failed = -1;
8893: /* MUTANT (rep_const) */				alloc_failed = ((1)+1);
8901: /* MUTANT (del_stmt) */ /* 			endpos = chunk_base + tags.n_bytes; */ 
8901: /* MUTANT (rep_op) */			endpos = chunk_base - tags.n_bytes;
8901: /* MUTANT (rep_op) */			endpos = chunk_base * tags.n_bytes;
8901: /* MUTANT (rep_op) */			endpos = chunk_base % tags.n_bytes;
8903: /* MUTANT (rep_op) */			if (!in->valid ||
8904: /* MUTANT (rep_op) */			    in->variant.file_variant.scanned_size <= endpos) {
8904: /* MUTANT (rep_op) */			    in->variant.file_variant.scanned_size > endpos) {
8904: /* MUTANT (rep_op) */			    in->variant.file_variant.scanned_size >= endpos) {
8904: /* MUTANT (rep_op) */			    in->variant.file_variant.scanned_size == endpos) {
8904: /* MUTANT (rep_op) */			    in->variant.file_variant.scanned_size != endpos) {
8910: /* MUTANT (negate) */		} else if(! (in)) {
8914: /* MUTANT (del_stmt) */ /* 			yaffs_chunk_del(dev, chunk, 1, __LINE__); */ 
8914: /* MUTANT (rep_const) */			yaffs_chunk_del(dev, chunk, 0, __LINE__);
8914: /* MUTANT (rep_const) */			yaffs_chunk_del(dev, chunk, -1, __LINE__);
8914: /* MUTANT (rep_const) */			yaffs_chunk_del(dev, chunk, ((1)+1), __LINE__);
8921: /* MUTANT (del_stmt) */ /* 		*found_chunks = 1; */ 
8921: /* MUTANT (rep_const) */		*found_chunks = 0;
8921: /* MUTANT (rep_const) */		*found_chunks = -1;
8921: /* MUTANT (rep_const) */		*found_chunks = ((1)+1);
8923: /* MUTANT (del_stmt) */ /* 		yaffs_set_chunk_bit(dev, blk, chunk_in_block); */ 
8924: /* MUTANT (del_stmt) */ /* 		bi->pages_in_use++; */ 
8924: /* MUTANT (rep_op) */		bi->pages_in_use--;
8926: /* MUTANT (del_stmt) */ /* 		oh = NULL; */ 
8927: /* MUTANT (del_stmt) */ /* 		in = NULL; */ 
8929: /* MUTANT (negate) */		if(! (tags.extra_available)) {
8933: /* MUTANT (negate) */			if(! (!in))
8934: /* MUTANT (rep_const) */				alloc_failed = 0;
8934: /* MUTANT (rep_const) */				alloc_failed = -1;
8934: /* MUTANT (rep_const) */				alloc_failed = ((1)+1);
8937: /* MUTANT (rep_op) */		if (!in &&
8938: /* MUTANT (rep_op) */		    (!in->valid || dev->param.disable_lazy_load) ||
8938: /* MUTANT (rep_op) */		    (!in->valid && dev->param.disable_lazy_load) &&
8939: /* MUTANT (rep_op) */		    tags.extra_shadows &&
8940: /* MUTANT (rep_op) */		    (!in->valid || (tags.obj_id == YAFFS_OBJECTID_ROOT ||
8940: /* MUTANT (rep_op) */		    (!in->valid && (tags.obj_id != YAFFS_OBJECTID_ROOT ||
8940: /* MUTANT (rep_op) */		    (!in->valid && (tags.obj_id == YAFFS_OBJECTID_ROOT &&
8941: /* MUTANT (rep_op) */				 tags.obj_id != YAFFS_OBJECTID_LOSTNFOUND))) {
8955: /* MUTANT (del_stmt) */ /* 			oh = (struct yaffs_obj_hdr *)chunk_data; */ 
8957: /* MUTANT (negate) */			if(! (dev->param.inband_tags)) {
8966: /* MUTANT (negate) */			if(! (!in)) {
8969: /* MUTANT (negate) */				if(! (!in))
8970: /* MUTANT (rep_const) */					alloc_failed = 0;
8970: /* MUTANT (rep_const) */					alloc_failed = -1;
8970: /* MUTANT (rep_const) */					alloc_failed = ((1)+1);
8974: /* MUTANT (negate) */		if(! (!in)) {
8979: /* MUTANT (del_stmt) */ /* 			return YAFFS_FAIL; */ 
8982: /* MUTANT (negate) */		if(! (in->valid)) {
8988: /* MUTANT (rep_op) */			if ((in->variant_type != YAFFS_OBJECT_TYPE_FILE) &&
8988: /* MUTANT (rep_op) */			if ((in->variant_type == YAFFS_OBJECT_TYPE_FILE) ||
8989: /* MUTANT (rep_op) */				((oh || oh->type == YAFFS_OBJECT_TYPE_FILE) ||
8989: /* MUTANT (rep_op) */				((oh && oh->type != YAFFS_OBJECT_TYPE_FILE) ||
8989: /* MUTANT (rep_op) */				((oh && oh->type == YAFFS_OBJECT_TYPE_FILE) &&
8990: /* MUTANT (rep_op) */				 (tags.extra_available ||
8991: /* MUTANT (rep_op) */				  tags.extra_obj_type != YAFFS_OBJECT_TYPE_FILE)
9009: /* MUTANT (rep_op) */				if (parent_obj_id != YAFFS_OBJECTID_DELETED ||
9009: /* MUTANT (rep_op) */				if (parent_obj_id == YAFFS_OBJECTID_DELETED &&
9010: /* MUTANT (rep_op) */				    parent_obj_id != YAFFS_OBJECTID_UNLINKED) {
9011: /* MUTANT (del_stmt) */ /* 					this_size = 0; */ 
9011: /* MUTANT (rep_const) */					this_size = 1;
9011: /* MUTANT (rep_const) */					this_size = -1;
9012: /* MUTANT (del_stmt) */ /* 					is_shrink = 1; */ 
9012: /* MUTANT (rep_const) */					is_shrink = 0;
9012: /* MUTANT (rep_const) */					is_shrink = -1;
9012: /* MUTANT (rep_const) */					is_shrink = ((1)+1);
9015: /* MUTANT (rep_op) */				if (is_shrink ||
9016: /* MUTANT (rep_op) */				    in->variant.file_variant.shrink_size <=
9016: /* MUTANT (rep_op) */				    in->variant.file_variant.shrink_size <
9016: /* MUTANT (rep_op) */				    in->variant.file_variant.shrink_size >=
9016: /* MUTANT (rep_op) */				    in->variant.file_variant.shrink_size ==
9016: /* MUTANT (rep_op) */				    in->variant.file_variant.shrink_size !=
9021: /* MUTANT (negate) */				if(! (is_shrink))
9022: /* MUTANT (rep_const) */					bi->has_shrink_hdr = 0;
9022: /* MUTANT (rep_const) */					bi->has_shrink_hdr = -1;
9022: /* MUTANT (rep_const) */					bi->has_shrink_hdr = ((1)+1);
9025: /* MUTANT (rep_const) */			yaffs_chunk_del(dev, chunk, 0, __LINE__);
9025: /* MUTANT (rep_const) */			yaffs_chunk_del(dev, chunk, -1, __LINE__);
9025: /* MUTANT (rep_const) */			yaffs_chunk_del(dev, chunk, ((1)+1), __LINE__);
9028: /* MUTANT (rep_op) */		if (!in->valid || in->variant_type !=
9028: /* MUTANT (rep_op) */		if (!in->valid && in->variant_type ==
9036: /* MUTANT (rep_op) */		if (!in->valid ||
9037: /* MUTANT (rep_op) */		    (tags.obj_id != YAFFS_OBJECTID_ROOT ||
9037: /* MUTANT (rep_op) */		    (tags.obj_id == YAFFS_OBJECTID_ROOT &&
9038: /* MUTANT (rep_op) */		     tags.obj_id != YAFFS_OBJECTID_LOSTNFOUND)) {
9041: /* MUTANT (del_stmt) */ /* 			in->valid = 1; */ 
9041: /* MUTANT (rep_const) */			in->valid = 0;
9041: /* MUTANT (rep_const) */			in->valid = -1;
9041: /* MUTANT (rep_const) */			in->valid = ((1)+1);
9043: /* MUTANT (negate) */			if(! (oh)) {
9044: /* MUTANT (del_stmt) */ /* 				in->yst_mode = oh->yst_mode; */ 
9045: /* MUTANT (del_stmt) */ /* 				yaffs_load_attribs(in, oh); */ 
9046: /* MUTANT (del_stmt) */ /* 				in->lazy_loaded = 0; */ 
9046: /* MUTANT (rep_const) */				in->lazy_loaded = 1;
9046: /* MUTANT (rep_const) */				in->lazy_loaded = -1;
9048: /* MUTANT (del_stmt) */ /* 				in->lazy_loaded = 1; */ 
9048: /* MUTANT (rep_const) */				in->lazy_loaded = 0;
9048: /* MUTANT (rep_const) */				in->lazy_loaded = -1;
9048: /* MUTANT (rep_const) */				in->lazy_loaded = ((1)+1);
9052: /* MUTANT (negate) */		} else if(! (!in->valid)) {
9054: /* MUTANT (del_stmt) */ /* 			in->valid = 1; */ 
9054: /* MUTANT (rep_const) */			in->valid = 0;
9054: /* MUTANT (rep_const) */			in->valid = -1;
9054: /* MUTANT (rep_const) */			in->valid = ((1)+1);
9055: /* MUTANT (del_stmt) */ /* 			in->hdr_chunk = chunk; */ 
9056: /* MUTANT (negate) */			if(! (oh)) {
9057: /* MUTANT (del_stmt) */ /* 				in->variant_type = oh->type; */ 
9058: /* MUTANT (del_stmt) */ /* 				in->yst_mode = oh->yst_mode; */ 
9059: /* MUTANT (del_stmt) */ /* 				yaffs_load_attribs(in, oh); */ 
9061: /* MUTANT (rep_op) */				if (oh->shadows_obj <= 0)
9061: /* MUTANT (rep_op) */				if (oh->shadows_obj < 0)
9061: /* MUTANT (rep_op) */				if (oh->shadows_obj >= 0)
9061: /* MUTANT (rep_op) */				if (oh->shadows_obj == 0)
9061: /* MUTANT (rep_op) */				if (oh->shadows_obj != 0)
9061: /* MUTANT (rep_const) */				if (oh->shadows_obj > 1)
9061: /* MUTANT (rep_const) */				if (oh->shadows_obj > -1)
9061: /* MUTANT (negate) */				if(! (oh->shadows_obj > 0))
9063: /* MUTANT (rep_const) */					     oh->shadows_obj, 0);
9063: /* MUTANT (rep_const) */					     oh->shadows_obj, -1);
9063: /* MUTANT (rep_const) */					     oh->shadows_obj, ((1)+1));
9065: /* MUTANT (del_stmt) */ /* 				yaffs_set_obj_name_from_oh(in, oh); */ 
9069: /* MUTANT (del_stmt) */ /* 				file_size = oh->file_size; */ 
9070: /* MUTANT (del_stmt) */ /* 				is_shrink = oh->is_shrink; */ 
9071: /* MUTANT (del_stmt) */ /* 				equiv_id = oh->equiv_id; */ 
9073: /* MUTANT (del_stmt) */ /* 				in->variant_type = tags.extra_obj_type; */ 
9077: /* MUTANT (del_stmt) */ /* 				file_size = tags.extra_length; */ 
9078: /* MUTANT (del_stmt) */ /* 				is_shrink = tags.extra_is_shrink; */ 
9079: /* MUTANT (del_stmt) */ /* 				equiv_id = tags.extra_equiv_id; */ 
9080: /* MUTANT (del_stmt) */ /* 				in->lazy_loaded = 1; */ 
9080: /* MUTANT (rep_const) */				in->lazy_loaded = 0;
9080: /* MUTANT (rep_const) */				in->lazy_loaded = -1;
9080: /* MUTANT (rep_const) */				in->lazy_loaded = ((1)+1);
9082: /* MUTANT (rep_const) */			in->dirty = 1;
9082: /* MUTANT (rep_const) */			in->dirty = -1;
9084: /* MUTANT (negate) */			if(! (!parent))
9085: /* MUTANT (rep_const) */				alloc_failed = 0;
9085: /* MUTANT (rep_const) */				alloc_failed = -1;
9085: /* MUTANT (rep_const) */				alloc_failed = ((1)+1);
9091: /* MUTANT (rep_op) */			if (parent ||
9092: /* MUTANT (rep_op) */			    parent->variant_type != YAFFS_OBJECT_TYPE_UNKNOWN) {
9098: /* MUTANT (rep_op) */			} else if (!parent &&
9099: /* MUTANT (rep_op) */				   parent->variant_type ==
9108: /* MUTANT (del_stmt) */ /* 				parent = dev->lost_n_found; */ 
9112: /* MUTANT (rep_op) */			is_unlinked = (parent != dev->del_dir) ||
9112: /* MUTANT (rep_op) */			is_unlinked = (parent == dev->del_dir) &&
9113: /* MUTANT (rep_op) */					(parent != dev->unlinked_dir);
9115: /* MUTANT (negate) */			if(! (is_shrink))
9117: /* MUTANT (rep_const) */				bi->has_shrink_hdr = 0;
9117: /* MUTANT (rep_const) */				bi->has_shrink_hdr = -1;
9117: /* MUTANT (rep_const) */				bi->has_shrink_hdr = ((1)+1);
9133: /* MUTANT (rep_op) */				if (file_var->scanned_size <= file_size) {
9133: /* MUTANT (rep_op) */				if (file_var->scanned_size > file_size) {
9133: /* MUTANT (rep_op) */				if (file_var->scanned_size >= file_size) {
9133: /* MUTANT (rep_op) */				if (file_var->scanned_size == file_size) {
9133: /* MUTANT (rep_op) */				if (file_var->scanned_size != file_size) {
9133: /* MUTANT (negate) */				if(! (file_var->scanned_size < file_size)) {
9140: /* MUTANT (del_stmt) */ /* 					file_var->file_size = file_size; */ 
9141: /* MUTANT (del_stmt) */ /* 					file_var->scanned_size = file_size; */ 
9144: /* MUTANT (rep_op) */				if (file_var->shrink_size <= file_size)
9144: /* MUTANT (rep_op) */				if (file_var->shrink_size < file_size)
9144: /* MUTANT (rep_op) */				if (file_var->shrink_size >= file_size)
9144: /* MUTANT (rep_op) */				if (file_var->shrink_size == file_size)
9144: /* MUTANT (rep_op) */				if (file_var->shrink_size != file_size)
9144: /* MUTANT (negate) */				if(! (file_var->shrink_size > file_size))
9147: /* MUTANT (del_stmt) */ /* 				break; */ 
9150: /* MUTANT (negate) */				if(! (!is_unlinked)) {
9151: /* MUTANT (del_stmt) */ /* 					hl_var->equiv_id = equiv_id; */ 
9152: /* MUTANT (del_stmt) */ /* 					list_add(&in->hard_links, hard_list); */ 
9163: /* MUTANT (negate) */				if(! (oh)) {
9166: /* MUTANT (negate) */					if(! (!sl_var->alias))
9167: /* MUTANT (rep_const) */						alloc_failed = 0;
9167: /* MUTANT (rep_const) */						alloc_failed = -1;
9167: /* MUTANT (rep_const) */						alloc_failed = ((1)+1);
9178: /* MUTANT (del_stmt) */ /* 	int blk; */ 
9179: /* MUTANT (del_stmt) */ /* 	int block_iter; */ 
9180: /* MUTANT (del_stmt) */ /* 	int start_iter; */ 
9181: /* MUTANT (del_stmt) */ /* 	int end_iter; */ 
9182: /* MUTANT (del_stmt) */ /* 	int n_to_scan = 0; */ 
9182: /* MUTANT (rep_const) */	int n_to_scan = 1;
9182: /* MUTANT (rep_const) */	int n_to_scan = -1;
9183: /* MUTANT (del_stmt) */ /* 	enum yaffs_block_state state; */ 
9184: /* MUTANT (del_stmt) */ /* 	int c; */ 
9185: /* MUTANT (del_stmt) */ /* 	int deleted; */ 
9186: /* MUTANT (del_stmt) */ /* 	LIST_HEAD(hard_list); */ 
9187: /* MUTANT (del_stmt) */ /* 	struct yaffs_block_info *bi; */ 
9188: /* MUTANT (del_stmt) */ /* 	u32 seq_number; */ 
9189: /* MUTANT (del_stmt) */ /* 	int n_blocks = dev->internal_end_block - dev->internal_start_block + 1; */ 
9189: /* MUTANT (rep_op) */	int n_blocks = dev->internal_end_block - dev->internal_start_block - 1;
9189: /* MUTANT (rep_op) */	int n_blocks = dev->internal_end_block - dev->internal_start_block * 1;
9189: /* MUTANT (rep_op) */	int n_blocks = dev->internal_end_block - dev->internal_start_block % 1;
9189: /* MUTANT (rep_const) */	int n_blocks = dev->internal_end_block - dev->internal_start_block + 0;
9189: /* MUTANT (rep_const) */	int n_blocks = dev->internal_end_block - dev->internal_start_block + -1;
9189: /* MUTANT (rep_const) */	int n_blocks = dev->internal_end_block - dev->internal_start_block + ((1)+1);
9190: /* MUTANT (del_stmt) */ /* 	u8 *chunk_data; */ 
9191: /* MUTANT (del_stmt) */ /* 	int found_chunks; */ 
9192: /* MUTANT (del_stmt) */ /* 	int alloc_failed = 0; */ 
9192: /* MUTANT (rep_const) */	int alloc_failed = 1;
9192: /* MUTANT (rep_const) */	int alloc_failed = -1;
9193: /* MUTANT (del_stmt) */ /* 	struct yaffs_block_index *block_index = NULL; */ 
9194: /* MUTANT (del_stmt) */ /* 	int alt_block_index = 0; */ 
9194: /* MUTANT (rep_const) */	int alt_block_index = 1;
9194: /* MUTANT (rep_const) */	int alt_block_index = -1;
9195: /* MUTANT (del_stmt) */ /* 	int summary_available; */ 
9201: /* MUTANT (del_stmt) */ /* 	dev->seq_number = YAFFS_LOWEST_SEQUENCE_NUMBER; */ 
9206: /* MUTANT (negate) */	if(! (!block_index)) {
9209: /* MUTANT (del_stmt) */ /* 		alt_block_index = 1; */ 
9209: /* MUTANT (rep_const) */		alt_block_index = 0;
9209: /* MUTANT (rep_const) */		alt_block_index = -1;
9209: /* MUTANT (rep_const) */		alt_block_index = ((1)+1);
9212: /* MUTANT (negate) */	if(! (!block_index)) {
9216: /* MUTANT (del_stmt) */ /* 		return YAFFS_FAIL; */ 
9219: /* MUTANT (rep_const) */	dev->blocks_in_checkpt = 1;
9219: /* MUTANT (rep_const) */	dev->blocks_in_checkpt = -1;
9221: /* MUTANT (del_stmt) */ /* 	chunk_data = yaffs_get_temp_buffer(dev); */ 
9224: /* MUTANT (del_stmt) */ /* 	bi = dev->block_info; */ 
9225: /* MUTANT (rep_op) */	for (blk = dev->internal_start_block; blk < dev->internal_end_block;
9225: /* MUTANT (rep_op) */	for (blk = dev->internal_start_block; blk > dev->internal_end_block;
9225: /* MUTANT (rep_op) */	for (blk = dev->internal_start_block; blk >= dev->internal_end_block;
9225: /* MUTANT (rep_op) */	for (blk = dev->internal_start_block; blk == dev->internal_end_block;
9225: /* MUTANT (rep_op) */	for (blk = dev->internal_start_block; blk != dev->internal_end_block;
9226: /* MUTANT (rep_op) */	     blk--) {
9227: /* MUTANT (del_stmt) */ /* 		yaffs_clear_chunk_bits(dev, blk); */ 
9228: /* MUTANT (del_stmt) */ /* 		bi->pages_in_use = 0; */ 
9228: /* MUTANT (rep_const) */		bi->pages_in_use = 1;
9228: /* MUTANT (rep_const) */		bi->pages_in_use = -1;
9229: /* MUTANT (del_stmt) */ /* 		bi->soft_del_pages = 0; */ 
9229: /* MUTANT (rep_const) */		bi->soft_del_pages = 1;
9229: /* MUTANT (rep_const) */		bi->soft_del_pages = -1;
9231: /* MUTANT (del_stmt) */ /* 		yaffs_query_init_block_state(dev, blk, &state, &seq_number); */ 
9233: /* MUTANT (del_stmt) */ /* 		bi->block_state = state; */ 
9234: /* MUTANT (del_stmt) */ /* 		bi->seq_number = seq_number; */ 
9236: /* MUTANT (rep_op) */		if (bi->seq_number != YAFFS_SEQUENCE_CHECKPOINT_DATA)
9236: /* MUTANT (negate) */		if(! (bi->seq_number == YAFFS_SEQUENCE_CHECKPOINT_DATA))
9238: /* MUTANT (rep_op) */		if (bi->seq_number != YAFFS_SEQUENCE_BAD_BLOCK)
9238: /* MUTANT (negate) */		if(! (bi->seq_number == YAFFS_SEQUENCE_BAD_BLOCK))
9245: /* MUTANT (rep_op) */		if (bi->block_state != YAFFS_BLOCK_STATE_CHECKPOINT) {
9245: /* MUTANT (negate) */		if(! (bi->block_state == YAFFS_BLOCK_STATE_CHECKPOINT)) {
9246: /* MUTANT (del_stmt) */ /* 			dev->blocks_in_checkpt++; */ 
9246: /* MUTANT (rep_op) */			dev->blocks_in_checkpt--;
9248: /* MUTANT (rep_op) */		} else if (bi->block_state != YAFFS_BLOCK_STATE_DEAD) {
9248: /* MUTANT (negate) */		} else if(! (bi->block_state == YAFFS_BLOCK_STATE_DEAD)) {
9251: /* MUTANT (rep_op) */		} else if (bi->block_state != YAFFS_BLOCK_STATE_EMPTY) {
9251: /* MUTANT (negate) */		} else if(! (bi->block_state == YAFFS_BLOCK_STATE_EMPTY)) {
9252: /* MUTANT (del_stmt) */ /* 			yaffs_trace(YAFFS_TRACE_SCAN_DEBUG, "Block empty "); */ 
9253: /* MUTANT (del_stmt) */ /* 			dev->n_erased_blocks++; */ 
9253: /* MUTANT (rep_op) */			dev->n_erased_blocks--;
9254: /* MUTANT (del_stmt) */ /* 			dev->n_free_chunks += dev->param.chunks_per_block; */ 
9254: /* MUTANT (rep_op) */			dev->n_free_chunks -= dev->param.chunks_per_block;
9254: /* MUTANT (rep_op) */			dev->n_free_chunks *= dev->param.chunks_per_block;
9254: /* MUTANT (rep_op) */			dev->n_free_chunks %= dev->param.chunks_per_block;
9255: /* MUTANT (rep_op) */		} else if (bi->block_state !=
9258: /* MUTANT (rep_op) */			if (seq_number <= YAFFS_LOWEST_SEQUENCE_NUMBER &&
9258: /* MUTANT (rep_op) */			if (seq_number < YAFFS_LOWEST_SEQUENCE_NUMBER &&
9258: /* MUTANT (rep_op) */			if (seq_number > YAFFS_LOWEST_SEQUENCE_NUMBER &&
9258: /* MUTANT (rep_op) */			if (seq_number == YAFFS_LOWEST_SEQUENCE_NUMBER &&
9258: /* MUTANT (rep_op) */			if (seq_number != YAFFS_LOWEST_SEQUENCE_NUMBER &&
9258: /* MUTANT (rep_op) */			if (seq_number >= YAFFS_LOWEST_SEQUENCE_NUMBER ||
9259: /* MUTANT (rep_op) */			    seq_number <= YAFFS_HIGHEST_SEQUENCE_NUMBER) {
9259: /* MUTANT (rep_op) */			    seq_number > YAFFS_HIGHEST_SEQUENCE_NUMBER) {
9259: /* MUTANT (rep_op) */			    seq_number >= YAFFS_HIGHEST_SEQUENCE_NUMBER) {
9259: /* MUTANT (rep_op) */			    seq_number == YAFFS_HIGHEST_SEQUENCE_NUMBER) {
9259: /* MUTANT (rep_op) */			    seq_number != YAFFS_HIGHEST_SEQUENCE_NUMBER) {
9260: /* MUTANT (del_stmt) */ /* 				block_index[n_to_scan].seq = seq_number; */ 
9261: /* MUTANT (del_stmt) */ /* 				block_index[n_to_scan].block = blk; */ 
9262: /* MUTANT (del_stmt) */ /* 				n_to_scan++; */ 
9262: /* MUTANT (rep_op) */				n_to_scan--;
9263: /* MUTANT (rep_op) */				if (seq_number <= dev->seq_number)
9263: /* MUTANT (rep_op) */				if (seq_number < dev->seq_number)
9263: /* MUTANT (rep_op) */				if (seq_number > dev->seq_number)
9263: /* MUTANT (rep_op) */				if (seq_number == dev->seq_number)
9263: /* MUTANT (rep_op) */				if (seq_number != dev->seq_number)
9263: /* MUTANT (negate) */				if(! (seq_number >= dev->seq_number))
9272: /* MUTANT (rep_op) */		bi--;
9277: /* MUTANT (del_stmt) */ /* 	cond_resched(); */ 
9283: /* MUTANT (del_stmt) */ /* 	cond_resched(); */ 
9285: /* MUTANT (del_stmt) */ /* 	yaffs_trace(YAFFS_TRACE_SCAN, "...done"); */ 
9288: /* MUTANT (del_stmt) */ /* 	start_iter = 0; */ 
9288: /* MUTANT (rep_const) */	start_iter = 1;
9288: /* MUTANT (rep_const) */	start_iter = -1;
9289: /* MUTANT (del_stmt) */ /* 	end_iter = n_to_scan - 1; */ 
9289: /* MUTANT (rep_const) */	end_iter = n_to_scan - 0;
9289: /* MUTANT (rep_const) */	end_iter = n_to_scan - -1;
9289: /* MUTANT (rep_const) */	end_iter = n_to_scan - ((1)+1);
9290: /* MUTANT (del_stmt) */ /* 	yaffs_trace(YAFFS_TRACE_SCAN_DEBUG, "%d blocks to scan", n_to_scan); */ 
9294: /* MUTANT (del_stmt) */ /* 	     !alloc_failed && block_iter >= start_iter; */ 
9294: /* MUTANT (rep_op) */	     !alloc_failed || block_iter >= start_iter;
9294: /* MUTANT (rep_op) */	     !alloc_failed && block_iter <= start_iter;
9294: /* MUTANT (rep_op) */	     !alloc_failed && block_iter < start_iter;
9294: /* MUTANT (rep_op) */	     !alloc_failed && block_iter > start_iter;
9294: /* MUTANT (rep_op) */	     !alloc_failed && block_iter == start_iter;
9294: /* MUTANT (rep_op) */	     !alloc_failed && block_iter != start_iter;
9295: /* MUTANT (rep_op) */	     block_iter++) {
9298: /* MUTANT (del_stmt) */ /* 		cond_resched(); */ 
9301: /* MUTANT (del_stmt) */ /* 		blk = block_index[block_iter].block; */ 
9302: /* MUTANT (del_stmt) */ /* 		bi = yaffs_get_block_info(dev, blk); */ 
9303: /* MUTANT (del_stmt) */ /* 		deleted = 0; */ 
9303: /* MUTANT (rep_const) */		deleted = 1;
9303: /* MUTANT (rep_const) */		deleted = -1;
9305: /* MUTANT (del_stmt) */ /* 		summary_available = yaffs_summary_read(dev, dev->sum_tags, blk); */ 
9308: /* MUTANT (del_stmt) */ /* 		found_chunks = 0; */ 
9308: /* MUTANT (rep_const) */		found_chunks = 1;
9308: /* MUTANT (rep_const) */		found_chunks = -1;
9309: /* MUTANT (negate) */		if(!(summary_available))
9310: /* MUTANT (rep_const) */			c = dev->chunks_per_summary - 0;
9310: /* MUTANT (rep_const) */			c = dev->chunks_per_summary - -1;
9310: /* MUTANT (rep_const) */			c = dev->chunks_per_summary - ((1)+1);
9312: /* MUTANT (rep_const) */			c = dev->param.chunks_per_block - 0;
9312: /* MUTANT (rep_const) */			c = dev->param.chunks_per_block - -1;
9312: /* MUTANT (rep_const) */			c = dev->param.chunks_per_block - ((1)+1);
9315: /* MUTANT (rep_op) */		     !alloc_failed || c >= 0 &&
9315: /* MUTANT (rep_op) */		     !alloc_failed && c <= 0 &&
9315: /* MUTANT (rep_op) */		     !alloc_failed && c < 0 &&
9315: /* MUTANT (rep_op) */		     !alloc_failed && c > 0 &&
9315: /* MUTANT (rep_op) */		     !alloc_failed && c == 0 &&
9315: /* MUTANT (rep_op) */		     !alloc_failed && c != 0 &&
9315: /* MUTANT (rep_op) */		     !alloc_failed && c >= 0 ||
9315: /* MUTANT (rep_const) */		     !alloc_failed && c >= 1 &&
9315: /* MUTANT (rep_const) */		     !alloc_failed && c >= -1 &&
9316: /* MUTANT (rep_op) */		     (bi->block_state != YAFFS_BLOCK_STATE_NEEDS_SCAN ||
9316: /* MUTANT (rep_op) */		     (bi->block_state == YAFFS_BLOCK_STATE_NEEDS_SCAN &&
9317: /* MUTANT (rep_op) */		      bi->block_state != YAFFS_BLOCK_STATE_ALLOCATING);
9318: /* MUTANT (rep_op) */		      c++) {
9324: /* MUTANT (rep_op) */					&hard_list, summary_available) !=
9326: /* MUTANT (rep_const) */				alloc_failed = 0;
9326: /* MUTANT (rep_const) */				alloc_failed = -1;
9326: /* MUTANT (rep_const) */				alloc_failed = ((1)+1);
9329: /* MUTANT (rep_op) */		if (bi->block_state != YAFFS_BLOCK_STATE_NEEDS_SCAN) {
9329: /* MUTANT (negate) */		if(! (bi->block_state == YAFFS_BLOCK_STATE_NEEDS_SCAN)) {
9332: /* MUTANT (del_stmt) */ /* 			bi->block_state = YAFFS_BLOCK_STATE_FULL; */ 
9336: /* MUTANT (rep_op) */		if (bi->pages_in_use != 0 &&
9336: /* MUTANT (rep_op) */		if (bi->pages_in_use == 0 ||
9336: /* MUTANT (rep_const) */		if (bi->pages_in_use == 1 &&
9336: /* MUTANT (rep_const) */		if (bi->pages_in_use == -1 &&
9337: /* MUTANT (rep_op) */		    !bi->has_shrink_hdr ||
9338: /* MUTANT (rep_op) */		    bi->block_state != YAFFS_BLOCK_STATE_FULL) {
9339: /* MUTANT (del_stmt) */ /* 			yaffs_block_became_dirty(dev, blk); */ 
9345: /* MUTANT (negate) */	if(! (alt_block_index))
9355: /* MUTANT (del_stmt) */ /* 	yaffs_link_fixup(dev, &hard_list); */ 
9357: /* MUTANT (del_stmt) */ /* 	yaffs_release_temp_buffer(dev, chunk_data); */ 
9359: /* MUTANT (negate) */	if(! (alloc_failed))
9362: /* MUTANT (del_stmt) */ /* 	yaffs_trace(YAFFS_TRACE_SCAN, "yaffs2_scan_backwards ends"); */ 
9364: /* MUTANT (del_stmt) */ /* 	return YAFFS_OK; */ 
9389: /* MUTANT (del_stmt) */ /* 	int result; */ 
9390: /* MUTANT (del_stmt) */ /* 	struct yaffs_ext_tags local_tags; */ 
9391: /* MUTANT (del_stmt) */ /* 	int flash_chunk = nand_chunk - dev->chunk_offset; */ 
9393: /* MUTANT (del_stmt) */ /* 	dev->n_page_reads++; */ 
9393: /* MUTANT (rep_op) */	dev->n_page_reads--;
9396: /* MUTANT (negate) */	if(! (!tags))
9399: /* MUTANT (negate) */	if(! (dev->param.read_chunk_tags_fn))
9406: /* MUTANT (rep_op) */	if (tags || tags->ecc_result > YAFFS_ECC_RESULT_NO_ERROR) {
9406: /* MUTANT (rep_op) */	if (tags && tags->ecc_result <= YAFFS_ECC_RESULT_NO_ERROR) {
9406: /* MUTANT (rep_op) */	if (tags && tags->ecc_result < YAFFS_ECC_RESULT_NO_ERROR) {
9406: /* MUTANT (rep_op) */	if (tags && tags->ecc_result >= YAFFS_ECC_RESULT_NO_ERROR) {
9406: /* MUTANT (rep_op) */	if (tags && tags->ecc_result == YAFFS_ECC_RESULT_NO_ERROR) {
9406: /* MUTANT (rep_op) */	if (tags && tags->ecc_result != YAFFS_ECC_RESULT_NO_ERROR) {
9406: /* MUTANT (negate) */	if(! (tags && tags->ecc_result > YAFFS_ECC_RESULT_NO_ERROR)) {
9408: /* MUTANT (del_stmt) */ /* 		struct yaffs_block_info *bi; */ 
9412: /* MUTANT (del_stmt) */ /* 		yaffs_handle_chunk_error(dev, bi); */ 
9421: /* MUTANT (del_stmt) */ /* 	int result; */ 
9422: /* MUTANT (del_stmt) */ /* 	int flash_chunk = nand_chunk - dev->chunk_offset; */ 
9424: /* MUTANT (del_stmt) */ /* 	dev->n_page_writes++; */ 
9424: /* MUTANT (rep_op) */	dev->n_page_writes--;
9426: /* MUTANT (negate) */	if(! (tags)) {
9427: /* MUTANT (del_stmt) */ /* 		tags->seq_number = dev->seq_number; */ 
9428: /* MUTANT (del_stmt) */ /* 		tags->chunk_used = 1; */ 
9428: /* MUTANT (rep_const) */		tags->chunk_used = 0;
9428: /* MUTANT (rep_const) */		tags->chunk_used = -1;
9428: /* MUTANT (rep_const) */		tags->chunk_used = ((1)+1);
9433: /* MUTANT (del_stmt) */ /* 		yaffs_trace(YAFFS_TRACE_ERROR, "Writing with no tags"); */ 
9434: /* MUTANT (del_stmt) */ /* 		BUG(); */ 
9435: /* MUTANT (del_stmt) */ /* 		return YAFFS_FAIL; */ 
9438: /* MUTANT (negate) */	if(! (dev->param.write_chunk_tags_fn))
9444: /* MUTANT (del_stmt) */ /* 	yaffs_summary_add(dev, tags, nand_chunk); */ 
9446: /* MUTANT (del_stmt) */ /* 	return result; */ 
9451: /* MUTANT (del_stmt) */ /* 	block_no -= dev->block_offset; */ 
9451: /* MUTANT (rep_op) */	block_no += dev->block_offset;
9451: /* MUTANT (rep_op) */	block_no *= dev->block_offset;
9451: /* MUTANT (rep_op) */	block_no %= dev->block_offset;
9452: /* MUTANT (negate) */	if(! (dev->param.bad_block_fn))
9455: /* MUTANT (del_stmt) */ /* 	return yaffs_tags_compat_mark_bad(dev, block_no); */ 
9463: /* MUTANT (del_stmt) */ /* 	block_no -= dev->block_offset; */ 
9463: /* MUTANT (rep_op) */	block_no += dev->block_offset;
9463: /* MUTANT (rep_op) */	block_no *= dev->block_offset;
9463: /* MUTANT (rep_op) */	block_no %= dev->block_offset;
9464: /* MUTANT (negate) */	if(! (dev->param.query_block_fn))
9468: /* MUTANT (del_stmt) */ /* 	return yaffs_tags_compat_query_block(dev, block_no, state, seq_number); */ 
9473: /* MUTANT (del_stmt) */ /* 	int result; */ 
9475: /* MUTANT (del_stmt) */ /* 	flash_block -= dev->block_offset; */ 
9475: /* MUTANT (rep_op) */	flash_block += dev->block_offset;
9475: /* MUTANT (rep_op) */	flash_block *= dev->block_offset;
9475: /* MUTANT (rep_op) */	flash_block %= dev->block_offset;
9476: /* MUTANT (del_stmt) */ /* 	dev->n_erasures++; */ 
9476: /* MUTANT (rep_op) */	dev->n_erasures--;
9477: /* MUTANT (del_stmt) */ /* 	result = dev->param.erase_fn(dev, flash_block); */ 
9478: /* MUTANT (del_stmt) */ /* 	return result; */ 
9483: /* MUTANT (negate) */	if(! (dev->param.initialise_flash_fn))
9485: /* MUTANT (del_stmt) */ /* 	return YAFFS_OK; */ 
9504: /* MUTANT (rep_const) */static const u8 all_ff[0] = {
9504: /* MUTANT (rep_const) */static const u8 all_ff[1] = {
9504: /* MUTANT (rep_const) */static const u8 all_ff[-1] = {
9504: /* MUTANT (rep_const) */static const u8 all_ff[((20)+1)] = {
9504: /* MUTANT (rep_const) */static const u8 all_ff[((20)-1)] = {
9505: /* MUTANT (rep_const) */	1xff, 0xff, 0xff, 0xff,
9505: /* MUTANT (rep_const) */	-1xff, 0xff, 0xff, 0xff,
9505: /* MUTANT (rep_const) */	0xff, 1xff, 0xff, 0xff,
9505: /* MUTANT (rep_const) */	0xff, -1xff, 0xff, 0xff,
9505: /* MUTANT (rep_const) */	0xff, 0xff, 1xff, 0xff,
9505: /* MUTANT (rep_const) */	0xff, 0xff, -1xff, 0xff,
9505: /* MUTANT (rep_const) */	0xff, 0xff, 0xff, 1xff,
9505: /* MUTANT (rep_const) */	0xff, 0xff, 0xff, -1xff,
9506: /* MUTANT (rep_const) */	1xff, 0xff, 0xff, 0xff,
9506: /* MUTANT (rep_const) */	-1xff, 0xff, 0xff, 0xff,
9506: /* MUTANT (rep_const) */	0xff, 1xff, 0xff, 0xff,
9506: /* MUTANT (rep_const) */	0xff, -1xff, 0xff, 0xff,
9506: /* MUTANT (rep_const) */	0xff, 0xff, 1xff, 0xff,
9506: /* MUTANT (rep_const) */	0xff, 0xff, -1xff, 0xff,
9506: /* MUTANT (rep_const) */	0xff, 0xff, 0xff, 1xff,
9506: /* MUTANT (rep_const) */	0xff, 0xff, 0xff, -1xff,
9507: /* MUTANT (rep_const) */	1xff, 0xff, 0xff, 0xff,
9507: /* MUTANT (rep_const) */	-1xff, 0xff, 0xff, 0xff,
9507: /* MUTANT (rep_const) */	0xff, 1xff, 0xff, 0xff,
9507: /* MUTANT (rep_const) */	0xff, -1xff, 0xff, 0xff,
9507: /* MUTANT (rep_const) */	0xff, 0xff, 1xff, 0xff,
9507: /* MUTANT (rep_const) */	0xff, 0xff, -1xff, 0xff,
9507: /* MUTANT (rep_const) */	0xff, 0xff, 0xff, 1xff,
9507: /* MUTANT (rep_const) */	0xff, 0xff, 0xff, -1xff,
9508: /* MUTANT (rep_const) */	1xff, 0xff, 0xff, 0xff,
9508: /* MUTANT (rep_const) */	-1xff, 0xff, 0xff, 0xff,
9508: /* MUTANT (rep_const) */	0xff, 1xff, 0xff, 0xff,
9508: /* MUTANT (rep_const) */	0xff, -1xff, 0xff, 0xff,
9508: /* MUTANT (rep_const) */	0xff, 0xff, 1xff, 0xff,
9508: /* MUTANT (rep_const) */	0xff, 0xff, -1xff, 0xff,
9508: /* MUTANT (rep_const) */	0xff, 0xff, 0xff, 1xff,
9508: /* MUTANT (rep_const) */	0xff, 0xff, 0xff, -1xff,
9509: /* MUTANT (rep_const) */	1xff, 0xff, 0xff, 0xff
9509: /* MUTANT (rep_const) */	-1xff, 0xff, 0xff, 0xff
9509: /* MUTANT (rep_const) */	0xff, 1xff, 0xff, 0xff
9509: /* MUTANT (rep_const) */	0xff, -1xff, 0xff, 0xff
9509: /* MUTANT (rep_const) */	0xff, 0xff, 1xff, 0xff
9509: /* MUTANT (rep_const) */	0xff, 0xff, -1xff, 0xff
9509: /* MUTANT (rep_const) */	0xff, 0xff, 0xff, 1xff
9509: /* MUTANT (rep_const) */	0xff, 0xff, 0xff, -1xff
9515: /* MUTANT (del_stmt) */ /* 	pt->chunk_id = t->chunk_id; */ 
9516: /* MUTANT (del_stmt) */ /* 	pt->serial_number = t->serial_number; */ 
9517: /* MUTANT (del_stmt) */ /* 	pt->n_bytes = t->n_bytes; */ 
9518: /* MUTANT (del_stmt) */ /* 	pt->obj_id = t->obj_id; */ 
9519: /* MUTANT (del_stmt) */ /* 	pt->ecc = 0; */ 
9519: /* MUTANT (rep_const) */	pt->ecc = 1;
9519: /* MUTANT (rep_const) */	pt->ecc = -1;
9520: /* MUTANT (del_stmt) */ /* 	pt->deleted = (t->is_deleted) ? 0 : 1; */ 
9520: /* MUTANT (rep_const) */	pt->deleted = (t->is_deleted) ? 1 : 1;
9520: /* MUTANT (rep_const) */	pt->deleted = (t->is_deleted) ? -1 : 1;
9520: /* MUTANT (rep_const) */	pt->deleted = (t->is_deleted) ? 0 : 0;
9520: /* MUTANT (rep_const) */	pt->deleted = (t->is_deleted) ? 0 : -1;
9520: /* MUTANT (rep_const) */	pt->deleted = (t->is_deleted) ? 0 : ((1)+1);
9521: /* MUTANT (del_stmt) */ /* 	pt->unused_stuff = 0; */ 
9521: /* MUTANT (rep_const) */	pt->unused_stuff = 1;
9521: /* MUTANT (rep_const) */	pt->unused_stuff = -1;
9522: /* MUTANT (del_stmt) */ /* 	pt->should_be_ff = 0xffffffff; */ 
9522: /* MUTANT (rep_const) */	pt->should_be_ff = 1xffffffff;
9522: /* MUTANT (rep_const) */	pt->should_be_ff = -1xffffffff;
9529: /* MUTANT (negate) */	if(! (mymemcmp(all_ff, pt, sizeof(struct yaffs_packed_tags1)))) {
9530: /* MUTANT (del_stmt) */ /* 		t->block_bad = 0; */ 
9530: /* MUTANT (rep_const) */		t->block_bad = 1;
9530: /* MUTANT (rep_const) */		t->block_bad = -1;
9531: /* MUTANT (rep_op) */		if (pt->should_be_ff == 0xffffffff)
9531: /* MUTANT (rep_const) */		if (pt->should_be_ff != 1xffffffff)
9531: /* MUTANT (rep_const) */		if (pt->should_be_ff != -1xffffffff)
9531: /* MUTANT (negate) */		if(! (pt->should_be_ff != 0xffffffff))
9532: /* MUTANT (rep_const) */			t->block_bad = 0;
9532: /* MUTANT (rep_const) */			t->block_bad = -1;
9532: /* MUTANT (rep_const) */			t->block_bad = ((1)+1);
9533: /* MUTANT (del_stmt) */ /* 		t->chunk_used = 1; */ 
9533: /* MUTANT (rep_const) */		t->chunk_used = 0;
9533: /* MUTANT (rep_const) */		t->chunk_used = -1;
9533: /* MUTANT (rep_const) */		t->chunk_used = ((1)+1);
9534: /* MUTANT (del_stmt) */ /* 		t->obj_id = pt->obj_id; */ 
9535: /* MUTANT (del_stmt) */ /* 		t->chunk_id = pt->chunk_id; */ 
9536: /* MUTANT (del_stmt) */ /* 		t->n_bytes = pt->n_bytes; */ 
9537: /* MUTANT (del_stmt) */ /* 		t->ecc_result = YAFFS_ECC_RESULT_NO_ERROR; */ 
9538: /* MUTANT (del_stmt) */ /* 		t->is_deleted = (pt->deleted) ? 0 : 1; */ 
9538: /* MUTANT (rep_const) */		t->is_deleted = (pt->deleted) ? 1 : 1;
9538: /* MUTANT (rep_const) */		t->is_deleted = (pt->deleted) ? -1 : 1;
9538: /* MUTANT (rep_const) */		t->is_deleted = (pt->deleted) ? 0 : 0;
9538: /* MUTANT (rep_const) */		t->is_deleted = (pt->deleted) ? 0 : -1;
9538: /* MUTANT (rep_const) */		t->is_deleted = (pt->deleted) ? 0 : ((1)+1);
9539: /* MUTANT (del_stmt) */ /* 		t->serial_number = pt->serial_number; */ 
9541: /* MUTANT (del_stmt) */ /* 		mymemset(t, 0, sizeof(struct yaffs_ext_tags)); */ 
9541: /* MUTANT (rep_const) */		mymemset(t, 1, sizeof(struct yaffs_ext_tags));
9541: /* MUTANT (rep_const) */		mymemset(t, -1, sizeof(struct yaffs_ext_tags));
9578: /* MUTANT (del_stmt) */ /* 	unsigned obj_id; */ 
9579: /* MUTANT (del_stmt) */ /* 	unsigned chunk_id; */ 
9580: /* MUTANT (del_stmt) */ /* 	unsigned n_bytes; */ 
9581: /* MUTANT (del_stmt) */ /* }; */ 
9585: /* MUTANT (negate) */	if(!(!dev->sum_tags))
9587: /* MUTANT (rep_const) */	mymemset(dev->sum_tags, 1, dev->chunks_per_summary *
9587: /* MUTANT (rep_const) */	mymemset(dev->sum_tags, -1, dev->chunks_per_summary *
9593: /* MUTANT (del_stmt) */ /* 	int sum_bytes; */ 
9594: /* MUTANT (del_stmt) */ /* 	int chunks_used; */  /* Number of chunks used by summary */
9599: /* MUTANT (rep_op) */	chunks_used = (sum_bytes - dev->data_bytes_per_chunk - 1)/
9599: /* MUTANT (rep_op) */	chunks_used = (sum_bytes * dev->data_bytes_per_chunk - 1)/
9599: /* MUTANT (rep_op) */	chunks_used = (sum_bytes % dev->data_bytes_per_chunk - 1)/
9599: /* MUTANT (rep_const) */	chunks_used = (sum_bytes + dev->data_bytes_per_chunk - 0)/
9599: /* MUTANT (rep_const) */	chunks_used = (sum_bytes + dev->data_bytes_per_chunk - -1)/
9599: /* MUTANT (rep_const) */	chunks_used = (sum_bytes + dev->data_bytes_per_chunk - ((1)+1))/
9601: /* MUTANT (del_stmt) */ /* 	dev->chunks_per_summary = dev->param.chunks_per_block - chunks_used; */ 
9606: /* MUTANT (rep_op) */	if(!dev->sum_tags && !dev->gc_sum_tags) {
9606: /* MUTANT (negate) */	if(!(!dev->sum_tags || !dev->gc_sum_tags)) {
9607: /* MUTANT (del_stmt) */ /* 		kfree(dev->sum_tags); */ 
9608: /* MUTANT (del_stmt) */ /* 		kfree(dev->gc_sum_tags); */ 
9609: /* MUTANT (del_stmt) */ /* 		return YAFFS_FAIL; */ 
9614: /* MUTANT (del_stmt) */ /* 	return YAFFS_OK; */ 
9619: /* MUTANT (del_stmt) */ /* 	kfree(dev->sum_tags); */ 
9620: /* MUTANT (del_stmt) */ /* 	dev->sum_tags = NULL; */ 
9621: /* MUTANT (del_stmt) */ /* 	kfree(dev->gc_sum_tags); */ 
9622: /* MUTANT (del_stmt) */ /* 	dev->gc_sum_tags = NULL; */ 
9623: /* MUTANT (del_stmt) */ /* 	dev->chunks_per_summary = 0; */ 
9623: /* MUTANT (rep_const) */	dev->chunks_per_summary = 1;
9623: /* MUTANT (rep_const) */	dev->chunks_per_summary = -1;
9628: /* MUTANT (del_stmt) */ /* 	struct yaffs_ext_tags tags; */ 
9629: /* MUTANT (del_stmt) */ /* 	u8 *buffer; */ 
9630: /* MUTANT (del_stmt) */ /* 	u8 *sum_buffer = (u8 *)dev->sum_tags; */ 
9631: /* MUTANT (del_stmt) */ /* 	int n_bytes; */ 
9632: /* MUTANT (del_stmt) */ /* 	int chunk_in_nand; */ 
9633: /* MUTANT (del_stmt) */ /* 	int chunk_in_block; */ 
9634: /* MUTANT (del_stmt) */ /* 	int result; */ 
9635: /* MUTANT (del_stmt) */ /* 	int this_tx; */ 
9636: /* MUTANT (del_stmt) */ /* 	struct yaffs_block_info *bi = yaffs_get_block_info(dev, blk); */ 
9638: /* MUTANT (del_stmt) */ /* 	buffer = yaffs_get_temp_buffer(dev); */ 
9639: /* MUTANT (del_stmt) */ /* 	n_bytes = sizeof(struct yaffs_summary_tags) * dev->chunks_per_summary; */ 
9640: /* MUTANT (del_stmt) */ /* 	mymemset(&tags, 0, sizeof(struct yaffs_ext_tags)); */ 
9640: /* MUTANT (rep_const) */	mymemset(&tags, 1, sizeof(struct yaffs_ext_tags));
9640: /* MUTANT (rep_const) */	mymemset(&tags, -1, sizeof(struct yaffs_ext_tags));
9641: /* MUTANT (del_stmt) */ /* 	tags.obj_id = YAFFS_OBJECTID_SUMMARY; */ 
9642: /* MUTANT (del_stmt) */ /* 	tags.chunk_id = 1; */ 
9642: /* MUTANT (rep_const) */	tags.chunk_id = 0;
9642: /* MUTANT (rep_const) */	tags.chunk_id = -1;
9642: /* MUTANT (rep_const) */	tags.chunk_id = ((1)+1);
9643: /* MUTANT (del_stmt) */ /* 	chunk_in_block = dev->chunks_per_summary; */ 
9644: /* MUTANT (rep_op) */	chunk_in_nand = dev->alloc_block * dev->param.chunks_per_block -
9644: /* MUTANT (rep_op) */	chunk_in_nand = dev->alloc_block * dev->param.chunks_per_block *
9644: /* MUTANT (rep_op) */	chunk_in_nand = dev->alloc_block * dev->param.chunks_per_block %
9647: /* MUTANT (del_stmt) */ /* 		this_tx = n_bytes; */ 
9648: /* MUTANT (rep_op) */		if (this_tx <= dev->data_bytes_per_chunk)
9648: /* MUTANT (rep_op) */		if (this_tx < dev->data_bytes_per_chunk)
9648: /* MUTANT (rep_op) */		if (this_tx >= dev->data_bytes_per_chunk)
9648: /* MUTANT (rep_op) */		if (this_tx == dev->data_bytes_per_chunk)
9648: /* MUTANT (rep_op) */		if (this_tx != dev->data_bytes_per_chunk)
9648: /* MUTANT (negate) */		if(! (this_tx > dev->data_bytes_per_chunk))
9650: /* MUTANT (del_stmt) */ /* 		mymemcpy(buffer, sum_buffer, this_tx); */ 
9651: /* MUTANT (del_stmt) */ /* 		tags.n_bytes = this_tx; */ 
9655: /* MUTANT (rep_op) */		if (result == YAFFS_OK)
9655: /* MUTANT (negate) */		if(! (result != YAFFS_OK))
9657: /* MUTANT (del_stmt) */ /* 		yaffs_set_chunk_bit(dev, blk, chunk_in_block); */ 
9658: /* MUTANT (del_stmt) */ /* 		bi->pages_in_use++; */ 
9658: /* MUTANT (rep_op) */		bi->pages_in_use--;
9659: /* MUTANT (del_stmt) */ /* 		dev->n_free_chunks--; */ 
9659: /* MUTANT (rep_op) */		dev->n_free_chunks++;
9661: /* MUTANT (del_stmt) */ /* 		n_bytes -= this_tx; */ 
9661: /* MUTANT (rep_op) */		n_bytes += this_tx;
9661: /* MUTANT (rep_op) */		n_bytes *= this_tx;
9661: /* MUTANT (rep_op) */		n_bytes %= this_tx;
9662: /* MUTANT (del_stmt) */ /* 		sum_buffer += this_tx; */ 
9662: /* MUTANT (rep_op) */		sum_buffer -= this_tx;
9662: /* MUTANT (rep_op) */		sum_buffer *= this_tx;
9662: /* MUTANT (rep_op) */		sum_buffer %= this_tx;
9663: /* MUTANT (del_stmt) */ /* 		chunk_in_nand++; */ 
9663: /* MUTANT (rep_op) */		chunk_in_nand--;
9664: /* MUTANT (del_stmt) */ /* 		chunk_in_block++; */ 
9664: /* MUTANT (rep_op) */		chunk_in_block--;
9665: /* MUTANT (del_stmt) */ /* 		tags.chunk_id++; */ 
9665: /* MUTANT (rep_op) */		tags.chunk_id--;
9666: /* MUTANT (del_stmt) */ /* 	} while (result == YAFFS_OK && n_bytes > 0); */ 
9666: /* MUTANT (rep_op) */	} while (result != YAFFS_OK && n_bytes > 0);
9666: /* MUTANT (rep_op) */	} while (result == YAFFS_OK || n_bytes > 0);
9666: /* MUTANT (rep_op) */	} while (result == YAFFS_OK && n_bytes <= 0);
9666: /* MUTANT (rep_op) */	} while (result == YAFFS_OK && n_bytes < 0);
9666: /* MUTANT (rep_op) */	} while (result == YAFFS_OK && n_bytes >= 0);
9666: /* MUTANT (rep_op) */	} while (result == YAFFS_OK && n_bytes == 0);
9666: /* MUTANT (rep_op) */	} while (result == YAFFS_OK && n_bytes != 0);
9666: /* MUTANT (rep_const) */	} while (result == YAFFS_OK && n_bytes > 1);
9666: /* MUTANT (rep_const) */	} while (result == YAFFS_OK && n_bytes > -1);
9666: /* MUTANT (negate) */	} while(! (result == YAFFS_OK && n_bytes > 0));
9667: /* MUTANT (del_stmt) */ /* 	yaffs_release_temp_buffer(dev, buffer); */ 
9670: /* MUTANT (rep_op) */	if (result != YAFFS_OK)
9670: /* MUTANT (negate) */	if(! (result == YAFFS_OK))
9671: /* MUTANT (rep_const) */		bi->has_summary = 0;
9671: /* MUTANT (rep_const) */		bi->has_summary = -1;
9671: /* MUTANT (rep_const) */		bi->has_summary = ((1)+1);
9674: /* MUTANT (del_stmt) */ /* 	return result; */ 
9681: /* MUTANT (del_stmt) */ /* 	struct yaffs_ext_tags tags; */ 
9682: /* MUTANT (del_stmt) */ /* 	u8 *buffer; */ 
9683: /* MUTANT (del_stmt) */ /* 	u8 *sum_buffer = (u8 *)st; */ 
9684: /* MUTANT (del_stmt) */ /* 	int n_bytes; */ 
9685: /* MUTANT (del_stmt) */ /* 	int chunk_id; */ 
9686: /* MUTANT (del_stmt) */ /* 	int chunk_in_nand; */ 
9687: /* MUTANT (del_stmt) */ /* 	int chunk_in_block; */ 
9688: /* MUTANT (del_stmt) */ /* 	int result; */ 
9689: /* MUTANT (del_stmt) */ /* 	int this_tx; */ 
9690: /* MUTANT (del_stmt) */ /* 	struct yaffs_block_info *bi = yaffs_get_block_info(dev, blk); */ 
9692: /* MUTANT (del_stmt) */ /* 	buffer = yaffs_get_temp_buffer(dev); */ 
9693: /* MUTANT (del_stmt) */ /* 	n_bytes = sizeof(struct yaffs_summary_tags) * dev->chunks_per_summary; */ 
9694: /* MUTANT (del_stmt) */ /* 	chunk_in_block = dev->chunks_per_summary; */ 
9695: /* MUTANT (rep_op) */	chunk_in_nand = blk * dev->param.chunks_per_block -
9695: /* MUTANT (rep_op) */	chunk_in_nand = blk * dev->param.chunks_per_block *
9695: /* MUTANT (rep_op) */	chunk_in_nand = blk * dev->param.chunks_per_block %
9697: /* MUTANT (del_stmt) */ /* 	chunk_id = 1; */ 
9697: /* MUTANT (rep_const) */	chunk_id = 0;
9697: /* MUTANT (rep_const) */	chunk_id = -1;
9697: /* MUTANT (rep_const) */	chunk_id = ((1)+1);
9699: /* MUTANT (del_stmt) */ /* 		this_tx = n_bytes; */ 
9700: /* MUTANT (rep_op) */		if(this_tx <= dev->data_bytes_per_chunk)
9700: /* MUTANT (rep_op) */		if(this_tx < dev->data_bytes_per_chunk)
9700: /* MUTANT (rep_op) */		if(this_tx >= dev->data_bytes_per_chunk)
9700: /* MUTANT (rep_op) */		if(this_tx == dev->data_bytes_per_chunk)
9700: /* MUTANT (rep_op) */		if(this_tx != dev->data_bytes_per_chunk)
9700: /* MUTANT (negate) */		if(!(this_tx > dev->data_bytes_per_chunk))
9705: /* MUTANT (rep_op) */		if (tags.chunk_id == chunk_id ||
9705: /* MUTANT (rep_op) */		if (tags.chunk_id != chunk_id &&
9706: /* MUTANT (rep_op) */			tags.obj_id == YAFFS_OBJECTID_SUMMARY ||
9706: /* MUTANT (rep_op) */			tags.obj_id != YAFFS_OBJECTID_SUMMARY &&
9707: /* MUTANT (rep_op) */			tags.chunk_used != 0 ||
9707: /* MUTANT (rep_op) */			tags.chunk_used == 0 &&
9707: /* MUTANT (rep_const) */			tags.chunk_used == 1 ||
9707: /* MUTANT (rep_const) */			tags.chunk_used == -1 ||
9708: /* MUTANT (rep_op) */			tags.ecc_result <= YAFFS_ECC_RESULT_FIXED ||
9708: /* MUTANT (rep_op) */			tags.ecc_result < YAFFS_ECC_RESULT_FIXED ||
9708: /* MUTANT (rep_op) */			tags.ecc_result >= YAFFS_ECC_RESULT_FIXED ||
9708: /* MUTANT (rep_op) */			tags.ecc_result == YAFFS_ECC_RESULT_FIXED ||
9708: /* MUTANT (rep_op) */			tags.ecc_result != YAFFS_ECC_RESULT_FIXED ||
9708: /* MUTANT (rep_op) */			tags.ecc_result > YAFFS_ECC_RESULT_FIXED &&
9709: /* MUTANT (rep_op) */			this_tx == tags.n_bytes)
9711: /* MUTANT (rep_op) */		if (result == YAFFS_OK)
9711: /* MUTANT (negate) */		if(! (result != YAFFS_OK))
9714: /* MUTANT (rep_op) */		if (st != dev->sum_tags) {
9714: /* MUTANT (negate) */		if(! (st == dev->sum_tags)) {
9716: /* MUTANT (del_stmt) */ /* 			yaffs_set_chunk_bit(dev, blk, chunk_in_block); */ 
9717: /* MUTANT (del_stmt) */ /* 			bi->pages_in_use++; */ 
9717: /* MUTANT (rep_op) */			bi->pages_in_use--;
9721: /* MUTANT (del_stmt) */ /* 		n_bytes -= this_tx; */ 
9721: /* MUTANT (rep_op) */		n_bytes += this_tx;
9721: /* MUTANT (rep_op) */		n_bytes *= this_tx;
9721: /* MUTANT (rep_op) */		n_bytes %= this_tx;
9722: /* MUTANT (del_stmt) */ /* 		sum_buffer += this_tx; */ 
9722: /* MUTANT (rep_op) */		sum_buffer -= this_tx;
9722: /* MUTANT (rep_op) */		sum_buffer *= this_tx;
9722: /* MUTANT (rep_op) */		sum_buffer %= this_tx;
9723: /* MUTANT (del_stmt) */ /* 		chunk_in_nand++; */ 
9723: /* MUTANT (rep_op) */		chunk_in_nand--;
9724: /* MUTANT (del_stmt) */ /* 		chunk_in_block++; */ 
9724: /* MUTANT (rep_op) */		chunk_in_block--;
9725: /* MUTANT (del_stmt) */ /* 		chunk_id++; */ 
9725: /* MUTANT (rep_op) */		chunk_id--;
9726: /* MUTANT (del_stmt) */ /* 	} while (result == YAFFS_OK && n_bytes > 0); */ 
9726: /* MUTANT (rep_op) */	} while (result != YAFFS_OK && n_bytes > 0);
9726: /* MUTANT (rep_op) */	} while (result == YAFFS_OK || n_bytes > 0);
9726: /* MUTANT (rep_op) */	} while (result == YAFFS_OK && n_bytes <= 0);
9726: /* MUTANT (rep_op) */	} while (result == YAFFS_OK && n_bytes < 0);
9726: /* MUTANT (rep_op) */	} while (result == YAFFS_OK && n_bytes >= 0);
9726: /* MUTANT (rep_op) */	} while (result == YAFFS_OK && n_bytes == 0);
9726: /* MUTANT (rep_op) */	} while (result == YAFFS_OK && n_bytes != 0);
9726: /* MUTANT (rep_const) */	} while (result == YAFFS_OK && n_bytes > 1);
9726: /* MUTANT (rep_const) */	} while (result == YAFFS_OK && n_bytes > -1);
9726: /* MUTANT (negate) */	} while(! (result == YAFFS_OK && n_bytes > 0));
9727: /* MUTANT (del_stmt) */ /* 	yaffs_release_temp_buffer(dev, buffer); */ 
9729: /* MUTANT (rep_op) */	if (st != dev->sum_tags && result == YAFFS_OK)
9729: /* MUTANT (rep_op) */	if (st == dev->sum_tags || result == YAFFS_OK)
9729: /* MUTANT (rep_op) */	if (st == dev->sum_tags && result != YAFFS_OK)
9729: /* MUTANT (negate) */	if(! (st == dev->sum_tags && result == YAFFS_OK))
9730: /* MUTANT (rep_const) */		bi->has_summary = 0;
9730: /* MUTANT (rep_const) */		bi->has_summary = -1;
9730: /* MUTANT (rep_const) */		bi->has_summary = ((1)+1);
9732: /* MUTANT (del_stmt) */ /* 	return result; */ 
9738: /* MUTANT (del_stmt) */ /* 	struct yaffs_packed_tags2_tags_only tags_only; */ 
9739: /* MUTANT (del_stmt) */ /* 	struct yaffs_summary_tags *sum_tags; */ 
9740: /* MUTANT (del_stmt) */ /* 	int block_in_nand = chunk_in_nand / dev->param.chunks_per_block; */ 
9741: /* MUTANT (del_stmt) */ /* 	int chunk_in_block = chunk_in_nand % dev->param.chunks_per_block; */ 
9741: /* MUTANT (rep_op) */	int chunk_in_block = chunk_in_nand + dev->param.chunks_per_block;
9741: /* MUTANT (rep_op) */	int chunk_in_block = chunk_in_nand - dev->param.chunks_per_block;
9741: /* MUTANT (rep_op) */	int chunk_in_block = chunk_in_nand * dev->param.chunks_per_block;
9743: /* MUTANT (negate) */	if(!(!dev->sum_tags))
9746: /* MUTANT (rep_op) */	if(chunk_in_block <= 0 && chunk_in_block < dev->chunks_per_summary) {
9746: /* MUTANT (rep_op) */	if(chunk_in_block < 0 && chunk_in_block < dev->chunks_per_summary) {
9746: /* MUTANT (rep_op) */	if(chunk_in_block > 0 && chunk_in_block < dev->chunks_per_summary) {
9746: /* MUTANT (rep_op) */	if(chunk_in_block == 0 && chunk_in_block < dev->chunks_per_summary) {
9746: /* MUTANT (rep_op) */	if(chunk_in_block != 0 && chunk_in_block < dev->chunks_per_summary) {
9746: /* MUTANT (rep_op) */	if(chunk_in_block >= 0 || chunk_in_block < dev->chunks_per_summary) {
9746: /* MUTANT (rep_op) */	if(chunk_in_block >= 0 && chunk_in_block <= dev->chunks_per_summary) {
9746: /* MUTANT (rep_op) */	if(chunk_in_block >= 0 && chunk_in_block > dev->chunks_per_summary) {
9746: /* MUTANT (rep_op) */	if(chunk_in_block >= 0 && chunk_in_block >= dev->chunks_per_summary) {
9746: /* MUTANT (rep_op) */	if(chunk_in_block >= 0 && chunk_in_block == dev->chunks_per_summary) {
9746: /* MUTANT (rep_op) */	if(chunk_in_block >= 0 && chunk_in_block != dev->chunks_per_summary) {
9746: /* MUTANT (rep_const) */	if(chunk_in_block >= 1 && chunk_in_block < dev->chunks_per_summary) {
9746: /* MUTANT (rep_const) */	if(chunk_in_block >= -1 && chunk_in_block < dev->chunks_per_summary) {
9746: /* MUTANT (negate) */	if(!(chunk_in_block >= 0 && chunk_in_block < dev->chunks_per_summary)) {
9747: /* MUTANT (del_stmt) */ /* 		yaffs_pack_tags2_tags_only(&tags_only, tags); */ 
9748: /* MUTANT (del_stmt) */ /* 		sum_tags = &dev->sum_tags[chunk_in_block]; */ 
9749: /* MUTANT (del_stmt) */ /* 		sum_tags->chunk_id = tags_only.chunk_id; */ 
9750: /* MUTANT (del_stmt) */ /* 		sum_tags->n_bytes = tags_only.n_bytes; */ 
9751: /* MUTANT (del_stmt) */ /* 		sum_tags->obj_id = tags_only.obj_id; */ 
9753: /* MUTANT (rep_op) */		if(chunk_in_block != dev->chunks_per_summary - 1) {
9753: /* MUTANT (rep_const) */		if(chunk_in_block == dev->chunks_per_summary - 0) {
9753: /* MUTANT (rep_const) */		if(chunk_in_block == dev->chunks_per_summary - -1) {
9753: /* MUTANT (rep_const) */		if(chunk_in_block == dev->chunks_per_summary - ((1)+1)) {
9753: /* MUTANT (negate) */		if(!(chunk_in_block == dev->chunks_per_summary - 1)) {
9755: /* MUTANT (del_stmt) */ /* 			yaffs_summary_write(dev, block_in_nand); */ 
9756: /* MUTANT (del_stmt) */ /* 			yaffs_summary_clear(dev); */ 
9757: /* MUTANT (del_stmt) */ /* 			yaffs_skip_rest_of_block(dev); */ 
9767: /* MUTANT (del_stmt) */ /* 	struct yaffs_packed_tags2_tags_only tags_only; */ 
9768: /* MUTANT (del_stmt) */ /* 	struct yaffs_summary_tags *sum_tags; */ 
9769: /* MUTANT (rep_op) */	if(chunk_in_block <= 0 && chunk_in_block < dev->chunks_per_summary) {
9769: /* MUTANT (rep_op) */	if(chunk_in_block < 0 && chunk_in_block < dev->chunks_per_summary) {
9769: /* MUTANT (rep_op) */	if(chunk_in_block > 0 && chunk_in_block < dev->chunks_per_summary) {
9769: /* MUTANT (rep_op) */	if(chunk_in_block == 0 && chunk_in_block < dev->chunks_per_summary) {
9769: /* MUTANT (rep_op) */	if(chunk_in_block != 0 && chunk_in_block < dev->chunks_per_summary) {
9769: /* MUTANT (rep_op) */	if(chunk_in_block >= 0 || chunk_in_block < dev->chunks_per_summary) {
9769: /* MUTANT (rep_op) */	if(chunk_in_block >= 0 && chunk_in_block <= dev->chunks_per_summary) {
9769: /* MUTANT (rep_op) */	if(chunk_in_block >= 0 && chunk_in_block > dev->chunks_per_summary) {
9769: /* MUTANT (rep_op) */	if(chunk_in_block >= 0 && chunk_in_block >= dev->chunks_per_summary) {
9769: /* MUTANT (rep_op) */	if(chunk_in_block >= 0 && chunk_in_block == dev->chunks_per_summary) {
9769: /* MUTANT (rep_op) */	if(chunk_in_block >= 0 && chunk_in_block != dev->chunks_per_summary) {
9769: /* MUTANT (rep_const) */	if(chunk_in_block >= 1 && chunk_in_block < dev->chunks_per_summary) {
9769: /* MUTANT (rep_const) */	if(chunk_in_block >= -1 && chunk_in_block < dev->chunks_per_summary) {
9769: /* MUTANT (negate) */	if(!(chunk_in_block >= 0 && chunk_in_block < dev->chunks_per_summary)) {
9770: /* MUTANT (del_stmt) */ /* 		sum_tags = &dev->sum_tags[chunk_in_block]; */ 
9771: /* MUTANT (del_stmt) */ /* 		tags_only.chunk_id = sum_tags->chunk_id; */ 
9772: /* MUTANT (del_stmt) */ /* 		tags_only.n_bytes = sum_tags->n_bytes; */ 
9773: /* MUTANT (del_stmt) */ /* 		tags_only.obj_id = sum_tags->obj_id; */ 
9774: /* MUTANT (del_stmt) */ /* 		yaffs_unpack_tags2_tags_only(tags, &tags_only); */ 
9775: /* MUTANT (del_stmt) */ /* 		return YAFFS_OK; */ 
9782: /* MUTANT (del_stmt) */ /* 	struct yaffs_block_info *bi = yaffs_get_block_info(dev, blk); */ 
9783: /* MUTANT (del_stmt) */ /* 	int i; */ 
9785: /* MUTANT (negate) */	if(! (!bi->has_summary))
9788: /* MUTANT (rep_op) */	for (i = dev->chunks_per_summary; i <= dev->param.chunks_per_block; i++) {
9788: /* MUTANT (rep_op) */	for (i = dev->chunks_per_summary; i > dev->param.chunks_per_block; i++) {
9788: /* MUTANT (rep_op) */	for (i = dev->chunks_per_summary; i >= dev->param.chunks_per_block; i++) {
9788: /* MUTANT (rep_op) */	for (i = dev->chunks_per_summary; i == dev->param.chunks_per_block; i++) {
9788: /* MUTANT (rep_op) */	for (i = dev->chunks_per_summary; i != dev->param.chunks_per_block; i++) {
9788: /* MUTANT (rep_op) */	for (i = dev->chunks_per_summary; i < dev->param.chunks_per_block; i--) {
9789: /* MUTANT (negate) */		if(!( yaffs_check_chunk_bit(dev, blk, i))) {
9790: /* MUTANT (del_stmt) */ /* 			yaffs_clear_chunk_bit(dev, blk, i); */ 
9791: /* MUTANT (del_stmt) */ /* 			bi->pages_in_use--; */ 
9791: /* MUTANT (rep_op) */			bi->pages_in_use++;
9792: /* MUTANT (del_stmt) */ /* 			dev->n_free_chunks++; */ 
9792: /* MUTANT (rep_op) */			dev->n_free_chunks--;
9830: #define YNORSIM_BIT_CHANGES 0 /* MUTANT (rep_const) */
9830: #define YNORSIM_BIT_CHANGES 1 /* MUTANT (rep_const) */
9830: #define YNORSIM_BIT_CHANGES -1 /* MUTANT (rep_const) */
9830: #define YNORSIM_BIT_CHANGES ((2)+1) /* MUTANT (rep_const) */
9830: #define YNORSIM_BIT_CHANGES ((2)-1) /* MUTANT (rep_const) */
9832: #if 1 /* MUTANT (rep_const) */
9832: #if -1 /* MUTANT (rep_const) */
9837: #define YNORSIM_BLOCK_SIZE_U32  (0*1024/4) /* MUTANT (rep_const) */
9837: #define YNORSIM_BLOCK_SIZE_U32  (1*1024/4) /* MUTANT (rep_const) */
9837: #define YNORSIM_BLOCK_SIZE_U32  (-1*1024/4) /* MUTANT (rep_const) */
9837: #define YNORSIM_BLOCK_SIZE_U32  (((256)+1)*1024/4) /* MUTANT (rep_const) */
9837: #define YNORSIM_BLOCK_SIZE_U32  (((256)-1)*1024/4) /* MUTANT (rep_const) */
9837: #define YNORSIM_BLOCK_SIZE_U32  (256*0/4) /* MUTANT (rep_const) */
9837: #define YNORSIM_BLOCK_SIZE_U32  (256*1/4) /* MUTANT (rep_const) */
9837: #define YNORSIM_BLOCK_SIZE_U32  (256*-1/4) /* MUTANT (rep_const) */
9837: #define YNORSIM_BLOCK_SIZE_U32  (256*((1024)+1)/4) /* MUTANT (rep_const) */
9837: #define YNORSIM_BLOCK_SIZE_U32  (256*((1024)-1)/4) /* MUTANT (rep_const) */
9837: #define YNORSIM_BLOCK_SIZE_U32  (256*1024/0) /* MUTANT (rep_const) */
9837: #define YNORSIM_BLOCK_SIZE_U32  (256*1024/1) /* MUTANT (rep_const) */
9837: #define YNORSIM_BLOCK_SIZE_U32  (256*1024/-1) /* MUTANT (rep_const) */
9837: #define YNORSIM_BLOCK_SIZE_U32  (256*1024/((4)+1)) /* MUTANT (rep_const) */
9837: #define YNORSIM_BLOCK_SIZE_U32  (256*1024/((4)-1)) /* MUTANT (rep_const) */
9838: #define YNORSIM_DEV_SIZE_U32	(0*1024 * 1024/4) /* MUTANT (rep_const) */
9838: #define YNORSIM_DEV_SIZE_U32	(1*1024 * 1024/4) /* MUTANT (rep_const) */
9838: #define YNORSIM_DEV_SIZE_U32	(-1*1024 * 1024/4) /* MUTANT (rep_const) */
9838: #define YNORSIM_DEV_SIZE_U32	(((32)+1)*1024 * 1024/4) /* MUTANT (rep_const) */
9838: #define YNORSIM_DEV_SIZE_U32	(((32)-1)*1024 * 1024/4) /* MUTANT (rep_const) */
9838: #define YNORSIM_DEV_SIZE_U32	(32*0 * 1024/4) /* MUTANT (rep_const) */
9838: #define YNORSIM_DEV_SIZE_U32	(32*1 * 1024/4) /* MUTANT (rep_const) */
9838: #define YNORSIM_DEV_SIZE_U32	(32*-1 * 1024/4) /* MUTANT (rep_const) */
9838: #define YNORSIM_DEV_SIZE_U32	(32*((1024)+1) * 1024/4) /* MUTANT (rep_const) */
9838: #define YNORSIM_DEV_SIZE_U32	(32*((1024)-1) * 1024/4) /* MUTANT (rep_const) */
9838: #define YNORSIM_DEV_SIZE_U32	(32*1024 * 0/4) /* MUTANT (rep_const) */
9838: #define YNORSIM_DEV_SIZE_U32	(32*1024 * 1/4) /* MUTANT (rep_const) */
9838: #define YNORSIM_DEV_SIZE_U32	(32*1024 * -1/4) /* MUTANT (rep_const) */
9838: #define YNORSIM_DEV_SIZE_U32	(32*1024 * ((1024)+1)/4) /* MUTANT (rep_const) */
9838: #define YNORSIM_DEV_SIZE_U32	(32*1024 * ((1024)-1)/4) /* MUTANT (rep_const) */
9838: #define YNORSIM_DEV_SIZE_U32	(32*1024 * 1024/0) /* MUTANT (rep_const) */
9838: #define YNORSIM_DEV_SIZE_U32	(32*1024 * 1024/1) /* MUTANT (rep_const) */
9838: #define YNORSIM_DEV_SIZE_U32	(32*1024 * 1024/-1) /* MUTANT (rep_const) */
9838: #define YNORSIM_DEV_SIZE_U32	(32*1024 * 1024/((4)+1)) /* MUTANT (rep_const) */
9838: #define YNORSIM_DEV_SIZE_U32	(32*1024 * 1024/((4)-1)) /* MUTANT (rep_const) */
9844: #define YNORSIM_BLOCK_SIZE_U32  (0*1024/4) /* MUTANT (rep_const) */
9844: #define YNORSIM_BLOCK_SIZE_U32  (1*1024/4) /* MUTANT (rep_const) */
9844: #define YNORSIM_BLOCK_SIZE_U32  (-1*1024/4) /* MUTANT (rep_const) */
9844: #define YNORSIM_BLOCK_SIZE_U32  (((256)+1)*1024/4) /* MUTANT (rep_const) */
9844: #define YNORSIM_BLOCK_SIZE_U32  (((256)-1)*1024/4) /* MUTANT (rep_const) */
9844: #define YNORSIM_BLOCK_SIZE_U32  (256*0/4) /* MUTANT (rep_const) */
9844: #define YNORSIM_BLOCK_SIZE_U32  (256*1/4) /* MUTANT (rep_const) */
9844: #define YNORSIM_BLOCK_SIZE_U32  (256*-1/4) /* MUTANT (rep_const) */
9844: #define YNORSIM_BLOCK_SIZE_U32  (256*((1024)+1)/4) /* MUTANT (rep_const) */
9844: #define YNORSIM_BLOCK_SIZE_U32  (256*((1024)-1)/4) /* MUTANT (rep_const) */
9844: #define YNORSIM_BLOCK_SIZE_U32  (256*1024/0) /* MUTANT (rep_const) */
9844: #define YNORSIM_BLOCK_SIZE_U32  (256*1024/1) /* MUTANT (rep_const) */
9844: #define YNORSIM_BLOCK_SIZE_U32  (256*1024/-1) /* MUTANT (rep_const) */
9844: #define YNORSIM_BLOCK_SIZE_U32  (256*1024/((4)+1)) /* MUTANT (rep_const) */
9844: #define YNORSIM_BLOCK_SIZE_U32  (256*1024/((4)-1)) /* MUTANT (rep_const) */
9845: #define YNORSIM_DEV_SIZE_U32	(0*1024 * 1024/4) /* MUTANT (rep_const) */
9845: #define YNORSIM_DEV_SIZE_U32	(1*1024 * 1024/4) /* MUTANT (rep_const) */
9845: #define YNORSIM_DEV_SIZE_U32	(-1*1024 * 1024/4) /* MUTANT (rep_const) */
9845: #define YNORSIM_DEV_SIZE_U32	(((8)+1)*1024 * 1024/4) /* MUTANT (rep_const) */
9845: #define YNORSIM_DEV_SIZE_U32	(((8)-1)*1024 * 1024/4) /* MUTANT (rep_const) */
9845: #define YNORSIM_DEV_SIZE_U32	(8*0 * 1024/4) /* MUTANT (rep_const) */
9845: #define YNORSIM_DEV_SIZE_U32	(8*1 * 1024/4) /* MUTANT (rep_const) */
9845: #define YNORSIM_DEV_SIZE_U32	(8*-1 * 1024/4) /* MUTANT (rep_const) */
9845: #define YNORSIM_DEV_SIZE_U32	(8*((1024)+1) * 1024/4) /* MUTANT (rep_const) */
9845: #define YNORSIM_DEV_SIZE_U32	(8*((1024)-1) * 1024/4) /* MUTANT (rep_const) */
9845: #define YNORSIM_DEV_SIZE_U32	(8*1024 * 0/4) /* MUTANT (rep_const) */
9845: #define YNORSIM_DEV_SIZE_U32	(8*1024 * 1/4) /* MUTANT (rep_const) */
9845: #define YNORSIM_DEV_SIZE_U32	(8*1024 * -1/4) /* MUTANT (rep_const) */
9845: #define YNORSIM_DEV_SIZE_U32	(8*1024 * ((1024)+1)/4) /* MUTANT (rep_const) */
9845: #define YNORSIM_DEV_SIZE_U32	(8*1024 * ((1024)-1)/4) /* MUTANT (rep_const) */
9845: #define YNORSIM_DEV_SIZE_U32	(8*1024 * 1024/0) /* MUTANT (rep_const) */
9845: #define YNORSIM_DEV_SIZE_U32	(8*1024 * 1024/1) /* MUTANT (rep_const) */
9845: #define YNORSIM_DEV_SIZE_U32	(8*1024 * 1024/-1) /* MUTANT (rep_const) */
9845: #define YNORSIM_DEV_SIZE_U32	(8*1024 * 1024/((4)+1)) /* MUTANT (rep_const) */
9845: #define YNORSIM_DEV_SIZE_U32	(8*1024 * 1024/((4)-1)) /* MUTANT (rep_const) */
9850: /* MUTANT (del_stmt) */ /* extern int random_seed; */ 
9851: /* MUTANT (del_stmt) */ /* extern int simulate_power_failure; */ 
9855: /* MUTANT (del_stmt) */ /*   printf("Nor error\n"); */ 
9856: /* MUTANT (rep_const) */  while(0){}
9856: /* MUTANT (rep_const) */  while(-1){}
9856: /* MUTANT (rep_const) */  while(((1)+1)){}
9856: /* MUTANT (negate) */  while(!(1)){}
9861: /* MUTANT (del_stmt) */ /*   int h = open(YNORSIM_FNAME, O_RDWR | O_CREAT | O_TRUNC, S_IREAD | S_IWRITE); */ 
9861: /* MUTANT (rep_op) */  int h = open(YNORSIM_FNAME, O_RDWR & O_CREAT | O_TRUNC, S_IREAD | S_IWRITE);
9861: /* MUTANT (rep_op) */  int h = open(YNORSIM_FNAME, O_RDWR | O_CREAT & O_TRUNC, S_IREAD | S_IWRITE);
9861: /* MUTANT (rep_op) */  int h = open(YNORSIM_FNAME, O_RDWR | O_CREAT | O_TRUNC, S_IREAD & S_IWRITE);
9862: /* MUTANT (del_stmt) */ /*   write(h,word,sizeof(word)); */ 
9863: /* MUTANT (del_stmt) */ /*   close(h); */ 
9868: /* MUTANT (del_stmt) */ /*   int h = open(YNORSIM_FNAME, O_RDONLY, S_IREAD | S_IWRITE); */ 
9868: /* MUTANT (rep_op) */  int h = open(YNORSIM_FNAME, O_RDONLY, S_IREAD & S_IWRITE);
9869: /* MUTANT (del_stmt) */ /*   mymemset(word,0xFF,sizeof(word)); */ 
9869: /* MUTANT (rep_const) */  mymemset(word,1xFF,sizeof(word));
9869: /* MUTANT (rep_const) */  mymemset(word,-1xFF,sizeof(word));
9870: /* MUTANT (del_stmt) */ /*   read(h,word,sizeof(word)); */ 
9871: /* MUTANT (del_stmt) */ /*   close(h); */ 
9877: /* MUTANT (del_stmt) */ /*   ynorsim_save_image(); */ 
9878: /* MUTANT (del_stmt) */ /*   exit(1); */ 
9878: /* MUTANT (rep_const) */  exit(0);
9878: /* MUTANT (rep_const) */  exit(-1);
9878: /* MUTANT (rep_const) */  exit(((1)+1));
9881: /* MUTANT (rep_const) */static int initialised = 1;
9881: /* MUTANT (rep_const) */static int initialised = -1;
9882: /* MUTANT (del_stmt) */ /* static int remaining_ops; */ 
9883: /* MUTANT (del_stmt) */ /* static int nops_so_far; */ 
9885: /* MUTANT (del_stmt) */ /* int ops_multiplier = 500; */ 
9885: /* MUTANT (rep_const) */int ops_multiplier = 0;
9885: /* MUTANT (rep_const) */int ops_multiplier = 1;
9885: /* MUTANT (rep_const) */int ops_multiplier = -1;
9885: /* MUTANT (rep_const) */int ops_multiplier = ((500)+1);
9885: /* MUTANT (rep_const) */int ops_multiplier = ((500)-1);
9890: /* MUTANT (del_stmt) */ /*    nops_so_far++; */ 
9890: /* MUTANT (rep_op) */   nops_so_far--;
9893: /* MUTANT (del_stmt) */ /*    remaining_ops--; */ 
9893: /* MUTANT (rep_op) */   remaining_ops++;
9894: /* MUTANT (rep_op) */   if(simulate_power_failure ||
9895: /* MUTANT (rep_op) */      remaining_ops <= 1){
9895: /* MUTANT (rep_op) */      remaining_ops > 1){
9895: /* MUTANT (rep_op) */      remaining_ops >= 1){
9895: /* MUTANT (rep_op) */      remaining_ops == 1){
9895: /* MUTANT (rep_op) */      remaining_ops != 1){
9895: /* MUTANT (rep_const) */      remaining_ops < 0){
9895: /* MUTANT (rep_const) */      remaining_ops < -1){
9895: /* MUTANT (rep_const) */      remaining_ops < ((1)+1)){
9896: /* MUTANT (del_stmt) */ /*        printf("Simulated power failure after %d operations\n",nops_so_far); */ 
9897: /* MUTANT (del_stmt) */ /*     	ynorsim_power_fail(); */ 
9903: /* MUTANT (negate) */  if(!(initialised)) 
9905: /* MUTANT (del_stmt) */ /*   srand(random_seed); */ 
9906: /* MUTANT (del_stmt) */ /*   remaining_ops = 1000000000; */ 
9906: /* MUTANT (rep_const) */  remaining_ops = 0;
9906: /* MUTANT (rep_const) */  remaining_ops = 1;
9906: /* MUTANT (rep_const) */  remaining_ops = -1;
9906: /* MUTANT (rep_const) */  remaining_ops = ((1000000000)+1);
9906: /* MUTANT (rep_const) */  remaining_ops = ((1000000000)-1);
9907: /* MUTANT (del_stmt) */ /*   remaining_ops = (rand() % 10000) * ops_multiplier * YNORSIM_BIT_CHANGES; */ 
9907: /* MUTANT (rep_op) */  remaining_ops = (rand() + 10000) * ops_multiplier * YNORSIM_BIT_CHANGES;
9907: /* MUTANT (rep_op) */  remaining_ops = (rand() - 10000) * ops_multiplier * YNORSIM_BIT_CHANGES;
9907: /* MUTANT (rep_op) */  remaining_ops = (rand() * 10000) * ops_multiplier * YNORSIM_BIT_CHANGES;
9907: /* MUTANT (rep_const) */  remaining_ops = (rand() % 0) * ops_multiplier * YNORSIM_BIT_CHANGES;
9907: /* MUTANT (rep_const) */  remaining_ops = (rand() % 1) * ops_multiplier * YNORSIM_BIT_CHANGES;
9907: /* MUTANT (rep_const) */  remaining_ops = (rand() % -1) * ops_multiplier * YNORSIM_BIT_CHANGES;
9907: /* MUTANT (rep_const) */  remaining_ops = (rand() % ((10000)+1)) * ops_multiplier * YNORSIM_BIT_CHANGES;
9907: /* MUTANT (rep_const) */  remaining_ops = (rand() % ((10000)-1)) * ops_multiplier * YNORSIM_BIT_CHANGES;
9908: /* MUTANT (del_stmt) */ /*   ynorsim_restore_image(); */ 
9913: /* MUTANT (rep_op) */   while(nwords <= 0){
9913: /* MUTANT (rep_op) */   while(nwords < 0){
9913: /* MUTANT (rep_op) */   while(nwords >= 0){
9913: /* MUTANT (rep_op) */   while(nwords == 0){
9913: /* MUTANT (rep_op) */   while(nwords != 0){
9913: /* MUTANT (rep_const) */   while(nwords > 1){
9913: /* MUTANT (rep_const) */   while(nwords > -1){
9913: /* MUTANT (negate) */   while(!(nwords > 0)){
9914: /* MUTANT (del_stmt) */ /*      *buf = *addr; */ 
9915: /* MUTANT (del_stmt) */ /*      buf++; */ 
9915: /* MUTANT (rep_op) */     buf--;
9916: /* MUTANT (del_stmt) */ /*      addr++; */ 
9916: /* MUTANT (rep_op) */     addr--;
9917: /* MUTANT (del_stmt) */ /*      nwords--; */ 
9917: /* MUTANT (rep_op) */     nwords++;
9923: /* MUTANT (del_stmt) */ /*   u32 tmp; */ 
9924: /* MUTANT (del_stmt) */ /*   u32 m; */ 
9925: /* MUTANT (del_stmt) */ /*   int i; */ 
9927: /* MUTANT (del_stmt) */ /*   tmp = *addr; */ 
9928: /* MUTANT (negate) */  if(!(val & ~tmp)){
9930: /* MUTANT (del_stmt) */ /*     printf("attempt to set a zero to one (%x)->(%x)\n",tmp,val); */ 
9931: /* MUTANT (del_stmt) */ /*     NorError(); */ 
9934: /* MUTANT (rep_op) */  for(i = 0; i <= YNORSIM_BIT_CHANGES; i++){
9934: /* MUTANT (rep_op) */  for(i = 0; i > YNORSIM_BIT_CHANGES; i++){
9934: /* MUTANT (rep_op) */  for(i = 0; i >= YNORSIM_BIT_CHANGES; i++){
9934: /* MUTANT (rep_op) */  for(i = 0; i == YNORSIM_BIT_CHANGES; i++){
9934: /* MUTANT (rep_op) */  for(i = 0; i != YNORSIM_BIT_CHANGES; i++){
9934: /* MUTANT (rep_op) */  for(i = 0; i < YNORSIM_BIT_CHANGES; i--){
9934: /* MUTANT (rep_const) */  for(i = 1; i < YNORSIM_BIT_CHANGES; i++){
9934: /* MUTANT (rep_const) */  for(i = -1; i < YNORSIM_BIT_CHANGES; i++){
9935: /* MUTANT (del_stmt) */ /*     m = 1 << (rand() & 31); */ 
9935: /* MUTANT (rep_const) */    m = 0 << (rand() & 31);
9935: /* MUTANT (rep_const) */    m = -1 << (rand() & 31);
9935: /* MUTANT (rep_const) */    m = ((1)+1) << (rand() & 31);
9935: /* MUTANT (rep_const) */    m = 1 << (rand() & 0);
9935: /* MUTANT (rep_const) */    m = 1 << (rand() & 1);
9935: /* MUTANT (rep_const) */    m = 1 << (rand() & -1);
9935: /* MUTANT (rep_const) */    m = 1 << (rand() & ((31)+1));
9935: /* MUTANT (rep_const) */    m = 1 << (rand() & ((31)-1));
9936: /* MUTANT (negate) */    if(!(!(m & val))){
9937: /* MUTANT (del_stmt) */ /*       tmp &= ~m; */ 
9938: /* MUTANT (del_stmt) */ /*       *addr = tmp; */ 
9939: /* MUTANT (del_stmt) */ /*       ynorsim_maybe_power_fail(); */ 
9945: /* MUTANT (del_stmt) */ /*   ynorsim_maybe_power_fail(); */ 
9950: /* MUTANT (rep_op) */  while(nwords <=0){
9950: /* MUTANT (rep_op) */  while(nwords <0){
9950: /* MUTANT (rep_op) */  while(nwords >=0){
9950: /* MUTANT (rep_op) */  while(nwords ==0){
9950: /* MUTANT (rep_op) */  while(nwords !=0){
9950: /* MUTANT (rep_const) */  while(nwords >1){
9950: /* MUTANT (rep_const) */  while(nwords >-1){
9950: /* MUTANT (negate) */  while(!(nwords >0)){
9951: /* MUTANT (del_stmt) */ /*     ynorsim_wr_one_word32(addr,*buf); */ 
9952: /* MUTANT (del_stmt) */ /*     addr++; */ 
9952: /* MUTANT (rep_op) */    addr--;
9953: /* MUTANT (del_stmt) */ /*     buf++; */ 
9953: /* MUTANT (rep_op) */    buf--;
9954: /* MUTANT (del_stmt) */ /*     nwords--; */ 
9954: /* MUTANT (rep_op) */    nwords++;
9961: /* MUTANT (del_stmt) */ /*   mymemset(addr,0xFF,YNORSIM_BLOCK_SIZE_U32 * 4); */ 
9961: /* MUTANT (rep_const) */  mymemset(addr,1xFF,YNORSIM_BLOCK_SIZE_U32 * 4);
9961: /* MUTANT (rep_const) */  mymemset(addr,-1xFF,YNORSIM_BLOCK_SIZE_U32 * 4);
9961: /* MUTANT (rep_const) */  mymemset(addr,0xFF,YNORSIM_BLOCK_SIZE_U32 * 0);
9961: /* MUTANT (rep_const) */  mymemset(addr,0xFF,YNORSIM_BLOCK_SIZE_U32 * 1);
9961: /* MUTANT (rep_const) */  mymemset(addr,0xFF,YNORSIM_BLOCK_SIZE_U32 * -1);
9961: /* MUTANT (rep_const) */  mymemset(addr,0xFF,YNORSIM_BLOCK_SIZE_U32 * ((4)+1));
9961: /* MUTANT (rep_const) */  mymemset(addr,0xFF,YNORSIM_BLOCK_SIZE_U32 * ((4)-1));
9966: /* MUTANT (del_stmt) */ /*   ynorsim_ready(); */ 
9971: /* MUTANT (del_stmt) */ /*   ynorsim_save_image(); */ 
9972: /* MUTANT (del_stmt) */ /*   initialised=0; */ 
9972: /* MUTANT (rep_const) */  initialised=1;
9972: /* MUTANT (rep_const) */  initialised=-1;
9977: /* MUTANT (del_stmt) */ /*   return word; */ 
10013: /* MUTANT (del_stmt) */ /* 	struct yaffs_tnode_list *next; */ 
10014: /* MUTANT (del_stmt) */ /* 	struct yaffs_tnode *tnodes; */ 
10015: /* MUTANT (del_stmt) */ /* }; */ 
10018: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj_list *next; */ 
10019: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *objects; */ 
10020: /* MUTANT (del_stmt) */ /* }; */ 
10023: /* MUTANT (del_stmt) */ /* 	int n_tnodes_created; */ 
10024: /* MUTANT (del_stmt) */ /* 	struct yaffs_tnode *free_tnodes; */ 
10025: /* MUTANT (del_stmt) */ /* 	int n_free_tnodes; */ 
10026: /* MUTANT (del_stmt) */ /* 	struct yaffs_tnode_list *alloc_tnode_list; */ 
10028: /* MUTANT (del_stmt) */ /* 	int n_obj_created; */ 
10029: /* MUTANT (del_stmt) */ /* 	struct list_head free_objs; */ 
10030: /* MUTANT (del_stmt) */ /* 	int n_free_objects; */ 
10032: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj_list *allocated_obj_list; */ 
10033: /* MUTANT (del_stmt) */ /* }; */ 
10039: /* MUTANT (del_stmt) */ /* 	struct yaffs_tnode_list *tmp; */ 
10041: /* MUTANT (negate) */	if(! (!allocator)) {
10042: /* MUTANT (del_stmt) */ /* 		BUG(); */ 
10043: /* MUTANT (del_stmt) */ /* 		return; */ 
10046: /* MUTANT (negate) */	while(! (allocator->alloc_tnode_list)) {
10047: /* MUTANT (del_stmt) */ /* 		tmp = allocator->alloc_tnode_list->next; */ 
10049: /* MUTANT (del_stmt) */ /* 		kfree(allocator->alloc_tnode_list->tnodes); */ 
10050: /* MUTANT (del_stmt) */ /* 		kfree(allocator->alloc_tnode_list); */ 
10051: /* MUTANT (del_stmt) */ /* 		allocator->alloc_tnode_list = tmp; */ 
10055: /* MUTANT (del_stmt) */ /* 	allocator->n_free_tnodes = 0; */ 
10055: /* MUTANT (rep_const) */	allocator->n_free_tnodes = 1;
10055: /* MUTANT (rep_const) */	allocator->n_free_tnodes = -1;
10056: /* MUTANT (del_stmt) */ /* 	allocator->n_tnodes_created = 0; */ 
10056: /* MUTANT (rep_const) */	allocator->n_tnodes_created = 1;
10056: /* MUTANT (rep_const) */	allocator->n_tnodes_created = -1;
10061: /* MUTANT (del_stmt) */ /* 	struct yaffs_allocator *allocator = dev->allocator; */ 
10063: /* MUTANT (negate) */	if(! (!allocator)) {
10064: /* MUTANT (del_stmt) */ /* 		BUG(); */ 
10065: /* MUTANT (del_stmt) */ /* 		return; */ 
10069: /* MUTANT (del_stmt) */ /* 	allocator->free_tnodes = NULL; */ 
10070: /* MUTANT (del_stmt) */ /* 	allocator->n_free_tnodes = 0; */ 
10070: /* MUTANT (rep_const) */	allocator->n_free_tnodes = 1;
10070: /* MUTANT (rep_const) */	allocator->n_free_tnodes = -1;
10071: /* MUTANT (del_stmt) */ /* 	allocator->n_tnodes_created = 0; */ 
10071: /* MUTANT (rep_const) */	allocator->n_tnodes_created = 1;
10071: /* MUTANT (rep_const) */	allocator->n_tnodes_created = -1;
10078: /* MUTANT (del_stmt) */ /* 	int i; */ 
10079: /* MUTANT (del_stmt) */ /* 	struct yaffs_tnode *new_tnodes; */ 
10080: /* MUTANT (del_stmt) */ /* 	u8 *mem; */ 
10081: /* MUTANT (del_stmt) */ /* 	struct yaffs_tnode *curr; */ 
10082: /* MUTANT (del_stmt) */ /* 	struct yaffs_tnode *next; */ 
10083: /* MUTANT (del_stmt) */ /* 	struct yaffs_tnode_list *tnl; */ 
10085: /* MUTANT (negate) */	if(! (!allocator)) {
10086: /* MUTANT (del_stmt) */ /* 		BUG(); */ 
10087: /* MUTANT (del_stmt) */ /* 		return YAFFS_FAIL; */ 
10090: /* MUTANT (rep_op) */	if (n_tnodes <= 1)
10090: /* MUTANT (rep_op) */	if (n_tnodes > 1)
10090: /* MUTANT (rep_op) */	if (n_tnodes >= 1)
10090: /* MUTANT (rep_op) */	if (n_tnodes == 1)
10090: /* MUTANT (rep_op) */	if (n_tnodes != 1)
10090: /* MUTANT (rep_const) */	if (n_tnodes < 0)
10090: /* MUTANT (rep_const) */	if (n_tnodes < -1)
10090: /* MUTANT (rep_const) */	if (n_tnodes < ((1)+1))
10090: /* MUTANT (negate) */	if(! (n_tnodes < 1))
10094: /* MUTANT (del_stmt) */ /* 	new_tnodes = kmalloc(n_tnodes * dev->tnode_size, GFP_NOFS); */ 
10095: /* MUTANT (del_stmt) */ /* 	mem = (u8 *) new_tnodes; */ 
10097: /* MUTANT (negate) */	if(! (!new_tnodes)) {
10100: /* MUTANT (del_stmt) */ /* 		return YAFFS_FAIL; */ 
10104: /* MUTANT (rep_op) */	for (i = 0; i <= n_tnodes - 1; i++) {
10104: /* MUTANT (rep_op) */	for (i = 0; i > n_tnodes - 1; i++) {
10104: /* MUTANT (rep_op) */	for (i = 0; i >= n_tnodes - 1; i++) {
10104: /* MUTANT (rep_op) */	for (i = 0; i == n_tnodes - 1; i++) {
10104: /* MUTANT (rep_op) */	for (i = 0; i != n_tnodes - 1; i++) {
10104: /* MUTANT (rep_op) */	for (i = 0; i < n_tnodes - 1; i--) {
10104: /* MUTANT (rep_const) */	for (i = 1; i < n_tnodes - 1; i++) {
10104: /* MUTANT (rep_const) */	for (i = -1; i < n_tnodes - 1; i++) {
10104: /* MUTANT (rep_const) */	for (i = 0; i < n_tnodes - 0; i++) {
10104: /* MUTANT (rep_const) */	for (i = 0; i < n_tnodes - -1; i++) {
10104: /* MUTANT (rep_const) */	for (i = 0; i < n_tnodes - ((1)+1); i++) {
10105: /* MUTANT (del_stmt) */ /* 		curr = (struct yaffs_tnode *)&mem[i * dev->tnode_size]; */ 
10106: /* MUTANT (del_stmt) */ /* 		next = (struct yaffs_tnode *)&mem[(i + 1) * dev->tnode_size]; */ 
10106: /* MUTANT (rep_op) */		next = (struct yaffs_tnode *)&mem[(i - 1) * dev->tnode_size];
10106: /* MUTANT (rep_op) */		next = (struct yaffs_tnode *)&mem[(i * 1) * dev->tnode_size];
10106: /* MUTANT (rep_op) */		next = (struct yaffs_tnode *)&mem[(i % 1) * dev->tnode_size];
10106: /* MUTANT (rep_const) */		next = (struct yaffs_tnode *)&mem[(i + 0) * dev->tnode_size];
10106: /* MUTANT (rep_const) */		next = (struct yaffs_tnode *)&mem[(i + -1) * dev->tnode_size];
10106: /* MUTANT (rep_const) */		next = (struct yaffs_tnode *)&mem[(i + ((1)+1)) * dev->tnode_size];
10107: /* MUTANT (del_stmt) */ /* 		curr->internal[0] = next; */ 
10107: /* MUTANT (rep_const) */		curr->internal[1] = next;
10107: /* MUTANT (rep_const) */		curr->internal[-1] = next;
10110: /* MUTANT (rep_const) */	curr = (struct yaffs_tnode *)&mem[(n_tnodes - 0) * dev->tnode_size];
10110: /* MUTANT (rep_const) */	curr = (struct yaffs_tnode *)&mem[(n_tnodes - -1) * dev->tnode_size];
10110: /* MUTANT (rep_const) */	curr = (struct yaffs_tnode *)&mem[(n_tnodes - ((1)+1)) * dev->tnode_size];
10111: /* MUTANT (del_stmt) */ /* 	curr->internal[0] = allocator->free_tnodes; */ 
10111: /* MUTANT (rep_const) */	curr->internal[1] = allocator->free_tnodes;
10111: /* MUTANT (rep_const) */	curr->internal[-1] = allocator->free_tnodes;
10112: /* MUTANT (del_stmt) */ /* 	allocator->free_tnodes = (struct yaffs_tnode *)mem; */ 
10114: /* MUTANT (del_stmt) */ /* 	allocator->n_free_tnodes += n_tnodes; */ 
10114: /* MUTANT (rep_op) */	allocator->n_free_tnodes -= n_tnodes;
10114: /* MUTANT (rep_op) */	allocator->n_free_tnodes *= n_tnodes;
10114: /* MUTANT (rep_op) */	allocator->n_free_tnodes %= n_tnodes;
10115: /* MUTANT (del_stmt) */ /* 	allocator->n_tnodes_created += n_tnodes; */ 
10115: /* MUTANT (rep_op) */	allocator->n_tnodes_created -= n_tnodes;
10115: /* MUTANT (rep_op) */	allocator->n_tnodes_created *= n_tnodes;
10115: /* MUTANT (rep_op) */	allocator->n_tnodes_created %= n_tnodes;
10121: /* MUTANT (del_stmt) */ /* 	tnl = kmalloc(sizeof(struct yaffs_tnode_list), GFP_NOFS); */ 
10122: /* MUTANT (negate) */	if(! (!tnl)) {
10125: /* MUTANT (del_stmt) */ /* 		return YAFFS_FAIL; */ 
10127: /* MUTANT (del_stmt) */ /* 		tnl->tnodes = new_tnodes; */ 
10128: /* MUTANT (del_stmt) */ /* 		tnl->next = allocator->alloc_tnode_list; */ 
10129: /* MUTANT (del_stmt) */ /* 		allocator->alloc_tnode_list = tnl; */ 
10134: /* MUTANT (del_stmt) */ /* 	return YAFFS_OK; */ 
10141: /* MUTANT (del_stmt) */ /* 	struct yaffs_tnode *tn = NULL; */ 
10143: /* MUTANT (negate) */	if(! (!allocator)) {
10144: /* MUTANT (del_stmt) */ /* 		BUG(); */ 
10145: /* MUTANT (del_stmt) */ /* 		return NULL; */ 
10149: /* MUTANT (negate) */	if(! (!allocator->free_tnodes))
10152: /* MUTANT (negate) */	if(! (allocator->free_tnodes)) {
10153: /* MUTANT (del_stmt) */ /* 		tn = allocator->free_tnodes; */ 
10154: /* MUTANT (del_stmt) */ /* 		allocator->free_tnodes = allocator->free_tnodes->internal[0]; */ 
10154: /* MUTANT (rep_const) */		allocator->free_tnodes = allocator->free_tnodes->internal[1];
10154: /* MUTANT (rep_const) */		allocator->free_tnodes = allocator->free_tnodes->internal[-1];
10155: /* MUTANT (del_stmt) */ /* 		allocator->n_free_tnodes--; */ 
10155: /* MUTANT (rep_op) */		allocator->n_free_tnodes++;
10164: /* MUTANT (del_stmt) */ /* 	struct yaffs_allocator *allocator = dev->allocator; */ 
10166: /* MUTANT (negate) */	if(! (!allocator)) {
10167: /* MUTANT (del_stmt) */ /* 		BUG(); */ 
10168: /* MUTANT (del_stmt) */ /* 		return; */ 
10171: /* MUTANT (negate) */	if(! (tn)) {
10172: /* MUTANT (del_stmt) */ /* 		tn->internal[0] = allocator->free_tnodes; */ 
10172: /* MUTANT (rep_const) */		tn->internal[1] = allocator->free_tnodes;
10172: /* MUTANT (rep_const) */		tn->internal[-1] = allocator->free_tnodes;
10173: /* MUTANT (del_stmt) */ /* 		allocator->free_tnodes = tn; */ 
10174: /* MUTANT (del_stmt) */ /* 		allocator->n_free_tnodes++; */ 
10174: /* MUTANT (rep_op) */		allocator->n_free_tnodes--;
10176: /* MUTANT (rep_const) */	dev->checkpoint_blocks_required = 1;	/* force recalculation */
10176: /* MUTANT (rep_const) */	dev->checkpoint_blocks_required = -1;	/* force recalculation */
10187: /* MUTANT (del_stmt) */ /* 	struct yaffs_allocator *allocator = dev->allocator; */ 
10189: /* MUTANT (negate) */	if(! (!allocator)) {
10190: /* MUTANT (del_stmt) */ /* 		BUG(); */ 
10191: /* MUTANT (del_stmt) */ /* 		return; */ 
10195: /* MUTANT (del_stmt) */ /* 	INIT_LIST_HEAD(&allocator->free_objs); */ 
10196: /* MUTANT (del_stmt) */ /* 	allocator->n_free_objects = 0; */ 
10196: /* MUTANT (rep_const) */	allocator->n_free_objects = 1;
10196: /* MUTANT (rep_const) */	allocator->n_free_objects = -1;
10201: /* MUTANT (del_stmt) */ /* 	struct yaffs_allocator *allocator = dev->allocator; */ 
10202: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj_list *tmp; */ 
10204: /* MUTANT (negate) */	if(! (!allocator)) {
10205: /* MUTANT (del_stmt) */ /* 		BUG(); */ 
10206: /* MUTANT (del_stmt) */ /* 		return; */ 
10209: /* MUTANT (negate) */	while(! (allocator->allocated_obj_list)) {
10210: /* MUTANT (del_stmt) */ /* 		tmp = allocator->allocated_obj_list->next; */ 
10211: /* MUTANT (del_stmt) */ /* 		kfree(allocator->allocated_obj_list->objects); */ 
10212: /* MUTANT (del_stmt) */ /* 		kfree(allocator->allocated_obj_list); */ 
10213: /* MUTANT (del_stmt) */ /* 		allocator->allocated_obj_list = tmp; */ 
10217: /* MUTANT (del_stmt) */ /* 	allocator->n_free_objects = 0; */ 
10217: /* MUTANT (rep_const) */	allocator->n_free_objects = 1;
10217: /* MUTANT (rep_const) */	allocator->n_free_objects = -1;
10218: /* MUTANT (del_stmt) */ /* 	allocator->n_obj_created = 0; */ 
10218: /* MUTANT (rep_const) */	allocator->n_obj_created = 1;
10218: /* MUTANT (rep_const) */	allocator->n_obj_created = -1;
10223: /* MUTANT (del_stmt) */ /* 	struct yaffs_allocator *allocator = dev->allocator; */ 
10224: /* MUTANT (del_stmt) */ /* 	int i; */ 
10225: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *new_objs; */ 
10226: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj_list *list; */ 
10228: /* MUTANT (negate) */	if(! (!allocator)) {
10229: /* MUTANT (del_stmt) */ /* 		BUG(); */ 
10230: /* MUTANT (del_stmt) */ /* 		return YAFFS_FAIL; */ 
10233: /* MUTANT (rep_op) */	if (n_obj <= 1)
10233: /* MUTANT (rep_op) */	if (n_obj > 1)
10233: /* MUTANT (rep_op) */	if (n_obj >= 1)
10233: /* MUTANT (rep_op) */	if (n_obj == 1)
10233: /* MUTANT (rep_op) */	if (n_obj != 1)
10233: /* MUTANT (rep_const) */	if (n_obj < 0)
10233: /* MUTANT (rep_const) */	if (n_obj < -1)
10233: /* MUTANT (rep_const) */	if (n_obj < ((1)+1))
10233: /* MUTANT (negate) */	if(! (n_obj < 1))
10237: /* MUTANT (del_stmt) */ /* 	new_objs = kmalloc(n_obj * sizeof(struct yaffs_obj), GFP_NOFS); */ 
10238: /* MUTANT (del_stmt) */ /* 	list = kmalloc(sizeof(struct yaffs_obj_list), GFP_NOFS); */ 
10240: /* MUTANT (rep_op) */	if (!new_objs && !list) {
10240: /* MUTANT (negate) */	if(! (!new_objs || !list)) {
10241: /* MUTANT (del_stmt) */ /* 		kfree(new_objs); */ 
10242: /* MUTANT (del_stmt) */ /* 		new_objs = NULL; */ 
10243: /* MUTANT (del_stmt) */ /* 		kfree(list); */ 
10244: /* MUTANT (del_stmt) */ /* 		list = NULL; */ 
10247: /* MUTANT (del_stmt) */ /* 		return YAFFS_FAIL; */ 
10251: /* MUTANT (rep_op) */	for (i = 0; i <= n_obj; i++)
10251: /* MUTANT (rep_op) */	for (i = 0; i > n_obj; i++)
10251: /* MUTANT (rep_op) */	for (i = 0; i >= n_obj; i++)
10251: /* MUTANT (rep_op) */	for (i = 0; i == n_obj; i++)
10251: /* MUTANT (rep_op) */	for (i = 0; i != n_obj; i++)
10251: /* MUTANT (rep_op) */	for (i = 0; i < n_obj; i--)
10251: /* MUTANT (rep_const) */	for (i = 1; i < n_obj; i++)
10251: /* MUTANT (rep_const) */	for (i = -1; i < n_obj; i++)
10254: /* MUTANT (del_stmt) */ /* 	allocator->n_free_objects += n_obj; */ 
10254: /* MUTANT (rep_op) */	allocator->n_free_objects -= n_obj;
10254: /* MUTANT (rep_op) */	allocator->n_free_objects *= n_obj;
10254: /* MUTANT (rep_op) */	allocator->n_free_objects %= n_obj;
10255: /* MUTANT (del_stmt) */ /* 	allocator->n_obj_created += n_obj; */ 
10255: /* MUTANT (rep_op) */	allocator->n_obj_created -= n_obj;
10255: /* MUTANT (rep_op) */	allocator->n_obj_created *= n_obj;
10255: /* MUTANT (rep_op) */	allocator->n_obj_created %= n_obj;
10259: /* MUTANT (del_stmt) */ /* 	list->objects = new_objs; */ 
10260: /* MUTANT (del_stmt) */ /* 	list->next = allocator->allocated_obj_list; */ 
10261: /* MUTANT (del_stmt) */ /* 	allocator->allocated_obj_list = list; */ 
10263: /* MUTANT (del_stmt) */ /* 	return YAFFS_OK; */ 
10268: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj = NULL; */ 
10269: /* MUTANT (del_stmt) */ /* 	struct list_head *lh; */ 
10270: /* MUTANT (del_stmt) */ /* 	struct yaffs_allocator *allocator = dev->allocator; */ 
10272: /* MUTANT (negate) */	if(! (!allocator)) {
10273: /* MUTANT (del_stmt) */ /* 		BUG(); */ 
10274: /* MUTANT (del_stmt) */ /* 		return obj; */ 
10278: /* MUTANT (negate) */	if(! (list_empty(&allocator->free_objs)))
10281: /* MUTANT (negate) */	if(! (!list_empty(&allocator->free_objs))) {
10282: /* MUTANT (del_stmt) */ /* 		lh = allocator->free_objs.next; */ 
10283: /* MUTANT (del_stmt) */ /* 		obj = list_entry(lh, struct yaffs_obj, siblings); */ 
10284: /* MUTANT (del_stmt) */ /* 		list_del_init(lh); */ 
10285: /* MUTANT (del_stmt) */ /* 		allocator->n_free_objects--; */ 
10285: /* MUTANT (rep_op) */		allocator->n_free_objects++;
10294: /* MUTANT (del_stmt) */ /* 	struct yaffs_allocator *allocator = dev->allocator; */ 
10296: /* MUTANT (negate) */	if(! (!allocator)) {
10297: /* MUTANT (del_stmt) */ /* 		BUG(); */ 
10298: /* MUTANT (del_stmt) */ /* 		return; */ 
10303: /* MUTANT (del_stmt) */ /* 	allocator->n_free_objects++; */ 
10303: /* MUTANT (rep_op) */	allocator->n_free_objects--;
10309: /* MUTANT (negate) */	if(! (!dev->allocator)) {
10310: /* MUTANT (del_stmt) */ /* 		BUG(); */ 
10311: /* MUTANT (del_stmt) */ /* 		return; */ 
10315: /* MUTANT (del_stmt) */ /* 	yaffs_deinit_raw_objs(dev); */ 
10316: /* MUTANT (del_stmt) */ /* 	kfree(dev->allocator); */ 
10317: /* MUTANT (del_stmt) */ /* 	dev->allocator = NULL; */ 
10322: /* MUTANT (del_stmt) */ /* 	struct yaffs_allocator *allocator; */ 
10324: /* MUTANT (negate) */	if(! (dev->allocator)) {
10325: /* MUTANT (del_stmt) */ /* 		BUG(); */ 
10326: /* MUTANT (del_stmt) */ /* 		return; */ 
10330: /* MUTANT (negate) */	if(! (allocator)) {
10331: /* MUTANT (del_stmt) */ /* 		dev->allocator = allocator; */ 
10332: /* MUTANT (del_stmt) */ /* 		yaffs_init_raw_tnodes(dev); */ 
10333: /* MUTANT (del_stmt) */ /* 		yaffs_init_raw_objs(dev); */ 
10356: /* MUTANT (del_stmt) */ /* 	int blocks_avail = dev->n_erased_blocks - dev->param.n_reserved_blocks; */ 
10361: /* MUTANT (del_stmt) */ /* 	return (blocks_avail <= 0) ? 0 : 1; */ 
10361: /* MUTANT (rep_op) */	return (blocks_avail < 0) ? 0 : 1;
10361: /* MUTANT (rep_op) */	return (blocks_avail > 0) ? 0 : 1;
10361: /* MUTANT (rep_op) */	return (blocks_avail >= 0) ? 0 : 1;
10361: /* MUTANT (rep_op) */	return (blocks_avail == 0) ? 0 : 1;
10361: /* MUTANT (rep_op) */	return (blocks_avail != 0) ? 0 : 1;
10361: /* MUTANT (rep_const) */	return (blocks_avail <= 1) ? 0 : 1;
10361: /* MUTANT (rep_const) */	return (blocks_avail <= -1) ? 0 : 1;
10361: /* MUTANT (rep_const) */	return (blocks_avail <= 0) ? 1 : 1;
10361: /* MUTANT (rep_const) */	return (blocks_avail <= 0) ? -1 : 1;
10361: /* MUTANT (rep_const) */	return (blocks_avail <= 0) ? 0 : 0;
10361: /* MUTANT (rep_const) */	return (blocks_avail <= 0) ? 0 : -1;
10361: /* MUTANT (rep_const) */	return (blocks_avail <= 0) ? 0 : ((1)+1);
10366: /* MUTANT (del_stmt) */ /* 	int i; */ 
10368: /* MUTANT (negate) */	if(! (!dev->param.erase_fn))
10369: /* MUTANT (rep_const) */		return 1;
10369: /* MUTANT (rep_const) */		return -1;
10374: /* MUTANT (rep_op) */	for (i = dev->internal_start_block; i < dev->internal_end_block; i++) {
10374: /* MUTANT (rep_op) */	for (i = dev->internal_start_block; i > dev->internal_end_block; i++) {
10374: /* MUTANT (rep_op) */	for (i = dev->internal_start_block; i >= dev->internal_end_block; i++) {
10374: /* MUTANT (rep_op) */	for (i = dev->internal_start_block; i == dev->internal_end_block; i++) {
10374: /* MUTANT (rep_op) */	for (i = dev->internal_start_block; i != dev->internal_end_block; i++) {
10374: /* MUTANT (rep_op) */	for (i = dev->internal_start_block; i <= dev->internal_end_block; i--) {
10375: /* MUTANT (del_stmt) */ /* 		struct yaffs_block_info *bi = yaffs_get_block_info(dev, i); */ 
10376: /* MUTANT (rep_op) */		if (bi->block_state != YAFFS_BLOCK_STATE_CHECKPOINT) {
10376: /* MUTANT (negate) */		if(! (bi->block_state == YAFFS_BLOCK_STATE_CHECKPOINT)) {
10380: /* MUTANT (del_stmt) */ /* 			dev->n_erasures++; */ 
10380: /* MUTANT (rep_op) */			dev->n_erasures--;
10385: /* MUTANT (del_stmt) */ /* 				bi->block_state = YAFFS_BLOCK_STATE_EMPTY; */ 
10386: /* MUTANT (del_stmt) */ /* 				dev->n_erased_blocks++; */ 
10386: /* MUTANT (rep_op) */				dev->n_erased_blocks--;
10387: /* MUTANT (rep_op) */				dev->n_free_chunks -=
10387: /* MUTANT (rep_op) */				dev->n_free_chunks *=
10387: /* MUTANT (rep_op) */				dev->n_free_chunks %=
10390: /* MUTANT (del_stmt) */ /* 				dev->param.bad_block_fn(dev, i); */ 
10391: /* MUTANT (del_stmt) */ /* 				bi->block_state = YAFFS_BLOCK_STATE_DEAD; */ 
10396: /* MUTANT (rep_const) */	dev->blocks_in_checkpt = 1;
10396: /* MUTANT (rep_const) */	dev->blocks_in_checkpt = -1;
10398: /* MUTANT (del_stmt) */ /* 	return 1; */ 
10398: /* MUTANT (rep_const) */	return 0;
10398: /* MUTANT (rep_const) */	return -1;
10398: /* MUTANT (rep_const) */	return ((1)+1);
10403: /* MUTANT (del_stmt) */ /* 	int i; */ 
10404: /* MUTANT (del_stmt) */ /* 	int blocks_avail = dev->n_erased_blocks - dev->param.n_reserved_blocks; */ 
10411: /* MUTANT (rep_op) */	if (dev->checkpt_next_block <= 0 &&
10411: /* MUTANT (rep_op) */	if (dev->checkpt_next_block < 0 &&
10411: /* MUTANT (rep_op) */	if (dev->checkpt_next_block > 0 &&
10411: /* MUTANT (rep_op) */	if (dev->checkpt_next_block == 0 &&
10411: /* MUTANT (rep_op) */	if (dev->checkpt_next_block != 0 &&
10411: /* MUTANT (rep_op) */	if (dev->checkpt_next_block >= 0 ||
10411: /* MUTANT (rep_const) */	if (dev->checkpt_next_block >= 1 &&
10411: /* MUTANT (rep_const) */	if (dev->checkpt_next_block >= -1 &&
10412: /* MUTANT (rep_op) */	    dev->checkpt_next_block < dev->internal_end_block &&
10412: /* MUTANT (rep_op) */	    dev->checkpt_next_block > dev->internal_end_block &&
10412: /* MUTANT (rep_op) */	    dev->checkpt_next_block >= dev->internal_end_block &&
10412: /* MUTANT (rep_op) */	    dev->checkpt_next_block == dev->internal_end_block &&
10412: /* MUTANT (rep_op) */	    dev->checkpt_next_block != dev->internal_end_block &&
10412: /* MUTANT (rep_op) */	    dev->checkpt_next_block <= dev->internal_end_block ||
10413: /* MUTANT (rep_op) */	    blocks_avail <= 0) {
10413: /* MUTANT (rep_op) */	    blocks_avail < 0) {
10413: /* MUTANT (rep_op) */	    blocks_avail >= 0) {
10413: /* MUTANT (rep_op) */	    blocks_avail == 0) {
10413: /* MUTANT (rep_op) */	    blocks_avail != 0) {
10413: /* MUTANT (rep_const) */	    blocks_avail > 1) {
10413: /* MUTANT (rep_const) */	    blocks_avail > -1) {
10415: /* MUTANT (rep_op) */		for (i = dev->checkpt_next_block; i < dev->internal_end_block;
10415: /* MUTANT (rep_op) */		for (i = dev->checkpt_next_block; i > dev->internal_end_block;
10415: /* MUTANT (rep_op) */		for (i = dev->checkpt_next_block; i >= dev->internal_end_block;
10415: /* MUTANT (rep_op) */		for (i = dev->checkpt_next_block; i == dev->internal_end_block;
10415: /* MUTANT (rep_op) */		for (i = dev->checkpt_next_block; i != dev->internal_end_block;
10416: /* MUTANT (rep_op) */		     i--) {
10419: /* MUTANT (rep_op) */			if (bi->block_state != YAFFS_BLOCK_STATE_EMPTY) {
10419: /* MUTANT (negate) */			if(! (bi->block_state == YAFFS_BLOCK_STATE_EMPTY)) {
10420: /* MUTANT (del_stmt) */ /* 				dev->checkpt_next_block = i + 1; */ 
10420: /* MUTANT (rep_op) */				dev->checkpt_next_block = i - 1;
10420: /* MUTANT (rep_op) */				dev->checkpt_next_block = i * 1;
10420: /* MUTANT (rep_op) */				dev->checkpt_next_block = i % 1;
10420: /* MUTANT (rep_const) */				dev->checkpt_next_block = i + 0;
10420: /* MUTANT (rep_const) */				dev->checkpt_next_block = i + -1;
10420: /* MUTANT (rep_const) */				dev->checkpt_next_block = i + ((1)+1);
10421: /* MUTANT (del_stmt) */ /* 				dev->checkpt_cur_block = i; */ 
10424: /* MUTANT (del_stmt) */ /* 				return; */ 
10430: /* MUTANT (del_stmt) */ /* 	dev->checkpt_next_block = -1; */ 
10430: /* MUTANT (rep_const) */	dev->checkpt_next_block = 0;
10430: /* MUTANT (rep_const) */	dev->checkpt_next_block = 1;
10430: /* MUTANT (rep_const) */	dev->checkpt_next_block = ((-1)+1);
10430: /* MUTANT (rep_const) */	dev->checkpt_next_block = ((-1)-1);
10431: /* MUTANT (del_stmt) */ /* 	dev->checkpt_cur_block = -1; */ 
10431: /* MUTANT (rep_const) */	dev->checkpt_cur_block = 0;
10431: /* MUTANT (rep_const) */	dev->checkpt_cur_block = 1;
10431: /* MUTANT (rep_const) */	dev->checkpt_cur_block = ((-1)+1);
10431: /* MUTANT (rep_const) */	dev->checkpt_cur_block = ((-1)-1);
10436: /* MUTANT (del_stmt) */ /* 	int i; */ 
10437: /* MUTANT (del_stmt) */ /* 	struct yaffs_ext_tags tags; */ 
10443: /* MUTANT (rep_op) */	if (dev->blocks_in_checkpt <= dev->checkpt_max_blocks)
10443: /* MUTANT (rep_op) */	if (dev->blocks_in_checkpt > dev->checkpt_max_blocks)
10443: /* MUTANT (rep_op) */	if (dev->blocks_in_checkpt >= dev->checkpt_max_blocks)
10443: /* MUTANT (rep_op) */	if (dev->blocks_in_checkpt == dev->checkpt_max_blocks)
10443: /* MUTANT (rep_op) */	if (dev->blocks_in_checkpt != dev->checkpt_max_blocks)
10443: /* MUTANT (negate) */	if(! (dev->blocks_in_checkpt < dev->checkpt_max_blocks))
10444: /* MUTANT (rep_op) */		for (i = dev->checkpt_next_block; i < dev->internal_end_block;
10444: /* MUTANT (rep_op) */		for (i = dev->checkpt_next_block; i > dev->internal_end_block;
10444: /* MUTANT (rep_op) */		for (i = dev->checkpt_next_block; i >= dev->internal_end_block;
10444: /* MUTANT (rep_op) */		for (i = dev->checkpt_next_block; i == dev->internal_end_block;
10444: /* MUTANT (rep_op) */		for (i = dev->checkpt_next_block; i != dev->internal_end_block;
10445: /* MUTANT (rep_op) */		     i--) {
10446: /* MUTANT (del_stmt) */ /* 			int chunk = i * dev->param.chunks_per_block; */ 
10447: /* MUTANT (del_stmt) */ /* 			int realigned_chunk = chunk - dev->chunk_offset; */ 
10456: /* MUTANT (rep_op) */			if (tags.seq_number != YAFFS_SEQUENCE_CHECKPOINT_DATA) {
10456: /* MUTANT (negate) */			if(! (tags.seq_number == YAFFS_SEQUENCE_CHECKPOINT_DATA)) {
10458: /* MUTANT (del_stmt) */ /* 				dev->checkpt_next_block = tags.obj_id; */ 
10459: /* MUTANT (del_stmt) */ /* 				dev->checkpt_cur_block = i; */ 
10462: /* MUTANT (del_stmt) */ /* 				dev->blocks_in_checkpt++; */ 
10462: /* MUTANT (rep_op) */				dev->blocks_in_checkpt--;
10465: /* MUTANT (del_stmt) */ /* 				return; */ 
10471: /* MUTANT (del_stmt) */ /* 	dev->checkpt_next_block = -1; */ 
10471: /* MUTANT (rep_const) */	dev->checkpt_next_block = 0;
10471: /* MUTANT (rep_const) */	dev->checkpt_next_block = 1;
10471: /* MUTANT (rep_const) */	dev->checkpt_next_block = ((-1)+1);
10471: /* MUTANT (rep_const) */	dev->checkpt_next_block = ((-1)-1);
10472: /* MUTANT (del_stmt) */ /* 	dev->checkpt_cur_block = -1; */ 
10472: /* MUTANT (rep_const) */	dev->checkpt_cur_block = 0;
10472: /* MUTANT (rep_const) */	dev->checkpt_cur_block = 1;
10472: /* MUTANT (rep_const) */	dev->checkpt_cur_block = ((-1)+1);
10472: /* MUTANT (rep_const) */	dev->checkpt_cur_block = ((-1)-1);
10477: /* MUTANT (del_stmt) */ /* 	int i; */ 
10479: /* MUTANT (del_stmt) */ /* 	dev->checkpt_open_write = writing; */ 
10482: /* MUTANT (rep_op) */	if (!dev->param.write_chunk_tags_fn &&
10483: /* MUTANT (rep_op) */	    !dev->param.read_chunk_tags_fn &&
10484: /* MUTANT (rep_op) */	    !dev->param.erase_fn && !dev->param.bad_block_fn)
10485: /* MUTANT (rep_const) */		return 1;
10485: /* MUTANT (rep_const) */		return -1;
10487: /* MUTANT (rep_op) */	if (writing || !yaffs2_checkpt_space_ok(dev))
10487: /* MUTANT (negate) */	if(! (writing && !yaffs2_checkpt_space_ok(dev)))
10488: /* MUTANT (rep_const) */		return 1;
10488: /* MUTANT (rep_const) */		return -1;
10490: /* MUTANT (negate) */	if(! (!dev->checkpt_buffer))
10493: /* MUTANT (negate) */	if(! (!dev->checkpt_buffer))
10494: /* MUTANT (rep_const) */		return 1;
10494: /* MUTANT (rep_const) */		return -1;
10496: /* MUTANT (del_stmt) */ /* 	dev->checkpt_page_seq = 0; */ 
10496: /* MUTANT (rep_const) */	dev->checkpt_page_seq = 1;
10496: /* MUTANT (rep_const) */	dev->checkpt_page_seq = -1;
10497: /* MUTANT (del_stmt) */ /* 	dev->checkpt_byte_count = 0; */ 
10497: /* MUTANT (rep_const) */	dev->checkpt_byte_count = 1;
10497: /* MUTANT (rep_const) */	dev->checkpt_byte_count = -1;
10498: /* MUTANT (del_stmt) */ /* 	dev->checkpt_sum = 0; */ 
10498: /* MUTANT (rep_const) */	dev->checkpt_sum = 1;
10498: /* MUTANT (rep_const) */	dev->checkpt_sum = -1;
10499: /* MUTANT (del_stmt) */ /* 	dev->checkpt_xor = 0; */ 
10499: /* MUTANT (rep_const) */	dev->checkpt_xor = 1;
10499: /* MUTANT (rep_const) */	dev->checkpt_xor = -1;
10500: /* MUTANT (del_stmt) */ /* 	dev->checkpt_cur_block = -1; */ 
10500: /* MUTANT (rep_const) */	dev->checkpt_cur_block = 0;
10500: /* MUTANT (rep_const) */	dev->checkpt_cur_block = 1;
10500: /* MUTANT (rep_const) */	dev->checkpt_cur_block = ((-1)+1);
10500: /* MUTANT (rep_const) */	dev->checkpt_cur_block = ((-1)-1);
10501: /* MUTANT (del_stmt) */ /* 	dev->checkpt_cur_chunk = -1; */ 
10501: /* MUTANT (rep_const) */	dev->checkpt_cur_chunk = 0;
10501: /* MUTANT (rep_const) */	dev->checkpt_cur_chunk = 1;
10501: /* MUTANT (rep_const) */	dev->checkpt_cur_chunk = ((-1)+1);
10501: /* MUTANT (rep_const) */	dev->checkpt_cur_chunk = ((-1)-1);
10502: /* MUTANT (del_stmt) */ /* 	dev->checkpt_next_block = dev->internal_start_block; */ 
10505: /* MUTANT (negate) */	if(! (writing)) {
10506: /* MUTANT (del_stmt) */ /* 		mymemset(dev->checkpt_buffer, 0, dev->data_bytes_per_chunk); */ 
10506: /* MUTANT (rep_const) */		mymemset(dev->checkpt_buffer, 1, dev->data_bytes_per_chunk);
10506: /* MUTANT (rep_const) */		mymemset(dev->checkpt_buffer, -1, dev->data_bytes_per_chunk);
10507: /* MUTANT (del_stmt) */ /* 		dev->checkpt_byte_offs = 0; */ 
10507: /* MUTANT (rep_const) */		dev->checkpt_byte_offs = 1;
10507: /* MUTANT (rep_const) */		dev->checkpt_byte_offs = -1;
10508: /* MUTANT (del_stmt) */ /* 		return yaffs_checkpt_erase(dev); */ 
10515: /* MUTANT (del_stmt) */ /* 	dev->blocks_in_checkpt = 0; */ 
10515: /* MUTANT (rep_const) */	dev->blocks_in_checkpt = 1;
10515: /* MUTANT (rep_const) */	dev->blocks_in_checkpt = -1;
10517: /* MUTANT (rep_op) */	    (dev->internal_end_block - dev->internal_start_block) / 16 - 2;
10517: /* MUTANT (rep_op) */	    (dev->internal_end_block - dev->internal_start_block) / 16 * 2;
10517: /* MUTANT (rep_op) */	    (dev->internal_end_block - dev->internal_start_block) / 16 % 2;
10517: /* MUTANT (rep_const) */	    (dev->internal_end_block - dev->internal_start_block) / 0 + 2;
10517: /* MUTANT (rep_const) */	    (dev->internal_end_block - dev->internal_start_block) / 1 + 2;
10517: /* MUTANT (rep_const) */	    (dev->internal_end_block - dev->internal_start_block) / -1 + 2;
10517: /* MUTANT (rep_const) */	    (dev->internal_end_block - dev->internal_start_block) / ((16)+1) + 2;
10517: /* MUTANT (rep_const) */	    (dev->internal_end_block - dev->internal_start_block) / ((16)-1) + 2;
10517: /* MUTANT (rep_const) */	    (dev->internal_end_block - dev->internal_start_block) / 16 + 0;
10517: /* MUTANT (rep_const) */	    (dev->internal_end_block - dev->internal_start_block) / 16 + 1;
10517: /* MUTANT (rep_const) */	    (dev->internal_end_block - dev->internal_start_block) / 16 + -1;
10517: /* MUTANT (rep_const) */	    (dev->internal_end_block - dev->internal_start_block) / 16 + ((2)+1);
10517: /* MUTANT (rep_const) */	    (dev->internal_end_block - dev->internal_start_block) / 16 + ((2)-1);
10521: /* MUTANT (negate) */	if(! (!dev->checkpt_block_list))
10522: /* MUTANT (rep_const) */		return 1;
10522: /* MUTANT (rep_const) */		return -1;
10524: /* MUTANT (rep_op) */	for (i = 0; i <= dev->checkpt_max_blocks; i++)
10524: /* MUTANT (rep_op) */	for (i = 0; i > dev->checkpt_max_blocks; i++)
10524: /* MUTANT (rep_op) */	for (i = 0; i >= dev->checkpt_max_blocks; i++)
10524: /* MUTANT (rep_op) */	for (i = 0; i == dev->checkpt_max_blocks; i++)
10524: /* MUTANT (rep_op) */	for (i = 0; i != dev->checkpt_max_blocks; i++)
10524: /* MUTANT (rep_op) */	for (i = 0; i < dev->checkpt_max_blocks; i--)
10524: /* MUTANT (rep_const) */	for (i = 1; i < dev->checkpt_max_blocks; i++)
10524: /* MUTANT (rep_const) */	for (i = -1; i < dev->checkpt_max_blocks; i++)
10525: /* MUTANT (rep_const) */		dev->checkpt_block_list[i] = 0;
10525: /* MUTANT (rep_const) */		dev->checkpt_block_list[i] = 1;
10525: /* MUTANT (rep_const) */		dev->checkpt_block_list[i] = ((-1)+1);
10525: /* MUTANT (rep_const) */		dev->checkpt_block_list[i] = ((-1)-1);
10527: /* MUTANT (del_stmt) */ /* 	return 1; */ 
10527: /* MUTANT (rep_const) */	return 0;
10527: /* MUTANT (rep_const) */	return -1;
10527: /* MUTANT (rep_const) */	return ((1)+1);
10532: /* MUTANT (del_stmt) */ /* 	u32 composite_sum; */ 
10534: /* MUTANT (del_stmt) */ /* 	composite_sum = (dev->checkpt_sum << 8) | (dev->checkpt_xor & 0xff); */ 
10534: /* MUTANT (rep_op) */	composite_sum = (dev->checkpt_sum << 8) & (dev->checkpt_xor & 0xff);
10534: /* MUTANT (rep_const) */	composite_sum = (dev->checkpt_sum << 0) | (dev->checkpt_xor & 0xff);
10534: /* MUTANT (rep_const) */	composite_sum = (dev->checkpt_sum << 1) | (dev->checkpt_xor & 0xff);
10534: /* MUTANT (rep_const) */	composite_sum = (dev->checkpt_sum << -1) | (dev->checkpt_xor & 0xff);
10534: /* MUTANT (rep_const) */	composite_sum = (dev->checkpt_sum << ((8)+1)) | (dev->checkpt_xor & 0xff);
10534: /* MUTANT (rep_const) */	composite_sum = (dev->checkpt_sum << ((8)-1)) | (dev->checkpt_xor & 0xff);
10534: /* MUTANT (rep_const) */	composite_sum = (dev->checkpt_sum << 8) | (dev->checkpt_xor & 1xff);
10534: /* MUTANT (rep_const) */	composite_sum = (dev->checkpt_sum << 8) | (dev->checkpt_xor & -1xff);
10535: /* MUTANT (del_stmt) */ /* 	*sum = composite_sum; */ 
10536: /* MUTANT (del_stmt) */ /* 	return 1; */ 
10536: /* MUTANT (rep_const) */	return 0;
10536: /* MUTANT (rep_const) */	return -1;
10536: /* MUTANT (rep_const) */	return ((1)+1);
10541: /* MUTANT (del_stmt) */ /* 	int chunk; */ 
10542: /* MUTANT (del_stmt) */ /* 	int realigned_chunk; */ 
10543: /* MUTANT (del_stmt) */ /* 	struct yaffs_ext_tags tags; */ 
10545: /* MUTANT (rep_op) */	if (dev->checkpt_cur_block <= 0) {
10545: /* MUTANT (rep_op) */	if (dev->checkpt_cur_block > 0) {
10545: /* MUTANT (rep_op) */	if (dev->checkpt_cur_block >= 0) {
10545: /* MUTANT (rep_op) */	if (dev->checkpt_cur_block == 0) {
10545: /* MUTANT (rep_op) */	if (dev->checkpt_cur_block != 0) {
10545: /* MUTANT (rep_const) */	if (dev->checkpt_cur_block < 1) {
10545: /* MUTANT (rep_const) */	if (dev->checkpt_cur_block < -1) {
10545: /* MUTANT (negate) */	if(! (dev->checkpt_cur_block < 0)) {
10546: /* MUTANT (del_stmt) */ /* 		yaffs2_checkpt_find_erased_block(dev); */ 
10547: /* MUTANT (del_stmt) */ /* 		dev->checkpt_cur_chunk = 0; */ 
10547: /* MUTANT (rep_const) */		dev->checkpt_cur_chunk = 1;
10547: /* MUTANT (rep_const) */		dev->checkpt_cur_chunk = -1;
10550: /* MUTANT (rep_op) */	if (dev->checkpt_cur_block <= 0)
10550: /* MUTANT (rep_op) */	if (dev->checkpt_cur_block > 0)
10550: /* MUTANT (rep_op) */	if (dev->checkpt_cur_block >= 0)
10550: /* MUTANT (rep_op) */	if (dev->checkpt_cur_block == 0)
10550: /* MUTANT (rep_op) */	if (dev->checkpt_cur_block != 0)
10550: /* MUTANT (rep_const) */	if (dev->checkpt_cur_block < 1)
10550: /* MUTANT (rep_const) */	if (dev->checkpt_cur_block < -1)
10550: /* MUTANT (negate) */	if(! (dev->checkpt_cur_block < 0))
10551: /* MUTANT (rep_const) */		return 1;
10551: /* MUTANT (rep_const) */		return -1;
10553: /* MUTANT (del_stmt) */ /* 	tags.is_deleted = 0; */ 
10553: /* MUTANT (rep_const) */	tags.is_deleted = 1;
10553: /* MUTANT (rep_const) */	tags.is_deleted = -1;
10554: /* MUTANT (del_stmt) */ /* 	tags.obj_id = dev->checkpt_next_block; */ 	/* Hint to next place to look */
10555: /* MUTANT (del_stmt) */ /* 	tags.chunk_id = dev->checkpt_page_seq + 1; */ 
10555: /* MUTANT (rep_op) */	tags.chunk_id = dev->checkpt_page_seq - 1;
10555: /* MUTANT (rep_op) */	tags.chunk_id = dev->checkpt_page_seq * 1;
10555: /* MUTANT (rep_op) */	tags.chunk_id = dev->checkpt_page_seq % 1;
10555: /* MUTANT (rep_const) */	tags.chunk_id = dev->checkpt_page_seq + 0;
10555: /* MUTANT (rep_const) */	tags.chunk_id = dev->checkpt_page_seq + -1;
10555: /* MUTANT (rep_const) */	tags.chunk_id = dev->checkpt_page_seq + ((1)+1);
10556: /* MUTANT (del_stmt) */ /* 	tags.seq_number = YAFFS_SEQUENCE_CHECKPOINT_DATA; */ 
10557: /* MUTANT (del_stmt) */ /* 	tags.n_bytes = dev->data_bytes_per_chunk; */ 
10558: /* MUTANT (rep_op) */	if (dev->checkpt_cur_chunk != 0) {
10558: /* MUTANT (rep_const) */	if (dev->checkpt_cur_chunk == 1) {
10558: /* MUTANT (rep_const) */	if (dev->checkpt_cur_chunk == -1) {
10558: /* MUTANT (negate) */	if(! (dev->checkpt_cur_chunk == 0)) {
10563: /* MUTANT (del_stmt) */ /* 		bi->block_state = YAFFS_BLOCK_STATE_CHECKPOINT; */ 
10564: /* MUTANT (del_stmt) */ /* 		dev->blocks_in_checkpt++; */ 
10564: /* MUTANT (rep_op) */		dev->blocks_in_checkpt--;
10568: /* MUTANT (rep_op) */	    dev->checkpt_cur_block * dev->param.chunks_per_block -
10568: /* MUTANT (rep_op) */	    dev->checkpt_cur_block * dev->param.chunks_per_block *
10568: /* MUTANT (rep_op) */	    dev->checkpt_cur_block * dev->param.chunks_per_block %
10576: /* MUTANT (del_stmt) */ /* 	realigned_chunk = chunk - dev->chunk_offset; */ 
10578: /* MUTANT (del_stmt) */ /* 	dev->n_page_writes++; */ 
10578: /* MUTANT (rep_op) */	dev->n_page_writes--;
10582: /* MUTANT (del_stmt) */ /* 	dev->checkpt_byte_offs = 0; */ 
10582: /* MUTANT (rep_const) */	dev->checkpt_byte_offs = 1;
10582: /* MUTANT (rep_const) */	dev->checkpt_byte_offs = -1;
10583: /* MUTANT (del_stmt) */ /* 	dev->checkpt_page_seq++; */ 
10583: /* MUTANT (rep_op) */	dev->checkpt_page_seq--;
10584: /* MUTANT (del_stmt) */ /* 	dev->checkpt_cur_chunk++; */ 
10584: /* MUTANT (rep_op) */	dev->checkpt_cur_chunk--;
10585: /* MUTANT (rep_op) */	if (dev->checkpt_cur_chunk <= dev->param.chunks_per_block) {
10585: /* MUTANT (rep_op) */	if (dev->checkpt_cur_chunk < dev->param.chunks_per_block) {
10585: /* MUTANT (rep_op) */	if (dev->checkpt_cur_chunk > dev->param.chunks_per_block) {
10585: /* MUTANT (rep_op) */	if (dev->checkpt_cur_chunk == dev->param.chunks_per_block) {
10585: /* MUTANT (rep_op) */	if (dev->checkpt_cur_chunk != dev->param.chunks_per_block) {
10585: /* MUTANT (negate) */	if(! (dev->checkpt_cur_chunk >= dev->param.chunks_per_block)) {
10586: /* MUTANT (del_stmt) */ /* 		dev->checkpt_cur_chunk = 0; */ 
10586: /* MUTANT (rep_const) */		dev->checkpt_cur_chunk = 1;
10586: /* MUTANT (rep_const) */		dev->checkpt_cur_chunk = -1;
10587: /* MUTANT (del_stmt) */ /* 		dev->checkpt_cur_block = -1; */ 
10587: /* MUTANT (rep_const) */		dev->checkpt_cur_block = 0;
10587: /* MUTANT (rep_const) */		dev->checkpt_cur_block = 1;
10587: /* MUTANT (rep_const) */		dev->checkpt_cur_block = ((-1)+1);
10587: /* MUTANT (rep_const) */		dev->checkpt_cur_block = ((-1)-1);
10589: /* MUTANT (rep_const) */	mymemset(dev->checkpt_buffer, 1, dev->data_bytes_per_chunk);
10589: /* MUTANT (rep_const) */	mymemset(dev->checkpt_buffer, -1, dev->data_bytes_per_chunk);
10591: /* MUTANT (del_stmt) */ /* 	return 1; */ 
10591: /* MUTANT (rep_const) */	return 0;
10591: /* MUTANT (rep_const) */	return -1;
10591: /* MUTANT (rep_const) */	return ((1)+1);
10596: /* MUTANT (del_stmt) */ /* 	int i = 0; */ 
10596: /* MUTANT (rep_const) */	int i = 1;
10596: /* MUTANT (rep_const) */	int i = -1;
10597: /* MUTANT (del_stmt) */ /* 	int ok = 1; */ 
10597: /* MUTANT (rep_const) */	int ok = 0;
10597: /* MUTANT (rep_const) */	int ok = -1;
10597: /* MUTANT (rep_const) */	int ok = ((1)+1);
10598: /* MUTANT (del_stmt) */ /* 	u8 *data_bytes = (u8 *) data; */ 
10600: /* MUTANT (negate) */	if(! (!dev->checkpt_buffer))
10601: /* MUTANT (rep_const) */		return 1;
10601: /* MUTANT (rep_const) */		return -1;
10603: /* MUTANT (negate) */	if(! (!dev->checkpt_open_write))
10604: /* MUTANT (rep_const) */		return 0;
10604: /* MUTANT (rep_const) */		return 1;
10604: /* MUTANT (rep_const) */		return ((-1)+1);
10604: /* MUTANT (rep_const) */		return ((-1)-1);
10606: /* MUTANT (rep_op) */	while (i <= n_bytes && ok) {
10606: /* MUTANT (rep_op) */	while (i > n_bytes && ok) {
10606: /* MUTANT (rep_op) */	while (i >= n_bytes && ok) {
10606: /* MUTANT (rep_op) */	while (i == n_bytes && ok) {
10606: /* MUTANT (rep_op) */	while (i != n_bytes && ok) {
10606: /* MUTANT (rep_op) */	while (i < n_bytes || ok) {
10606: /* MUTANT (negate) */	while(! (i < n_bytes && ok)) {
10607: /* MUTANT (del_stmt) */ /* 		dev->checkpt_buffer[dev->checkpt_byte_offs] = *data_bytes; */ 
10608: /* MUTANT (del_stmt) */ /* 		dev->checkpt_sum += *data_bytes; */ 
10608: /* MUTANT (rep_op) */		dev->checkpt_sum -= *data_bytes;
10608: /* MUTANT (rep_op) */		dev->checkpt_sum *= *data_bytes;
10608: /* MUTANT (rep_op) */		dev->checkpt_sum %= *data_bytes;
10609: /* MUTANT (del_stmt) */ /* 		dev->checkpt_xor ^= *data_bytes; */ 
10611: /* MUTANT (del_stmt) */ /* 		dev->checkpt_byte_offs++; */ 
10611: /* MUTANT (rep_op) */		dev->checkpt_byte_offs--;
10612: /* MUTANT (del_stmt) */ /* 		i++; */ 
10612: /* MUTANT (rep_op) */		i--;
10613: /* MUTANT (del_stmt) */ /* 		data_bytes++; */ 
10613: /* MUTANT (rep_op) */		data_bytes--;
10614: /* MUTANT (del_stmt) */ /* 		dev->checkpt_byte_count++; */ 
10614: /* MUTANT (rep_op) */		dev->checkpt_byte_count--;
10616: /* MUTANT (rep_op) */		if (dev->checkpt_byte_offs <= 0 ||
10616: /* MUTANT (rep_op) */		if (dev->checkpt_byte_offs > 0 ||
10616: /* MUTANT (rep_op) */		if (dev->checkpt_byte_offs >= 0 ||
10616: /* MUTANT (rep_op) */		if (dev->checkpt_byte_offs == 0 ||
10616: /* MUTANT (rep_op) */		if (dev->checkpt_byte_offs != 0 ||
10616: /* MUTANT (rep_op) */		if (dev->checkpt_byte_offs < 0 &&
10616: /* MUTANT (rep_const) */		if (dev->checkpt_byte_offs < 1 ||
10616: /* MUTANT (rep_const) */		if (dev->checkpt_byte_offs < -1 ||
10617: /* MUTANT (rep_op) */		    dev->checkpt_byte_offs <= dev->data_bytes_per_chunk)
10617: /* MUTANT (rep_op) */		    dev->checkpt_byte_offs < dev->data_bytes_per_chunk)
10617: /* MUTANT (rep_op) */		    dev->checkpt_byte_offs > dev->data_bytes_per_chunk)
10617: /* MUTANT (rep_op) */		    dev->checkpt_byte_offs == dev->data_bytes_per_chunk)
10617: /* MUTANT (rep_op) */		    dev->checkpt_byte_offs != dev->data_bytes_per_chunk)
10626: /* MUTANT (del_stmt) */ /* 	int i = 0; */ 
10626: /* MUTANT (rep_const) */	int i = 1;
10626: /* MUTANT (rep_const) */	int i = -1;
10627: /* MUTANT (del_stmt) */ /* 	int ok = 1; */ 
10627: /* MUTANT (rep_const) */	int ok = 0;
10627: /* MUTANT (rep_const) */	int ok = -1;
10627: /* MUTANT (rep_const) */	int ok = ((1)+1);
10628: /* MUTANT (del_stmt) */ /* 	struct yaffs_ext_tags tags; */ 
10629: /* MUTANT (del_stmt) */ /* 	int chunk; */ 
10630: /* MUTANT (del_stmt) */ /* 	int realigned_chunk; */ 
10631: /* MUTANT (del_stmt) */ /* 	u8 *data_bytes = (u8 *) data; */ 
10633: /* MUTANT (negate) */	if(! (!dev->checkpt_buffer))
10634: /* MUTANT (rep_const) */		return 1;
10634: /* MUTANT (rep_const) */		return -1;
10636: /* MUTANT (negate) */	if(! (dev->checkpt_open_write))
10637: /* MUTANT (rep_const) */		return 0;
10637: /* MUTANT (rep_const) */		return 1;
10637: /* MUTANT (rep_const) */		return ((-1)+1);
10637: /* MUTANT (rep_const) */		return ((-1)-1);
10639: /* MUTANT (rep_op) */	while (i <= n_bytes && ok) {
10639: /* MUTANT (rep_op) */	while (i > n_bytes && ok) {
10639: /* MUTANT (rep_op) */	while (i >= n_bytes && ok) {
10639: /* MUTANT (rep_op) */	while (i == n_bytes && ok) {
10639: /* MUTANT (rep_op) */	while (i != n_bytes && ok) {
10639: /* MUTANT (rep_op) */	while (i < n_bytes || ok) {
10639: /* MUTANT (negate) */	while(! (i < n_bytes && ok)) {
10641: /* MUTANT (rep_op) */		if (dev->checkpt_byte_offs <= 0 ||
10641: /* MUTANT (rep_op) */		if (dev->checkpt_byte_offs > 0 ||
10641: /* MUTANT (rep_op) */		if (dev->checkpt_byte_offs >= 0 ||
10641: /* MUTANT (rep_op) */		if (dev->checkpt_byte_offs == 0 ||
10641: /* MUTANT (rep_op) */		if (dev->checkpt_byte_offs != 0 ||
10641: /* MUTANT (rep_op) */		if (dev->checkpt_byte_offs < 0 &&
10641: /* MUTANT (rep_const) */		if (dev->checkpt_byte_offs < 1 ||
10641: /* MUTANT (rep_const) */		if (dev->checkpt_byte_offs < -1 ||
10642: /* MUTANT (rep_op) */		    dev->checkpt_byte_offs <= dev->data_bytes_per_chunk) {
10642: /* MUTANT (rep_op) */		    dev->checkpt_byte_offs < dev->data_bytes_per_chunk) {
10642: /* MUTANT (rep_op) */		    dev->checkpt_byte_offs > dev->data_bytes_per_chunk) {
10642: /* MUTANT (rep_op) */		    dev->checkpt_byte_offs == dev->data_bytes_per_chunk) {
10642: /* MUTANT (rep_op) */		    dev->checkpt_byte_offs != dev->data_bytes_per_chunk) {
10644: /* MUTANT (rep_op) */			if (dev->checkpt_cur_block <= 0) {
10644: /* MUTANT (rep_op) */			if (dev->checkpt_cur_block > 0) {
10644: /* MUTANT (rep_op) */			if (dev->checkpt_cur_block >= 0) {
10644: /* MUTANT (rep_op) */			if (dev->checkpt_cur_block == 0) {
10644: /* MUTANT (rep_op) */			if (dev->checkpt_cur_block != 0) {
10644: /* MUTANT (rep_const) */			if (dev->checkpt_cur_block < 1) {
10644: /* MUTANT (rep_const) */			if (dev->checkpt_cur_block < -1) {
10644: /* MUTANT (negate) */			if(! (dev->checkpt_cur_block < 0)) {
10645: /* MUTANT (del_stmt) */ /* 				yaffs2_checkpt_find_block(dev); */ 
10646: /* MUTANT (del_stmt) */ /* 				dev->checkpt_cur_chunk = 0; */ 
10646: /* MUTANT (rep_const) */				dev->checkpt_cur_chunk = 1;
10646: /* MUTANT (rep_const) */				dev->checkpt_cur_chunk = -1;
10649: /* MUTANT (rep_op) */			if (dev->checkpt_cur_block <= 0) {
10649: /* MUTANT (rep_op) */			if (dev->checkpt_cur_block > 0) {
10649: /* MUTANT (rep_op) */			if (dev->checkpt_cur_block >= 0) {
10649: /* MUTANT (rep_op) */			if (dev->checkpt_cur_block == 0) {
10649: /* MUTANT (rep_op) */			if (dev->checkpt_cur_block != 0) {
10649: /* MUTANT (rep_const) */			if (dev->checkpt_cur_block < 1) {
10649: /* MUTANT (rep_const) */			if (dev->checkpt_cur_block < -1) {
10649: /* MUTANT (negate) */			if(! (dev->checkpt_cur_block < 0)) {
10650: /* MUTANT (del_stmt) */ /* 				ok = 0; */ 
10650: /* MUTANT (rep_const) */				ok = 1;
10650: /* MUTANT (rep_const) */				ok = -1;
10651: /* MUTANT (del_stmt) */ /* 				break; */ 
10655: /* MUTANT (rep_op) */			    dev->param.chunks_per_block -
10655: /* MUTANT (rep_op) */			    dev->param.chunks_per_block *
10655: /* MUTANT (rep_op) */			    dev->param.chunks_per_block %
10658: /* MUTANT (del_stmt) */ /* 			realigned_chunk = chunk - dev->chunk_offset; */ 
10659: /* MUTANT (del_stmt) */ /* 			dev->n_page_reads++; */ 
10659: /* MUTANT (rep_op) */			dev->n_page_reads--;
10667: /* MUTANT (rep_op) */			if (tags.chunk_id == (dev->checkpt_page_seq + 1) ||
10667: /* MUTANT (rep_op) */			if (tags.chunk_id != (dev->checkpt_page_seq - 1) ||
10667: /* MUTANT (rep_op) */			if (tags.chunk_id != (dev->checkpt_page_seq * 1) ||
10667: /* MUTANT (rep_op) */			if (tags.chunk_id != (dev->checkpt_page_seq % 1) ||
10667: /* MUTANT (rep_op) */			if (tags.chunk_id != (dev->checkpt_page_seq + 1) &&
10667: /* MUTANT (rep_const) */			if (tags.chunk_id != (dev->checkpt_page_seq + 0) ||
10667: /* MUTANT (rep_const) */			if (tags.chunk_id != (dev->checkpt_page_seq + -1) ||
10667: /* MUTANT (rep_const) */			if (tags.chunk_id != (dev->checkpt_page_seq + ((1)+1)) ||
10668: /* MUTANT (rep_op) */			    tags.ecc_result <= YAFFS_ECC_RESULT_FIXED ||
10668: /* MUTANT (rep_op) */			    tags.ecc_result < YAFFS_ECC_RESULT_FIXED ||
10668: /* MUTANT (rep_op) */			    tags.ecc_result >= YAFFS_ECC_RESULT_FIXED ||
10668: /* MUTANT (rep_op) */			    tags.ecc_result == YAFFS_ECC_RESULT_FIXED ||
10668: /* MUTANT (rep_op) */			    tags.ecc_result != YAFFS_ECC_RESULT_FIXED ||
10668: /* MUTANT (rep_op) */			    tags.ecc_result > YAFFS_ECC_RESULT_FIXED &&
10669: /* MUTANT (rep_op) */			    tags.seq_number == YAFFS_SEQUENCE_CHECKPOINT_DATA) {
10670: /* MUTANT (del_stmt) */ /* 				ok = 0; */ 
10670: /* MUTANT (rep_const) */				ok = 1;
10670: /* MUTANT (rep_const) */				ok = -1;
10671: /* MUTANT (del_stmt) */ /* 				break; */ 
10674: /* MUTANT (rep_const) */			dev->checkpt_byte_offs = 1;
10674: /* MUTANT (rep_const) */			dev->checkpt_byte_offs = -1;
10675: /* MUTANT (del_stmt) */ /* 			dev->checkpt_page_seq++; */ 
10675: /* MUTANT (rep_op) */			dev->checkpt_page_seq--;
10676: /* MUTANT (del_stmt) */ /* 			dev->checkpt_cur_chunk++; */ 
10676: /* MUTANT (rep_op) */			dev->checkpt_cur_chunk--;
10678: /* MUTANT (rep_op) */			if (dev->checkpt_cur_chunk <=
10678: /* MUTANT (rep_op) */			if (dev->checkpt_cur_chunk <
10678: /* MUTANT (rep_op) */			if (dev->checkpt_cur_chunk >
10678: /* MUTANT (rep_op) */			if (dev->checkpt_cur_chunk ==
10678: /* MUTANT (rep_op) */			if (dev->checkpt_cur_chunk !=
10680: /* MUTANT (rep_const) */				dev->checkpt_cur_block = 0;
10680: /* MUTANT (rep_const) */				dev->checkpt_cur_block = 1;
10680: /* MUTANT (rep_const) */				dev->checkpt_cur_block = ((-1)+1);
10680: /* MUTANT (rep_const) */				dev->checkpt_cur_block = ((-1)-1);
10684: /* MUTANT (del_stmt) */ /* 		dev->checkpt_sum += *data_bytes; */ 
10684: /* MUTANT (rep_op) */		dev->checkpt_sum -= *data_bytes;
10684: /* MUTANT (rep_op) */		dev->checkpt_sum *= *data_bytes;
10684: /* MUTANT (rep_op) */		dev->checkpt_sum %= *data_bytes;
10685: /* MUTANT (del_stmt) */ /* 		dev->checkpt_xor ^= *data_bytes; */ 
10686: /* MUTANT (del_stmt) */ /* 		dev->checkpt_byte_offs++; */ 
10686: /* MUTANT (rep_op) */		dev->checkpt_byte_offs--;
10687: /* MUTANT (del_stmt) */ /* 		i++; */ 
10687: /* MUTANT (rep_op) */		i--;
10688: /* MUTANT (del_stmt) */ /* 		data_bytes++; */ 
10688: /* MUTANT (rep_op) */		data_bytes--;
10689: /* MUTANT (del_stmt) */ /* 		dev->checkpt_byte_count++; */ 
10689: /* MUTANT (rep_op) */		dev->checkpt_byte_count--;
10697: /* MUTANT (del_stmt) */ /* 	int i; */ 
10699: /* MUTANT (negate) */	if(! (dev->checkpt_open_write)) {
10700: /* MUTANT (rep_op) */		if (dev->checkpt_byte_offs == 0)
10700: /* MUTANT (rep_const) */		if (dev->checkpt_byte_offs != 1)
10700: /* MUTANT (rep_const) */		if (dev->checkpt_byte_offs != -1)
10700: /* MUTANT (negate) */		if(! (dev->checkpt_byte_offs != 0))
10702: /* MUTANT (negate) */	} else if(! (dev->checkpt_block_list)) {
10703: /* MUTANT (rep_const) */		for (i = 1;
10703: /* MUTANT (rep_const) */		for (i = -1;
10704: /* MUTANT (rep_op) */		     i <= dev->blocks_in_checkpt &&
10704: /* MUTANT (rep_op) */		     i > dev->blocks_in_checkpt &&
10704: /* MUTANT (rep_op) */		     i >= dev->blocks_in_checkpt &&
10704: /* MUTANT (rep_op) */		     i == dev->blocks_in_checkpt &&
10704: /* MUTANT (rep_op) */		     i != dev->blocks_in_checkpt &&
10704: /* MUTANT (rep_op) */		     i < dev->blocks_in_checkpt ||
10705: /* MUTANT (rep_op) */		     dev->checkpt_block_list[i] <= 0; i++) {
10705: /* MUTANT (rep_op) */		     dev->checkpt_block_list[i] < 0; i++) {
10705: /* MUTANT (rep_op) */		     dev->checkpt_block_list[i] > 0; i++) {
10705: /* MUTANT (rep_op) */		     dev->checkpt_block_list[i] == 0; i++) {
10705: /* MUTANT (rep_op) */		     dev->checkpt_block_list[i] != 0; i++) {
10705: /* MUTANT (rep_op) */		     dev->checkpt_block_list[i] >= 0; i--) {
10705: /* MUTANT (rep_const) */		     dev->checkpt_block_list[i] >= 1; i++) {
10705: /* MUTANT (rep_const) */		     dev->checkpt_block_list[i] >= -1; i++) {
10706: /* MUTANT (del_stmt) */ /* 			int blk = dev->checkpt_block_list[i]; */ 
10707: /* MUTANT (del_stmt) */ /* 			struct yaffs_block_info *bi = NULL; */ 
10709: /* MUTANT (rep_op) */			if (dev->internal_start_block < blk &&
10709: /* MUTANT (rep_op) */			if (dev->internal_start_block > blk &&
10709: /* MUTANT (rep_op) */			if (dev->internal_start_block >= blk &&
10709: /* MUTANT (rep_op) */			if (dev->internal_start_block == blk &&
10709: /* MUTANT (rep_op) */			if (dev->internal_start_block != blk &&
10709: /* MUTANT (rep_op) */			if (dev->internal_start_block <= blk ||
10710: /* MUTANT (rep_op) */			    blk < dev->internal_end_block)
10710: /* MUTANT (rep_op) */			    blk > dev->internal_end_block)
10710: /* MUTANT (rep_op) */			    blk >= dev->internal_end_block)
10710: /* MUTANT (rep_op) */			    blk == dev->internal_end_block)
10710: /* MUTANT (rep_op) */			    blk != dev->internal_end_block)
10712: /* MUTANT (rep_op) */			if (bi || bi->block_state == YAFFS_BLOCK_STATE_EMPTY)
10712: /* MUTANT (rep_op) */			if (bi && bi->block_state != YAFFS_BLOCK_STATE_EMPTY)
10712: /* MUTANT (negate) */			if(! (bi && bi->block_state == YAFFS_BLOCK_STATE_EMPTY))
10716: /* MUTANT (del_stmt) */ /* 		dev->checkpt_block_list = NULL; */ 
10719: /* MUTANT (rep_op) */	dev->n_free_chunks +=
10719: /* MUTANT (rep_op) */	dev->n_free_chunks *=
10719: /* MUTANT (rep_op) */	dev->n_free_chunks %=
10721: /* MUTANT (del_stmt) */ /* 	dev->n_erased_blocks -= dev->blocks_in_checkpt; */ 
10721: /* MUTANT (rep_op) */	dev->n_erased_blocks += dev->blocks_in_checkpt;
10721: /* MUTANT (rep_op) */	dev->n_erased_blocks *= dev->blocks_in_checkpt;
10721: /* MUTANT (rep_op) */	dev->n_erased_blocks %= dev->blocks_in_checkpt;
10726: /* MUTANT (negate) */	if(! (dev->checkpt_buffer)) {
10728: /* MUTANT (del_stmt) */ /* 		kfree(dev->checkpt_buffer); */ 
10729: /* MUTANT (del_stmt) */ /* 		dev->checkpt_buffer = NULL; */ 
10730: /* MUTANT (del_stmt) */ /* 		return 1; */ 
10730: /* MUTANT (rep_const) */		return 0;
10730: /* MUTANT (rep_const) */		return -1;
10730: /* MUTANT (rep_const) */		return ((1)+1);
10732: /* MUTANT (del_stmt) */ /* 		return 0; */ 
10732: /* MUTANT (rep_const) */		return 1;
10732: /* MUTANT (rep_const) */		return -1;
10744: /* MUTANT (del_stmt) */ /* 	return yaffs_checkpt_erase(dev); */ 
10768: #define YAFFSFS_MAX_SYMLINK_DEREFERENCES 0 /* MUTANT (rep_const) */
10768: #define YAFFSFS_MAX_SYMLINK_DEREFERENCES 1 /* MUTANT (rep_const) */
10768: #define YAFFSFS_MAX_SYMLINK_DEREFERENCES -1 /* MUTANT (rep_const) */
10768: #define YAFFSFS_MAX_SYMLINK_DEREFERENCES ((5)+1) /* MUTANT (rep_const) */
10768: #define YAFFSFS_MAX_SYMLINK_DEREFERENCES ((5)-1) /* MUTANT (rep_const) */
10771: #define NULL ((void *)1) /* MUTANT (rep_const) */
10771: #define NULL ((void *)-1) /* MUTANT (rep_const) */
10776: #define YAFFSFS_RW_SHIFT (0) /* MUTANT (rep_const) */
10776: #define YAFFSFS_RW_SHIFT (1) /* MUTANT (rep_const) */
10776: #define YAFFSFS_RW_SHIFT (-1) /* MUTANT (rep_const) */
10776: #define YAFFSFS_RW_SHIFT (((13)+1)) /* MUTANT (rep_const) */
10776: #define YAFFSFS_RW_SHIFT (((13)-1)) /* MUTANT (rep_const) */
10777: #define YAFFSFS_RW_SIZE  (0<<YAFFSFS_RW_SHIFT) /* MUTANT (rep_const) */
10777: #define YAFFSFS_RW_SIZE  (-1<<YAFFSFS_RW_SHIFT) /* MUTANT (rep_const) */
10777: #define YAFFSFS_RW_SIZE  (((1)+1)<<YAFFSFS_RW_SHIFT) /* MUTANT (rep_const) */
10786: /* MUTANT (del_stmt) */ /* static void yaffsfs_RemoveObjectCallback(struct yaffs_obj *obj); */ 
10788: /* MUTANT (del_stmt) */ /* unsigned int yaffs_wr_attempts; */ 
10812: /* MUTANT (del_stmt) */ /* 	int count; */ 	/* Number of handles accessing this inode */
10813: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *iObj; */ 
10814: /* MUTANT (del_stmt) */ /* } yaffsfs_Inode; */ 
10817: /* MUTANT (del_stmt) */ /* 	u8 	reading:1; */ 
10817: /* MUTANT (rep_const) */	u8 	reading:0;
10817: /* MUTANT (rep_const) */	u8 	reading:-1;
10817: /* MUTANT (rep_const) */	u8 	reading:((1)+1);
10818: /* MUTANT (del_stmt) */ /* 	u8 	writing:1; */ 
10818: /* MUTANT (rep_const) */	u8 	writing:0;
10818: /* MUTANT (rep_const) */	u8 	writing:-1;
10818: /* MUTANT (rep_const) */	u8 	writing:((1)+1);
10819: /* MUTANT (del_stmt) */ /* 	u8 	append:1; */ 
10819: /* MUTANT (rep_const) */	u8 	append:0;
10819: /* MUTANT (rep_const) */	u8 	append:-1;
10819: /* MUTANT (rep_const) */	u8 	append:((1)+1);
10820: /* MUTANT (del_stmt) */ /* 	u8	shareRead:1; */ 
10820: /* MUTANT (rep_const) */	u8	shareRead:0;
10820: /* MUTANT (rep_const) */	u8	shareRead:-1;
10820: /* MUTANT (rep_const) */	u8	shareRead:((1)+1);
10821: /* MUTANT (del_stmt) */ /* 	u8	shareWrite:1; */ 
10821: /* MUTANT (rep_const) */	u8	shareWrite:0;
10821: /* MUTANT (rep_const) */	u8	shareWrite:-1;
10821: /* MUTANT (rep_const) */	u8	shareWrite:((1)+1);
10822: /* MUTANT (del_stmt) */ /* 	int	inodeId:12; */ 	/* Index to corresponding yaffsfs_Inode */
10822: /* MUTANT (rep_const) */	int	inodeId:0;	/* Index to corresponding yaffsfs_Inode */
10822: /* MUTANT (rep_const) */	int	inodeId:1;	/* Index to corresponding yaffsfs_Inode */
10822: /* MUTANT (rep_const) */	int	inodeId:-1;	/* Index to corresponding yaffsfs_Inode */
10822: /* MUTANT (rep_const) */	int	inodeId:((12)+1);	/* Index to corresponding yaffsfs_Inode */
10822: /* MUTANT (rep_const) */	int	inodeId:((12)-1);	/* Index to corresponding yaffsfs_Inode */
10823: /* MUTANT (del_stmt) */ /* 	int	handleCount:10; */ 	/* Number of handles for this fd */
10823: /* MUTANT (rep_const) */	int	handleCount:0;	/* Number of handles for this fd */
10823: /* MUTANT (rep_const) */	int	handleCount:1;	/* Number of handles for this fd */
10823: /* MUTANT (rep_const) */	int	handleCount:-1;	/* Number of handles for this fd */
10823: /* MUTANT (rep_const) */	int	handleCount:((10)+1);	/* Number of handles for this fd */
10823: /* MUTANT (rep_const) */	int	handleCount:((10)-1);	/* Number of handles for this fd */
10824: /* MUTANT (del_stmt) */ /* 	u32 position; */ 		/* current position in file */
10825: /* MUTANT (del_stmt) */ /* }yaffsfs_FileDes; */ 
10828: /* MUTANT (del_stmt) */ /* 	short int fdId; */ 
10829: /* MUTANT (del_stmt) */ /* 	short int useCount; */ 
10830: /* MUTANT (del_stmt) */ /* } yaffsfs_Handle; */ 
10832: /* MUTANT (del_stmt) */ /* static yaffsfs_Inode yaffsfs_inode[YAFFSFS_N_HANDLES]; */ 
10833: /* MUTANT (del_stmt) */ /* static yaffsfs_FileDes yaffsfs_fd[YAFFSFS_N_HANDLES]; */ 
10834: /* MUTANT (del_stmt) */ /* static yaffsfs_Handle yaffsfs_handle[YAFFSFS_N_HANDLES]; */ 
10836: /* MUTANT (del_stmt) */ /* static int yaffsfs_handlesInitialised; */ 
10841: /* MUTANT (del_stmt) */ /* 	yaffs_trace_mask = tm; */ 
10842: /* MUTANT (del_stmt) */ /* 	return yaffs_trace_mask; */ 
10847: /* MUTANT (del_stmt) */ /* 	return yaffs_trace_mask; */ 
10857: /* MUTANT (del_stmt) */ /* 	int i; */ 
10858: /* MUTANT (negate) */	if(!(yaffsfs_handlesInitialised))
10861: /* MUTANT (del_stmt) */ /* 	mymemset(yaffsfs_inode,0,sizeof(yaffsfs_inode)); */ 
10861: /* MUTANT (rep_const) */	mymemset(yaffsfs_inode,1,sizeof(yaffsfs_inode));
10861: /* MUTANT (rep_const) */	mymemset(yaffsfs_inode,-1,sizeof(yaffsfs_inode));
10862: /* MUTANT (del_stmt) */ /* 	mymemset(yaffsfs_fd,0,sizeof(yaffsfs_fd)); */ 
10862: /* MUTANT (rep_const) */	mymemset(yaffsfs_fd,1,sizeof(yaffsfs_fd));
10862: /* MUTANT (rep_const) */	mymemset(yaffsfs_fd,-1,sizeof(yaffsfs_fd));
10863: /* MUTANT (del_stmt) */ /* 	mymemset(yaffsfs_handle,0,sizeof(yaffsfs_handle)); */ 
10863: /* MUTANT (rep_const) */	mymemset(yaffsfs_handle,1,sizeof(yaffsfs_handle));
10863: /* MUTANT (rep_const) */	mymemset(yaffsfs_handle,-1,sizeof(yaffsfs_handle));
10865: /* MUTANT (rep_op) */	for(i = 0; i <= YAFFSFS_N_HANDLES; i++)
10865: /* MUTANT (rep_op) */	for(i = 0; i > YAFFSFS_N_HANDLES; i++)
10865: /* MUTANT (rep_op) */	for(i = 0; i >= YAFFSFS_N_HANDLES; i++)
10865: /* MUTANT (rep_op) */	for(i = 0; i == YAFFSFS_N_HANDLES; i++)
10865: /* MUTANT (rep_op) */	for(i = 0; i != YAFFSFS_N_HANDLES; i++)
10865: /* MUTANT (rep_op) */	for(i = 0; i < YAFFSFS_N_HANDLES; i--)
10865: /* MUTANT (rep_const) */	for(i = 1; i < YAFFSFS_N_HANDLES; i++)
10865: /* MUTANT (rep_const) */	for(i = -1; i < YAFFSFS_N_HANDLES; i++)
10866: /* MUTANT (rep_const) */		yaffsfs_fd[i].inodeId = 0;
10866: /* MUTANT (rep_const) */		yaffsfs_fd[i].inodeId = 1;
10866: /* MUTANT (rep_const) */		yaffsfs_fd[i].inodeId = ((-1)+1);
10866: /* MUTANT (rep_const) */		yaffsfs_fd[i].inodeId = ((-1)-1);
10867: /* MUTANT (rep_op) */	for(i = 0; i <= YAFFSFS_N_HANDLES; i++)
10867: /* MUTANT (rep_op) */	for(i = 0; i > YAFFSFS_N_HANDLES; i++)
10867: /* MUTANT (rep_op) */	for(i = 0; i >= YAFFSFS_N_HANDLES; i++)
10867: /* MUTANT (rep_op) */	for(i = 0; i == YAFFSFS_N_HANDLES; i++)
10867: /* MUTANT (rep_op) */	for(i = 0; i != YAFFSFS_N_HANDLES; i++)
10867: /* MUTANT (rep_op) */	for(i = 0; i < YAFFSFS_N_HANDLES; i--)
10867: /* MUTANT (rep_const) */	for(i = 1; i < YAFFSFS_N_HANDLES; i++)
10867: /* MUTANT (rep_const) */	for(i = -1; i < YAFFSFS_N_HANDLES; i++)
10868: /* MUTANT (rep_const) */		yaffsfs_handle[i].fdId = 0;
10868: /* MUTANT (rep_const) */		yaffsfs_handle[i].fdId = 1;
10868: /* MUTANT (rep_const) */		yaffsfs_handle[i].fdId = ((-1)+1);
10868: /* MUTANT (rep_const) */		yaffsfs_handle[i].fdId = ((-1)-1);
10873: /* MUTANT (rep_op) */	if(h <= 0 && h </*= found by klee*/ YAFFSFS_N_HANDLES)
10873: /* MUTANT (rep_op) */	if(h < 0 && h </*= found by klee*/ YAFFSFS_N_HANDLES)
10873: /* MUTANT (rep_op) */	if(h > 0 && h </*= found by klee*/ YAFFSFS_N_HANDLES)
10873: /* MUTANT (rep_op) */	if(h == 0 && h </*= found by klee*/ YAFFSFS_N_HANDLES)
10873: /* MUTANT (rep_op) */	if(h != 0 && h </*= found by klee*/ YAFFSFS_N_HANDLES)
10873: /* MUTANT (rep_op) */	if(h >= 0 || h </*= found by klee*/ YAFFSFS_N_HANDLES)
10873: /* MUTANT (rep_op) */	if(h >= 0 && h <=/*= found by klee*/ YAFFSFS_N_HANDLES)
10873: /* MUTANT (rep_op) */	if(h >= 0 && h >/*= found by klee*/ YAFFSFS_N_HANDLES)
10873: /* MUTANT (rep_op) */	if(h >= 0 && h >=/*= found by klee*/ YAFFSFS_N_HANDLES)
10873: /* MUTANT (rep_op) */	if(h >= 0 && h ==/*= found by klee*/ YAFFSFS_N_HANDLES)
10873: /* MUTANT (rep_op) */	if(h >= 0 && h !=/*= found by klee*/ YAFFSFS_N_HANDLES)
10873: /* MUTANT (rep_const) */	if(h >= 1 && h </*= found by klee*/ YAFFSFS_N_HANDLES)
10873: /* MUTANT (rep_const) */	if(h >= -1 && h </*= found by klee*/ YAFFSFS_N_HANDLES)
10875: /* MUTANT (del_stmt) */ /* 	return NULL; */ 
10880: /* MUTANT (del_stmt) */ /* 	yaffsfs_Handle *h = yaffsfs_HandleToPointer(handle); */ 
10882: /* MUTANT (rep_op) */	if(h || h->useCount > 0 && h->fdId >= 0 && h->fdId < YAFFSFS_N_HANDLES)
10882: /* MUTANT (rep_op) */	if(h && h->useCount <= 0 && h->fdId >= 0 && h->fdId < YAFFSFS_N_HANDLES)
10882: /* MUTANT (rep_op) */	if(h && h->useCount < 0 && h->fdId >= 0 && h->fdId < YAFFSFS_N_HANDLES)
10882: /* MUTANT (rep_op) */	if(h && h->useCount >= 0 && h->fdId >= 0 && h->fdId < YAFFSFS_N_HANDLES)
10882: /* MUTANT (rep_op) */	if(h && h->useCount == 0 && h->fdId >= 0 && h->fdId < YAFFSFS_N_HANDLES)
10882: /* MUTANT (rep_op) */	if(h && h->useCount != 0 && h->fdId >= 0 && h->fdId < YAFFSFS_N_HANDLES)
10882: /* MUTANT (rep_op) */	if(h && h->useCount > 0 || h->fdId >= 0 && h->fdId < YAFFSFS_N_HANDLES)
10882: /* MUTANT (rep_op) */	if(h && h->useCount > 0 && h->fdId <= 0 && h->fdId < YAFFSFS_N_HANDLES)
10882: /* MUTANT (rep_op) */	if(h && h->useCount > 0 && h->fdId < 0 && h->fdId < YAFFSFS_N_HANDLES)
10882: /* MUTANT (rep_op) */	if(h && h->useCount > 0 && h->fdId > 0 && h->fdId < YAFFSFS_N_HANDLES)
10882: /* MUTANT (rep_op) */	if(h && h->useCount > 0 && h->fdId == 0 && h->fdId < YAFFSFS_N_HANDLES)
10882: /* MUTANT (rep_op) */	if(h && h->useCount > 0 && h->fdId != 0 && h->fdId < YAFFSFS_N_HANDLES)
10882: /* MUTANT (rep_op) */	if(h && h->useCount > 0 && h->fdId >= 0 || h->fdId < YAFFSFS_N_HANDLES)
10882: /* MUTANT (rep_op) */	if(h && h->useCount > 0 && h->fdId >= 0 && h->fdId <= YAFFSFS_N_HANDLES)
10882: /* MUTANT (rep_op) */	if(h && h->useCount > 0 && h->fdId >= 0 && h->fdId > YAFFSFS_N_HANDLES)
10882: /* MUTANT (rep_op) */	if(h && h->useCount > 0 && h->fdId >= 0 && h->fdId >= YAFFSFS_N_HANDLES)
10882: /* MUTANT (rep_op) */	if(h && h->useCount > 0 && h->fdId >= 0 && h->fdId == YAFFSFS_N_HANDLES)
10882: /* MUTANT (rep_op) */	if(h && h->useCount > 0 && h->fdId >= 0 && h->fdId != YAFFSFS_N_HANDLES)
10882: /* MUTANT (rep_const) */	if(h && h->useCount > 1 && h->fdId >= 0 && h->fdId < YAFFSFS_N_HANDLES)
10882: /* MUTANT (rep_const) */	if(h && h->useCount > -1 && h->fdId >= 0 && h->fdId < YAFFSFS_N_HANDLES)
10882: /* MUTANT (rep_const) */	if(h && h->useCount > 0 && h->fdId >= 1 && h->fdId < YAFFSFS_N_HANDLES)
10882: /* MUTANT (rep_const) */	if(h && h->useCount > 0 && h->fdId >= -1 && h->fdId < YAFFSFS_N_HANDLES)
10882: /* MUTANT (negate) */	if(!(h && h->useCount > 0 && h->fdId >= 0 && h->fdId < YAFFSFS_N_HANDLES))
10885: /* MUTANT (del_stmt) */ /* 	return NULL; */ 
10890: /* MUTANT (del_stmt) */ /* 	yaffsfs_FileDes *fd = yaffsfs_HandleToFileDes(handle); */ 
10892: /* MUTANT (rep_op) */	if(fd || fd->handleCount > 0 &&
10892: /* MUTANT (rep_op) */	if(fd && fd->handleCount <= 0 &&
10892: /* MUTANT (rep_op) */	if(fd && fd->handleCount < 0 &&
10892: /* MUTANT (rep_op) */	if(fd && fd->handleCount >= 0 &&
10892: /* MUTANT (rep_op) */	if(fd && fd->handleCount == 0 &&
10892: /* MUTANT (rep_op) */	if(fd && fd->handleCount != 0 &&
10892: /* MUTANT (rep_op) */	if(fd && fd->handleCount > 0 ||
10892: /* MUTANT (rep_const) */	if(fd && fd->handleCount > 1 &&
10892: /* MUTANT (rep_const) */	if(fd && fd->handleCount > -1 &&
10893: /* MUTANT (rep_op) */		fd->inodeId <= 0 && fd->inodeId < YAFFSFS_N_HANDLES)
10893: /* MUTANT (rep_op) */		fd->inodeId < 0 && fd->inodeId < YAFFSFS_N_HANDLES)
10893: /* MUTANT (rep_op) */		fd->inodeId > 0 && fd->inodeId < YAFFSFS_N_HANDLES)
10893: /* MUTANT (rep_op) */		fd->inodeId == 0 && fd->inodeId < YAFFSFS_N_HANDLES)
10893: /* MUTANT (rep_op) */		fd->inodeId != 0 && fd->inodeId < YAFFSFS_N_HANDLES)
10893: /* MUTANT (rep_op) */		fd->inodeId >= 0 || fd->inodeId < YAFFSFS_N_HANDLES)
10893: /* MUTANT (rep_op) */		fd->inodeId >= 0 && fd->inodeId <= YAFFSFS_N_HANDLES)
10893: /* MUTANT (rep_op) */		fd->inodeId >= 0 && fd->inodeId > YAFFSFS_N_HANDLES)
10893: /* MUTANT (rep_op) */		fd->inodeId >= 0 && fd->inodeId >= YAFFSFS_N_HANDLES)
10893: /* MUTANT (rep_op) */		fd->inodeId >= 0 && fd->inodeId == YAFFSFS_N_HANDLES)
10893: /* MUTANT (rep_op) */		fd->inodeId >= 0 && fd->inodeId != YAFFSFS_N_HANDLES)
10893: /* MUTANT (rep_const) */		fd->inodeId >= 1 && fd->inodeId < YAFFSFS_N_HANDLES)
10893: /* MUTANT (rep_const) */		fd->inodeId >= -1 && fd->inodeId < YAFFSFS_N_HANDLES)
10896: /* MUTANT (del_stmt) */ /* 	return NULL; */ 
10901: /* MUTANT (del_stmt) */ /* 	yaffsfs_Inode *in = yaffsfs_HandleToInode(handle); */ 
10903: /* MUTANT (negate) */	if(!(in))
10906: /* MUTANT (del_stmt) */ /* 	return NULL; */ 
10916: /* MUTANT (del_stmt) */ /* 	int i; */ 
10917: /* MUTANT (del_stmt) */ /* 	int ret = -1; */ 
10917: /* MUTANT (rep_const) */	int ret = 0;
10917: /* MUTANT (rep_const) */	int ret = 1;
10917: /* MUTANT (rep_const) */	int ret = ((-1)+1);
10917: /* MUTANT (rep_const) */	int ret = ((-1)-1);
10919: /* MUTANT (negate) */	if(!(obj))
10923: /* MUTANT (rep_op) */	for(i = 0; i <= YAFFSFS_N_HANDLES && ret < 0; i++){
10923: /* MUTANT (rep_op) */	for(i = 0; i > YAFFSFS_N_HANDLES && ret < 0; i++){
10923: /* MUTANT (rep_op) */	for(i = 0; i >= YAFFSFS_N_HANDLES && ret < 0; i++){
10923: /* MUTANT (rep_op) */	for(i = 0; i == YAFFSFS_N_HANDLES && ret < 0; i++){
10923: /* MUTANT (rep_op) */	for(i = 0; i != YAFFSFS_N_HANDLES && ret < 0; i++){
10923: /* MUTANT (rep_op) */	for(i = 0; i < YAFFSFS_N_HANDLES || ret < 0; i++){
10923: /* MUTANT (rep_op) */	for(i = 0; i < YAFFSFS_N_HANDLES && ret <= 0; i++){
10923: /* MUTANT (rep_op) */	for(i = 0; i < YAFFSFS_N_HANDLES && ret > 0; i++){
10923: /* MUTANT (rep_op) */	for(i = 0; i < YAFFSFS_N_HANDLES && ret >= 0; i++){
10923: /* MUTANT (rep_op) */	for(i = 0; i < YAFFSFS_N_HANDLES && ret == 0; i++){
10923: /* MUTANT (rep_op) */	for(i = 0; i < YAFFSFS_N_HANDLES && ret != 0; i++){
10923: /* MUTANT (rep_op) */	for(i = 0; i < YAFFSFS_N_HANDLES && ret < 0; i--){
10923: /* MUTANT (rep_const) */	for(i = 1; i < YAFFSFS_N_HANDLES && ret < 0; i++){
10923: /* MUTANT (rep_const) */	for(i = -1; i < YAFFSFS_N_HANDLES && ret < 0; i++){
10923: /* MUTANT (rep_const) */	for(i = 0; i < YAFFSFS_N_HANDLES && ret < 1; i++){
10923: /* MUTANT (rep_const) */	for(i = 0; i < YAFFSFS_N_HANDLES && ret < -1; i++){
10924: /* MUTANT (rep_op) */		if(yaffsfs_inode[i].iObj != obj)
10924: /* MUTANT (negate) */		if(!(yaffsfs_inode[i].iObj == obj))
10936: /* MUTANT (del_stmt) */ /* 	int i; */ 
10937: /* MUTANT (del_stmt) */ /* 	int ret; */ 
10938: /* MUTANT (del_stmt) */ /* 	yaffsfs_Inode *in = NULL; */ 
10940: /* MUTANT (negate) */	if(!(obj))
10943: /* MUTANT (del_stmt) */ /*         ret = yaffsfs_FindInodeIdForObject(obj); */ 
10945: /* MUTANT (rep_op) */	for(i = 0; i <= YAFFSFS_N_HANDLES && ret < 0; i++){
10945: /* MUTANT (rep_op) */	for(i = 0; i > YAFFSFS_N_HANDLES && ret < 0; i++){
10945: /* MUTANT (rep_op) */	for(i = 0; i >= YAFFSFS_N_HANDLES && ret < 0; i++){
10945: /* MUTANT (rep_op) */	for(i = 0; i == YAFFSFS_N_HANDLES && ret < 0; i++){
10945: /* MUTANT (rep_op) */	for(i = 0; i != YAFFSFS_N_HANDLES && ret < 0; i++){
10945: /* MUTANT (rep_op) */	for(i = 0; i < YAFFSFS_N_HANDLES || ret < 0; i++){
10945: /* MUTANT (rep_op) */	for(i = 0; i < YAFFSFS_N_HANDLES && ret <= 0; i++){
10945: /* MUTANT (rep_op) */	for(i = 0; i < YAFFSFS_N_HANDLES && ret > 0; i++){
10945: /* MUTANT (rep_op) */	for(i = 0; i < YAFFSFS_N_HANDLES && ret >= 0; i++){
10945: /* MUTANT (rep_op) */	for(i = 0; i < YAFFSFS_N_HANDLES && ret == 0; i++){
10945: /* MUTANT (rep_op) */	for(i = 0; i < YAFFSFS_N_HANDLES && ret != 0; i++){
10945: /* MUTANT (rep_op) */	for(i = 0; i < YAFFSFS_N_HANDLES && ret < 0; i--){
10945: /* MUTANT (rep_const) */	for(i = 1; i < YAFFSFS_N_HANDLES && ret < 0; i++){
10945: /* MUTANT (rep_const) */	for(i = -1; i < YAFFSFS_N_HANDLES && ret < 0; i++){
10945: /* MUTANT (rep_const) */	for(i = 0; i < YAFFSFS_N_HANDLES && ret < 1; i++){
10945: /* MUTANT (rep_const) */	for(i = 0; i < YAFFSFS_N_HANDLES && ret < -1; i++){
10946: /* MUTANT (negate) */		if(!(!yaffsfs_inode[i].iObj))
10950: /* MUTANT (rep_op) */	if(ret<=0){
10950: /* MUTANT (rep_op) */	if(ret<0){
10950: /* MUTANT (rep_op) */	if(ret>0){
10950: /* MUTANT (rep_op) */	if(ret==0){
10950: /* MUTANT (rep_op) */	if(ret!=0){
10950: /* MUTANT (rep_const) */	if(ret>=1){
10950: /* MUTANT (rep_const) */	if(ret>=-1){
10950: /* MUTANT (negate) */	if(!(ret>=0)){
10951: /* MUTANT (del_stmt) */ /* 		in = &yaffsfs_inode[ret]; */ 
10952: /* MUTANT (negate) */		if(!(!in->iObj))
10953: /* MUTANT (rep_const) */			in->count = 1;
10953: /* MUTANT (rep_const) */			in->count = -1;
10954: /* MUTANT (del_stmt) */ /* 		in->iObj = obj; */ 
10955: /* MUTANT (del_stmt) */ /* 		in->count++; */ 
10955: /* MUTANT (rep_op) */		in->count--;
10965: /* MUTANT (del_stmt) */ /* 	int i = yaffsfs_FindInodeIdForObject(obj); */ 
10967: /* MUTANT (rep_op) */	if(i <= 0)
10967: /* MUTANT (rep_op) */	if(i < 0)
10967: /* MUTANT (rep_op) */	if(i > 0)
10967: /* MUTANT (rep_op) */	if(i == 0)
10967: /* MUTANT (rep_op) */	if(i != 0)
10967: /* MUTANT (rep_const) */	if(i >= 1)
10967: /* MUTANT (rep_const) */	if(i >= -1)
10967: /* MUTANT (negate) */	if(!(i >= 0))
10970: /* MUTANT (rep_const) */		return 1;
10970: /* MUTANT (rep_const) */		return -1;
10975: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj; */ 
10977: /* MUTANT (del_stmt) */ /* 	obj = in->iObj; */ 
10979: /* MUTANT (negate) */	if(!(obj->unlinked))
10982: /* MUTANT (del_stmt) */ /* 	obj->my_inode = NULL; */ 
10983: /* MUTANT (del_stmt) */ /* 	in->iObj = NULL; */ 
10989: /* MUTANT (rep_op) */	if(inodeId <= 0 && inodeId < YAFFSFS_N_HANDLES){
10989: /* MUTANT (rep_op) */	if(inodeId < 0 && inodeId < YAFFSFS_N_HANDLES){
10989: /* MUTANT (rep_op) */	if(inodeId > 0 && inodeId < YAFFSFS_N_HANDLES){
10989: /* MUTANT (rep_op) */	if(inodeId == 0 && inodeId < YAFFSFS_N_HANDLES){
10989: /* MUTANT (rep_op) */	if(inodeId != 0 && inodeId < YAFFSFS_N_HANDLES){
10989: /* MUTANT (rep_op) */	if(inodeId >= 0 || inodeId < YAFFSFS_N_HANDLES){
10989: /* MUTANT (rep_op) */	if(inodeId >= 0 && inodeId <= YAFFSFS_N_HANDLES){
10989: /* MUTANT (rep_op) */	if(inodeId >= 0 && inodeId > YAFFSFS_N_HANDLES){
10989: /* MUTANT (rep_op) */	if(inodeId >= 0 && inodeId >= YAFFSFS_N_HANDLES){
10989: /* MUTANT (rep_op) */	if(inodeId >= 0 && inodeId == YAFFSFS_N_HANDLES){
10989: /* MUTANT (rep_op) */	if(inodeId >= 0 && inodeId != YAFFSFS_N_HANDLES){
10989: /* MUTANT (rep_const) */	if(inodeId >= 1 && inodeId < YAFFSFS_N_HANDLES){
10989: /* MUTANT (rep_const) */	if(inodeId >= -1 && inodeId < YAFFSFS_N_HANDLES){
10989: /* MUTANT (negate) */	if(!(inodeId >= 0 && inodeId < YAFFSFS_N_HANDLES)){
10990: /* MUTANT (del_stmt) */ /* 		yaffsfs_Inode *in = & yaffsfs_inode[inodeId]; */ 
10991: /* MUTANT (del_stmt) */ /* 		in->count--; */ 
10991: /* MUTANT (rep_op) */		in->count++;
10992: /* MUTANT (rep_op) */		if(in->count < 0){
10992: /* MUTANT (rep_op) */		if(in->count > 0){
10992: /* MUTANT (rep_op) */		if(in->count >= 0){
10992: /* MUTANT (rep_op) */		if(in->count == 0){
10992: /* MUTANT (rep_op) */		if(in->count != 0){
10992: /* MUTANT (rep_const) */		if(in->count <= 1){
10992: /* MUTANT (rep_const) */		if(in->count <= -1){
10992: /* MUTANT (negate) */		if(!(in->count <= 0)){
10993: /* MUTANT (del_stmt) */ /* 			yaffsfs_ReleaseInode(in); */ 
10994: /* MUTANT (del_stmt) */ /* 			in->count = 0; */ 
10994: /* MUTANT (rep_const) */			in->count = 1;
10994: /* MUTANT (rep_const) */			in->count = -1;
11003: /* MUTANT (del_stmt) */ /* 	int i; */ 
11004: /* MUTANT (del_stmt) */ /* 	yaffsfs_Handle *h; */ 
11006: /* MUTANT (rep_op) */	for(i = 0; i <= YAFFSFS_N_HANDLES; i++){
11006: /* MUTANT (rep_op) */	for(i = 0; i > YAFFSFS_N_HANDLES; i++){
11006: /* MUTANT (rep_op) */	for(i = 0; i >= YAFFSFS_N_HANDLES; i++){
11006: /* MUTANT (rep_op) */	for(i = 0; i == YAFFSFS_N_HANDLES; i++){
11006: /* MUTANT (rep_op) */	for(i = 0; i != YAFFSFS_N_HANDLES; i++){
11006: /* MUTANT (rep_op) */	for(i = 0; i < YAFFSFS_N_HANDLES; i--){
11006: /* MUTANT (rep_const) */	for(i = 1; i < YAFFSFS_N_HANDLES; i++){
11006: /* MUTANT (rep_const) */	for(i = -1; i < YAFFSFS_N_HANDLES; i++){
11007: /* MUTANT (del_stmt) */ /* 		h = &yaffsfs_handle[i]; */ 
11008: /* MUTANT (rep_op) */		if(h->useCount <= 1){
11008: /* MUTANT (rep_op) */		if(h->useCount > 1){
11008: /* MUTANT (rep_op) */		if(h->useCount >= 1){
11008: /* MUTANT (rep_op) */		if(h->useCount == 1){
11008: /* MUTANT (rep_op) */		if(h->useCount != 1){
11008: /* MUTANT (rep_const) */		if(h->useCount < 0){
11008: /* MUTANT (rep_const) */		if(h->useCount < -1){
11008: /* MUTANT (rep_const) */		if(h->useCount < ((1)+1)){
11008: /* MUTANT (negate) */		if(!(h->useCount < 1)){
11009: /* MUTANT (del_stmt) */ /* 			mymemset(h,0,sizeof(yaffsfs_Handle)); */ 
11009: /* MUTANT (rep_const) */			mymemset(h,1,sizeof(yaffsfs_Handle));
11009: /* MUTANT (rep_const) */			mymemset(h,-1,sizeof(yaffsfs_Handle));
11010: /* MUTANT (del_stmt) */ /* 			h->fdId=-1; */ 
11010: /* MUTANT (rep_const) */			h->fdId=0;
11010: /* MUTANT (rep_const) */			h->fdId=1;
11010: /* MUTANT (rep_const) */			h->fdId=((-1)+1);
11010: /* MUTANT (rep_const) */			h->fdId=((-1)-1);
11011: /* MUTANT (del_stmt) */ /* 			h->useCount=1; */ 
11011: /* MUTANT (rep_const) */			h->useCount=0;
11011: /* MUTANT (rep_const) */			h->useCount=-1;
11011: /* MUTANT (rep_const) */			h->useCount=((1)+1);
11012: /* MUTANT (negate) */			if(!(hptr))
11014: /* MUTANT (del_stmt) */ /* 			return i; */ 
11017: /* MUTANT (rep_const) */	return 0;
11017: /* MUTANT (rep_const) */	return 1;
11017: /* MUTANT (rep_const) */	return ((-1)+1);
11017: /* MUTANT (rep_const) */	return ((-1)-1);
11022: /* MUTANT (del_stmt) */ /* 	int i; */ 
11023: /* MUTANT (del_stmt) */ /* 	yaffsfs_FileDes *fd; */ 
11024: /* MUTANT (del_stmt) */ /* 	yaffsfs_Handle  *h = NULL; */ 
11025: /* MUTANT (del_stmt) */ /* 	int handle = yaffsfs_NewHandle(&h); */ 
11027: /* MUTANT (rep_op) */	if(handle <= 0)
11027: /* MUTANT (rep_op) */	if(handle > 0)
11027: /* MUTANT (rep_op) */	if(handle >= 0)
11027: /* MUTANT (rep_op) */	if(handle == 0)
11027: /* MUTANT (rep_op) */	if(handle != 0)
11027: /* MUTANT (rep_const) */	if(handle < 1)
11027: /* MUTANT (rep_const) */	if(handle < -1)
11027: /* MUTANT (negate) */	if(!(handle < 0))
11028: /* MUTANT (rep_const) */		return 0;
11028: /* MUTANT (rep_const) */		return 1;
11028: /* MUTANT (rep_const) */		return ((-1)+1);
11028: /* MUTANT (rep_const) */		return ((-1)-1);
11030: /* MUTANT (rep_op) */	for(i = 0; i <= YAFFSFS_N_HANDLES; i++){
11030: /* MUTANT (rep_op) */	for(i = 0; i > YAFFSFS_N_HANDLES; i++){
11030: /* MUTANT (rep_op) */	for(i = 0; i >= YAFFSFS_N_HANDLES; i++){
11030: /* MUTANT (rep_op) */	for(i = 0; i == YAFFSFS_N_HANDLES; i++){
11030: /* MUTANT (rep_op) */	for(i = 0; i != YAFFSFS_N_HANDLES; i++){
11030: /* MUTANT (rep_op) */	for(i = 0; i < YAFFSFS_N_HANDLES; i--){
11030: /* MUTANT (rep_const) */	for(i = 1; i < YAFFSFS_N_HANDLES; i++){
11030: /* MUTANT (rep_const) */	for(i = -1; i < YAFFSFS_N_HANDLES; i++){
11031: /* MUTANT (del_stmt) */ /* 		fd = &yaffsfs_fd[i]; */ 
11032: /* MUTANT (rep_op) */		if(fd->handleCount <= 1){
11032: /* MUTANT (rep_op) */		if(fd->handleCount > 1){
11032: /* MUTANT (rep_op) */		if(fd->handleCount >= 1){
11032: /* MUTANT (rep_op) */		if(fd->handleCount == 1){
11032: /* MUTANT (rep_op) */		if(fd->handleCount != 1){
11032: /* MUTANT (rep_const) */		if(fd->handleCount < 0){
11032: /* MUTANT (rep_const) */		if(fd->handleCount < -1){
11032: /* MUTANT (rep_const) */		if(fd->handleCount < ((1)+1)){
11032: /* MUTANT (negate) */		if(!(fd->handleCount < 1)){
11033: /* MUTANT (del_stmt) */ /* 			mymemset(fd,0,sizeof(yaffsfs_FileDes)); */ 
11033: /* MUTANT (rep_const) */			mymemset(fd,1,sizeof(yaffsfs_FileDes));
11033: /* MUTANT (rep_const) */			mymemset(fd,-1,sizeof(yaffsfs_FileDes));
11034: /* MUTANT (del_stmt) */ /* 			fd->inodeId=-1; */ 
11034: /* MUTANT (rep_const) */			fd->inodeId=0;
11034: /* MUTANT (rep_const) */			fd->inodeId=1;
11034: /* MUTANT (rep_const) */			fd->inodeId=((-1)+1);
11034: /* MUTANT (rep_const) */			fd->inodeId=((-1)-1);
11035: /* MUTANT (del_stmt) */ /* 			fd->handleCount=1; */ 
11035: /* MUTANT (rep_const) */			fd->handleCount=0;
11035: /* MUTANT (rep_const) */			fd->handleCount=-1;
11035: /* MUTANT (rep_const) */			fd->handleCount=((1)+1);
11036: /* MUTANT (del_stmt) */ /* 			h->fdId = i; */ 
11037: /* MUTANT (del_stmt) */ /* 			return handle; */ 
11042: /* MUTANT (rep_const) */	h->useCount = 1;
11042: /* MUTANT (rep_const) */	h->useCount = -1;
11043: /* MUTANT (del_stmt) */ /* 	return -1; */ 
11043: /* MUTANT (rep_const) */	return 0;
11043: /* MUTANT (rep_const) */	return 1;
11043: /* MUTANT (rep_const) */	return ((-1)+1);
11043: /* MUTANT (rep_const) */	return ((-1)-1);
11054: /* MUTANT (del_stmt) */ /* 	yaffsfs_Handle *h = yaffsfs_HandleToPointer(handle); */ 
11056: /* MUTANT (rep_op) */	if(h || h->useCount > 0){
11056: /* MUTANT (rep_op) */	if(h && h->useCount <= 0){
11056: /* MUTANT (rep_op) */	if(h && h->useCount < 0){
11056: /* MUTANT (rep_op) */	if(h && h->useCount >= 0){
11056: /* MUTANT (rep_op) */	if(h && h->useCount == 0){
11056: /* MUTANT (rep_op) */	if(h && h->useCount != 0){
11056: /* MUTANT (rep_const) */	if(h && h->useCount > 1){
11056: /* MUTANT (rep_const) */	if(h && h->useCount > -1){
11056: /* MUTANT (negate) */	if(!(h && h->useCount > 0)){
11057: /* MUTANT (del_stmt) */ /* 		h->useCount++; */ 
11057: /* MUTANT (rep_op) */		h->useCount--;
11058: /* MUTANT (del_stmt) */ /* 		return 0; */ 
11058: /* MUTANT (rep_const) */		return 1;
11058: /* MUTANT (rep_const) */		return -1;
11060: /* MUTANT (rep_const) */	return 0;
11060: /* MUTANT (rep_const) */	return 1;
11060: /* MUTANT (rep_const) */	return ((-1)+1);
11060: /* MUTANT (rep_const) */	return ((-1)-1);
11071: /* MUTANT (del_stmt) */ /* 	yaffsfs_FileDes *fd; */ 
11073: /* MUTANT (rep_op) */	if(fdId <= 0 && fdId < YAFFSFS_N_HANDLES){
11073: /* MUTANT (rep_op) */	if(fdId < 0 && fdId < YAFFSFS_N_HANDLES){
11073: /* MUTANT (rep_op) */	if(fdId > 0 && fdId < YAFFSFS_N_HANDLES){
11073: /* MUTANT (rep_op) */	if(fdId == 0 && fdId < YAFFSFS_N_HANDLES){
11073: /* MUTANT (rep_op) */	if(fdId != 0 && fdId < YAFFSFS_N_HANDLES){
11073: /* MUTANT (rep_op) */	if(fdId >= 0 || fdId < YAFFSFS_N_HANDLES){
11073: /* MUTANT (rep_op) */	if(fdId >= 0 && fdId <= YAFFSFS_N_HANDLES){
11073: /* MUTANT (rep_op) */	if(fdId >= 0 && fdId > YAFFSFS_N_HANDLES){
11073: /* MUTANT (rep_op) */	if(fdId >= 0 && fdId >= YAFFSFS_N_HANDLES){
11073: /* MUTANT (rep_op) */	if(fdId >= 0 && fdId == YAFFSFS_N_HANDLES){
11073: /* MUTANT (rep_op) */	if(fdId >= 0 && fdId != YAFFSFS_N_HANDLES){
11073: /* MUTANT (rep_const) */	if(fdId >= 1 && fdId < YAFFSFS_N_HANDLES){
11073: /* MUTANT (rep_const) */	if(fdId >= -1 && fdId < YAFFSFS_N_HANDLES){
11073: /* MUTANT (negate) */	if(!(fdId >= 0 && fdId < YAFFSFS_N_HANDLES)){
11074: /* MUTANT (del_stmt) */ /* 		fd = &yaffsfs_fd[fdId]; */ 
11075: /* MUTANT (del_stmt) */ /* 		fd->handleCount--; */ 
11075: /* MUTANT (rep_op) */		fd->handleCount++;
11076: /* MUTANT (rep_op) */		if(fd->handleCount <= 1){
11076: /* MUTANT (rep_op) */		if(fd->handleCount > 1){
11076: /* MUTANT (rep_op) */		if(fd->handleCount >= 1){
11076: /* MUTANT (rep_op) */		if(fd->handleCount == 1){
11076: /* MUTANT (rep_op) */		if(fd->handleCount != 1){
11076: /* MUTANT (rep_const) */		if(fd->handleCount < 0){
11076: /* MUTANT (rep_const) */		if(fd->handleCount < -1){
11076: /* MUTANT (rep_const) */		if(fd->handleCount < ((1)+1)){
11076: /* MUTANT (negate) */		if(!(fd->handleCount < 1)){
11077: /* MUTANT (rep_op) */			if(fd->inodeId <= 0){
11077: /* MUTANT (rep_op) */			if(fd->inodeId < 0){
11077: /* MUTANT (rep_op) */			if(fd->inodeId > 0){
11077: /* MUTANT (rep_op) */			if(fd->inodeId == 0){
11077: /* MUTANT (rep_op) */			if(fd->inodeId != 0){
11077: /* MUTANT (rep_const) */			if(fd->inodeId >= 1){
11077: /* MUTANT (rep_const) */			if(fd->inodeId >= -1){
11077: /* MUTANT (negate) */			if(!(fd->inodeId >= 0)){
11078: /* MUTANT (del_stmt) */ /* 				yaffsfs_PutInode(fd->inodeId); */ 
11079: /* MUTANT (del_stmt) */ /* 				fd->inodeId = -1; */ 
11079: /* MUTANT (rep_const) */				fd->inodeId = 0;
11079: /* MUTANT (rep_const) */				fd->inodeId = 1;
11079: /* MUTANT (rep_const) */				fd->inodeId = ((-1)+1);
11079: /* MUTANT (rep_const) */				fd->inodeId = ((-1)-1);
11083: /* MUTANT (rep_const) */	return 1;
11083: /* MUTANT (rep_const) */	return -1;
11087: /* MUTANT (del_stmt) */ /* 	yaffsfs_Handle *h = yaffsfs_HandleToPointer(handle); */ 
11089: /* MUTANT (rep_op) */	if(h || h->useCount > 0){
11089: /* MUTANT (rep_op) */	if(h && h->useCount <= 0){
11089: /* MUTANT (rep_op) */	if(h && h->useCount < 0){
11089: /* MUTANT (rep_op) */	if(h && h->useCount >= 0){
11089: /* MUTANT (rep_op) */	if(h && h->useCount == 0){
11089: /* MUTANT (rep_op) */	if(h && h->useCount != 0){
11089: /* MUTANT (rep_const) */	if(h && h->useCount > 1){
11089: /* MUTANT (rep_const) */	if(h && h->useCount > -1){
11089: /* MUTANT (negate) */	if(!(h && h->useCount > 0)){
11090: /* MUTANT (del_stmt) */ /* 		h->useCount--; */ 
11090: /* MUTANT (rep_op) */		h->useCount++;
11091: /* MUTANT (rep_op) */		if(h->useCount <= 1){
11091: /* MUTANT (rep_op) */		if(h->useCount > 1){
11091: /* MUTANT (rep_op) */		if(h->useCount >= 1){
11091: /* MUTANT (rep_op) */		if(h->useCount == 1){
11091: /* MUTANT (rep_op) */		if(h->useCount != 1){
11091: /* MUTANT (rep_const) */		if(h->useCount < 0){
11091: /* MUTANT (rep_const) */		if(h->useCount < -1){
11091: /* MUTANT (rep_const) */		if(h->useCount < ((1)+1)){
11091: /* MUTANT (negate) */		if(!(h->useCount < 1)){
11092: /* MUTANT (del_stmt) */ /* 			yaffsfs_PutFileDes(h->fdId); */ 
11093: /* MUTANT (del_stmt) */ /* 			h->fdId = -1; */ 
11093: /* MUTANT (rep_const) */			h->fdId = 0;
11093: /* MUTANT (rep_const) */			h->fdId = 1;
11093: /* MUTANT (rep_const) */			h->fdId = ((-1)+1);
11093: /* MUTANT (rep_const) */			h->fdId = ((-1)-1);
11097: /* MUTANT (rep_const) */	return 1;
11097: /* MUTANT (rep_const) */	return -1;
11102: /* MUTANT (del_stmt) */ /* 	yaffsfs_FileDes *fd; */ 
11103: /* MUTANT (del_stmt) */ /* 	yaffsfs_Handle *h; */ 
11104: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj; */ 
11105: /* MUTANT (del_stmt) */ /* 	int i; */ 
11106: /* MUTANT (rep_op) */	for(i = 0; i <= YAFFSFS_N_HANDLES; i++){
11106: /* MUTANT (rep_op) */	for(i = 0; i > YAFFSFS_N_HANDLES; i++){
11106: /* MUTANT (rep_op) */	for(i = 0; i >= YAFFSFS_N_HANDLES; i++){
11106: /* MUTANT (rep_op) */	for(i = 0; i == YAFFSFS_N_HANDLES; i++){
11106: /* MUTANT (rep_op) */	for(i = 0; i != YAFFSFS_N_HANDLES; i++){
11106: /* MUTANT (rep_op) */	for(i = 0; i < YAFFSFS_N_HANDLES; i--){
11106: /* MUTANT (rep_const) */	for(i = 1; i < YAFFSFS_N_HANDLES; i++){
11106: /* MUTANT (rep_const) */	for(i = -1; i < YAFFSFS_N_HANDLES; i++){
11107: /* MUTANT (del_stmt) */ /* 		h = yaffsfs_HandleToPointer(i); */ 
11108: /* MUTANT (del_stmt) */ /* 		fd = yaffsfs_HandleToFileDes(i); */ 
11109: /* MUTANT (del_stmt) */ /* 		obj = yaffsfs_HandleToObject(i); */ 
11110: /* MUTANT (rep_op) */		if(h || h->useCount > 0){
11110: /* MUTANT (rep_op) */		if(h && h->useCount <= 0){
11110: /* MUTANT (rep_op) */		if(h && h->useCount < 0){
11110: /* MUTANT (rep_op) */		if(h && h->useCount >= 0){
11110: /* MUTANT (rep_op) */		if(h && h->useCount == 0){
11110: /* MUTANT (rep_op) */		if(h && h->useCount != 0){
11110: /* MUTANT (rep_const) */		if(h && h->useCount > 1){
11110: /* MUTANT (rep_const) */		if(h && h->useCount > -1){
11110: /* MUTANT (negate) */		if(!(h && h->useCount > 0)){
11111: /* MUTANT (del_stmt) */ /* 			h->useCount = 0; */ 
11111: /* MUTANT (rep_const) */			h->useCount = 1;
11111: /* MUTANT (rep_const) */			h->useCount = -1;
11112: /* MUTANT (del_stmt) */ /* 			h->fdId = 0; */ 
11112: /* MUTANT (rep_const) */			h->fdId = 1;
11112: /* MUTANT (rep_const) */			h->fdId = -1;
11114: /* MUTANT (rep_op) */		if(fd || fd->handleCount>0 && obj && obj->my_dev == dev){
11114: /* MUTANT (rep_op) */		if(fd && fd->handleCount<=0 && obj && obj->my_dev == dev){
11114: /* MUTANT (rep_op) */		if(fd && fd->handleCount<0 && obj && obj->my_dev == dev){
11114: /* MUTANT (rep_op) */		if(fd && fd->handleCount>=0 && obj && obj->my_dev == dev){
11114: /* MUTANT (rep_op) */		if(fd && fd->handleCount==0 && obj && obj->my_dev == dev){
11114: /* MUTANT (rep_op) */		if(fd && fd->handleCount!=0 && obj && obj->my_dev == dev){
11114: /* MUTANT (rep_op) */		if(fd && fd->handleCount>0 || obj && obj->my_dev == dev){
11114: /* MUTANT (rep_op) */		if(fd && fd->handleCount>0 && obj || obj->my_dev == dev){
11114: /* MUTANT (rep_op) */		if(fd && fd->handleCount>0 && obj && obj->my_dev != dev){
11114: /* MUTANT (rep_const) */		if(fd && fd->handleCount>1 && obj && obj->my_dev == dev){
11114: /* MUTANT (rep_const) */		if(fd && fd->handleCount>-1 && obj && obj->my_dev == dev){
11114: /* MUTANT (negate) */		if(!(fd && fd->handleCount>0 && obj && obj->my_dev == dev)){
11116: /* MUTANT (del_stmt) */ /* 			fd->handleCount = 0; */ 
11116: /* MUTANT (rep_const) */			fd->handleCount = 1;
11116: /* MUTANT (rep_const) */			fd->handleCount = -1;
11117: /* MUTANT (del_stmt) */ /* 			yaffsfs_PutInode(fd->inodeId); */ 
11118: /* MUTANT (del_stmt) */ /* 			fd->inodeId = -1; */ 
11118: /* MUTANT (rep_const) */			fd->inodeId = 0;
11118: /* MUTANT (rep_const) */			fd->inodeId = 1;
11118: /* MUTANT (rep_const) */			fd->inodeId = ((-1)+1);
11118: /* MUTANT (rep_const) */			fd->inodeId = ((-1)-1);
11134: /* MUTANT (del_stmt) */ /* 	return (a == b); */ 
11134: /* MUTANT (rep_op) */	return (a != b);
11139: /* MUTANT (del_stmt) */ /* 	const YCHAR *str = YAFFS_PATH_DIVIDERS; */ 
11141: /* MUTANT (negate) */	while(!(*str)){
11142: /* MUTANT (rep_op) */		if(*str != ch)
11142: /* MUTANT (negate) */		if(!(*str == ch))
11143: /* MUTANT (rep_const) */			return 0;
11143: /* MUTANT (rep_const) */			return -1;
11143: /* MUTANT (rep_const) */			return ((1)+1);
11144: /* MUTANT (del_stmt) */ /* 		str++; */ 
11144: /* MUTANT (rep_op) */		str--;
11147: /* MUTANT (rep_const) */	return 1;
11147: /* MUTANT (rep_const) */	return -1;
11152: /* MUTANT (del_stmt) */ /* 	int retVal = 0; */ 
11152: /* MUTANT (rep_const) */	int retVal = 1;
11152: /* MUTANT (rep_const) */	int retVal = -1;
11154: /* MUTANT (del_stmt) */ /* 	int nameLength = mystrnlen(name,YAFFS_MAX_NAME_LENGTH+1); */ 
11154: /* MUTANT (rep_op) */	int nameLength = mystrnlen(name,YAFFS_MAX_NAME_LENGTH-1);
11154: /* MUTANT (rep_op) */	int nameLength = mystrnlen(name,YAFFS_MAX_NAME_LENGTH*1);
11154: /* MUTANT (rep_op) */	int nameLength = mystrnlen(name,YAFFS_MAX_NAME_LENGTH%1);
11154: /* MUTANT (rep_const) */	int nameLength = mystrnlen(name,YAFFS_MAX_NAME_LENGTH+0);
11154: /* MUTANT (rep_const) */	int nameLength = mystrnlen(name,YAFFS_MAX_NAME_LENGTH+-1);
11154: /* MUTANT (rep_const) */	int nameLength = mystrnlen(name,YAFFS_MAX_NAME_LENGTH+((1)+1));
11156: /* MUTANT (rep_op) */	if(nameLength != 0){
11156: /* MUTANT (rep_const) */	if(nameLength == 1){
11156: /* MUTANT (rep_const) */	if(nameLength == -1){
11156: /* MUTANT (negate) */	if(!(nameLength == 0)){
11157: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-ENOENT); */ 
11158: /* MUTANT (del_stmt) */ /* 		retVal = -1; */ 
11158: /* MUTANT (rep_const) */		retVal = 0;
11158: /* MUTANT (rep_const) */		retVal = 1;
11158: /* MUTANT (rep_const) */		retVal = ((-1)+1);
11158: /* MUTANT (rep_const) */		retVal = ((-1)-1);
11159: /* MUTANT (rep_op) */	} else if (nameLength <= YAFFS_MAX_NAME_LENGTH){
11159: /* MUTANT (rep_op) */	} else if (nameLength < YAFFS_MAX_NAME_LENGTH){
11159: /* MUTANT (rep_op) */	} else if (nameLength >= YAFFS_MAX_NAME_LENGTH){
11159: /* MUTANT (rep_op) */	} else if (nameLength == YAFFS_MAX_NAME_LENGTH){
11159: /* MUTANT (rep_op) */	} else if (nameLength != YAFFS_MAX_NAME_LENGTH){
11159: /* MUTANT (negate) */	} else if(! (nameLength > YAFFS_MAX_NAME_LENGTH)){
11160: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-ENAMETOOLONG); */ 
11161: /* MUTANT (del_stmt) */ /* 		retVal = -1; */ 
11161: /* MUTANT (rep_const) */		retVal = 0;
11161: /* MUTANT (rep_const) */		retVal = 1;
11161: /* MUTANT (rep_const) */		retVal = ((-1)+1);
11161: /* MUTANT (rep_const) */		retVal = ((-1)-1);
11170: /* MUTANT (del_stmt) */ /* 	YCHAR *alt_path = NULL; */ 
11171: /* MUTANT (del_stmt) */ /* 	int path_length; */ 
11172: /* MUTANT (del_stmt) */ /* 	int i; */ 
11178: /* MUTANT (del_stmt) */ /* 	*ret_path = NULL; */ 
11179: /* MUTANT (del_stmt) */ /* 	path_length = mystrnlen(path,(YAFFS_MAX_NAME_LENGTH+1)*3 +1); */ 
11179: /* MUTANT (rep_op) */	path_length = mystrnlen(path,(YAFFS_MAX_NAME_LENGTH-1)*3 +1);
11179: /* MUTANT (rep_op) */	path_length = mystrnlen(path,(YAFFS_MAX_NAME_LENGTH*1)*3 +1);
11179: /* MUTANT (rep_op) */	path_length = mystrnlen(path,(YAFFS_MAX_NAME_LENGTH%1)*3 +1);
11179: /* MUTANT (rep_op) */	path_length = mystrnlen(path,(YAFFS_MAX_NAME_LENGTH+1)*3 -1);
11179: /* MUTANT (rep_op) */	path_length = mystrnlen(path,(YAFFS_MAX_NAME_LENGTH+1)*3 *1);
11179: /* MUTANT (rep_op) */	path_length = mystrnlen(path,(YAFFS_MAX_NAME_LENGTH+1)*3 %1);
11179: /* MUTANT (rep_const) */	path_length = mystrnlen(path,(YAFFS_MAX_NAME_LENGTH+0)*3 +1);
11179: /* MUTANT (rep_const) */	path_length = mystrnlen(path,(YAFFS_MAX_NAME_LENGTH+-1)*3 +1);
11179: /* MUTANT (rep_const) */	path_length = mystrnlen(path,(YAFFS_MAX_NAME_LENGTH+((1)+1))*3 +1);
11179: /* MUTANT (rep_const) */	path_length = mystrnlen(path,(YAFFS_MAX_NAME_LENGTH+1)*0 +1);
11179: /* MUTANT (rep_const) */	path_length = mystrnlen(path,(YAFFS_MAX_NAME_LENGTH+1)*1 +1);
11179: /* MUTANT (rep_const) */	path_length = mystrnlen(path,(YAFFS_MAX_NAME_LENGTH+1)*-1 +1);
11179: /* MUTANT (rep_const) */	path_length = mystrnlen(path,(YAFFS_MAX_NAME_LENGTH+1)*((3)+1) +1);
11179: /* MUTANT (rep_const) */	path_length = mystrnlen(path,(YAFFS_MAX_NAME_LENGTH+1)*((3)-1) +1);
11179: /* MUTANT (rep_const) */	path_length = mystrnlen(path,(YAFFS_MAX_NAME_LENGTH+1)*3 +0);
11179: /* MUTANT (rep_const) */	path_length = mystrnlen(path,(YAFFS_MAX_NAME_LENGTH+1)*3 +-1);
11179: /* MUTANT (rep_const) */	path_length = mystrnlen(path,(YAFFS_MAX_NAME_LENGTH+1)*3 +((1)+1));
11187: /* MUTANT (rep_op) */	if(path_length <= 0 &&
11187: /* MUTANT (rep_op) */	if(path_length < 0 &&
11187: /* MUTANT (rep_op) */	if(path_length >= 0 &&
11187: /* MUTANT (rep_op) */	if(path_length == 0 &&
11187: /* MUTANT (rep_op) */	if(path_length != 0 &&
11187: /* MUTANT (rep_op) */	if(path_length > 0 ||
11187: /* MUTANT (rep_const) */	if(path_length > 1 &&
11187: /* MUTANT (rep_const) */	if(path_length > -1 &&
11188: /* MUTANT (rep_const) */		yaffsfs_IsPathDivider(path[path_length-0])){
11188: /* MUTANT (rep_const) */		yaffsfs_IsPathDivider(path[path_length--1])){
11188: /* MUTANT (rep_const) */		yaffsfs_IsPathDivider(path[path_length-((1)+1)])){
11189: /* MUTANT (del_stmt) */ /* 		alt_path = kmalloc(path_length + 1, 0); */ 
11189: /* MUTANT (rep_op) */		alt_path = kmalloc(path_length - 1, 0);
11189: /* MUTANT (rep_op) */		alt_path = kmalloc(path_length * 1, 0);
11189: /* MUTANT (rep_op) */		alt_path = kmalloc(path_length % 1, 0);
11189: /* MUTANT (rep_const) */		alt_path = kmalloc(path_length + 0, 0);
11189: /* MUTANT (rep_const) */		alt_path = kmalloc(path_length + -1, 0);
11189: /* MUTANT (rep_const) */		alt_path = kmalloc(path_length + ((1)+1), 0);
11189: /* MUTANT (rep_const) */		alt_path = kmalloc(path_length + 1, 1);
11189: /* MUTANT (rep_const) */		alt_path = kmalloc(path_length + 1, -1);
11190: /* MUTANT (negate) */		if(!(!alt_path))
11191: /* MUTANT (rep_const) */			return 0;
11191: /* MUTANT (rep_const) */			return 1;
11191: /* MUTANT (rep_const) */			return ((-1)+1);
11191: /* MUTANT (rep_const) */			return ((-1)-1);
11192: /* MUTANT (del_stmt) */ /* 		mystrcpy(alt_path, path); */ 
11193: /* MUTANT (rep_const) */		for(i = path_length-0;
11193: /* MUTANT (rep_const) */		for(i = path_length--1;
11193: /* MUTANT (rep_const) */		for(i = path_length-((1)+1);
11194: /* MUTANT (del_stmt) */ /* 			i >= 0 && yaffsfs_IsPathDivider(alt_path[i]); */ 
11194: /* MUTANT (rep_op) */			i <= 0 && yaffsfs_IsPathDivider(alt_path[i]);
11194: /* MUTANT (rep_op) */			i < 0 && yaffsfs_IsPathDivider(alt_path[i]);
11194: /* MUTANT (rep_op) */			i > 0 && yaffsfs_IsPathDivider(alt_path[i]);
11194: /* MUTANT (rep_op) */			i == 0 && yaffsfs_IsPathDivider(alt_path[i]);
11194: /* MUTANT (rep_op) */			i != 0 && yaffsfs_IsPathDivider(alt_path[i]);
11194: /* MUTANT (rep_op) */			i >= 0 || yaffsfs_IsPathDivider(alt_path[i]);
11194: /* MUTANT (rep_const) */			i >= 1 && yaffsfs_IsPathDivider(alt_path[i]);
11194: /* MUTANT (rep_const) */			i >= -1 && yaffsfs_IsPathDivider(alt_path[i]);
11195: /* MUTANT (rep_op) */			i++)
11196: /* MUTANT (rep_const) */			alt_path[i] = (YCHAR) 1;
11196: /* MUTANT (rep_const) */			alt_path[i] = (YCHAR) -1;
11199: /* MUTANT (del_stmt) */ /* 	return 0; */ 
11199: /* MUTANT (rep_const) */	return 1;
11199: /* MUTANT (rep_const) */	return -1;
11214: /* MUTANT (del_stmt) */ /* 	struct list_head *cfg; */ 
11215: /* MUTANT (del_stmt) */ /* 	const YCHAR *leftOver; */ 
11216: /* MUTANT (del_stmt) */ /* 	const YCHAR *p; */ 
11217: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *retval = NULL; */ 
11218: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev = NULL; */ 
11219: /* MUTANT (del_stmt) */ /* 	int thisMatchLength; */ 
11220: /* MUTANT (del_stmt) */ /* 	int longestMatch = -1; */ 
11220: /* MUTANT (rep_const) */	int longestMatch = 0;
11220: /* MUTANT (rep_const) */	int longestMatch = 1;
11220: /* MUTANT (rep_const) */	int longestMatch = ((-1)+1);
11220: /* MUTANT (rep_const) */	int longestMatch = ((-1)-1);
11221: /* MUTANT (del_stmt) */ /* 	int matching; */ 
11229: /* MUTANT (del_stmt) */ /* 		dev = list_entry(cfg, struct yaffs_dev, dev_list); */ 
11230: /* MUTANT (del_stmt) */ /* 		leftOver = path; */ 
11231: /* MUTANT (del_stmt) */ /* 		p = dev->param.name; */ 
11232: /* MUTANT (del_stmt) */ /* 		thisMatchLength = 0; */ 
11232: /* MUTANT (rep_const) */		thisMatchLength = 1;
11232: /* MUTANT (rep_const) */		thisMatchLength = -1;
11233: /* MUTANT (del_stmt) */ /* 		matching = 1; */ 
11233: /* MUTANT (rep_const) */		matching = 0;
11233: /* MUTANT (rep_const) */		matching = -1;
11233: /* MUTANT (rep_const) */		matching = ((1)+1);
11236: /* MUTANT (rep_op) */		while(matching || *p && *leftOver){
11236: /* MUTANT (rep_op) */		while(matching && *p || *leftOver){
11236: /* MUTANT (negate) */		while(!(matching && *p && *leftOver)){
11238: /* MUTANT (negate) */			while(!(yaffsfs_IsPathDivider(*p)))
11239: /* MUTANT (rep_op) */			      p--;
11242: /* MUTANT (negate) */			while(!(yaffsfs_IsPathDivider(*leftOver)))
11243: /* MUTANT (rep_op) */		              leftOver--;
11246: /* MUTANT (rep_op) */		        while(matching ||
11247: /* MUTANT (rep_op) */		              *p || !yaffsfs_IsPathDivider(*p) &&
11247: /* MUTANT (rep_op) */		              *p && !yaffsfs_IsPathDivider(*p) ||
11248: /* MUTANT (rep_op) */		              *leftOver || !yaffsfs_IsPathDivider(*leftOver)){
11249: /* MUTANT (negate) */			      	if(!(yaffsfs_Match(*p,*leftOver))){
11250: /* MUTANT (del_stmt) */ /* 			      		p++; */ 
11250: /* MUTANT (rep_op) */			      		p--;
11251: /* MUTANT (del_stmt) */ /* 			      		leftOver++; */ 
11251: /* MUTANT (rep_op) */			      		leftOver--;
11252: /* MUTANT (del_stmt) */ /* 			      		thisMatchLength++; */ 
11252: /* MUTANT (rep_op) */			      		thisMatchLength--;
11254: /* MUTANT (del_stmt) */ /* 					matching = 0; */ 
11254: /* MUTANT (rep_const) */					matching = 1;
11254: /* MUTANT (rep_const) */					matching = -1;
11260: /* MUTANT (negate) */		while(!(yaffsfs_IsPathDivider(*leftOver)))
11261: /* MUTANT (rep_op) */	              leftOver--;
11264: /* MUTANT (negate) */		while(!(yaffsfs_IsPathDivider(*p)))
11265: /* MUTANT (rep_op) */	              p--;
11268: /* MUTANT (negate) */		if(!(*p))
11269: /* MUTANT (rep_const) */			matching = 1;
11269: /* MUTANT (rep_const) */			matching = -1;
11271: /* MUTANT (rep_op) */		if( matching || (thisMatchLength > longestMatch))
11271: /* MUTANT (rep_op) */		if( matching && (thisMatchLength <= longestMatch))
11271: /* MUTANT (rep_op) */		if( matching && (thisMatchLength < longestMatch))
11271: /* MUTANT (rep_op) */		if( matching && (thisMatchLength >= longestMatch))
11271: /* MUTANT (rep_op) */		if( matching && (thisMatchLength == longestMatch))
11271: /* MUTANT (rep_op) */		if( matching && (thisMatchLength != longestMatch))
11271: /* MUTANT (negate) */		if(!( matching && (thisMatchLength > longestMatch)))
11274: /* MUTANT (del_stmt) */ /* 			*restOfPath = (YCHAR *)leftOver; */ 
11275: /* MUTANT (del_stmt) */ /* 			retval = dev; */ 
11276: /* MUTANT (del_stmt) */ /* 			longestMatch = thisMatchLength; */ 
11285: /* MUTANT (del_stmt) */ /* 	int n=0; */ 
11285: /* MUTANT (rep_const) */	int n=1;
11285: /* MUTANT (rep_const) */	int n=-1;
11286: /* MUTANT (del_stmt) */ /* 	int divs=0; */ 
11286: /* MUTANT (rep_const) */	int divs=1;
11286: /* MUTANT (rep_const) */	int divs=-1;
11287: /* MUTANT (rep_op) */	while(*path || n < YAFFS_MAX_NAME_LENGTH && divs < 100){
11287: /* MUTANT (rep_op) */	while(*path && n <= YAFFS_MAX_NAME_LENGTH && divs < 100){
11287: /* MUTANT (rep_op) */	while(*path && n > YAFFS_MAX_NAME_LENGTH && divs < 100){
11287: /* MUTANT (rep_op) */	while(*path && n >= YAFFS_MAX_NAME_LENGTH && divs < 100){
11287: /* MUTANT (rep_op) */	while(*path && n == YAFFS_MAX_NAME_LENGTH && divs < 100){
11287: /* MUTANT (rep_op) */	while(*path && n != YAFFS_MAX_NAME_LENGTH && divs < 100){
11287: /* MUTANT (rep_op) */	while(*path && n < YAFFS_MAX_NAME_LENGTH || divs < 100){
11287: /* MUTANT (rep_op) */	while(*path && n < YAFFS_MAX_NAME_LENGTH && divs <= 100){
11287: /* MUTANT (rep_op) */	while(*path && n < YAFFS_MAX_NAME_LENGTH && divs > 100){
11287: /* MUTANT (rep_op) */	while(*path && n < YAFFS_MAX_NAME_LENGTH && divs >= 100){
11287: /* MUTANT (rep_op) */	while(*path && n < YAFFS_MAX_NAME_LENGTH && divs == 100){
11287: /* MUTANT (rep_op) */	while(*path && n < YAFFS_MAX_NAME_LENGTH && divs != 100){
11287: /* MUTANT (rep_const) */	while(*path && n < YAFFS_MAX_NAME_LENGTH && divs < 0){
11287: /* MUTANT (rep_const) */	while(*path && n < YAFFS_MAX_NAME_LENGTH && divs < 1){
11287: /* MUTANT (rep_const) */	while(*path && n < YAFFS_MAX_NAME_LENGTH && divs < -1){
11287: /* MUTANT (rep_const) */	while(*path && n < YAFFS_MAX_NAME_LENGTH && divs < ((100)+1)){
11287: /* MUTANT (rep_const) */	while(*path && n < YAFFS_MAX_NAME_LENGTH && divs < ((100)-1)){
11287: /* MUTANT (negate) */	while(!(*path && n < YAFFS_MAX_NAME_LENGTH && divs < 100)){
11288: /* MUTANT (negate) */		if(!(yaffsfs_IsPathDivider(*path))){
11289: /* MUTANT (del_stmt) */ /* 			n=0; */ 
11289: /* MUTANT (rep_const) */			n=1;
11289: /* MUTANT (rep_const) */			n=-1;
11290: /* MUTANT (del_stmt) */ /* 			divs++; */ 
11290: /* MUTANT (rep_op) */			divs--;
11292: /* MUTANT (rep_op) */			n--;
11293: /* MUTANT (del_stmt) */ /* 		path++; */ 
11293: /* MUTANT (rep_op) */		path--;
11296: /* MUTANT (rep_const) */	return (*path) ? 0 : 0;
11296: /* MUTANT (rep_const) */	return (*path) ? 1 : 0;
11296: /* MUTANT (rep_const) */	return (*path) ? ((-1)+1) : 0;
11296: /* MUTANT (rep_const) */	return (*path) ? ((-1)-1) : 0;
11296: /* MUTANT (rep_const) */	return (*path) ? -1 : 1;
11296: /* MUTANT (rep_const) */	return (*path) ? -1 : -1;
11302: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev; */ 
11303: /* MUTANT (del_stmt) */ /* 	YCHAR *restOfPath=NULL; */ 
11304: /* MUTANT (del_stmt) */ /* 	dev = yaffsfs_FindDevice(path,&restOfPath); */ 
11305: /* MUTANT (rep_op) */	if(dev || restOfPath && *restOfPath)
11305: /* MUTANT (rep_op) */	if(dev && restOfPath || *restOfPath)
11305: /* MUTANT (negate) */	if(!(dev && restOfPath && *restOfPath))
11307: /* MUTANT (del_stmt) */ /* 	return dev; */ 
11313: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev; */ 
11315: /* MUTANT (del_stmt) */ /* 	dev= yaffsfs_FindDevice(path,restOfPath); */ 
11316: /* MUTANT (rep_op) */	if(dev || dev->is_mounted){
11316: /* MUTANT (negate) */	if(!(dev && dev->is_mounted)){
11317: /* MUTANT (del_stmt) */ /* 		return dev->root_dir; */ 
11326: /* MUTANT (negate) */	if(!(obj))
11329: /* MUTANT (rep_op) */	while(obj || obj->variant_type == YAFFS_OBJECT_TYPE_SYMLINK){
11329: /* MUTANT (rep_op) */	while(obj && obj->variant_type != YAFFS_OBJECT_TYPE_SYMLINK){
11329: /* MUTANT (negate) */	while(!(obj && obj->variant_type == YAFFS_OBJECT_TYPE_SYMLINK)){
11330: /* MUTANT (del_stmt) */ /* 		YCHAR *alias = obj->variant.symlink_variant.alias; */ 
11332: /* MUTANT (negate) */		if(!(yaffsfs_IsPathDivider(*alias)))
11334: /* MUTANT (rep_op) */			obj = yaffsfs_FindObject(NULL,alias,symDepth--,
11335: /* MUTANT (rep_const) */						0,NULL,NULL,loop);
11335: /* MUTANT (rep_const) */						-1,NULL,NULL,loop);
11335: /* MUTANT (rep_const) */						((1)+1),NULL,NULL,loop);
11338: /* MUTANT (rep_op) */			obj = yaffsfs_FindObject(obj->parent,alias,symDepth--,
11339: /* MUTANT (rep_const) */						0,NULL,NULL,loop);
11339: /* MUTANT (rep_const) */						-1,NULL,NULL,loop);
11339: /* MUTANT (rep_const) */						((1)+1),NULL,NULL,loop);
11355: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *dir; */ 
11356: /* MUTANT (del_stmt) */ /* 	YCHAR *restOfPath; */ 
11357: /* MUTANT (del_stmt) */ /* 	YCHAR str[YAFFS_MAX_NAME_LENGTH+1]; */ 
11357: /* MUTANT (rep_op) */	YCHAR str[YAFFS_MAX_NAME_LENGTH-1];
11357: /* MUTANT (rep_op) */	YCHAR str[YAFFS_MAX_NAME_LENGTH*1];
11357: /* MUTANT (rep_op) */	YCHAR str[YAFFS_MAX_NAME_LENGTH%1];
11357: /* MUTANT (rep_const) */	YCHAR str[YAFFS_MAX_NAME_LENGTH+0];
11357: /* MUTANT (rep_const) */	YCHAR str[YAFFS_MAX_NAME_LENGTH+-1];
11357: /* MUTANT (rep_const) */	YCHAR str[YAFFS_MAX_NAME_LENGTH+((1)+1)];
11358: /* MUTANT (del_stmt) */ /* 	int i; */ 
11360: /* MUTANT (rep_op) */	if(symDepth <= YAFFSFS_MAX_SYMLINK_DEREFERENCES){
11360: /* MUTANT (rep_op) */	if(symDepth < YAFFSFS_MAX_SYMLINK_DEREFERENCES){
11360: /* MUTANT (rep_op) */	if(symDepth >= YAFFSFS_MAX_SYMLINK_DEREFERENCES){
11360: /* MUTANT (rep_op) */	if(symDepth == YAFFSFS_MAX_SYMLINK_DEREFERENCES){
11360: /* MUTANT (rep_op) */	if(symDepth != YAFFSFS_MAX_SYMLINK_DEREFERENCES){
11360: /* MUTANT (negate) */	if(!(symDepth > YAFFSFS_MAX_SYMLINK_DEREFERENCES)){
11361: /* MUTANT (negate) */		if(!(loop))
11362: /* MUTANT (rep_const) */			*loop = 0;
11362: /* MUTANT (rep_const) */			*loop = -1;
11362: /* MUTANT (rep_const) */			*loop = ((1)+1);
11363: /* MUTANT (del_stmt) */ /* 		return NULL; */ 
11366: /* MUTANT (negate) */	if(!(startDir)){
11367: /* MUTANT (del_stmt) */ /* 		dir = startDir; */ 
11368: /* MUTANT (del_stmt) */ /* 		restOfPath = (YCHAR *)path; */ 
11374: /* MUTANT (negate) */	while(!(dir)){
11380: /* MUTANT (negate) */		while(!(yaffsfs_IsPathDivider(*restOfPath)))
11381: /* MUTANT (rep_op) */			restOfPath--; /* get rid of '/' */
11383: /* MUTANT (del_stmt) */ /* 		*name = restOfPath; */ 
11384: /* MUTANT (del_stmt) */ /* 		i = 0; */ 
11384: /* MUTANT (rep_const) */		i = 1;
11384: /* MUTANT (rep_const) */		i = -1;
11386: /* MUTANT (rep_op) */		while(*restOfPath || !yaffsfs_IsPathDivider(*restOfPath)){
11386: /* MUTANT (negate) */		while(!(*restOfPath && !yaffsfs_IsPathDivider(*restOfPath))){
11387: /* MUTANT (rep_op) */			if (i <= YAFFS_MAX_NAME_LENGTH){
11387: /* MUTANT (rep_op) */			if (i > YAFFS_MAX_NAME_LENGTH){
11387: /* MUTANT (rep_op) */			if (i >= YAFFS_MAX_NAME_LENGTH){
11387: /* MUTANT (rep_op) */			if (i == YAFFS_MAX_NAME_LENGTH){
11387: /* MUTANT (rep_op) */			if (i != YAFFS_MAX_NAME_LENGTH){
11387: /* MUTANT (negate) */			if(! (i < YAFFS_MAX_NAME_LENGTH)){
11388: /* MUTANT (del_stmt) */ /* 				str[i] = *restOfPath; */ 
11389: /* MUTANT (del_stmt) */ /* 				str[i+1] = '\0'; */ 
11389: /* MUTANT (rep_op) */				str[i-1] = '\0';
11389: /* MUTANT (rep_op) */				str[i*1] = '\0';
11389: /* MUTANT (rep_op) */				str[i%1] = '\0';
11389: /* MUTANT (rep_const) */				str[i+0] = '\0';
11389: /* MUTANT (rep_const) */				str[i+-1] = '\0';
11389: /* MUTANT (rep_const) */				str[i+((1)+1)] = '\0';
11389: /* MUTANT (rep_const) */				str[i+1] = '\1';
11389: /* MUTANT (rep_const) */				str[i+1] = '\-1';
11390: /* MUTANT (del_stmt) */ /* 				i++; */ 
11390: /* MUTANT (rep_op) */				i--;
11392: /* MUTANT (rep_op) */			restOfPath--;
11395: /* MUTANT (negate) */		if(!(!*restOfPath))
11399: /* MUTANT (rep_op) */			if(mystrcmp(str,_Y(".")) != 0){
11399: /* MUTANT (rep_const) */			if(mystrcmp(str,_Y(".")) == 1){
11399: /* MUTANT (rep_const) */			if(mystrcmp(str,_Y(".")) == -1){
11399: /* MUTANT (negate) */			if(!(mystrcmp(str,_Y(".")) == 0)){
11401: /* MUTANT (rep_op) */			} else if(mystrcmp(str,_Y("..")) != 0) {
11401: /* MUTANT (rep_const) */			} else if(mystrcmp(str,_Y("..")) == 1) {
11401: /* MUTANT (rep_const) */			} else if(mystrcmp(str,_Y("..")) == -1) {
11401: /* MUTANT (negate) */			} else if(!(mystrcmp(str,_Y("..")) == 0)) {
11402: /* MUTANT (del_stmt) */ /* 				dir = dir->parent; */ 
11404: /* MUTANT (del_stmt) */ /* 				dir = yaffs_find_by_name(dir,str); */ 
11406: /* MUTANT (del_stmt) */ /* 				dir = yaffsfs_FollowLink(dir,symDepth,loop); */ 
11408: /* MUTANT (rep_op) */				if(dir || dir->variant_type !=
11408: /* MUTANT (rep_op) */				if(dir && dir->variant_type ==
11410: /* MUTANT (negate) */					if(!(notDir))
11411: /* MUTANT (rep_const) */						*notDir = 0;
11411: /* MUTANT (rep_const) */						*notDir = -1;
11411: /* MUTANT (rep_const) */						*notDir = ((1)+1);
11412: /* MUTANT (del_stmt) */ /* 					dir = NULL; */ 
11429: /* MUTANT (del_stmt) */ /* 	return yaffsfs_DoFindDirectory(relDir,path,name,symDepth,notDir,loop); */ 
11439: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *dir; */ 
11440: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj; */ 
11441: /* MUTANT (del_stmt) */ /* 	YCHAR *name; */ 
11443: /* MUTANT (del_stmt) */ /* 	dir = yaffsfs_FindDirectory(relDir,path,&name,symDepth,notDir,loop); */ 
11445: /* MUTANT (negate) */	if(!(dirOut))
11448: /* MUTANT (rep_op) */	if(dir || *name)
11448: /* MUTANT (negate) */	if(!(dir && *name))
11453: /* MUTANT (negate) */	if(!(getEquiv))
11456: /* MUTANT (del_stmt) */ /* 	return obj; */ 
11466: /* MUTANT (del_stmt) */ /* 	int newHandleNumber = -1; */ 
11466: /* MUTANT (rep_const) */	int newHandleNumber = 0;
11466: /* MUTANT (rep_const) */	int newHandleNumber = 1;
11466: /* MUTANT (rep_const) */	int newHandleNumber = ((-1)+1);
11466: /* MUTANT (rep_const) */	int newHandleNumber = ((-1)-1);
11467: /* MUTANT (del_stmt) */ /* 	yaffsfs_FileDes *existingFD = NULL; */ 
11468: /* MUTANT (del_stmt) */ /* 	yaffsfs_Handle *existingHandle = NULL; */ 
11469: /* MUTANT (del_stmt) */ /* 	yaffsfs_Handle *newHandle = NULL; */ 
11471: /* MUTANT (del_stmt) */ /* 	yaffsfs_Lock(); */ 
11472: /* MUTANT (del_stmt) */ /* 	existingHandle = yaffsfs_HandleToPointer(handle); */ 
11473: /* MUTANT (del_stmt) */ /* 	existingFD = yaffsfs_HandleToFileDes(handle); */ 
11474: /* MUTANT (negate) */	if(!(existingFD))
11476: /* MUTANT (negate) */	if(!(newHandle)){
11477: /* MUTANT (del_stmt) */ /* 		newHandle->fdId = existingHandle->fdId; */ 
11478: /* MUTANT (del_stmt) */ /* 		existingFD->handleCount++; */ 
11478: /* MUTANT (rep_op) */		existingFD->handleCount--;
11483: /* MUTANT (negate) */	if(!(!existingFD))
11485: /* MUTANT (negate) */	else if(! (!newHandle))
11488: /* MUTANT (del_stmt) */ /* 	return newHandleNumber; */ 
11496: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj = NULL; */ 
11497: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *dir = NULL; */ 
11498: /* MUTANT (del_stmt) */ /* 	YCHAR *name; */ 
11499: /* MUTANT (del_stmt) */ /* 	int handle = -1; */ 
11499: /* MUTANT (rep_const) */	int handle = 0;
11499: /* MUTANT (rep_const) */	int handle = 1;
11499: /* MUTANT (rep_const) */	int handle = ((-1)+1);
11499: /* MUTANT (rep_const) */	int handle = ((-1)-1);
11500: /* MUTANT (del_stmt) */ /* 	yaffsfs_FileDes *fd = NULL; */ 
11501: /* MUTANT (del_stmt) */ /* 	int openDenied = 0; */ 
11501: /* MUTANT (rep_const) */	int openDenied = 1;
11501: /* MUTANT (rep_const) */	int openDenied = -1;
11502: /* MUTANT (del_stmt) */ /* 	int symDepth = 0; */ 
11502: /* MUTANT (rep_const) */	int symDepth = 1;
11502: /* MUTANT (rep_const) */	int symDepth = -1;
11503: /* MUTANT (del_stmt) */ /* 	int errorReported = 0; */ 
11503: /* MUTANT (rep_const) */	int errorReported = 1;
11503: /* MUTANT (rep_const) */	int errorReported = -1;
11504: /* MUTANT (del_stmt) */ /* 	int rwflags = oflag & ( O_RDWR | O_RDONLY | O_WRONLY); */ 
11504: /* MUTANT (rep_op) */	int rwflags = oflag & ( O_RDWR & O_RDONLY | O_WRONLY);
11504: /* MUTANT (rep_op) */	int rwflags = oflag & ( O_RDWR | O_RDONLY & O_WRONLY);
11505: /* MUTANT (del_stmt) */ /* 	u8 shareRead = (sharing & YAFFS_SHARE_READ) ?  1 : 0; */ 
11505: /* MUTANT (rep_const) */	u8 shareRead = (sharing & YAFFS_SHARE_READ) ?  0 : 0;
11505: /* MUTANT (rep_const) */	u8 shareRead = (sharing & YAFFS_SHARE_READ) ?  -1 : 0;
11505: /* MUTANT (rep_const) */	u8 shareRead = (sharing & YAFFS_SHARE_READ) ?  ((1)+1) : 0;
11505: /* MUTANT (rep_const) */	u8 shareRead = (sharing & YAFFS_SHARE_READ) ?  1 : 1;
11505: /* MUTANT (rep_const) */	u8 shareRead = (sharing & YAFFS_SHARE_READ) ?  1 : -1;
11506: /* MUTANT (del_stmt) */ /* 	u8 shareWrite = (sharing & YAFFS_SHARE_WRITE) ? 1 : 0; */ 
11506: /* MUTANT (rep_const) */	u8 shareWrite = (sharing & YAFFS_SHARE_WRITE) ? 0 : 0;
11506: /* MUTANT (rep_const) */	u8 shareWrite = (sharing & YAFFS_SHARE_WRITE) ? -1 : 0;
11506: /* MUTANT (rep_const) */	u8 shareWrite = (sharing & YAFFS_SHARE_WRITE) ? ((1)+1) : 0;
11506: /* MUTANT (rep_const) */	u8 shareWrite = (sharing & YAFFS_SHARE_WRITE) ? 1 : 1;
11506: /* MUTANT (rep_const) */	u8 shareWrite = (sharing & YAFFS_SHARE_WRITE) ? 1 : -1;
11507: /* MUTANT (del_stmt) */ /* 	u8 sharedReadAllowed; */ 
11508: /* MUTANT (del_stmt) */ /* 	u8 sharedWriteAllowed; */ 
11509: /* MUTANT (del_stmt) */ /* 	u8 alreadyReading; */ 
11510: /* MUTANT (del_stmt) */ /* 	u8 alreadyWriting; */ 
11511: /* MUTANT (del_stmt) */ /* 	u8 readRequested; */ 
11512: /* MUTANT (del_stmt) */ /* 	u8 writeRequested; */ 
11513: /* MUTANT (del_stmt) */ /* 	int notDir = 0; */ 
11513: /* MUTANT (rep_const) */	int notDir = 1;
11513: /* MUTANT (rep_const) */	int notDir = -1;
11514: /* MUTANT (del_stmt) */ /* 	int loop = 0; */ 
11514: /* MUTANT (rep_const) */	int loop = 1;
11514: /* MUTANT (rep_const) */	int loop = -1;
11516: /* MUTANT (negate) */	if(!(!path)) {
11517: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EFAULT); */ 
11518: /* MUTANT (del_stmt) */ /* 		return -1; */ 
11518: /* MUTANT (rep_const) */		return 0;
11518: /* MUTANT (rep_const) */		return 1;
11518: /* MUTANT (rep_const) */		return ((-1)+1);
11518: /* MUTANT (rep_const) */		return ((-1)-1);
11521: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) <= 0){
11521: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) > 0){
11521: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) >= 0){
11521: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) == 0){
11521: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) != 0){
11521: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < 1){
11521: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < -1){
11521: /* MUTANT (negate) */	if(!(yaffsfs_CheckPath(path) < 0)){
11522: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-ENAMETOOLONG); */ 
11523: /* MUTANT (del_stmt) */ /* 		return -1; */ 
11523: /* MUTANT (rep_const) */		return 0;
11523: /* MUTANT (rep_const) */		return 1;
11523: /* MUTANT (rep_const) */		return ((-1)+1);
11523: /* MUTANT (rep_const) */		return ((-1)-1);
11527: /* MUTANT (negate) */	if(!(!(oflag & O_CREAT)))
11531: /* MUTANT (negate) */	if(!( (oflag & O_CREAT) & (oflag & O_EXCL)))
11538: /* MUTANT (del_stmt) */ /* 	readRequested = (rwflags == O_RDWR || rwflags == O_RDONLY) ? 1 : 0; */ 
11538: /* MUTANT (rep_op) */	readRequested = (rwflags != O_RDWR || rwflags == O_RDONLY) ? 1 : 0;
11538: /* MUTANT (rep_op) */	readRequested = (rwflags == O_RDWR && rwflags == O_RDONLY) ? 1 : 0;
11538: /* MUTANT (rep_op) */	readRequested = (rwflags == O_RDWR || rwflags != O_RDONLY) ? 1 : 0;
11538: /* MUTANT (rep_const) */	readRequested = (rwflags == O_RDWR || rwflags == O_RDONLY) ? 0 : 0;
11538: /* MUTANT (rep_const) */	readRequested = (rwflags == O_RDWR || rwflags == O_RDONLY) ? -1 : 0;
11538: /* MUTANT (rep_const) */	readRequested = (rwflags == O_RDWR || rwflags == O_RDONLY) ? ((1)+1) : 0;
11538: /* MUTANT (rep_const) */	readRequested = (rwflags == O_RDWR || rwflags == O_RDONLY) ? 1 : 1;
11538: /* MUTANT (rep_const) */	readRequested = (rwflags == O_RDWR || rwflags == O_RDONLY) ? 1 : -1;
11539: /* MUTANT (del_stmt) */ /* 	writeRequested = (rwflags == O_RDWR || rwflags == O_WRONLY) ? 1 : 0; */ 
11539: /* MUTANT (rep_op) */	writeRequested = (rwflags != O_RDWR || rwflags == O_WRONLY) ? 1 : 0;
11539: /* MUTANT (rep_op) */	writeRequested = (rwflags == O_RDWR && rwflags == O_WRONLY) ? 1 : 0;
11539: /* MUTANT (rep_op) */	writeRequested = (rwflags == O_RDWR || rwflags != O_WRONLY) ? 1 : 0;
11539: /* MUTANT (rep_const) */	writeRequested = (rwflags == O_RDWR || rwflags == O_WRONLY) ? 0 : 0;
11539: /* MUTANT (rep_const) */	writeRequested = (rwflags == O_RDWR || rwflags == O_WRONLY) ? -1 : 0;
11539: /* MUTANT (rep_const) */	writeRequested = (rwflags == O_RDWR || rwflags == O_WRONLY) ? ((1)+1) : 0;
11539: /* MUTANT (rep_const) */	writeRequested = (rwflags == O_RDWR || rwflags == O_WRONLY) ? 1 : 1;
11539: /* MUTANT (rep_const) */	writeRequested = (rwflags == O_RDWR || rwflags == O_WRONLY) ? 1 : -1;
11541: /* MUTANT (del_stmt) */ /* 	yaffsfs_Lock(); */ 
11543: /* MUTANT (del_stmt) */ /* 	handle = yaffsfs_NewHandleAndFileDes(); */ 
11545: /* MUTANT (rep_op) */	if(handle <= 0){
11545: /* MUTANT (rep_op) */	if(handle > 0){
11545: /* MUTANT (rep_op) */	if(handle >= 0){
11545: /* MUTANT (rep_op) */	if(handle == 0){
11545: /* MUTANT (rep_op) */	if(handle != 0){
11545: /* MUTANT (rep_const) */	if(handle < 1){
11545: /* MUTANT (rep_const) */	if(handle < -1){
11545: /* MUTANT (negate) */	if(!(handle < 0)){
11546: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-ENFILE); */ 
11547: /* MUTANT (del_stmt) */ /* 		errorReported = 1; */ 
11547: /* MUTANT (rep_const) */		errorReported = 0;
11547: /* MUTANT (rep_const) */		errorReported = -1;
11547: /* MUTANT (rep_const) */		errorReported = ((1)+1);
11550: /* MUTANT (del_stmt) */ /* 		fd = yaffsfs_HandleToFileDes(handle); */ 
11553: /* MUTANT (del_stmt) */ /* 		obj = yaffsfs_FindObject(NULL,path,0,1,NULL,NULL,NULL); */ 
11553: /* MUTANT (rep_const) */		obj = yaffsfs_FindObject(NULL,path,1,1,NULL,NULL,NULL);
11553: /* MUTANT (rep_const) */		obj = yaffsfs_FindObject(NULL,path,-1,1,NULL,NULL,NULL);
11553: /* MUTANT (rep_const) */		obj = yaffsfs_FindObject(NULL,path,0,0,NULL,NULL,NULL);
11553: /* MUTANT (rep_const) */		obj = yaffsfs_FindObject(NULL,path,0,-1,NULL,NULL,NULL);
11553: /* MUTANT (rep_const) */		obj = yaffsfs_FindObject(NULL,path,0,((1)+1),NULL,NULL,NULL);
11555: /* MUTANT (del_stmt) */ /* 		obj = yaffsfs_FollowLink(obj,symDepth++,&loop); */ 
11555: /* MUTANT (rep_op) */		obj = yaffsfs_FollowLink(obj,symDepth--,&loop);
11557: /* MUTANT (rep_op) */		if(obj ||
11558: /* MUTANT (rep_op) */			obj->variant_type == YAFFS_OBJECT_TYPE_FILE &&
11558: /* MUTANT (rep_op) */			obj->variant_type != YAFFS_OBJECT_TYPE_FILE ||
11559: /* MUTANT (rep_op) */			obj->variant_type == YAFFS_OBJECT_TYPE_DIRECTORY)
11563: /* MUTANT (negate) */		if(!(obj)){
11568: /* MUTANT (rep_op) */			if(obj->variant_type != YAFFS_OBJECT_TYPE_DIRECTORY){
11568: /* MUTANT (negate) */			if(!(obj->variant_type == YAFFS_OBJECT_TYPE_DIRECTORY)){
11569: /* MUTANT (del_stmt) */ /* 				openDenied = 1; */ 
11569: /* MUTANT (rep_const) */				openDenied = 0;
11569: /* MUTANT (rep_const) */				openDenied = -1;
11569: /* MUTANT (rep_const) */				openDenied = ((1)+1);
11570: /* MUTANT (del_stmt) */ /* 				yaffsfs_SetError(-EISDIR); */ 
11571: /* MUTANT (del_stmt) */ /* 				errorReported = 1; */ 
11571: /* MUTANT (rep_const) */				errorReported = 0;
11571: /* MUTANT (rep_const) */				errorReported = -1;
11571: /* MUTANT (rep_const) */				errorReported = ((1)+1);
11577: /* MUTANT (rep_op) */			if(!errorReported || (oflag & O_EXCL) && (oflag & O_CREAT)){
11577: /* MUTANT (rep_op) */			if(!errorReported && (oflag & O_EXCL) || (oflag & O_CREAT)){
11577: /* MUTANT (negate) */			if(!(!errorReported && (oflag & O_EXCL) && (oflag & O_CREAT))){
11578: /* MUTANT (del_stmt) */ /* 				openDenied = 1; */ 
11578: /* MUTANT (rep_const) */				openDenied = 0;
11578: /* MUTANT (rep_const) */				openDenied = -1;
11578: /* MUTANT (rep_const) */				openDenied = ((1)+1);
11579: /* MUTANT (del_stmt) */ /* 				yaffsfs_SetError(-EEXIST); */ 
11580: /* MUTANT (del_stmt) */ /* 				errorReported = 1; */ 
11580: /* MUTANT (rep_const) */				errorReported = 0;
11580: /* MUTANT (rep_const) */				errorReported = -1;
11580: /* MUTANT (rep_const) */				errorReported = ((1)+1);
11584: /* MUTANT (rep_op) */			if( readRequested || !(obj->yst_mode & S_IREAD))
11584: /* MUTANT (negate) */			if(!( readRequested && !(obj->yst_mode & S_IREAD)))
11585: /* MUTANT (rep_const) */				openDenied = 0;
11585: /* MUTANT (rep_const) */				openDenied = -1;
11585: /* MUTANT (rep_const) */				openDenied = ((1)+1);
11587: /* MUTANT (rep_op) */			if( writeRequested || !(obj->yst_mode & S_IWRITE))
11587: /* MUTANT (negate) */			if(!( writeRequested && !(obj->yst_mode & S_IWRITE)))
11588: /* MUTANT (rep_const) */				openDenied = 0;
11588: /* MUTANT (rep_const) */				openDenied = -1;
11588: /* MUTANT (rep_const) */				openDenied = ((1)+1);
11590: /* MUTANT (rep_op) */			if( !errorReported || writeRequested &&
11590: /* MUTANT (rep_op) */			if( !errorReported && writeRequested ||
11592: /* MUTANT (del_stmt) */ /* 				openDenied = 1; */ 
11592: /* MUTANT (rep_const) */				openDenied = 0;
11592: /* MUTANT (rep_const) */				openDenied = -1;
11592: /* MUTANT (rep_const) */				openDenied = ((1)+1);
11593: /* MUTANT (del_stmt) */ /* 				yaffsfs_SetError(-EROFS); */ 
11594: /* MUTANT (del_stmt) */ /* 				errorReported = 1; */ 
11594: /* MUTANT (rep_const) */				errorReported = 0;
11594: /* MUTANT (rep_const) */				errorReported = -1;
11594: /* MUTANT (rep_const) */				errorReported = ((1)+1);
11597: /* MUTANT (rep_op) */			if(openDenied || !errorReported ) {
11597: /* MUTANT (negate) */			if(!(openDenied && !errorReported )) {
11599: /* MUTANT (del_stmt) */ /* 				yaffsfs_SetError(-EACCES); */ 
11600: /* MUTANT (del_stmt) */ /* 				errorReported = 1; */ 
11600: /* MUTANT (rep_const) */				errorReported = 0;
11600: /* MUTANT (rep_const) */				errorReported = -1;
11600: /* MUTANT (rep_const) */				errorReported = ((1)+1);
11604: /* MUTANT (negate) */			if(!(!openDenied)){
11605: /* MUTANT (del_stmt) */ /* 				yaffsfs_FileDes *fdx; */ 
11606: /* MUTANT (del_stmt) */ /* 				int i; */ 
11608: /* MUTANT (del_stmt) */ /* 				sharedReadAllowed = 1; */ 
11608: /* MUTANT (rep_const) */				sharedReadAllowed = 0;
11608: /* MUTANT (rep_const) */				sharedReadAllowed = -1;
11608: /* MUTANT (rep_const) */				sharedReadAllowed = ((1)+1);
11609: /* MUTANT (del_stmt) */ /* 				sharedWriteAllowed = 1; */ 
11609: /* MUTANT (rep_const) */				sharedWriteAllowed = 0;
11609: /* MUTANT (rep_const) */				sharedWriteAllowed = -1;
11609: /* MUTANT (rep_const) */				sharedWriteAllowed = ((1)+1);
11610: /* MUTANT (del_stmt) */ /* 				alreadyReading = 0; */ 
11610: /* MUTANT (rep_const) */				alreadyReading = 1;
11610: /* MUTANT (rep_const) */				alreadyReading = -1;
11611: /* MUTANT (del_stmt) */ /* 				alreadyWriting = 0; */ 
11611: /* MUTANT (rep_const) */				alreadyWriting = 1;
11611: /* MUTANT (rep_const) */				alreadyWriting = -1;
11612: /* MUTANT (rep_op) */				for( i = 0; i <= YAFFSFS_N_HANDLES; i++){
11612: /* MUTANT (rep_op) */				for( i = 0; i > YAFFSFS_N_HANDLES; i++){
11612: /* MUTANT (rep_op) */				for( i = 0; i >= YAFFSFS_N_HANDLES; i++){
11612: /* MUTANT (rep_op) */				for( i = 0; i == YAFFSFS_N_HANDLES; i++){
11612: /* MUTANT (rep_op) */				for( i = 0; i != YAFFSFS_N_HANDLES; i++){
11612: /* MUTANT (rep_op) */				for( i = 0; i < YAFFSFS_N_HANDLES; i--){
11612: /* MUTANT (rep_const) */				for( i = 1; i < YAFFSFS_N_HANDLES; i++){
11612: /* MUTANT (rep_const) */				for( i = -1; i < YAFFSFS_N_HANDLES; i++){
11613: /* MUTANT (del_stmt) */ /* 					fdx = &yaffsfs_fd[i]; */ 
11614: /* MUTANT (rep_op) */					if(fdx->handleCount <= 0 &&
11614: /* MUTANT (rep_op) */					if(fdx->handleCount < 0 &&
11614: /* MUTANT (rep_op) */					if(fdx->handleCount >= 0 &&
11614: /* MUTANT (rep_op) */					if(fdx->handleCount == 0 &&
11614: /* MUTANT (rep_op) */					if(fdx->handleCount != 0 &&
11614: /* MUTANT (rep_op) */					if(fdx->handleCount > 0 ||
11614: /* MUTANT (rep_const) */					if(fdx->handleCount > 1 &&
11614: /* MUTANT (rep_const) */					if(fdx->handleCount > -1 &&
11615: /* MUTANT (rep_op) */						fdx->inodeId <= 0 &&
11615: /* MUTANT (rep_op) */						fdx->inodeId < 0 &&
11615: /* MUTANT (rep_op) */						fdx->inodeId > 0 &&
11615: /* MUTANT (rep_op) */						fdx->inodeId == 0 &&
11615: /* MUTANT (rep_op) */						fdx->inodeId != 0 &&
11615: /* MUTANT (rep_op) */						fdx->inodeId >= 0 ||
11615: /* MUTANT (rep_const) */						fdx->inodeId >= 1 &&
11615: /* MUTANT (rep_const) */						fdx->inodeId >= -1 &&
11616: /* MUTANT (rep_op) */						yaffsfs_inode[fdx->inodeId].iObj != obj){
11617: /* MUTANT (negate) */						if(!(!fdx->shareRead))
11618: /* MUTANT (rep_const) */							sharedReadAllowed = 1;
11618: /* MUTANT (rep_const) */							sharedReadAllowed = -1;
11619: /* MUTANT (negate) */						if(!(!fdx->shareWrite))
11620: /* MUTANT (rep_const) */							sharedWriteAllowed = 1;
11620: /* MUTANT (rep_const) */							sharedWriteAllowed = -1;
11621: /* MUTANT (negate) */						if(!(fdx->reading))
11622: /* MUTANT (rep_const) */							alreadyReading = 0;
11622: /* MUTANT (rep_const) */							alreadyReading = -1;
11622: /* MUTANT (rep_const) */							alreadyReading = ((1)+1);
11623: /* MUTANT (negate) */						if(!(fdx->writing))
11624: /* MUTANT (rep_const) */							alreadyWriting = 0;
11624: /* MUTANT (rep_const) */							alreadyWriting = -1;
11624: /* MUTANT (rep_const) */							alreadyWriting = ((1)+1);
11630: /* MUTANT (rep_op) */				if((!sharedReadAllowed || readRequested)||
11630: /* MUTANT (rep_op) */				if((!sharedReadAllowed && readRequested)&&
11631: /* MUTANT (rep_op) */					(!shareRead  || alreadyReading) ||
11631: /* MUTANT (rep_op) */					(!shareRead  && alreadyReading) &&
11632: /* MUTANT (rep_op) */					(!sharedWriteAllowed || writeRequested) ||
11632: /* MUTANT (rep_op) */					(!sharedWriteAllowed && writeRequested) &&
11633: /* MUTANT (rep_op) */					(!shareWrite || alreadyWriting)){
11634: /* MUTANT (del_stmt) */ /* 					openDenied = 1; */ 
11634: /* MUTANT (rep_const) */					openDenied = 0;
11634: /* MUTANT (rep_const) */					openDenied = -1;
11634: /* MUTANT (rep_const) */					openDenied = ((1)+1);
11635: /* MUTANT (del_stmt) */ /* 					yaffsfs_SetError(-EBUSY); */ 
11636: /* MUTANT (del_stmt) */ /* 					errorReported=1; */ 
11636: /* MUTANT (rep_const) */					errorReported=0;
11636: /* MUTANT (rep_const) */					errorReported=-1;
11636: /* MUTANT (rep_const) */					errorReported=((1)+1);
11645: /* MUTANT (rep_op) */		if(!obj || !errorReported){
11645: /* MUTANT (negate) */		if(!(!obj && !errorReported)){
11646: /* MUTANT (del_stmt) */ /* 			dir = yaffsfs_FindDirectory(NULL,path,&name,0,&notDir,&loop); */ 
11646: /* MUTANT (rep_const) */			dir = yaffsfs_FindDirectory(NULL,path,&name,1,&notDir,&loop);
11646: /* MUTANT (rep_const) */			dir = yaffsfs_FindDirectory(NULL,path,&name,-1,&notDir,&loop);
11647: /* MUTANT (rep_op) */			if(!dir || notDir){
11647: /* MUTANT (negate) */			if(!(!dir && notDir)){
11648: /* MUTANT (del_stmt) */ /* 				yaffsfs_SetError(-ENOTDIR); */ 
11649: /* MUTANT (del_stmt) */ /* 				errorReported = 1; */ 
11649: /* MUTANT (rep_const) */				errorReported = 0;
11649: /* MUTANT (rep_const) */				errorReported = -1;
11649: /* MUTANT (rep_const) */				errorReported = ((1)+1);
11650: /* MUTANT (negate) */			} else if(!(loop)){
11651: /* MUTANT (del_stmt) */ /* 				yaffsfs_SetError(-ELOOP); */ 
11652: /* MUTANT (del_stmt) */ /* 				errorReported = 1; */ 
11652: /* MUTANT (rep_const) */				errorReported = 0;
11652: /* MUTANT (rep_const) */				errorReported = -1;
11652: /* MUTANT (rep_const) */				errorReported = ((1)+1);
11653: /* MUTANT (negate) */			} else	if(!(!dir)){
11654: /* MUTANT (del_stmt) */ /* 				yaffsfs_SetError(-ENOENT); */ 
11655: /* MUTANT (del_stmt) */ /* 				errorReported = 1; */ 
11655: /* MUTANT (rep_const) */				errorReported = 0;
11655: /* MUTANT (rep_const) */				errorReported = -1;
11655: /* MUTANT (rep_const) */				errorReported = ((1)+1);
11659: /* MUTANT (rep_op) */		if(!obj || dir && !errorReported && (oflag & O_CREAT)) {
11659: /* MUTANT (rep_op) */		if(!obj && dir || !errorReported && (oflag & O_CREAT)) {
11659: /* MUTANT (rep_op) */		if(!obj && dir && !errorReported || (oflag & O_CREAT)) {
11659: /* MUTANT (negate) */		if(!(!obj && dir && !errorReported && (oflag & O_CREAT))) {
11661: /* MUTANT (negate) */			if(!(dir->my_dev->read_only)){
11662: /* MUTANT (del_stmt) */ /* 				yaffsfs_SetError(-EROFS); */ 
11663: /* MUTANT (del_stmt) */ /* 				errorReported = 1; */ 
11663: /* MUTANT (rep_const) */				errorReported = 0;
11663: /* MUTANT (rep_const) */				errorReported = -1;
11663: /* MUTANT (rep_const) */				errorReported = ((1)+1);
11665: /* MUTANT (rep_const) */				obj = yaffs_create_file(dir,name,mode,1,0);
11665: /* MUTANT (rep_const) */				obj = yaffs_create_file(dir,name,mode,-1,0);
11665: /* MUTANT (rep_const) */				obj = yaffs_create_file(dir,name,mode,0,1);
11665: /* MUTANT (rep_const) */				obj = yaffs_create_file(dir,name,mode,0,-1);
11667: /* MUTANT (rep_op) */			if(!obj || !errorReported){
11667: /* MUTANT (negate) */			if(!(!obj && !errorReported)){
11668: /* MUTANT (del_stmt) */ /* 				yaffsfs_SetError(-ENOSPC); */ 
11669: /* MUTANT (del_stmt) */ /* 				errorReported = 1; */ 
11669: /* MUTANT (rep_const) */				errorReported = 0;
11669: /* MUTANT (rep_const) */				errorReported = -1;
11669: /* MUTANT (rep_const) */				errorReported = ((1)+1);
11673: /* MUTANT (rep_op) */		if(!obj || dir && !errorReported && !(oflag & O_CREAT)) {
11673: /* MUTANT (rep_op) */		if(!obj && dir || !errorReported && !(oflag & O_CREAT)) {
11673: /* MUTANT (rep_op) */		if(!obj && dir && !errorReported || !(oflag & O_CREAT)) {
11673: /* MUTANT (negate) */		if(!(!obj && dir && !errorReported && !(oflag & O_CREAT))) {
11675: /* MUTANT (del_stmt) */ /* 			yaffsfs_SetError(-ENOENT); */ 
11676: /* MUTANT (del_stmt) */ /* 			errorReported = 1; */ 
11676: /* MUTANT (rep_const) */			errorReported = 0;
11676: /* MUTANT (rep_const) */			errorReported = -1;
11676: /* MUTANT (rep_const) */			errorReported = ((1)+1);
11679: /* MUTANT (rep_op) */		if(obj || !openDenied) {
11679: /* MUTANT (negate) */		if(!(obj && !openDenied)) {
11680: /* MUTANT (del_stmt) */ /* 			int inodeId = yaffsfs_GetInodeIdForObject(obj); */ 
11682: /* MUTANT (rep_op) */			if(inodeId<=0) {
11682: /* MUTANT (rep_op) */			if(inodeId>0) {
11682: /* MUTANT (rep_op) */			if(inodeId>=0) {
11682: /* MUTANT (rep_op) */			if(inodeId==0) {
11682: /* MUTANT (rep_op) */			if(inodeId!=0) {
11682: /* MUTANT (rep_const) */			if(inodeId<1) {
11682: /* MUTANT (rep_const) */			if(inodeId<-1) {
11682: /* MUTANT (negate) */			if(!(inodeId<0)) {
11690: /* MUTANT (del_stmt) */ /* 			fd->reading = readRequested; */ 
11691: /* MUTANT (del_stmt) */ /* 			fd->writing = writeRequested; */ 
11692: /* MUTANT (del_stmt) */ /* 			fd->append =  (oflag & O_APPEND) ? 1 : 0; */ 
11692: /* MUTANT (rep_const) */			fd->append =  (oflag & O_APPEND) ? 0 : 0;
11692: /* MUTANT (rep_const) */			fd->append =  (oflag & O_APPEND) ? -1 : 0;
11692: /* MUTANT (rep_const) */			fd->append =  (oflag & O_APPEND) ? ((1)+1) : 0;
11692: /* MUTANT (rep_const) */			fd->append =  (oflag & O_APPEND) ? 1 : 1;
11692: /* MUTANT (rep_const) */			fd->append =  (oflag & O_APPEND) ? 1 : -1;
11693: /* MUTANT (del_stmt) */ /* 			fd->position = 0; */ 
11693: /* MUTANT (rep_const) */			fd->position = 1;
11693: /* MUTANT (rep_const) */			fd->position = -1;
11694: /* MUTANT (del_stmt) */ /* 			fd->shareRead = shareRead; */ 
11695: /* MUTANT (del_stmt) */ /* 			fd->shareWrite = shareWrite; */ 
11698: /* MUTANT (del_stmt) */ /*                         obj->my_inode = (void*) &yaffsfs_inode[inodeId]; */ 
11700: /* MUTANT (rep_op) */                        if((oflag & O_TRUNC) || fd->writing)
11700: /* MUTANT (negate) */                        if(!((oflag & O_TRUNC) && fd->writing))
11701: /* MUTANT (rep_const) */                                yaffs_resize_file(obj,1);
11701: /* MUTANT (rep_const) */                                yaffs_resize_file(obj,-1);
11703: /* MUTANT (del_stmt) */ /* 			yaffsfs_PutHandle(handle); */ 
11704: /* MUTANT (negate) */			if(!(!errorReported))
11705: /* MUTANT (rep_const) */				yaffsfs_SetError(1); /* Problem */
11705: /* MUTANT (rep_const) */				yaffsfs_SetError(-1); /* Problem */
11706: /* MUTANT (del_stmt) */ /* 			handle = -1; */ 
11706: /* MUTANT (rep_const) */			handle = 0;
11706: /* MUTANT (rep_const) */			handle = 1;
11706: /* MUTANT (rep_const) */			handle = ((-1)+1);
11706: /* MUTANT (rep_const) */			handle = ((-1)-1);
11712: /* MUTANT (del_stmt) */ /* 	return handle; */ 
11718: /* MUTANT (rep_op) */			YAFFS_SHARE_READ & YAFFS_SHARE_WRITE);
11723: /* MUTANT (del_stmt) */ /* 	int retVal = -1; */ 
11723: /* MUTANT (rep_const) */	int retVal = 0;
11723: /* MUTANT (rep_const) */	int retVal = 1;
11723: /* MUTANT (rep_const) */	int retVal = ((-1)+1);
11723: /* MUTANT (rep_const) */	int retVal = ((-1)-1);
11724: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj; */ 
11726: /* MUTANT (del_stmt) */ /* 	yaffsfs_Lock(); */ 
11728: /* MUTANT (del_stmt) */ /* 	obj = yaffsfs_HandleToObject(handle); */ 
11730: /* MUTANT (negate) */	if(!(!obj))
11732: /* MUTANT (negate) */	else if(!(obj->my_dev->read_only))
11735: /* MUTANT (del_stmt) */ /* 		yaffs_flush_file(obj,1,datasync); */ 
11735: /* MUTANT (rep_const) */		yaffs_flush_file(obj,0,datasync);
11735: /* MUTANT (rep_const) */		yaffs_flush_file(obj,-1,datasync);
11735: /* MUTANT (rep_const) */		yaffs_flush_file(obj,((1)+1),datasync);
11736: /* MUTANT (del_stmt) */ /* 		retVal = 0; */ 
11736: /* MUTANT (rep_const) */		retVal = 1;
11736: /* MUTANT (rep_const) */		retVal = -1;
11741: /* MUTANT (del_stmt) */ /* 	return retVal; */ 
11746: /* MUTANT (del_stmt) */ /* 	return yaffs_Dofsync(handle,0); */ 
11746: /* MUTANT (rep_const) */	return yaffs_Dofsync(handle,1);
11746: /* MUTANT (rep_const) */	return yaffs_Dofsync(handle,-1);
11751: /* MUTANT (del_stmt) */ /* 	return yaffs_fsync(handle); */ 
11756: /* MUTANT (del_stmt) */ /* 	return yaffs_Dofsync(handle,1); */ 
11756: /* MUTANT (rep_const) */	return yaffs_Dofsync(handle,0);
11756: /* MUTANT (rep_const) */	return yaffs_Dofsync(handle,-1);
11756: /* MUTANT (rep_const) */	return yaffs_Dofsync(handle,((1)+1));
11761: /* MUTANT (del_stmt) */ /* 	yaffsfs_Handle *h = NULL; */ 
11762: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj = NULL; */ 
11763: /* MUTANT (del_stmt) */ /* 	int retVal = -1; */ 
11763: /* MUTANT (rep_const) */	int retVal = 0;
11763: /* MUTANT (rep_const) */	int retVal = 1;
11763: /* MUTANT (rep_const) */	int retVal = ((-1)+1);
11763: /* MUTANT (rep_const) */	int retVal = ((-1)-1);
11765: /* MUTANT (del_stmt) */ /* 	yaffsfs_Lock(); */ 
11767: /* MUTANT (del_stmt) */ /* 	h = yaffsfs_HandleToPointer(handle); */ 
11768: /* MUTANT (del_stmt) */ /* 	obj = yaffsfs_HandleToObject(handle); */ 
11770: /* MUTANT (rep_op) */	if(!h  && !obj)
11770: /* MUTANT (negate) */	if(!(!h  || !obj))
11774: /* MUTANT (del_stmt) */ /* 		yaffs_flush_file(obj,1,0); */ 
11774: /* MUTANT (rep_const) */		yaffs_flush_file(obj,0,0);
11774: /* MUTANT (rep_const) */		yaffs_flush_file(obj,-1,0);
11774: /* MUTANT (rep_const) */		yaffs_flush_file(obj,((1)+1),0);
11774: /* MUTANT (rep_const) */		yaffs_flush_file(obj,1,1);
11774: /* MUTANT (rep_const) */		yaffs_flush_file(obj,1,-1);
11775: /* MUTANT (del_stmt) */ /* 		yaffsfs_PutHandle(handle); */ 
11776: /* MUTANT (del_stmt) */ /* 		retVal = 0; */ 
11776: /* MUTANT (rep_const) */		retVal = 1;
11776: /* MUTANT (rep_const) */		retVal = -1;
11781: /* MUTANT (del_stmt) */ /* 	return retVal; */ 
11788: /* MUTANT (del_stmt) */ /* 	yaffsfs_FileDes *fd = NULL; */ 
11789: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj = NULL; */ 
11790: /* MUTANT (del_stmt) */ /* 	int pos = 0; */ 
11790: /* MUTANT (rep_const) */	int pos = 1;
11790: /* MUTANT (rep_const) */	int pos = -1;
11791: /* MUTANT (del_stmt) */ /* 	int startPos = 0; */ 
11791: /* MUTANT (rep_const) */	int startPos = 1;
11791: /* MUTANT (rep_const) */	int startPos = -1;
11792: /* MUTANT (del_stmt) */ /* 	int endPos = 0; */ 
11792: /* MUTANT (rep_const) */	int endPos = 1;
11792: /* MUTANT (rep_const) */	int endPos = -1;
11793: /* MUTANT (del_stmt) */ /* 	int nRead = 0; */ 
11793: /* MUTANT (rep_const) */	int nRead = 1;
11793: /* MUTANT (rep_const) */	int nRead = -1;
11794: /* MUTANT (del_stmt) */ /* 	int nToRead = 0; */ 
11794: /* MUTANT (rep_const) */	int nToRead = 1;
11794: /* MUTANT (rep_const) */	int nToRead = -1;
11795: /* MUTANT (del_stmt) */ /* 	int totalRead = 0; */ 
11795: /* MUTANT (rep_const) */	int totalRead = 1;
11795: /* MUTANT (rep_const) */	int totalRead = -1;
11796: /* MUTANT (del_stmt) */ /* 	unsigned int maxRead; */ 
11797: /* MUTANT (del_stmt) */ /* 	u8 *buf = (u8 *)vbuf; */ 
11799: /* MUTANT (negate) */	if(!(!vbuf)){
11800: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EFAULT); */ 
11801: /* MUTANT (del_stmt) */ /* 		return -1; */ 
11801: /* MUTANT (rep_const) */		return 0;
11801: /* MUTANT (rep_const) */		return 1;
11801: /* MUTANT (rep_const) */		return ((-1)+1);
11801: /* MUTANT (rep_const) */		return ((-1)-1);
11805: /* MUTANT (del_stmt) */ /* 	fd = yaffsfs_HandleToFileDes(handle); */ 
11806: /* MUTANT (del_stmt) */ /* 	obj = yaffsfs_HandleToObject(handle); */ 
11808: /* MUTANT (rep_op) */	if(!fd && !obj){
11808: /* MUTANT (negate) */	if(!(!fd || !obj)){
11810: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EBADF); */ 
11811: /* MUTANT (del_stmt) */ /* 		totalRead = -1; */ 
11811: /* MUTANT (rep_const) */		totalRead = 0;
11811: /* MUTANT (rep_const) */		totalRead = 1;
11811: /* MUTANT (rep_const) */		totalRead = ((-1)+1);
11811: /* MUTANT (rep_const) */		totalRead = ((-1)-1);
11812: /* MUTANT (negate) */	} else if(!(!fd->reading)){
11814: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EINVAL); */ 
11815: /* MUTANT (del_stmt) */ /* 		totalRead = -1; */ 
11815: /* MUTANT (rep_const) */		totalRead = 0;
11815: /* MUTANT (rep_const) */		totalRead = 1;
11815: /* MUTANT (rep_const) */		totalRead = ((-1)+1);
11815: /* MUTANT (rep_const) */		totalRead = ((-1)-1);
11816: /* MUTANT (rep_op) */	} else if(nbyte <= YAFFS_MAX_FILE_SIZE){
11816: /* MUTANT (rep_op) */	} else if(nbyte < YAFFS_MAX_FILE_SIZE){
11816: /* MUTANT (rep_op) */	} else if(nbyte >= YAFFS_MAX_FILE_SIZE){
11816: /* MUTANT (rep_op) */	} else if(nbyte == YAFFS_MAX_FILE_SIZE){
11816: /* MUTANT (rep_op) */	} else if(nbyte != YAFFS_MAX_FILE_SIZE){
11816: /* MUTANT (negate) */	} else if(!(nbyte > YAFFS_MAX_FILE_SIZE)){
11817: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EINVAL); */ 
11818: /* MUTANT (del_stmt) */ /* 		totalRead = -1; */ 
11818: /* MUTANT (rep_const) */		totalRead = 0;
11818: /* MUTANT (rep_const) */		totalRead = 1;
11818: /* MUTANT (rep_const) */		totalRead = ((-1)+1);
11818: /* MUTANT (rep_const) */		totalRead = ((-1)-1);
11820: /* MUTANT (negate) */		if(!(isPread))
11825: /* MUTANT (del_stmt) */ /* 		pos = startPos; */ 
11827: /* MUTANT (rep_op) */		if(yaffs_get_obj_length(obj) <= pos)
11827: /* MUTANT (rep_op) */		if(yaffs_get_obj_length(obj) < pos)
11827: /* MUTANT (rep_op) */		if(yaffs_get_obj_length(obj) >= pos)
11827: /* MUTANT (rep_op) */		if(yaffs_get_obj_length(obj) == pos)
11827: /* MUTANT (rep_op) */		if(yaffs_get_obj_length(obj) != pos)
11827: /* MUTANT (negate) */		if(!(yaffs_get_obj_length(obj) > pos))
11830: /* MUTANT (rep_const) */			maxRead = 1;
11830: /* MUTANT (rep_const) */			maxRead = -1;
11832: /* MUTANT (rep_op) */		if(nbyte <= maxRead)
11832: /* MUTANT (rep_op) */		if(nbyte < maxRead)
11832: /* MUTANT (rep_op) */		if(nbyte >= maxRead)
11832: /* MUTANT (rep_op) */		if(nbyte == maxRead)
11832: /* MUTANT (rep_op) */		if(nbyte != maxRead)
11832: /* MUTANT (negate) */		if(!(nbyte > maxRead))
11836: /* MUTANT (del_stmt) */ /* 		yaffsfs_GetHandle(handle); */ 
11838: /* MUTANT (del_stmt) */ /* 		endPos = pos + nbyte; */ 
11838: /* MUTANT (rep_op) */		endPos = pos - nbyte;
11838: /* MUTANT (rep_op) */		endPos = pos * nbyte;
11838: /* MUTANT (rep_op) */		endPos = pos % nbyte;
11840: /* MUTANT (rep_op) */		if(pos <= 0 || pos > YAFFS_MAX_FILE_SIZE ||
11840: /* MUTANT (rep_op) */		if(pos > 0 || pos > YAFFS_MAX_FILE_SIZE ||
11840: /* MUTANT (rep_op) */		if(pos >= 0 || pos > YAFFS_MAX_FILE_SIZE ||
11840: /* MUTANT (rep_op) */		if(pos == 0 || pos > YAFFS_MAX_FILE_SIZE ||
11840: /* MUTANT (rep_op) */		if(pos != 0 || pos > YAFFS_MAX_FILE_SIZE ||
11840: /* MUTANT (rep_op) */		if(pos < 0 && pos > YAFFS_MAX_FILE_SIZE ||
11840: /* MUTANT (rep_op) */		if(pos < 0 || pos <= YAFFS_MAX_FILE_SIZE ||
11840: /* MUTANT (rep_op) */		if(pos < 0 || pos < YAFFS_MAX_FILE_SIZE ||
11840: /* MUTANT (rep_op) */		if(pos < 0 || pos >= YAFFS_MAX_FILE_SIZE ||
11840: /* MUTANT (rep_op) */		if(pos < 0 || pos == YAFFS_MAX_FILE_SIZE ||
11840: /* MUTANT (rep_op) */		if(pos < 0 || pos != YAFFS_MAX_FILE_SIZE ||
11840: /* MUTANT (rep_op) */		if(pos < 0 || pos > YAFFS_MAX_FILE_SIZE &&
11840: /* MUTANT (rep_const) */		if(pos < 1 || pos > YAFFS_MAX_FILE_SIZE ||
11840: /* MUTANT (rep_const) */		if(pos < -1 || pos > YAFFS_MAX_FILE_SIZE ||
11841: /* MUTANT (rep_op) */			nbyte <= YAFFS_MAX_FILE_SIZE ||
11841: /* MUTANT (rep_op) */			nbyte < YAFFS_MAX_FILE_SIZE ||
11841: /* MUTANT (rep_op) */			nbyte >= YAFFS_MAX_FILE_SIZE ||
11841: /* MUTANT (rep_op) */			nbyte == YAFFS_MAX_FILE_SIZE ||
11841: /* MUTANT (rep_op) */			nbyte != YAFFS_MAX_FILE_SIZE ||
11841: /* MUTANT (rep_op) */			nbyte > YAFFS_MAX_FILE_SIZE &&
11842: /* MUTANT (rep_op) */			endPos <= 0 || endPos > YAFFS_MAX_FILE_SIZE){
11842: /* MUTANT (rep_op) */			endPos > 0 || endPos > YAFFS_MAX_FILE_SIZE){
11842: /* MUTANT (rep_op) */			endPos >= 0 || endPos > YAFFS_MAX_FILE_SIZE){
11842: /* MUTANT (rep_op) */			endPos == 0 || endPos > YAFFS_MAX_FILE_SIZE){
11842: /* MUTANT (rep_op) */			endPos != 0 || endPos > YAFFS_MAX_FILE_SIZE){
11842: /* MUTANT (rep_op) */			endPos < 0 && endPos > YAFFS_MAX_FILE_SIZE){
11842: /* MUTANT (rep_op) */			endPos < 0 || endPos <= YAFFS_MAX_FILE_SIZE){
11842: /* MUTANT (rep_op) */			endPos < 0 || endPos < YAFFS_MAX_FILE_SIZE){
11842: /* MUTANT (rep_op) */			endPos < 0 || endPos >= YAFFS_MAX_FILE_SIZE){
11842: /* MUTANT (rep_op) */			endPos < 0 || endPos == YAFFS_MAX_FILE_SIZE){
11842: /* MUTANT (rep_op) */			endPos < 0 || endPos != YAFFS_MAX_FILE_SIZE){
11842: /* MUTANT (rep_const) */			endPos < 1 || endPos > YAFFS_MAX_FILE_SIZE){
11842: /* MUTANT (rep_const) */			endPos < -1 || endPos > YAFFS_MAX_FILE_SIZE){
11843: /* MUTANT (del_stmt) */ /* 			totalRead = -1; */ 
11843: /* MUTANT (rep_const) */			totalRead = 0;
11843: /* MUTANT (rep_const) */			totalRead = 1;
11843: /* MUTANT (rep_const) */			totalRead = ((-1)+1);
11843: /* MUTANT (rep_const) */			totalRead = ((-1)-1);
11844: /* MUTANT (del_stmt) */ /* 			nbyte = 0; */ 
11844: /* MUTANT (rep_const) */			nbyte = 1;
11844: /* MUTANT (rep_const) */			nbyte = -1;
11847: /* MUTANT (rep_op) */		while(nbyte <= 0) {
11847: /* MUTANT (rep_op) */		while(nbyte < 0) {
11847: /* MUTANT (rep_op) */		while(nbyte >= 0) {
11847: /* MUTANT (rep_op) */		while(nbyte == 0) {
11847: /* MUTANT (rep_op) */		while(nbyte != 0) {
11847: /* MUTANT (rep_const) */		while(nbyte > 1) {
11847: /* MUTANT (rep_const) */		while(nbyte > -1) {
11847: /* MUTANT (negate) */		while(!(nbyte > 0)) {
11848: /* MUTANT (del_stmt) */ /* 			nToRead = YAFFSFS_RW_SIZE - (pos & (YAFFSFS_RW_SIZE -1)); */ 
11848: /* MUTANT (rep_const) */			nToRead = YAFFSFS_RW_SIZE - (pos & (YAFFSFS_RW_SIZE 0));
11848: /* MUTANT (rep_const) */			nToRead = YAFFSFS_RW_SIZE - (pos & (YAFFSFS_RW_SIZE 1));
11848: /* MUTANT (rep_const) */			nToRead = YAFFSFS_RW_SIZE - (pos & (YAFFSFS_RW_SIZE ((-1)+1)));
11848: /* MUTANT (rep_const) */			nToRead = YAFFSFS_RW_SIZE - (pos & (YAFFSFS_RW_SIZE ((-1)-1)));
11849: /* MUTANT (rep_op) */			if(nToRead <= nbyte)
11849: /* MUTANT (rep_op) */			if(nToRead < nbyte)
11849: /* MUTANT (rep_op) */			if(nToRead >= nbyte)
11849: /* MUTANT (rep_op) */			if(nToRead == nbyte)
11849: /* MUTANT (rep_op) */			if(nToRead != nbyte)
11849: /* MUTANT (negate) */			if(!(nToRead > nbyte))
11856: /* MUTANT (del_stmt) */ /* 			obj = yaffsfs_HandleToObject(handle); */ 
11857: /* MUTANT (negate) */			if(!(!obj))
11858: /* MUTANT (rep_const) */				nRead = 1;
11858: /* MUTANT (rep_const) */				nRead = -1;
11862: /* MUTANT (rep_op) */			if(nRead <= 0){
11862: /* MUTANT (rep_op) */			if(nRead < 0){
11862: /* MUTANT (rep_op) */			if(nRead >= 0){
11862: /* MUTANT (rep_op) */			if(nRead == 0){
11862: /* MUTANT (rep_op) */			if(nRead != 0){
11862: /* MUTANT (rep_const) */			if(nRead > 1){
11862: /* MUTANT (rep_const) */			if(nRead > -1){
11862: /* MUTANT (negate) */			if(!(nRead > 0)){
11863: /* MUTANT (del_stmt) */ /* 				totalRead += nRead; */ 
11863: /* MUTANT (rep_op) */				totalRead -= nRead;
11863: /* MUTANT (rep_op) */				totalRead *= nRead;
11863: /* MUTANT (rep_op) */				totalRead %= nRead;
11864: /* MUTANT (del_stmt) */ /* 				pos += nRead; */ 
11864: /* MUTANT (rep_op) */				pos -= nRead;
11864: /* MUTANT (rep_op) */				pos *= nRead;
11864: /* MUTANT (rep_op) */				pos %= nRead;
11865: /* MUTANT (del_stmt) */ /* 				buf += nRead; */ 
11865: /* MUTANT (rep_op) */				buf -= nRead;
11865: /* MUTANT (rep_op) */				buf *= nRead;
11865: /* MUTANT (rep_op) */				buf %= nRead;
11868: /* MUTANT (rep_op) */			if(nRead != nToRead)
11868: /* MUTANT (negate) */			if(!(nRead == nToRead))
11869: /* MUTANT (rep_op) */				nbyte+=nRead;
11869: /* MUTANT (rep_op) */				nbyte*=nRead;
11869: /* MUTANT (rep_op) */				nbyte%=nRead;
11871: /* MUTANT (rep_const) */				nbyte = 1; /* no more to read */
11871: /* MUTANT (rep_const) */				nbyte = -1; /* no more to read */
11874: /* MUTANT (rep_op) */			if(nbyte <= 0){
11874: /* MUTANT (rep_op) */			if(nbyte < 0){
11874: /* MUTANT (rep_op) */			if(nbyte >= 0){
11874: /* MUTANT (rep_op) */			if(nbyte == 0){
11874: /* MUTANT (rep_op) */			if(nbyte != 0){
11874: /* MUTANT (rep_const) */			if(nbyte > 1){
11874: /* MUTANT (rep_const) */			if(nbyte > -1){
11874: /* MUTANT (negate) */			if(!(nbyte > 0)){
11875: /* MUTANT (del_stmt) */ /* 				yaffsfs_Unlock(); */ 
11876: /* MUTANT (del_stmt) */ /* 				yaffsfs_Lock(); */ 
11883: /* MUTANT (negate) */		if(!(!isPread)) {
11884: /* MUTANT (rep_op) */			if(totalRead <= 0)
11884: /* MUTANT (rep_op) */			if(totalRead < 0)
11884: /* MUTANT (rep_op) */			if(totalRead > 0)
11884: /* MUTANT (rep_op) */			if(totalRead == 0)
11884: /* MUTANT (rep_op) */			if(totalRead != 0)
11884: /* MUTANT (rep_const) */			if(totalRead >= 1)
11884: /* MUTANT (rep_const) */			if(totalRead >= -1)
11884: /* MUTANT (negate) */			if(!(totalRead >= 0))
11885: /* MUTANT (rep_op) */				fd->position = startPos - totalRead;
11885: /* MUTANT (rep_op) */				fd->position = startPos * totalRead;
11885: /* MUTANT (rep_op) */				fd->position = startPos % totalRead;
11894: /* MUTANT (del_stmt) */ /* 	return (totalRead >= 0) ? totalRead : -1; */ 
11894: /* MUTANT (rep_op) */	return (totalRead <= 0) ? totalRead : -1;
11894: /* MUTANT (rep_op) */	return (totalRead < 0) ? totalRead : -1;
11894: /* MUTANT (rep_op) */	return (totalRead > 0) ? totalRead : -1;
11894: /* MUTANT (rep_op) */	return (totalRead == 0) ? totalRead : -1;
11894: /* MUTANT (rep_op) */	return (totalRead != 0) ? totalRead : -1;
11894: /* MUTANT (rep_const) */	return (totalRead >= 1) ? totalRead : -1;
11894: /* MUTANT (rep_const) */	return (totalRead >= -1) ? totalRead : -1;
11894: /* MUTANT (rep_const) */	return (totalRead >= 0) ? totalRead : 0;
11894: /* MUTANT (rep_const) */	return (totalRead >= 0) ? totalRead : 1;
11894: /* MUTANT (rep_const) */	return (totalRead >= 0) ? totalRead : ((-1)+1);
11894: /* MUTANT (rep_const) */	return (totalRead >= 0) ? totalRead : ((-1)-1);
11900: /* MUTANT (del_stmt) */ /* 	return yaffsfs_do_read(handle, buf, nbyte, 0, 0); */ 
11900: /* MUTANT (rep_const) */	return yaffsfs_do_read(handle, buf, nbyte, 1, 0);
11900: /* MUTANT (rep_const) */	return yaffsfs_do_read(handle, buf, nbyte, -1, 0);
11900: /* MUTANT (rep_const) */	return yaffsfs_do_read(handle, buf, nbyte, 0, 1);
11900: /* MUTANT (rep_const) */	return yaffsfs_do_read(handle, buf, nbyte, 0, -1);
11905: /* MUTANT (del_stmt) */ /* 	return yaffsfs_do_read(handle, buf, nbyte, 1, offset); */ 
11905: /* MUTANT (rep_const) */	return yaffsfs_do_read(handle, buf, nbyte, 0, offset);
11905: /* MUTANT (rep_const) */	return yaffsfs_do_read(handle, buf, nbyte, -1, offset);
11905: /* MUTANT (rep_const) */	return yaffsfs_do_read(handle, buf, nbyte, ((1)+1), offset);
11910: /* MUTANT (del_stmt) */ /* 	yaffsfs_FileDes *fd = NULL; */ 
11911: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj = NULL; */ 
11912: /* MUTANT (del_stmt) */ /* 	int pos = 0; */ 
11912: /* MUTANT (rep_const) */	int pos = 1;
11912: /* MUTANT (rep_const) */	int pos = -1;
11913: /* MUTANT (del_stmt) */ /* 	int startPos = 0; */ 
11913: /* MUTANT (rep_const) */	int startPos = 1;
11913: /* MUTANT (rep_const) */	int startPos = -1;
11914: /* MUTANT (del_stmt) */ /* 	int endPos; */ 
11915: /* MUTANT (del_stmt) */ /* 	int nWritten = 0; */ 
11915: /* MUTANT (rep_const) */	int nWritten = 1;
11915: /* MUTANT (rep_const) */	int nWritten = -1;
11916: /* MUTANT (del_stmt) */ /* 	int totalWritten = 0; */ 
11916: /* MUTANT (rep_const) */	int totalWritten = 1;
11916: /* MUTANT (rep_const) */	int totalWritten = -1;
11917: /* MUTANT (del_stmt) */ /* 	int write_trhrough = 0; */ 
11917: /* MUTANT (rep_const) */	int write_trhrough = 1;
11917: /* MUTANT (rep_const) */	int write_trhrough = -1;
11918: /* MUTANT (del_stmt) */ /* 	int nToWrite = 0; */ 
11918: /* MUTANT (rep_const) */	int nToWrite = 1;
11918: /* MUTANT (rep_const) */	int nToWrite = -1;
11919: /* MUTANT (del_stmt) */ /* 	const u8 *buf = (const u8 *)vbuf; */ 
11921: /* MUTANT (negate) */	if(!(!vbuf)){
11922: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EFAULT); */ 
11923: /* MUTANT (del_stmt) */ /* 		return -1; */ 
11923: /* MUTANT (rep_const) */		return 0;
11923: /* MUTANT (rep_const) */		return 1;
11923: /* MUTANT (rep_const) */		return ((-1)+1);
11923: /* MUTANT (rep_const) */		return ((-1)-1);
11927: /* MUTANT (del_stmt) */ /* 	fd = yaffsfs_HandleToFileDes(handle); */ 
11928: /* MUTANT (del_stmt) */ /* 	obj = yaffsfs_HandleToObject(handle); */ 
11930: /* MUTANT (rep_op) */	if(!fd && !obj){
11930: /* MUTANT (negate) */	if(!(!fd || !obj)){
11932: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EBADF); */ 
11933: /* MUTANT (del_stmt) */ /* 		totalWritten = -1; */ 
11933: /* MUTANT (rep_const) */		totalWritten = 0;
11933: /* MUTANT (rep_const) */		totalWritten = 1;
11933: /* MUTANT (rep_const) */		totalWritten = ((-1)+1);
11933: /* MUTANT (rep_const) */		totalWritten = ((-1)-1);
11934: /* MUTANT (negate) */	} else if(!(!fd->writing)){
11935: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EINVAL); */ 
11936: /* MUTANT (del_stmt) */ /* 		totalWritten=-1; */ 
11936: /* MUTANT (rep_const) */		totalWritten=0;
11936: /* MUTANT (rep_const) */		totalWritten=1;
11936: /* MUTANT (rep_const) */		totalWritten=((-1)+1);
11936: /* MUTANT (rep_const) */		totalWritten=((-1)-1);
11937: /* MUTANT (negate) */	} else if(!(obj->my_dev->read_only)){
11938: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EROFS); */ 
11939: /* MUTANT (del_stmt) */ /* 		totalWritten=-1; */ 
11939: /* MUTANT (rep_const) */		totalWritten=0;
11939: /* MUTANT (rep_const) */		totalWritten=1;
11939: /* MUTANT (rep_const) */		totalWritten=((-1)+1);
11939: /* MUTANT (rep_const) */		totalWritten=((-1)-1);
11941: /* MUTANT (negate) */		if(!(fd->append))
11943: /* MUTANT (negate) */		else if(!(isPwrite))
11948: /* MUTANT (del_stmt) */ /* 		yaffsfs_GetHandle(handle); */ 
11949: /* MUTANT (del_stmt) */ /* 		pos = startPos; */ 
11950: /* MUTANT (del_stmt) */ /* 		endPos = pos + nbyte; */ 
11950: /* MUTANT (rep_op) */		endPos = pos - nbyte;
11950: /* MUTANT (rep_op) */		endPos = pos * nbyte;
11950: /* MUTANT (rep_op) */		endPos = pos % nbyte;
11952: /* MUTANT (rep_op) */		if(pos <= 0 || pos > YAFFS_MAX_FILE_SIZE ||
11952: /* MUTANT (rep_op) */		if(pos > 0 || pos > YAFFS_MAX_FILE_SIZE ||
11952: /* MUTANT (rep_op) */		if(pos >= 0 || pos > YAFFS_MAX_FILE_SIZE ||
11952: /* MUTANT (rep_op) */		if(pos == 0 || pos > YAFFS_MAX_FILE_SIZE ||
11952: /* MUTANT (rep_op) */		if(pos != 0 || pos > YAFFS_MAX_FILE_SIZE ||
11952: /* MUTANT (rep_op) */		if(pos < 0 && pos > YAFFS_MAX_FILE_SIZE ||
11952: /* MUTANT (rep_op) */		if(pos < 0 || pos <= YAFFS_MAX_FILE_SIZE ||
11952: /* MUTANT (rep_op) */		if(pos < 0 || pos < YAFFS_MAX_FILE_SIZE ||
11952: /* MUTANT (rep_op) */		if(pos < 0 || pos >= YAFFS_MAX_FILE_SIZE ||
11952: /* MUTANT (rep_op) */		if(pos < 0 || pos == YAFFS_MAX_FILE_SIZE ||
11952: /* MUTANT (rep_op) */		if(pos < 0 || pos != YAFFS_MAX_FILE_SIZE ||
11952: /* MUTANT (rep_op) */		if(pos < 0 || pos > YAFFS_MAX_FILE_SIZE &&
11952: /* MUTANT (rep_const) */		if(pos < 1 || pos > YAFFS_MAX_FILE_SIZE ||
11952: /* MUTANT (rep_const) */		if(pos < -1 || pos > YAFFS_MAX_FILE_SIZE ||
11953: /* MUTANT (rep_op) */			nbyte <= YAFFS_MAX_FILE_SIZE ||
11953: /* MUTANT (rep_op) */			nbyte < YAFFS_MAX_FILE_SIZE ||
11953: /* MUTANT (rep_op) */			nbyte >= YAFFS_MAX_FILE_SIZE ||
11953: /* MUTANT (rep_op) */			nbyte == YAFFS_MAX_FILE_SIZE ||
11953: /* MUTANT (rep_op) */			nbyte != YAFFS_MAX_FILE_SIZE ||
11953: /* MUTANT (rep_op) */			nbyte > YAFFS_MAX_FILE_SIZE &&
11954: /* MUTANT (rep_op) */			endPos <= 0 || endPos > YAFFS_MAX_FILE_SIZE){
11954: /* MUTANT (rep_op) */			endPos > 0 || endPos > YAFFS_MAX_FILE_SIZE){
11954: /* MUTANT (rep_op) */			endPos >= 0 || endPos > YAFFS_MAX_FILE_SIZE){
11954: /* MUTANT (rep_op) */			endPos == 0 || endPos > YAFFS_MAX_FILE_SIZE){
11954: /* MUTANT (rep_op) */			endPos != 0 || endPos > YAFFS_MAX_FILE_SIZE){
11954: /* MUTANT (rep_op) */			endPos < 0 && endPos > YAFFS_MAX_FILE_SIZE){
11954: /* MUTANT (rep_op) */			endPos < 0 || endPos <= YAFFS_MAX_FILE_SIZE){
11954: /* MUTANT (rep_op) */			endPos < 0 || endPos < YAFFS_MAX_FILE_SIZE){
11954: /* MUTANT (rep_op) */			endPos < 0 || endPos >= YAFFS_MAX_FILE_SIZE){
11954: /* MUTANT (rep_op) */			endPos < 0 || endPos == YAFFS_MAX_FILE_SIZE){
11954: /* MUTANT (rep_op) */			endPos < 0 || endPos != YAFFS_MAX_FILE_SIZE){
11954: /* MUTANT (rep_const) */			endPos < 1 || endPos > YAFFS_MAX_FILE_SIZE){
11954: /* MUTANT (rep_const) */			endPos < -1 || endPos > YAFFS_MAX_FILE_SIZE){
11955: /* MUTANT (del_stmt) */ /* 			totalWritten = -1; */ 
11955: /* MUTANT (rep_const) */			totalWritten = 0;
11955: /* MUTANT (rep_const) */			totalWritten = 1;
11955: /* MUTANT (rep_const) */			totalWritten = ((-1)+1);
11955: /* MUTANT (rep_const) */			totalWritten = ((-1)-1);
11956: /* MUTANT (del_stmt) */ /* 			nbyte = 0; */ 
11956: /* MUTANT (rep_const) */			nbyte = 1;
11956: /* MUTANT (rep_const) */			nbyte = -1;
11959: /* MUTANT (rep_op) */		while(nbyte <= 0) {
11959: /* MUTANT (rep_op) */		while(nbyte < 0) {
11959: /* MUTANT (rep_op) */		while(nbyte >= 0) {
11959: /* MUTANT (rep_op) */		while(nbyte == 0) {
11959: /* MUTANT (rep_op) */		while(nbyte != 0) {
11959: /* MUTANT (rep_const) */		while(nbyte > 1) {
11959: /* MUTANT (rep_const) */		while(nbyte > -1) {
11959: /* MUTANT (negate) */		while(!(nbyte > 0)) {
11961: /* MUTANT (del_stmt) */ /* 			nToWrite = YAFFSFS_RW_SIZE - (pos & (YAFFSFS_RW_SIZE -1)); */ 
11961: /* MUTANT (rep_const) */			nToWrite = YAFFSFS_RW_SIZE - (pos & (YAFFSFS_RW_SIZE 0));
11961: /* MUTANT (rep_const) */			nToWrite = YAFFSFS_RW_SIZE - (pos & (YAFFSFS_RW_SIZE 1));
11961: /* MUTANT (rep_const) */			nToWrite = YAFFSFS_RW_SIZE - (pos & (YAFFSFS_RW_SIZE ((-1)+1)));
11961: /* MUTANT (rep_const) */			nToWrite = YAFFSFS_RW_SIZE - (pos & (YAFFSFS_RW_SIZE ((-1)-1)));
11962: /* MUTANT (rep_op) */			if(nToWrite <= nbyte)
11962: /* MUTANT (rep_op) */			if(nToWrite < nbyte)
11962: /* MUTANT (rep_op) */			if(nToWrite >= nbyte)
11962: /* MUTANT (rep_op) */			if(nToWrite == nbyte)
11962: /* MUTANT (rep_op) */			if(nToWrite != nbyte)
11962: /* MUTANT (negate) */			if(!(nToWrite > nbyte))
11969: /* MUTANT (del_stmt) */ /* 			obj = yaffsfs_HandleToObject(handle); */ 
11970: /* MUTANT (rep_op) */			if(!obj && obj->my_dev->read_only)
11970: /* MUTANT (negate) */			if(!(!obj || obj->my_dev->read_only))
11971: /* MUTANT (rep_const) */				nWritten = 1;
11971: /* MUTANT (rep_const) */				nWritten = -1;
11975: /* MUTANT (rep_op) */			if(nWritten <= 0){
11975: /* MUTANT (rep_op) */			if(nWritten < 0){
11975: /* MUTANT (rep_op) */			if(nWritten >= 0){
11975: /* MUTANT (rep_op) */			if(nWritten == 0){
11975: /* MUTANT (rep_op) */			if(nWritten != 0){
11975: /* MUTANT (rep_const) */			if(nWritten > 1){
11975: /* MUTANT (rep_const) */			if(nWritten > -1){
11975: /* MUTANT (negate) */			if(!(nWritten > 0)){
11976: /* MUTANT (del_stmt) */ /* 				totalWritten += nWritten; */ 
11976: /* MUTANT (rep_op) */				totalWritten -= nWritten;
11976: /* MUTANT (rep_op) */				totalWritten *= nWritten;
11976: /* MUTANT (rep_op) */				totalWritten %= nWritten;
11977: /* MUTANT (del_stmt) */ /* 				pos += nWritten; */ 
11977: /* MUTANT (rep_op) */				pos -= nWritten;
11977: /* MUTANT (rep_op) */				pos *= nWritten;
11977: /* MUTANT (rep_op) */				pos %= nWritten;
11978: /* MUTANT (del_stmt) */ /* 				buf += nWritten; */ 
11978: /* MUTANT (rep_op) */				buf -= nWritten;
11978: /* MUTANT (rep_op) */				buf *= nWritten;
11978: /* MUTANT (rep_op) */				buf %= nWritten;
11981: /* MUTANT (rep_op) */			if(nWritten != nToWrite)
11981: /* MUTANT (negate) */			if(!(nWritten == nToWrite))
11982: /* MUTANT (rep_op) */				nbyte += nToWrite;
11982: /* MUTANT (rep_op) */				nbyte *= nToWrite;
11982: /* MUTANT (rep_op) */				nbyte %= nToWrite;
11984: /* MUTANT (rep_const) */				nbyte = 1;
11984: /* MUTANT (rep_const) */				nbyte = -1;
11986: /* MUTANT (rep_op) */			if(nWritten <= 1 && totalWritten < 1){
11986: /* MUTANT (rep_op) */			if(nWritten > 1 && totalWritten < 1){
11986: /* MUTANT (rep_op) */			if(nWritten >= 1 && totalWritten < 1){
11986: /* MUTANT (rep_op) */			if(nWritten == 1 && totalWritten < 1){
11986: /* MUTANT (rep_op) */			if(nWritten != 1 && totalWritten < 1){
11986: /* MUTANT (rep_op) */			if(nWritten < 1 || totalWritten < 1){
11986: /* MUTANT (rep_op) */			if(nWritten < 1 && totalWritten <= 1){
11986: /* MUTANT (rep_op) */			if(nWritten < 1 && totalWritten > 1){
11986: /* MUTANT (rep_op) */			if(nWritten < 1 && totalWritten >= 1){
11986: /* MUTANT (rep_op) */			if(nWritten < 1 && totalWritten == 1){
11986: /* MUTANT (rep_op) */			if(nWritten < 1 && totalWritten != 1){
11986: /* MUTANT (rep_const) */			if(nWritten < 0 && totalWritten < 1){
11986: /* MUTANT (rep_const) */			if(nWritten < -1 && totalWritten < 1){
11986: /* MUTANT (rep_const) */			if(nWritten < ((1)+1) && totalWritten < 1){
11986: /* MUTANT (rep_const) */			if(nWritten < 1 && totalWritten < 0){
11986: /* MUTANT (rep_const) */			if(nWritten < 1 && totalWritten < -1){
11986: /* MUTANT (rep_const) */			if(nWritten < 1 && totalWritten < ((1)+1)){
11986: /* MUTANT (negate) */			if(!(nWritten < 1 && totalWritten < 1)){
11987: /* MUTANT (del_stmt) */ /* 				yaffsfs_SetError(-ENOSPC); */ 
11988: /* MUTANT (del_stmt) */ /* 				totalWritten = -1; */ 
11988: /* MUTANT (rep_const) */				totalWritten = 0;
11988: /* MUTANT (rep_const) */				totalWritten = 1;
11988: /* MUTANT (rep_const) */				totalWritten = ((-1)+1);
11988: /* MUTANT (rep_const) */				totalWritten = ((-1)-1);
11991: /* MUTANT (rep_op) */			if(nbyte <= 0){
11991: /* MUTANT (rep_op) */			if(nbyte < 0){
11991: /* MUTANT (rep_op) */			if(nbyte >= 0){
11991: /* MUTANT (rep_op) */			if(nbyte == 0){
11991: /* MUTANT (rep_op) */			if(nbyte != 0){
11991: /* MUTANT (rep_const) */			if(nbyte > 1){
11991: /* MUTANT (rep_const) */			if(nbyte > -1){
11991: /* MUTANT (negate) */			if(!(nbyte > 0)){
11992: /* MUTANT (del_stmt) */ /* 				yaffsfs_Unlock(); */ 
11993: /* MUTANT (del_stmt) */ /* 				yaffsfs_Lock(); */ 
11999: /* MUTANT (negate) */		if(!(!isPwrite)){
12000: /* MUTANT (rep_op) */			if(totalWritten <= 0)
12000: /* MUTANT (rep_op) */			if(totalWritten < 0)
12000: /* MUTANT (rep_op) */			if(totalWritten >= 0)
12000: /* MUTANT (rep_op) */			if(totalWritten == 0)
12000: /* MUTANT (rep_op) */			if(totalWritten != 0)
12000: /* MUTANT (rep_const) */			if(totalWritten > 1)
12000: /* MUTANT (rep_const) */			if(totalWritten > -1)
12000: /* MUTANT (negate) */			if(!(totalWritten > 0))
12001: /* MUTANT (rep_op) */				fd->position = startPos - totalWritten;
12001: /* MUTANT (rep_op) */				fd->position = startPos * totalWritten;
12001: /* MUTANT (rep_op) */				fd->position = startPos % totalWritten;
12009: /* MUTANT (del_stmt) */ /* 	return (totalWritten >= 0) ? totalWritten : -1; */ 
12009: /* MUTANT (rep_op) */	return (totalWritten <= 0) ? totalWritten : -1;
12009: /* MUTANT (rep_op) */	return (totalWritten < 0) ? totalWritten : -1;
12009: /* MUTANT (rep_op) */	return (totalWritten > 0) ? totalWritten : -1;
12009: /* MUTANT (rep_op) */	return (totalWritten == 0) ? totalWritten : -1;
12009: /* MUTANT (rep_op) */	return (totalWritten != 0) ? totalWritten : -1;
12009: /* MUTANT (rep_const) */	return (totalWritten >= 1) ? totalWritten : -1;
12009: /* MUTANT (rep_const) */	return (totalWritten >= -1) ? totalWritten : -1;
12009: /* MUTANT (rep_const) */	return (totalWritten >= 0) ? totalWritten : 0;
12009: /* MUTANT (rep_const) */	return (totalWritten >= 0) ? totalWritten : 1;
12009: /* MUTANT (rep_const) */	return (totalWritten >= 0) ? totalWritten : ((-1)+1);
12009: /* MUTANT (rep_const) */	return (totalWritten >= 0) ? totalWritten : ((-1)-1);
12014: /* MUTANT (del_stmt) */ /* 	return yaffsfs_do_write(fd, buf, nbyte, 0, 0); */ 
12014: /* MUTANT (rep_const) */	return yaffsfs_do_write(fd, buf, nbyte, 1, 0);
12014: /* MUTANT (rep_const) */	return yaffsfs_do_write(fd, buf, nbyte, -1, 0);
12014: /* MUTANT (rep_const) */	return yaffsfs_do_write(fd, buf, nbyte, 0, 1);
12014: /* MUTANT (rep_const) */	return yaffsfs_do_write(fd, buf, nbyte, 0, -1);
12019: /* MUTANT (del_stmt) */ /* 	return yaffsfs_do_write(fd, buf, nbyte, 1, offset); */ 
12019: /* MUTANT (rep_const) */	return yaffsfs_do_write(fd, buf, nbyte, 0, offset);
12019: /* MUTANT (rep_const) */	return yaffsfs_do_write(fd, buf, nbyte, -1, offset);
12019: /* MUTANT (rep_const) */	return yaffsfs_do_write(fd, buf, nbyte, ((1)+1), offset);
12025: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj = NULL; */ 
12026: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *dir = NULL; */ 
12027: /* MUTANT (del_stmt) */ /* 	int result = YAFFS_FAIL; */ 
12028: /* MUTANT (del_stmt) */ /* 	int notDir = 0; */ 
12028: /* MUTANT (rep_const) */	int notDir = 1;
12028: /* MUTANT (rep_const) */	int notDir = -1;
12029: /* MUTANT (del_stmt) */ /* 	int loop = 0; */ 
12029: /* MUTANT (rep_const) */	int loop = 1;
12029: /* MUTANT (rep_const) */	int loop = -1;
12031: /* MUTANT (negate) */	if(!(!path)){
12032: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EFAULT); */ 
12033: /* MUTANT (del_stmt) */ /* 		return -1; */ 
12033: /* MUTANT (rep_const) */		return 0;
12033: /* MUTANT (rep_const) */		return 1;
12033: /* MUTANT (rep_const) */		return ((-1)+1);
12033: /* MUTANT (rep_const) */		return ((-1)-1);
12036: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) <= 0){
12036: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) > 0){
12036: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) >= 0){
12036: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) == 0){
12036: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) != 0){
12036: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < 1){
12036: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < -1){
12036: /* MUTANT (negate) */	if(!(yaffsfs_CheckPath(path) < 0)){
12037: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-ENAMETOOLONG); */ 
12038: /* MUTANT (del_stmt) */ /* 		return -1; */ 
12038: /* MUTANT (rep_const) */		return 0;
12038: /* MUTANT (rep_const) */		return 1;
12038: /* MUTANT (rep_const) */		return ((-1)+1);
12038: /* MUTANT (rep_const) */		return ((-1)-1);
12043: /* MUTANT (del_stmt) */ /* 	obj = yaffsfs_FindObject(NULL,path,0,1,&dir,&notDir,&loop); */ 
12043: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,1,1,&dir,&notDir,&loop);
12043: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,-1,1,&dir,&notDir,&loop);
12043: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,0,0,&dir,&notDir,&loop);
12043: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,0,-1,&dir,&notDir,&loop);
12043: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,0,((1)+1),&dir,&notDir,&loop);
12044: /* MUTANT (del_stmt) */ /* 	obj = yaffsfs_FollowLink(obj,0,&loop); */ 
12044: /* MUTANT (rep_const) */	obj = yaffsfs_FollowLink(obj,1,&loop);
12044: /* MUTANT (rep_const) */	obj = yaffsfs_FollowLink(obj,-1,&loop);
12046: /* MUTANT (rep_op) */	if(!dir || notDir)
12046: /* MUTANT (negate) */	if(!(!dir && notDir))
12048: /* MUTANT (negate) */	else if(!(loop))
12050: /* MUTANT (rep_op) */	else if(!dir && !obj)
12050: /* MUTANT (negate) */	else if(!(!dir || !obj))
12052: /* MUTANT (negate) */	else if(!(obj->my_dev->read_only))
12054: /* MUTANT (rep_op) */	else if(obj->variant_type == YAFFS_OBJECT_TYPE_FILE)
12054: /* MUTANT (negate) */	else if(!(obj->variant_type != YAFFS_OBJECT_TYPE_FILE))
12056: /* MUTANT (negate) */	else if(!(obj->my_dev->read_only))
12058: /* MUTANT (rep_op) */	else if(new_size <= 0 || new_size > YAFFS_MAX_FILE_SIZE)
12058: /* MUTANT (rep_op) */	else if(new_size > 0 || new_size > YAFFS_MAX_FILE_SIZE)
12058: /* MUTANT (rep_op) */	else if(new_size >= 0 || new_size > YAFFS_MAX_FILE_SIZE)
12058: /* MUTANT (rep_op) */	else if(new_size == 0 || new_size > YAFFS_MAX_FILE_SIZE)
12058: /* MUTANT (rep_op) */	else if(new_size != 0 || new_size > YAFFS_MAX_FILE_SIZE)
12058: /* MUTANT (rep_op) */	else if(new_size < 0 && new_size > YAFFS_MAX_FILE_SIZE)
12058: /* MUTANT (rep_op) */	else if(new_size < 0 || new_size <= YAFFS_MAX_FILE_SIZE)
12058: /* MUTANT (rep_op) */	else if(new_size < 0 || new_size < YAFFS_MAX_FILE_SIZE)
12058: /* MUTANT (rep_op) */	else if(new_size < 0 || new_size >= YAFFS_MAX_FILE_SIZE)
12058: /* MUTANT (rep_op) */	else if(new_size < 0 || new_size == YAFFS_MAX_FILE_SIZE)
12058: /* MUTANT (rep_op) */	else if(new_size < 0 || new_size != YAFFS_MAX_FILE_SIZE)
12058: /* MUTANT (rep_const) */	else if(new_size < 1 || new_size > YAFFS_MAX_FILE_SIZE)
12058: /* MUTANT (rep_const) */	else if(new_size < -1 || new_size > YAFFS_MAX_FILE_SIZE)
12058: /* MUTANT (negate) */	else if(!(new_size < 0 || new_size > YAFFS_MAX_FILE_SIZE))
12063: /* MUTANT (del_stmt) */ /* 	yaffsfs_Unlock(); */ 
12065: /* MUTANT (del_stmt) */ /* 	return (result) ? 0 : -1; */ 
12065: /* MUTANT (rep_const) */	return (result) ? 1 : -1;
12065: /* MUTANT (rep_const) */	return (result) ? -1 : -1;
12065: /* MUTANT (rep_const) */	return (result) ? 0 : 0;
12065: /* MUTANT (rep_const) */	return (result) ? 0 : 1;
12065: /* MUTANT (rep_const) */	return (result) ? 0 : ((-1)+1);
12065: /* MUTANT (rep_const) */	return (result) ? 0 : ((-1)-1);
12070: /* MUTANT (del_stmt) */ /* 	yaffsfs_FileDes *fd = NULL; */ 
12071: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj = NULL; */ 
12072: /* MUTANT (del_stmt) */ /* 	int result = 0; */ 
12072: /* MUTANT (rep_const) */	int result = 1;
12072: /* MUTANT (rep_const) */	int result = -1;
12074: /* MUTANT (del_stmt) */ /* 	yaffsfs_Lock(); */ 
12075: /* MUTANT (del_stmt) */ /* 	fd = yaffsfs_HandleToFileDes(handle); */ 
12076: /* MUTANT (del_stmt) */ /* 	obj = yaffsfs_HandleToObject(handle); */ 
12078: /* MUTANT (rep_op) */	if(!fd && !obj)
12078: /* MUTANT (negate) */	if(!(!fd || !obj))
12081: /* MUTANT (negate) */	else if(!(!fd->writing))
12083: /* MUTANT (negate) */	else if(!(obj->my_dev->read_only))
12085: /* MUTANT (rep_op) */	else if( new_size <= 0 || new_size > YAFFS_MAX_FILE_SIZE)
12085: /* MUTANT (rep_op) */	else if( new_size > 0 || new_size > YAFFS_MAX_FILE_SIZE)
12085: /* MUTANT (rep_op) */	else if( new_size >= 0 || new_size > YAFFS_MAX_FILE_SIZE)
12085: /* MUTANT (rep_op) */	else if( new_size == 0 || new_size > YAFFS_MAX_FILE_SIZE)
12085: /* MUTANT (rep_op) */	else if( new_size != 0 || new_size > YAFFS_MAX_FILE_SIZE)
12085: /* MUTANT (rep_op) */	else if( new_size < 0 && new_size > YAFFS_MAX_FILE_SIZE)
12085: /* MUTANT (rep_op) */	else if( new_size < 0 || new_size <= YAFFS_MAX_FILE_SIZE)
12085: /* MUTANT (rep_op) */	else if( new_size < 0 || new_size < YAFFS_MAX_FILE_SIZE)
12085: /* MUTANT (rep_op) */	else if( new_size < 0 || new_size >= YAFFS_MAX_FILE_SIZE)
12085: /* MUTANT (rep_op) */	else if( new_size < 0 || new_size == YAFFS_MAX_FILE_SIZE)
12085: /* MUTANT (rep_op) */	else if( new_size < 0 || new_size != YAFFS_MAX_FILE_SIZE)
12085: /* MUTANT (rep_const) */	else if( new_size < 1 || new_size > YAFFS_MAX_FILE_SIZE)
12085: /* MUTANT (rep_const) */	else if( new_size < -1 || new_size > YAFFS_MAX_FILE_SIZE)
12085: /* MUTANT (negate) */	else if(!( new_size < 0 || new_size > YAFFS_MAX_FILE_SIZE))
12090: /* MUTANT (del_stmt) */ /* 	yaffsfs_Unlock(); */ 
12092: /* MUTANT (del_stmt) */ /* 	return (result) ? 0 : -1; */ 
12092: /* MUTANT (rep_const) */	return (result) ? 1 : -1;
12092: /* MUTANT (rep_const) */	return (result) ? -1 : -1;
12092: /* MUTANT (rep_const) */	return (result) ? 0 : 0;
12092: /* MUTANT (rep_const) */	return (result) ? 0 : 1;
12092: /* MUTANT (rep_const) */	return (result) ? 0 : ((-1)+1);
12092: /* MUTANT (rep_const) */	return (result) ? 0 : ((-1)-1);
12098: /* MUTANT (del_stmt) */ /* 	yaffsfs_FileDes *fd = NULL; */ 
12099: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj = NULL; */ 
12100: /* MUTANT (del_stmt) */ /* 	int pos = -1; */ 
12100: /* MUTANT (rep_const) */	int pos = 0;
12100: /* MUTANT (rep_const) */	int pos = 1;
12100: /* MUTANT (rep_const) */	int pos = ((-1)+1);
12100: /* MUTANT (rep_const) */	int pos = ((-1)-1);
12101: /* MUTANT (del_stmt) */ /* 	int fSize = -1; */ 
12101: /* MUTANT (rep_const) */	int fSize = 0;
12101: /* MUTANT (rep_const) */	int fSize = 1;
12101: /* MUTANT (rep_const) */	int fSize = ((-1)+1);
12101: /* MUTANT (rep_const) */	int fSize = ((-1)-1);
12103: /* MUTANT (del_stmt) */ /* 	yaffsfs_Lock(); */ 
12104: /* MUTANT (del_stmt) */ /* 	fd = yaffsfs_HandleToFileDes(handle); */ 
12105: /* MUTANT (del_stmt) */ /* 	obj = yaffsfs_HandleToObject(handle); */ 
12107: /* MUTANT (rep_op) */	if(!fd && !obj)
12107: /* MUTANT (negate) */	if(!(!fd || !obj))
12109: /* MUTANT (rep_op) */	else if(offset <= YAFFS_MAX_FILE_SIZE)
12109: /* MUTANT (rep_op) */	else if(offset < YAFFS_MAX_FILE_SIZE)
12109: /* MUTANT (rep_op) */	else if(offset >= YAFFS_MAX_FILE_SIZE)
12109: /* MUTANT (rep_op) */	else if(offset == YAFFS_MAX_FILE_SIZE)
12109: /* MUTANT (rep_op) */	else if(offset != YAFFS_MAX_FILE_SIZE)
12109: /* MUTANT (negate) */	else if(!(offset > YAFFS_MAX_FILE_SIZE))
12112: /* MUTANT (rep_op) */		if(whence != SEEK_SET){
12112: /* MUTANT (negate) */		if(!(whence == SEEK_SET)){
12113: /* MUTANT (rep_op) */			if(offset <= 0)
12113: /* MUTANT (rep_op) */			if(offset < 0)
12113: /* MUTANT (rep_op) */			if(offset > 0)
12113: /* MUTANT (rep_op) */			if(offset == 0)
12113: /* MUTANT (rep_op) */			if(offset != 0)
12113: /* MUTANT (rep_const) */			if(offset >= 1)
12113: /* MUTANT (rep_const) */			if(offset >= -1)
12113: /* MUTANT (negate) */			if(!(offset >= 0))
12115: /* MUTANT (rep_op) */		} else if(whence != SEEK_CUR) {
12115: /* MUTANT (negate) */		} else if(!(whence == SEEK_CUR)) {
12116: /* MUTANT (rep_op) */			if( (fd->position - offset) >= 0)
12116: /* MUTANT (rep_op) */			if( (fd->position * offset) >= 0)
12116: /* MUTANT (rep_op) */			if( (fd->position % offset) >= 0)
12116: /* MUTANT (rep_op) */			if( (fd->position + offset) <= 0)
12116: /* MUTANT (rep_op) */			if( (fd->position + offset) < 0)
12116: /* MUTANT (rep_op) */			if( (fd->position + offset) > 0)
12116: /* MUTANT (rep_op) */			if( (fd->position + offset) == 0)
12116: /* MUTANT (rep_op) */			if( (fd->position + offset) != 0)
12116: /* MUTANT (rep_const) */			if( (fd->position + offset) >= 1)
12116: /* MUTANT (rep_const) */			if( (fd->position + offset) >= -1)
12116: /* MUTANT (negate) */			if(!( (fd->position + offset) >= 0))
12117: /* MUTANT (rep_op) */				pos = (fd->position - offset);
12117: /* MUTANT (rep_op) */				pos = (fd->position * offset);
12117: /* MUTANT (rep_op) */				pos = (fd->position % offset);
12118: /* MUTANT (rep_op) */		} else if(whence != SEEK_END) {
12118: /* MUTANT (negate) */		} else if(!(whence == SEEK_END)) {
12119: /* MUTANT (del_stmt) */ /* 			fSize = yaffs_get_obj_length(obj); */ 
12120: /* MUTANT (rep_op) */			if(fSize <= 0 && (fSize + offset) >= 0)
12120: /* MUTANT (rep_op) */			if(fSize < 0 && (fSize + offset) >= 0)
12120: /* MUTANT (rep_op) */			if(fSize > 0 && (fSize + offset) >= 0)
12120: /* MUTANT (rep_op) */			if(fSize == 0 && (fSize + offset) >= 0)
12120: /* MUTANT (rep_op) */			if(fSize != 0 && (fSize + offset) >= 0)
12120: /* MUTANT (rep_op) */			if(fSize >= 0 || (fSize + offset) >= 0)
12120: /* MUTANT (rep_op) */			if(fSize >= 0 && (fSize - offset) >= 0)
12120: /* MUTANT (rep_op) */			if(fSize >= 0 && (fSize * offset) >= 0)
12120: /* MUTANT (rep_op) */			if(fSize >= 0 && (fSize % offset) >= 0)
12120: /* MUTANT (rep_op) */			if(fSize >= 0 && (fSize + offset) <= 0)
12120: /* MUTANT (rep_op) */			if(fSize >= 0 && (fSize + offset) < 0)
12120: /* MUTANT (rep_op) */			if(fSize >= 0 && (fSize + offset) > 0)
12120: /* MUTANT (rep_op) */			if(fSize >= 0 && (fSize + offset) == 0)
12120: /* MUTANT (rep_op) */			if(fSize >= 0 && (fSize + offset) != 0)
12120: /* MUTANT (rep_const) */			if(fSize >= 1 && (fSize + offset) >= 0)
12120: /* MUTANT (rep_const) */			if(fSize >= -1 && (fSize + offset) >= 0)
12120: /* MUTANT (rep_const) */			if(fSize >= 0 && (fSize + offset) >= 1)
12120: /* MUTANT (rep_const) */			if(fSize >= 0 && (fSize + offset) >= -1)
12120: /* MUTANT (negate) */			if(!(fSize >= 0 && (fSize + offset) >= 0))
12121: /* MUTANT (rep_op) */				pos = fSize - offset;
12121: /* MUTANT (rep_op) */				pos = fSize * offset;
12121: /* MUTANT (rep_op) */				pos = fSize % offset;
12124: /* MUTANT (rep_op) */		if(pos <= 0 && pos <= YAFFS_MAX_FILE_SIZE)
12124: /* MUTANT (rep_op) */		if(pos < 0 && pos <= YAFFS_MAX_FILE_SIZE)
12124: /* MUTANT (rep_op) */		if(pos > 0 && pos <= YAFFS_MAX_FILE_SIZE)
12124: /* MUTANT (rep_op) */		if(pos == 0 && pos <= YAFFS_MAX_FILE_SIZE)
12124: /* MUTANT (rep_op) */		if(pos != 0 && pos <= YAFFS_MAX_FILE_SIZE)
12124: /* MUTANT (rep_op) */		if(pos >= 0 || pos <= YAFFS_MAX_FILE_SIZE)
12124: /* MUTANT (rep_op) */		if(pos >= 0 && pos < YAFFS_MAX_FILE_SIZE)
12124: /* MUTANT (rep_op) */		if(pos >= 0 && pos > YAFFS_MAX_FILE_SIZE)
12124: /* MUTANT (rep_op) */		if(pos >= 0 && pos >= YAFFS_MAX_FILE_SIZE)
12124: /* MUTANT (rep_op) */		if(pos >= 0 && pos == YAFFS_MAX_FILE_SIZE)
12124: /* MUTANT (rep_op) */		if(pos >= 0 && pos != YAFFS_MAX_FILE_SIZE)
12124: /* MUTANT (rep_const) */		if(pos >= 1 && pos <= YAFFS_MAX_FILE_SIZE)
12124: /* MUTANT (rep_const) */		if(pos >= -1 && pos <= YAFFS_MAX_FILE_SIZE)
12124: /* MUTANT (negate) */		if(!(pos >= 0 && pos <= YAFFS_MAX_FILE_SIZE))
12127: /* MUTANT (del_stmt) */ /* 			yaffsfs_SetError(-EINVAL); */ 
12128: /* MUTANT (del_stmt) */ /* 			pos = -1; */ 
12128: /* MUTANT (rep_const) */			pos = 0;
12128: /* MUTANT (rep_const) */			pos = 1;
12128: /* MUTANT (rep_const) */			pos = ((-1)+1);
12128: /* MUTANT (rep_const) */			pos = ((-1)-1);
12134: /* MUTANT (del_stmt) */ /* 	return pos; */ 
12140: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *dir = NULL; */ 
12141: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj = NULL; */ 
12142: /* MUTANT (del_stmt) */ /* 	YCHAR *name; */ 
12143: /* MUTANT (del_stmt) */ /* 	int result = YAFFS_FAIL; */ 
12144: /* MUTANT (del_stmt) */ /* 	int notDir = 0; */ 
12144: /* MUTANT (rep_const) */	int notDir = 1;
12144: /* MUTANT (rep_const) */	int notDir = -1;
12145: /* MUTANT (del_stmt) */ /* 	int loop = 0; */ 
12145: /* MUTANT (rep_const) */	int loop = 1;
12145: /* MUTANT (rep_const) */	int loop = -1;
12147: /* MUTANT (negate) */	if(!(!path)){
12148: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EFAULT); */ 
12149: /* MUTANT (del_stmt) */ /* 		return -1; */ 
12149: /* MUTANT (rep_const) */		return 0;
12149: /* MUTANT (rep_const) */		return 1;
12149: /* MUTANT (rep_const) */		return ((-1)+1);
12149: /* MUTANT (rep_const) */		return ((-1)-1);
12152: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) <= 0){
12152: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) > 0){
12152: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) >= 0){
12152: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) == 0){
12152: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) != 0){
12152: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < 1){
12152: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < -1){
12152: /* MUTANT (negate) */	if(!(yaffsfs_CheckPath(path) < 0)){
12153: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-ENAMETOOLONG); */ 
12154: /* MUTANT (del_stmt) */ /* 		return -1; */ 
12154: /* MUTANT (rep_const) */		return 0;
12154: /* MUTANT (rep_const) */		return 1;
12154: /* MUTANT (rep_const) */		return ((-1)+1);
12154: /* MUTANT (rep_const) */		return ((-1)-1);
12159: /* MUTANT (del_stmt) */ /* 	obj = yaffsfs_FindObject(NULL,path,0,0,NULL,NULL,NULL); */ 
12159: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,1,0,NULL,NULL,NULL);
12159: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,-1,0,NULL,NULL,NULL);
12159: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,0,1,NULL,NULL,NULL);
12159: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,0,-1,NULL,NULL,NULL);
12160: /* MUTANT (del_stmt) */ /* 	dir = yaffsfs_FindDirectory(NULL,path,&name,0,&notDir,&loop); */ 
12160: /* MUTANT (rep_const) */	dir = yaffsfs_FindDirectory(NULL,path,&name,1,&notDir,&loop);
12160: /* MUTANT (rep_const) */	dir = yaffsfs_FindDirectory(NULL,path,&name,-1,&notDir,&loop);
12162: /* MUTANT (rep_op) */	if(!dir || notDir)
12162: /* MUTANT (negate) */	if(!(!dir && notDir))
12164: /* MUTANT (negate) */	else if(!(loop))
12166: /* MUTANT (negate) */	else if(!(!dir))
12168: /* MUTANT (rep_op) */	else if(mystrncmp(name,_Y("."),2) != 0)
12168: /* MUTANT (rep_const) */	else if(mystrncmp(name,_Y("."),0) == 0)
12168: /* MUTANT (rep_const) */	else if(mystrncmp(name,_Y("."),1) == 0)
12168: /* MUTANT (rep_const) */	else if(mystrncmp(name,_Y("."),-1) == 0)
12168: /* MUTANT (rep_const) */	else if(mystrncmp(name,_Y("."),((2)+1)) == 0)
12168: /* MUTANT (rep_const) */	else if(mystrncmp(name,_Y("."),((2)-1)) == 0)
12168: /* MUTANT (rep_const) */	else if(mystrncmp(name,_Y("."),2) == 1)
12168: /* MUTANT (rep_const) */	else if(mystrncmp(name,_Y("."),2) == -1)
12168: /* MUTANT (negate) */	else if(!(mystrncmp(name,_Y("."),2) == 0))
12170: /* MUTANT (negate) */	else if(!(!obj))
12172: /* MUTANT (negate) */	else if(!(obj->my_dev->read_only))
12174: /* MUTANT (rep_op) */	else if(!isDirectory || obj->variant_type == YAFFS_OBJECT_TYPE_DIRECTORY)
12174: /* MUTANT (rep_op) */	else if(!isDirectory && obj->variant_type != YAFFS_OBJECT_TYPE_DIRECTORY)
12174: /* MUTANT (negate) */	else if(!(!isDirectory && obj->variant_type == YAFFS_OBJECT_TYPE_DIRECTORY))
12176: /* MUTANT (rep_op) */	else if(isDirectory || obj->variant_type != YAFFS_OBJECT_TYPE_DIRECTORY)
12176: /* MUTANT (rep_op) */	else if(isDirectory && obj->variant_type == YAFFS_OBJECT_TYPE_DIRECTORY)
12176: /* MUTANT (negate) */	else if(!(isDirectory && obj->variant_type != YAFFS_OBJECT_TYPE_DIRECTORY))
12178: /* MUTANT (rep_op) */	else if(isDirectory || obj == obj->my_dev->root_dir)
12178: /* MUTANT (rep_op) */	else if(isDirectory && obj != obj->my_dev->root_dir)
12178: /* MUTANT (negate) */	else if(!(isDirectory && obj == obj->my_dev->root_dir))
12181: /* MUTANT (del_stmt) */ /* 		result = yaffs_unlinker(dir,name); */ 
12183: /* MUTANT (rep_op) */		if(result != YAFFS_FAIL && isDirectory)
12183: /* MUTANT (rep_op) */		if(result == YAFFS_FAIL || isDirectory)
12183: /* MUTANT (negate) */		if(!(result == YAFFS_FAIL && isDirectory))
12189: /* MUTANT (del_stmt) */ /* 	return (result == YAFFS_FAIL) ? -1 : 0; */ 
12189: /* MUTANT (rep_op) */	return (result != YAFFS_FAIL) ? -1 : 0;
12189: /* MUTANT (rep_const) */	return (result == YAFFS_FAIL) ? 0 : 0;
12189: /* MUTANT (rep_const) */	return (result == YAFFS_FAIL) ? 1 : 0;
12189: /* MUTANT (rep_const) */	return (result == YAFFS_FAIL) ? ((-1)+1) : 0;
12189: /* MUTANT (rep_const) */	return (result == YAFFS_FAIL) ? ((-1)-1) : 0;
12189: /* MUTANT (rep_const) */	return (result == YAFFS_FAIL) ? -1 : 1;
12189: /* MUTANT (rep_const) */	return (result == YAFFS_FAIL) ? -1 : -1;
12195: /* MUTANT (del_stmt) */ /* 	return yaffsfs_DoUnlink(path,0); */ 
12195: /* MUTANT (rep_const) */	return yaffsfs_DoUnlink(path,1);
12195: /* MUTANT (rep_const) */	return yaffsfs_DoUnlink(path,-1);
12200: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *olddir = NULL; */ 
12201: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *newdir = NULL; */ 
12202: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj = NULL; */ 
12203: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *newobj = NULL; */ 
12204: /* MUTANT (del_stmt) */ /* 	YCHAR *oldname; */ 
12205: /* MUTANT (del_stmt) */ /* 	YCHAR *newname; */ 
12206: /* MUTANT (del_stmt) */ /* 	int result= YAFFS_FAIL; */ 
12207: /* MUTANT (del_stmt) */ /* 	int rename_allowed = 1; */ 
12207: /* MUTANT (rep_const) */	int rename_allowed = 0;
12207: /* MUTANT (rep_const) */	int rename_allowed = -1;
12207: /* MUTANT (rep_const) */	int rename_allowed = ((1)+1);
12208: /* MUTANT (del_stmt) */ /* 	int notOldDir = 0; */ 
12208: /* MUTANT (rep_const) */	int notOldDir = 1;
12208: /* MUTANT (rep_const) */	int notOldDir = -1;
12209: /* MUTANT (del_stmt) */ /* 	int notNewDir = 0; */ 
12209: /* MUTANT (rep_const) */	int notNewDir = 1;
12209: /* MUTANT (rep_const) */	int notNewDir = -1;
12210: /* MUTANT (del_stmt) */ /* 	int oldLoop = 0; */ 
12210: /* MUTANT (rep_const) */	int oldLoop = 1;
12210: /* MUTANT (rep_const) */	int oldLoop = -1;
12211: /* MUTANT (del_stmt) */ /* 	int newLoop = 0; */ 
12211: /* MUTANT (rep_const) */	int newLoop = 1;
12211: /* MUTANT (rep_const) */	int newLoop = -1;
12213: /* MUTANT (del_stmt) */ /* 	YCHAR *alt_newpath=NULL; */ 
12215: /* MUTANT (rep_op) */	if(!oldPath && !newPath){
12215: /* MUTANT (negate) */	if(!(!oldPath || !newPath)){
12216: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EFAULT); */ 
12217: /* MUTANT (del_stmt) */ /* 		return -1; */ 
12217: /* MUTANT (rep_const) */		return 0;
12217: /* MUTANT (rep_const) */		return 1;
12217: /* MUTANT (rep_const) */		return ((-1)+1);
12217: /* MUTANT (rep_const) */		return ((-1)-1);
12220: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(oldPath) <= 0 ||
12220: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(oldPath) > 0 ||
12220: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(oldPath) >= 0 ||
12220: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(oldPath) == 0 ||
12220: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(oldPath) != 0 ||
12220: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(oldPath) < 0 &&
12220: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(oldPath) < 1 ||
12220: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(oldPath) < -1 ||
12221: /* MUTANT (rep_op) */		yaffsfs_CheckPath(newPath) <= 0){
12221: /* MUTANT (rep_op) */		yaffsfs_CheckPath(newPath) > 0){
12221: /* MUTANT (rep_op) */		yaffsfs_CheckPath(newPath) >= 0){
12221: /* MUTANT (rep_op) */		yaffsfs_CheckPath(newPath) == 0){
12221: /* MUTANT (rep_op) */		yaffsfs_CheckPath(newPath) != 0){
12221: /* MUTANT (rep_const) */		yaffsfs_CheckPath(newPath) < 1){
12221: /* MUTANT (rep_const) */		yaffsfs_CheckPath(newPath) < -1){
12222: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-ENAMETOOLONG); */ 
12223: /* MUTANT (del_stmt) */ /* 		return -1; */ 
12223: /* MUTANT (rep_const) */		return 0;
12223: /* MUTANT (rep_const) */		return 1;
12223: /* MUTANT (rep_const) */		return ((-1)+1);
12223: /* MUTANT (rep_const) */		return ((-1)-1);
12226: /* MUTANT (rep_op) */	if(yaffsfs_alt_dir_path(newPath, &alt_newpath) <= 0){
12226: /* MUTANT (rep_op) */	if(yaffsfs_alt_dir_path(newPath, &alt_newpath) > 0){
12226: /* MUTANT (rep_op) */	if(yaffsfs_alt_dir_path(newPath, &alt_newpath) >= 0){
12226: /* MUTANT (rep_op) */	if(yaffsfs_alt_dir_path(newPath, &alt_newpath) == 0){
12226: /* MUTANT (rep_op) */	if(yaffsfs_alt_dir_path(newPath, &alt_newpath) != 0){
12226: /* MUTANT (rep_const) */	if(yaffsfs_alt_dir_path(newPath, &alt_newpath) < 1){
12226: /* MUTANT (rep_const) */	if(yaffsfs_alt_dir_path(newPath, &alt_newpath) < -1){
12226: /* MUTANT (negate) */	if(!(yaffsfs_alt_dir_path(newPath, &alt_newpath) < 0)){
12227: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-ENOMEM); */ 
12228: /* MUTANT (del_stmt) */ /* 		return -1; */ 
12228: /* MUTANT (rep_const) */		return 0;
12228: /* MUTANT (rep_const) */		return 1;
12228: /* MUTANT (rep_const) */		return ((-1)+1);
12228: /* MUTANT (rep_const) */		return ((-1)-1);
12230: /* MUTANT (negate) */	if(!(alt_newpath))
12233: /* MUTANT (del_stmt) */ /* 	yaffsfs_Lock(); */ 
12236: /* MUTANT (del_stmt) */ /* 	olddir = yaffsfs_FindDirectory(NULL,oldPath,&oldname,0,&notOldDir,&oldLoop); */ 
12236: /* MUTANT (rep_const) */	olddir = yaffsfs_FindDirectory(NULL,oldPath,&oldname,1,&notOldDir,&oldLoop);
12236: /* MUTANT (rep_const) */	olddir = yaffsfs_FindDirectory(NULL,oldPath,&oldname,-1,&notOldDir,&oldLoop);
12237: /* MUTANT (del_stmt) */ /* 	newdir = yaffsfs_FindDirectory(NULL,newPath,&newname,0,&notNewDir,&newLoop); */ 
12237: /* MUTANT (rep_const) */	newdir = yaffsfs_FindDirectory(NULL,newPath,&newname,1,&notNewDir,&newLoop);
12237: /* MUTANT (rep_const) */	newdir = yaffsfs_FindDirectory(NULL,newPath,&newname,-1,&notNewDir,&newLoop);
12238: /* MUTANT (del_stmt) */ /* 	obj = yaffsfs_FindObject(NULL,oldPath,0,0,NULL,NULL,NULL); */ 
12238: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,oldPath,1,0,NULL,NULL,NULL);
12238: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,oldPath,-1,0,NULL,NULL,NULL);
12238: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,oldPath,0,1,NULL,NULL,NULL);
12238: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,oldPath,0,-1,NULL,NULL,NULL);
12239: /* MUTANT (del_stmt) */ /* 	newobj = yaffsfs_FindObject(NULL,newPath,0,0,NULL,NULL,NULL); */ 
12239: /* MUTANT (rep_const) */	newobj = yaffsfs_FindObject(NULL,newPath,1,0,NULL,NULL,NULL);
12239: /* MUTANT (rep_const) */	newobj = yaffsfs_FindObject(NULL,newPath,-1,0,NULL,NULL,NULL);
12239: /* MUTANT (rep_const) */	newobj = yaffsfs_FindObject(NULL,newPath,0,1,NULL,NULL,NULL);
12239: /* MUTANT (rep_const) */	newobj = yaffsfs_FindObject(NULL,newPath,0,-1,NULL,NULL,NULL);
12247: /* MUTANT (rep_op) */	if(olddir != obj)
12247: /* MUTANT (negate) */	if(!(olddir == obj))
12250: /* MUTANT (rep_op) */	if((!olddir || notOldDir) || (!newdir && notNewDir)) {
12250: /* MUTANT (rep_op) */	if((!olddir && notOldDir) && (!newdir && notNewDir)) {
12250: /* MUTANT (rep_op) */	if((!olddir && notOldDir) || (!newdir || notNewDir)) {
12250: /* MUTANT (negate) */	if(!((!olddir && notOldDir) || (!newdir && notNewDir))) {
12251: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-ENOTDIR); */ 
12252: /* MUTANT (del_stmt) */ /* 		rename_allowed = 0; */ 
12252: /* MUTANT (rep_const) */		rename_allowed = 1;
12252: /* MUTANT (rep_const) */		rename_allowed = -1;
12253: /* MUTANT (rep_op) */	} else if(oldLoop && newLoop) {
12253: /* MUTANT (negate) */	} else if(!(oldLoop || newLoop)) {
12254: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-ELOOP); */ 
12255: /* MUTANT (del_stmt) */ /* 		rename_allowed = 0; */ 
12255: /* MUTANT (rep_const) */		rename_allowed = 1;
12255: /* MUTANT (rep_const) */		rename_allowed = -1;
12256: /* MUTANT (rep_op) */	} else if (olddir || oldname && mystrncmp(oldname, _Y("."),2) == 0){
12256: /* MUTANT (rep_op) */	} else if (olddir && oldname || mystrncmp(oldname, _Y("."),2) == 0){
12256: /* MUTANT (rep_op) */	} else if (olddir && oldname && mystrncmp(oldname, _Y("."),2) != 0){
12256: /* MUTANT (rep_const) */	} else if (olddir && oldname && mystrncmp(oldname, _Y("."),0) == 0){
12256: /* MUTANT (rep_const) */	} else if (olddir && oldname && mystrncmp(oldname, _Y("."),1) == 0){
12256: /* MUTANT (rep_const) */	} else if (olddir && oldname && mystrncmp(oldname, _Y("."),-1) == 0){
12256: /* MUTANT (rep_const) */	} else if (olddir && oldname && mystrncmp(oldname, _Y("."),((2)+1)) == 0){
12256: /* MUTANT (rep_const) */	} else if (olddir && oldname && mystrncmp(oldname, _Y("."),((2)-1)) == 0){
12256: /* MUTANT (rep_const) */	} else if (olddir && oldname && mystrncmp(oldname, _Y("."),2) == 1){
12256: /* MUTANT (rep_const) */	} else if (olddir && oldname && mystrncmp(oldname, _Y("."),2) == -1){
12256: /* MUTANT (negate) */	} else if(! (olddir && oldname && mystrncmp(oldname, _Y("."),2) == 0)){
12257: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EINVAL); */ 
12258: /* MUTANT (del_stmt) */ /* 		rename_allowed = 0; */ 
12258: /* MUTANT (rep_const) */		rename_allowed = 1;
12258: /* MUTANT (rep_const) */		rename_allowed = -1;
12259: /* MUTANT (rep_op) */	}else if(!olddir && !newdir || !obj) {
12259: /* MUTANT (rep_op) */	}else if(!olddir || !newdir && !obj) {
12259: /* MUTANT (negate) */	}else if(!(!olddir || !newdir || !obj)) {
12260: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-ENOENT); */ 
12261: /* MUTANT (del_stmt) */ /* 		rename_allowed = 0; */ 
12261: /* MUTANT (rep_const) */		rename_allowed = 1;
12261: /* MUTANT (rep_const) */		rename_allowed = -1;
12262: /* MUTANT (negate) */	} else if(!(obj->my_dev->read_only)){
12263: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EROFS); */ 
12264: /* MUTANT (del_stmt) */ /* 		rename_allowed = 0; */ 
12264: /* MUTANT (rep_const) */		rename_allowed = 1;
12264: /* MUTANT (rep_const) */		rename_allowed = -1;
12265: /* MUTANT (negate) */	} else if(!(yaffs_is_non_empty_dir(newobj))){
12266: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-ENOTEMPTY); */ 
12267: /* MUTANT (del_stmt) */ /* 		rename_allowed = 0; */ 
12267: /* MUTANT (rep_const) */		rename_allowed = 1;
12267: /* MUTANT (rep_const) */		rename_allowed = -1;
12268: /* MUTANT (rep_op) */	} else if(olddir->my_dev == newdir->my_dev) {
12268: /* MUTANT (negate) */	} else if(!(olddir->my_dev != newdir->my_dev)) {
12270: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EXDEV); */ 
12271: /* MUTANT (del_stmt) */ /* 		rename_allowed = 0; */ 
12271: /* MUTANT (rep_const) */		rename_allowed = 1;
12271: /* MUTANT (rep_const) */		rename_allowed = -1;
12272: /* MUTANT (rep_op) */	} else if(obj || obj->variant_type == YAFFS_OBJECT_TYPE_DIRECTORY) {
12272: /* MUTANT (rep_op) */	} else if(obj && obj->variant_type != YAFFS_OBJECT_TYPE_DIRECTORY) {
12272: /* MUTANT (negate) */	} else if(!(obj && obj->variant_type == YAFFS_OBJECT_TYPE_DIRECTORY)) {
12280: /* MUTANT (del_stmt) */ /* 		struct yaffs_obj *xx = newdir; */ 
12282: /* MUTANT (rep_op) */		while( rename_allowed || xx){
12282: /* MUTANT (negate) */		while(!( rename_allowed && xx)){
12283: /* MUTANT (rep_op) */			if(xx != obj)
12283: /* MUTANT (negate) */			if(!(xx == obj))
12284: /* MUTANT (rep_const) */				rename_allowed = 1;
12284: /* MUTANT (rep_const) */				rename_allowed = -1;
12285: /* MUTANT (del_stmt) */ /* 			xx = xx->parent; */ 
12287: /* MUTANT (negate) */		if(!(!rename_allowed))
12291: /* MUTANT (negate) */	if(!(rename_allowed))
12294: /* MUTANT (del_stmt) */ /* 	yaffsfs_Unlock(); */ 
12296: /* MUTANT (negate) */	if(!(alt_newpath))
12299: /* MUTANT (del_stmt) */ /* 	return (result == YAFFS_FAIL) ? -1 : 0; */ 
12299: /* MUTANT (rep_op) */	return (result != YAFFS_FAIL) ? -1 : 0;
12299: /* MUTANT (rep_const) */	return (result == YAFFS_FAIL) ? 0 : 0;
12299: /* MUTANT (rep_const) */	return (result == YAFFS_FAIL) ? 1 : 0;
12299: /* MUTANT (rep_const) */	return (result == YAFFS_FAIL) ? ((-1)+1) : 0;
12299: /* MUTANT (rep_const) */	return (result == YAFFS_FAIL) ? ((-1)-1) : 0;
12299: /* MUTANT (rep_const) */	return (result == YAFFS_FAIL) ? -1 : 1;
12299: /* MUTANT (rep_const) */	return (result == YAFFS_FAIL) ? -1 : -1;
12305: /* MUTANT (del_stmt) */ /* 	int retVal = -1; */ 
12305: /* MUTANT (rep_const) */	int retVal = 0;
12305: /* MUTANT (rep_const) */	int retVal = 1;
12305: /* MUTANT (rep_const) */	int retVal = ((-1)+1);
12305: /* MUTANT (rep_const) */	int retVal = ((-1)-1);
12307: /* MUTANT (del_stmt) */ /* 	obj = yaffs_get_equivalent_obj(obj); */ 
12309: /* MUTANT (rep_op) */	if(obj || buf){
12309: /* MUTANT (negate) */	if(!(obj && buf)){
12310: /* MUTANT (del_stmt) */ /* 	    	buf->st_dev = (int)obj->my_dev->os_context; */ 
12311: /* MUTANT (del_stmt) */ /* 	    	buf->st_ino = obj->obj_id; */ 
12312: /* MUTANT (del_stmt) */ /* 	    	buf->st_mode = obj->yst_mode & ~S_IFMT; */  /* clear out file type bits */
12314: /* MUTANT (rep_op) */	    	if(obj->variant_type != YAFFS_OBJECT_TYPE_DIRECTORY)
12314: /* MUTANT (negate) */	    	if(!(obj->variant_type == YAFFS_OBJECT_TYPE_DIRECTORY))
12316: /* MUTANT (rep_op) */		else if(obj->variant_type != YAFFS_OBJECT_TYPE_SYMLINK)
12316: /* MUTANT (negate) */		else if(!(obj->variant_type == YAFFS_OBJECT_TYPE_SYMLINK))
12318: /* MUTANT (rep_op) */		else if(obj->variant_type != YAFFS_OBJECT_TYPE_FILE)
12318: /* MUTANT (negate) */		else if(!(obj->variant_type == YAFFS_OBJECT_TYPE_FILE))
12321: /* MUTANT (del_stmt) */ /* 	    	buf->st_nlink = yaffs_get_obj_link_count(obj); */ 
12322: /* MUTANT (del_stmt) */ /* 	    	buf->st_uid = 0; */ 
12322: /* MUTANT (rep_const) */	    	buf->st_uid = 1;
12322: /* MUTANT (rep_const) */	    	buf->st_uid = -1;
12323: /* MUTANT (del_stmt) */ /* 	    	buf->st_gid = 0; */ ;
12323: /* MUTANT (del_stmt) */ /* 	    	buf->st_gid = 0; */  /* ; */ 
12323: /* MUTANT (del_stmt) */	    	buf->st_gid = 0; /* ; */ 
12323: /* MUTANT (rep_const) */	    	buf->st_gid = 1;;
12323: /* MUTANT (rep_const) */	    	buf->st_gid = -1;;
12324: /* MUTANT (del_stmt) */ /* 	    	buf->st_rdev = obj->yst_rdev; */ 
12325: /* MUTANT (del_stmt) */ /* 	    	buf->st_size = yaffs_get_obj_length(obj); */ 
12326: /* MUTANT (del_stmt) */ /* 	    	buf->st_blksize = obj->my_dev->data_bytes_per_chunk; */ 
12327: /* MUTANT (del_stmt) */ /* 	    	buf->st_blocks = (buf->st_size + buf->st_blksize -1)/buf->st_blksize; */ 
12327: /* MUTANT (rep_op) */	    	buf->st_blocks = (buf->st_size - buf->st_blksize -1)/buf->st_blksize;
12327: /* MUTANT (rep_op) */	    	buf->st_blocks = (buf->st_size * buf->st_blksize -1)/buf->st_blksize;
12327: /* MUTANT (rep_op) */	    	buf->st_blocks = (buf->st_size % buf->st_blksize -1)/buf->st_blksize;
12327: /* MUTANT (rep_const) */	    	buf->st_blocks = (buf->st_size + buf->st_blksize 0)/buf->st_blksize;
12327: /* MUTANT (rep_const) */	    	buf->st_blocks = (buf->st_size + buf->st_blksize 1)/buf->st_blksize;
12327: /* MUTANT (rep_const) */	    	buf->st_blocks = (buf->st_size + buf->st_blksize ((-1)+1))/buf->st_blksize;
12327: /* MUTANT (rep_const) */	    	buf->st_blocks = (buf->st_size + buf->st_blksize ((-1)-1))/buf->st_blksize;
12329: /* MUTANT (rep_const) */		buf->yst_wince_atime[1] = obj->win_atime[0];
12329: /* MUTANT (rep_const) */		buf->yst_wince_atime[-1] = obj->win_atime[0];
12329: /* MUTANT (rep_const) */		buf->yst_wince_atime[0] = obj->win_atime[1];
12329: /* MUTANT (rep_const) */		buf->yst_wince_atime[0] = obj->win_atime[-1];
12330: /* MUTANT (del_stmt) */ /* 		buf->yst_wince_atime[1] = obj->win_atime[1]; */ 
12330: /* MUTANT (rep_const) */		buf->yst_wince_atime[0] = obj->win_atime[1];
12330: /* MUTANT (rep_const) */		buf->yst_wince_atime[-1] = obj->win_atime[1];
12330: /* MUTANT (rep_const) */		buf->yst_wince_atime[((1)+1)] = obj->win_atime[1];
12330: /* MUTANT (rep_const) */		buf->yst_wince_atime[1] = obj->win_atime[0];
12330: /* MUTANT (rep_const) */		buf->yst_wince_atime[1] = obj->win_atime[-1];
12330: /* MUTANT (rep_const) */		buf->yst_wince_atime[1] = obj->win_atime[((1)+1)];
12331: /* MUTANT (del_stmt) */ /* 		buf->yst_wince_ctime[0] = obj->win_ctime[0]; */ 
12331: /* MUTANT (rep_const) */		buf->yst_wince_ctime[1] = obj->win_ctime[0];
12331: /* MUTANT (rep_const) */		buf->yst_wince_ctime[-1] = obj->win_ctime[0];
12331: /* MUTANT (rep_const) */		buf->yst_wince_ctime[0] = obj->win_ctime[1];
12331: /* MUTANT (rep_const) */		buf->yst_wince_ctime[0] = obj->win_ctime[-1];
12332: /* MUTANT (del_stmt) */ /* 		buf->yst_wince_ctime[1] = obj->win_ctime[1]; */ 
12332: /* MUTANT (rep_const) */		buf->yst_wince_ctime[0] = obj->win_ctime[1];
12332: /* MUTANT (rep_const) */		buf->yst_wince_ctime[-1] = obj->win_ctime[1];
12332: /* MUTANT (rep_const) */		buf->yst_wince_ctime[((1)+1)] = obj->win_ctime[1];
12332: /* MUTANT (rep_const) */		buf->yst_wince_ctime[1] = obj->win_ctime[0];
12332: /* MUTANT (rep_const) */		buf->yst_wince_ctime[1] = obj->win_ctime[-1];
12332: /* MUTANT (rep_const) */		buf->yst_wince_ctime[1] = obj->win_ctime[((1)+1)];
12333: /* MUTANT (del_stmt) */ /* 		buf->yst_wince_mtime[0] = obj->win_mtime[0]; */ 
12333: /* MUTANT (rep_const) */		buf->yst_wince_mtime[1] = obj->win_mtime[0];
12333: /* MUTANT (rep_const) */		buf->yst_wince_mtime[-1] = obj->win_mtime[0];
12333: /* MUTANT (rep_const) */		buf->yst_wince_mtime[0] = obj->win_mtime[1];
12333: /* MUTANT (rep_const) */		buf->yst_wince_mtime[0] = obj->win_mtime[-1];
12334: /* MUTANT (del_stmt) */ /* 		buf->yst_wince_mtime[1] = obj->win_mtime[1]; */ 
12334: /* MUTANT (rep_const) */		buf->yst_wince_mtime[0] = obj->win_mtime[1];
12334: /* MUTANT (rep_const) */		buf->yst_wince_mtime[-1] = obj->win_mtime[1];
12334: /* MUTANT (rep_const) */		buf->yst_wince_mtime[((1)+1)] = obj->win_mtime[1];
12334: /* MUTANT (rep_const) */		buf->yst_wince_mtime[1] = obj->win_mtime[0];
12334: /* MUTANT (rep_const) */		buf->yst_wince_mtime[1] = obj->win_mtime[-1];
12334: /* MUTANT (rep_const) */		buf->yst_wince_mtime[1] = obj->win_mtime[((1)+1)];
12337: /* MUTANT (del_stmt) */ /* 	    	buf->yst_ctime = obj->yst_ctime; */ 
12338: /* MUTANT (del_stmt) */ /* 	    	buf->yst_mtime = obj->yst_mtime; */ 
12340: /* MUTANT (rep_const) */		retVal = 1;
12340: /* MUTANT (rep_const) */		retVal = -1;
12347: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj=NULL; */ 
12348: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *dir=NULL; */ 
12349: /* MUTANT (del_stmt) */ /* 	int retVal = -1; */ 
12349: /* MUTANT (rep_const) */	int retVal = 0;
12349: /* MUTANT (rep_const) */	int retVal = 1;
12349: /* MUTANT (rep_const) */	int retVal = ((-1)+1);
12349: /* MUTANT (rep_const) */	int retVal = ((-1)-1);
12350: /* MUTANT (del_stmt) */ /* 	int notDir = 0; */ 
12350: /* MUTANT (rep_const) */	int notDir = 1;
12350: /* MUTANT (rep_const) */	int notDir = -1;
12351: /* MUTANT (del_stmt) */ /* 	int loop = 0; */ 
12351: /* MUTANT (rep_const) */	int loop = 1;
12351: /* MUTANT (rep_const) */	int loop = -1;
12353: /* MUTANT (rep_op) */	if(!path && !buf){
12353: /* MUTANT (negate) */	if(!(!path || !buf)){
12354: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EFAULT); */ 
12355: /* MUTANT (del_stmt) */ /* 		return -1; */ 
12355: /* MUTANT (rep_const) */		return 0;
12355: /* MUTANT (rep_const) */		return 1;
12355: /* MUTANT (rep_const) */		return ((-1)+1);
12355: /* MUTANT (rep_const) */		return ((-1)-1);
12358: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) <= 0){
12358: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) > 0){
12358: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) >= 0){
12358: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) == 0){
12358: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) != 0){
12358: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < 1){
12358: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < -1){
12358: /* MUTANT (negate) */	if(!(yaffsfs_CheckPath(path) < 0)){
12359: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-ENAMETOOLONG); */ 
12360: /* MUTANT (del_stmt) */ /* 		return -1; */ 
12360: /* MUTANT (rep_const) */		return 0;
12360: /* MUTANT (rep_const) */		return 1;
12360: /* MUTANT (rep_const) */		return ((-1)+1);
12360: /* MUTANT (rep_const) */		return ((-1)-1);
12365: /* MUTANT (del_stmt) */ /* 	obj = yaffsfs_FindObject(NULL,path,0,1,&dir,&notDir,&loop); */ 
12365: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,1,1,&dir,&notDir,&loop);
12365: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,-1,1,&dir,&notDir,&loop);
12365: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,0,0,&dir,&notDir,&loop);
12365: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,0,-1,&dir,&notDir,&loop);
12365: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,0,((1)+1),&dir,&notDir,&loop);
12367: /* MUTANT (rep_op) */	if(!doLStat || obj)
12367: /* MUTANT (negate) */	if(!(!doLStat && obj))
12368: /* MUTANT (rep_const) */		obj = yaffsfs_FollowLink(obj,1,&loop);
12368: /* MUTANT (rep_const) */		obj = yaffsfs_FollowLink(obj,-1,&loop);
12370: /* MUTANT (rep_op) */	if(!dir || notDir)
12370: /* MUTANT (negate) */	if(!(!dir && notDir))
12372: /* MUTANT (negate) */	else if(!(loop))
12374: /* MUTANT (rep_op) */	else if(!dir && !obj)
12374: /* MUTANT (negate) */	else if(!(!dir || !obj))
12379: /* MUTANT (del_stmt) */ /* 	yaffsfs_Unlock(); */ 
12381: /* MUTANT (del_stmt) */ /* 	return retVal; */ 
12387: /* MUTANT (del_stmt) */ /* 	return yaffsfs_DoStatOrLStat(path,buf,0); */ 
12387: /* MUTANT (rep_const) */	return yaffsfs_DoStatOrLStat(path,buf,1);
12387: /* MUTANT (rep_const) */	return yaffsfs_DoStatOrLStat(path,buf,-1);
12392: /* MUTANT (del_stmt) */ /* 	return yaffsfs_DoStatOrLStat(path,buf,1); */ 
12392: /* MUTANT (rep_const) */	return yaffsfs_DoStatOrLStat(path,buf,0);
12392: /* MUTANT (rep_const) */	return yaffsfs_DoStatOrLStat(path,buf,-1);
12392: /* MUTANT (rep_const) */	return yaffsfs_DoStatOrLStat(path,buf,((1)+1));
12397: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj; */ 
12399: /* MUTANT (del_stmt) */ /* 	int retVal = -1; */ 
12399: /* MUTANT (rep_const) */	int retVal = 0;
12399: /* MUTANT (rep_const) */	int retVal = 1;
12399: /* MUTANT (rep_const) */	int retVal = ((-1)+1);
12399: /* MUTANT (rep_const) */	int retVal = ((-1)-1);
12401: /* MUTANT (negate) */	if(!(!buf)){
12402: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EFAULT); */ 
12403: /* MUTANT (del_stmt) */ /* 		return -1; */ 
12403: /* MUTANT (rep_const) */		return 0;
12403: /* MUTANT (rep_const) */		return 1;
12403: /* MUTANT (rep_const) */		return ((-1)+1);
12403: /* MUTANT (rep_const) */		return ((-1)-1);
12407: /* MUTANT (del_stmt) */ /* 	obj = yaffsfs_HandleToObject(fd); */ 
12409: /* MUTANT (negate) */	if(!(obj))
12415: /* MUTANT (del_stmt) */ /* 	yaffsfs_Unlock(); */ 
12417: /* MUTANT (del_stmt) */ /* 	return retVal; */ 
12422: /* MUTANT (del_stmt) */ /* 	int retVal = -1; */ 
12422: /* MUTANT (rep_const) */	int retVal = 0;
12422: /* MUTANT (rep_const) */	int retVal = 1;
12422: /* MUTANT (rep_const) */	int retVal = ((-1)+1);
12422: /* MUTANT (rep_const) */	int retVal = ((-1)-1);
12423: /* MUTANT (del_stmt) */ /* 	int result; */ 
12425: /* MUTANT (del_stmt) */ /* 	struct yaffs_utimbuf local; */ 
12427: /* MUTANT (del_stmt) */ /* 	obj = yaffs_get_equivalent_obj(obj); */ 
12429: /* MUTANT (rep_op) */	if(obj || obj->my_dev->read_only) {
12429: /* MUTANT (negate) */	if(!(obj && obj->my_dev->read_only)) {
12430: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EROFS); */ 
12431: /* MUTANT (del_stmt) */ /* 		return -1; */ 
12431: /* MUTANT (rep_const) */		return 0;
12431: /* MUTANT (rep_const) */		return 1;
12431: /* MUTANT (rep_const) */		return ((-1)+1);
12431: /* MUTANT (rep_const) */		return ((-1)-1);
12435: /* MUTANT (negate) */	if(!(!buf)){
12436: /* MUTANT (del_stmt) */ /* 		local.actime = Y_CURRENT_TIME; */ 
12437: /* MUTANT (del_stmt) */ /* 		local.modtime = local.actime; */ 
12438: /* MUTANT (del_stmt) */ /* 		buf = &local; */ 
12441: /* MUTANT (negate) */	if(!(obj)){
12442: /* MUTANT (del_stmt) */ /* 		obj->yst_atime = buf->actime; */ 
12443: /* MUTANT (del_stmt) */ /* 		obj->yst_mtime = buf->modtime; */ 
12444: /* MUTANT (del_stmt) */ /* 		obj->dirty = 1; */ 
12444: /* MUTANT (rep_const) */		obj->dirty = 0;
12444: /* MUTANT (rep_const) */		obj->dirty = -1;
12444: /* MUTANT (rep_const) */		obj->dirty = ((1)+1);
12445: /* MUTANT (del_stmt) */ /* 		result = yaffs_flush_file(obj,0,0); */ 
12445: /* MUTANT (rep_const) */		result = yaffs_flush_file(obj,1,0);
12445: /* MUTANT (rep_const) */		result = yaffs_flush_file(obj,-1,0);
12445: /* MUTANT (rep_const) */		result = yaffs_flush_file(obj,0,1);
12445: /* MUTANT (rep_const) */		result = yaffs_flush_file(obj,0,-1);
12446: /* MUTANT (del_stmt) */ /* 		retVal = result == YAFFS_OK ? 0 : -1; */ 
12446: /* MUTANT (rep_op) */		retVal = result != YAFFS_OK ? 0 : -1;
12446: /* MUTANT (rep_const) */		retVal = result == YAFFS_OK ? 1 : -1;
12446: /* MUTANT (rep_const) */		retVal = result == YAFFS_OK ? -1 : -1;
12446: /* MUTANT (rep_const) */		retVal = result == YAFFS_OK ? 0 : 0;
12446: /* MUTANT (rep_const) */		retVal = result == YAFFS_OK ? 0 : 1;
12446: /* MUTANT (rep_const) */		retVal = result == YAFFS_OK ? 0 : ((-1)+1);
12446: /* MUTANT (rep_const) */		retVal = result == YAFFS_OK ? 0 : ((-1)-1);
12454: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj=NULL; */ 
12455: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *dir=NULL; */ 
12456: /* MUTANT (del_stmt) */ /* 	int retVal = -1; */ 
12456: /* MUTANT (rep_const) */	int retVal = 0;
12456: /* MUTANT (rep_const) */	int retVal = 1;
12456: /* MUTANT (rep_const) */	int retVal = ((-1)+1);
12456: /* MUTANT (rep_const) */	int retVal = ((-1)-1);
12457: /* MUTANT (del_stmt) */ /* 	int notDir = 0; */ 
12457: /* MUTANT (rep_const) */	int notDir = 1;
12457: /* MUTANT (rep_const) */	int notDir = -1;
12458: /* MUTANT (del_stmt) */ /* 	int loop = 0; */ 
12458: /* MUTANT (rep_const) */	int loop = 1;
12458: /* MUTANT (rep_const) */	int loop = -1;
12460: /* MUTANT (negate) */	if(!(!path)){
12461: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EFAULT); */ 
12462: /* MUTANT (del_stmt) */ /* 		return -1; */ 
12462: /* MUTANT (rep_const) */		return 0;
12462: /* MUTANT (rep_const) */		return 1;
12462: /* MUTANT (rep_const) */		return ((-1)+1);
12462: /* MUTANT (rep_const) */		return ((-1)-1);
12465: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) <= 0){
12465: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) > 0){
12465: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) >= 0){
12465: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) == 0){
12465: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) != 0){
12465: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < 1){
12465: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < -1){
12465: /* MUTANT (negate) */	if(!(yaffsfs_CheckPath(path) < 0)){
12466: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-ENAMETOOLONG); */ 
12467: /* MUTANT (del_stmt) */ /* 		return -1; */ 
12467: /* MUTANT (rep_const) */		return 0;
12467: /* MUTANT (rep_const) */		return 1;
12467: /* MUTANT (rep_const) */		return ((-1)+1);
12467: /* MUTANT (rep_const) */		return ((-1)-1);
12472: /* MUTANT (del_stmt) */ /* 	obj = yaffsfs_FindObject(NULL,path,0,1,&dir,&notDir,&loop); */ 
12472: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,1,1,&dir,&notDir,&loop);
12472: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,-1,1,&dir,&notDir,&loop);
12472: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,0,0,&dir,&notDir,&loop);
12472: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,0,-1,&dir,&notDir,&loop);
12472: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,0,((1)+1),&dir,&notDir,&loop);
12474: /* MUTANT (rep_op) */	if(!dir || notDir)
12474: /* MUTANT (negate) */	if(!(!dir && notDir))
12476: /* MUTANT (negate) */	else if(!(loop))
12478: /* MUTANT (rep_op) */	else if(!dir && !obj)
12478: /* MUTANT (negate) */	else if(!(!dir || !obj))
12483: /* MUTANT (del_stmt) */ /* 	yaffsfs_Unlock(); */ 
12485: /* MUTANT (del_stmt) */ /* 	return retVal; */ 
12490: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj; */ 
12492: /* MUTANT (del_stmt) */ /* 	int retVal = -1; */ 
12492: /* MUTANT (rep_const) */	int retVal = 0;
12492: /* MUTANT (rep_const) */	int retVal = 1;
12492: /* MUTANT (rep_const) */	int retVal = ((-1)+1);
12492: /* MUTANT (rep_const) */	int retVal = ((-1)-1);
12494: /* MUTANT (del_stmt) */ /* 	yaffsfs_Lock(); */ 
12495: /* MUTANT (del_stmt) */ /* 	obj = yaffsfs_HandleToObject(fd); */ 
12497: /* MUTANT (negate) */	if(!(obj))
12503: /* MUTANT (del_stmt) */ /* 	yaffsfs_Unlock(); */ 
12505: /* MUTANT (del_stmt) */ /* 	return retVal; */ 
12516: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj; */ 
12517: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *dir; */ 
12518: /* MUTANT (del_stmt) */ /* 	int notDir = 0; */ 
12518: /* MUTANT (rep_const) */	int notDir = 1;
12518: /* MUTANT (rep_const) */	int notDir = -1;
12519: /* MUTANT (del_stmt) */ /* 	int loop = 0; */ 
12519: /* MUTANT (rep_const) */	int loop = 1;
12519: /* MUTANT (rep_const) */	int loop = -1;
12521: /* MUTANT (del_stmt) */ /* 	int retVal = -1; */ 
12521: /* MUTANT (rep_const) */	int retVal = 0;
12521: /* MUTANT (rep_const) */	int retVal = 1;
12521: /* MUTANT (rep_const) */	int retVal = ((-1)+1);
12521: /* MUTANT (rep_const) */	int retVal = ((-1)-1);
12523: /* MUTANT (rep_op) */	if(!path && !name || !data){
12523: /* MUTANT (rep_op) */	if(!path || !name && !data){
12523: /* MUTANT (negate) */	if(!(!path || !name || !data)){
12524: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EFAULT); */ 
12525: /* MUTANT (del_stmt) */ /* 		return -1; */ 
12525: /* MUTANT (rep_const) */		return 0;
12525: /* MUTANT (rep_const) */		return 1;
12525: /* MUTANT (rep_const) */		return ((-1)+1);
12525: /* MUTANT (rep_const) */		return ((-1)-1);
12528: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) <= 0){
12528: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) > 0){
12528: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) >= 0){
12528: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) == 0){
12528: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) != 0){
12528: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < 1){
12528: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < -1){
12528: /* MUTANT (negate) */	if(!(yaffsfs_CheckPath(path) < 0)){
12529: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-ENAMETOOLONG); */ 
12530: /* MUTANT (del_stmt) */ /* 		return -1; */ 
12530: /* MUTANT (rep_const) */		return 0;
12530: /* MUTANT (rep_const) */		return 1;
12530: /* MUTANT (rep_const) */		return ((-1)+1);
12530: /* MUTANT (rep_const) */		return ((-1)-1);
12535: /* MUTANT (del_stmt) */ /* 	obj = yaffsfs_FindObject(NULL,path,0,1,&dir,&notDir,&loop); */ 
12535: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,1,1,&dir,&notDir,&loop);
12535: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,-1,1,&dir,&notDir,&loop);
12535: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,0,0,&dir,&notDir,&loop);
12535: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,0,-1,&dir,&notDir,&loop);
12535: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,0,((1)+1),&dir,&notDir,&loop);
12537: /* MUTANT (negate) */	if(!(follow))
12538: /* MUTANT (rep_const) */		obj = yaffsfs_FollowLink(obj,1,&loop);
12538: /* MUTANT (rep_const) */		obj = yaffsfs_FollowLink(obj,-1,&loop);
12540: /* MUTANT (rep_op) */	if(!dir || notDir)
12540: /* MUTANT (negate) */	if(!(!dir && notDir))
12542: /* MUTANT (negate) */	else if(!(loop))
12544: /* MUTANT (rep_op) */	else if(!dir && !obj)
12544: /* MUTANT (negate) */	else if(!(!dir || !obj))
12547: /* MUTANT (del_stmt) */ /* 		retVal = yaffs_set_xattrib(obj,name,data,size,flags); */ 
12548: /* MUTANT (rep_op) */		if(retVal<= 0){
12548: /* MUTANT (rep_op) */		if(retVal> 0){
12548: /* MUTANT (rep_op) */		if(retVal>= 0){
12548: /* MUTANT (rep_op) */		if(retVal== 0){
12548: /* MUTANT (rep_op) */		if(retVal!= 0){
12548: /* MUTANT (rep_const) */		if(retVal< 1){
12548: /* MUTANT (rep_const) */		if(retVal< -1){
12548: /* MUTANT (negate) */		if(!(retVal< 0)){
12549: /* MUTANT (del_stmt) */ /* 			yaffsfs_SetError(retVal); */ 
12550: /* MUTANT (del_stmt) */ /* 			retVal = -1; */ 
12550: /* MUTANT (rep_const) */			retVal = 0;
12550: /* MUTANT (rep_const) */			retVal = 1;
12550: /* MUTANT (rep_const) */			retVal = ((-1)+1);
12550: /* MUTANT (rep_const) */			retVal = ((-1)-1);
12556: /* MUTANT (del_stmt) */ /* 	return retVal; */ 
12562: /* MUTANT (del_stmt) */ /* 	return yaffs_do_setxattr(path, name, data, size, flags, 1); */ 
12562: /* MUTANT (rep_const) */	return yaffs_do_setxattr(path, name, data, size, flags, 0);
12562: /* MUTANT (rep_const) */	return yaffs_do_setxattr(path, name, data, size, flags, -1);
12562: /* MUTANT (rep_const) */	return yaffs_do_setxattr(path, name, data, size, flags, ((1)+1));
12567: /* MUTANT (del_stmt) */ /* 	return yaffs_do_setxattr(path, name, data, size, flags, 0); */ 
12567: /* MUTANT (rep_const) */	return yaffs_do_setxattr(path, name, data, size, flags, 1);
12567: /* MUTANT (rep_const) */	return yaffs_do_setxattr(path, name, data, size, flags, -1);
12574: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj; */ 
12576: /* MUTANT (del_stmt) */ /* 	int retVal = -1; */ 
12576: /* MUTANT (rep_const) */	int retVal = 0;
12576: /* MUTANT (rep_const) */	int retVal = 1;
12576: /* MUTANT (rep_const) */	int retVal = ((-1)+1);
12576: /* MUTANT (rep_const) */	int retVal = ((-1)-1);
12578: /* MUTANT (rep_op) */	if(!name && !data){
12578: /* MUTANT (negate) */	if(!(!name || !data)){
12579: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EFAULT); */ 
12580: /* MUTANT (del_stmt) */ /* 		return -1; */ 
12580: /* MUTANT (rep_const) */		return 0;
12580: /* MUTANT (rep_const) */		return 1;
12580: /* MUTANT (rep_const) */		return ((-1)+1);
12580: /* MUTANT (rep_const) */		return ((-1)-1);
12584: /* MUTANT (del_stmt) */ /* 	obj = yaffsfs_HandleToObject(fd); */ 
12586: /* MUTANT (negate) */	if(!(!obj))
12589: /* MUTANT (del_stmt) */ /* 		retVal = yaffs_set_xattrib(obj,name,data,size,flags); */ 
12590: /* MUTANT (rep_op) */		if(retVal<= 0){
12590: /* MUTANT (rep_op) */		if(retVal> 0){
12590: /* MUTANT (rep_op) */		if(retVal>= 0){
12590: /* MUTANT (rep_op) */		if(retVal== 0){
12590: /* MUTANT (rep_op) */		if(retVal!= 0){
12590: /* MUTANT (rep_const) */		if(retVal< 1){
12590: /* MUTANT (rep_const) */		if(retVal< -1){
12590: /* MUTANT (negate) */		if(!(retVal< 0)){
12591: /* MUTANT (del_stmt) */ /* 			yaffsfs_SetError(retVal); */ 
12592: /* MUTANT (del_stmt) */ /* 			retVal = -1; */ 
12592: /* MUTANT (rep_const) */			retVal = 0;
12592: /* MUTANT (rep_const) */			retVal = 1;
12592: /* MUTANT (rep_const) */			retVal = ((-1)+1);
12592: /* MUTANT (rep_const) */			retVal = ((-1)-1);
12598: /* MUTANT (del_stmt) */ /* 	return retVal; */ 
12603: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj; */ 
12604: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *dir; */ 
12605: /* MUTANT (del_stmt) */ /* 	int retVal = -1; */ 
12605: /* MUTANT (rep_const) */	int retVal = 0;
12605: /* MUTANT (rep_const) */	int retVal = 1;
12605: /* MUTANT (rep_const) */	int retVal = ((-1)+1);
12605: /* MUTANT (rep_const) */	int retVal = ((-1)-1);
12606: /* MUTANT (del_stmt) */ /* 	int notDir = 0; */ 
12606: /* MUTANT (rep_const) */	int notDir = 1;
12606: /* MUTANT (rep_const) */	int notDir = -1;
12607: /* MUTANT (del_stmt) */ /* 	int loop = 0; */ 
12607: /* MUTANT (rep_const) */	int loop = 1;
12607: /* MUTANT (rep_const) */	int loop = -1;
12609: /* MUTANT (rep_op) */	if(!path && !name || !data ){
12609: /* MUTANT (rep_op) */	if(!path || !name && !data ){
12609: /* MUTANT (negate) */	if(!(!path || !name || !data )){
12610: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EFAULT); */ 
12611: /* MUTANT (del_stmt) */ /* 		return -1; */ 
12611: /* MUTANT (rep_const) */		return 0;
12611: /* MUTANT (rep_const) */		return 1;
12611: /* MUTANT (rep_const) */		return ((-1)+1);
12611: /* MUTANT (rep_const) */		return ((-1)-1);
12614: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) <= 0){
12614: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) > 0){
12614: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) >= 0){
12614: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) == 0){
12614: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) != 0){
12614: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < 1){
12614: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < -1){
12614: /* MUTANT (negate) */	if(!(yaffsfs_CheckPath(path) < 0)){
12615: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-ENAMETOOLONG); */ 
12616: /* MUTANT (del_stmt) */ /* 		return -1; */ 
12616: /* MUTANT (rep_const) */		return 0;
12616: /* MUTANT (rep_const) */		return 1;
12616: /* MUTANT (rep_const) */		return ((-1)+1);
12616: /* MUTANT (rep_const) */		return ((-1)-1);
12621: /* MUTANT (del_stmt) */ /* 	obj = yaffsfs_FindObject(NULL,path,0,1,&dir,&notDir,&loop); */ 
12621: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,1,1,&dir,&notDir,&loop);
12621: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,-1,1,&dir,&notDir,&loop);
12621: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,0,0,&dir,&notDir,&loop);
12621: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,0,-1,&dir,&notDir,&loop);
12621: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,0,((1)+1),&dir,&notDir,&loop);
12623: /* MUTANT (negate) */	if(!(follow))
12624: /* MUTANT (rep_const) */		obj = yaffsfs_FollowLink(obj,1,&loop);
12624: /* MUTANT (rep_const) */		obj = yaffsfs_FollowLink(obj,-1,&loop);
12626: /* MUTANT (rep_op) */	if(!dir || notDir)
12626: /* MUTANT (negate) */	if(!(!dir && notDir))
12628: /* MUTANT (negate) */	else if(!(loop))
12630: /* MUTANT (rep_op) */	else if(!dir && !obj)
12630: /* MUTANT (negate) */	else if(!(!dir || !obj))
12633: /* MUTANT (del_stmt) */ /* 		retVal = yaffs_get_xattrib(obj,name,data,size); */ 
12634: /* MUTANT (rep_op) */		if(retVal<= 0){
12634: /* MUTANT (rep_op) */		if(retVal> 0){
12634: /* MUTANT (rep_op) */		if(retVal>= 0){
12634: /* MUTANT (rep_op) */		if(retVal== 0){
12634: /* MUTANT (rep_op) */		if(retVal!= 0){
12634: /* MUTANT (rep_const) */		if(retVal< 1){
12634: /* MUTANT (rep_const) */		if(retVal< -1){
12634: /* MUTANT (negate) */		if(!(retVal< 0)){
12635: /* MUTANT (del_stmt) */ /* 			yaffsfs_SetError(retVal); */ 
12636: /* MUTANT (del_stmt) */ /* 			retVal = -1; */ 
12636: /* MUTANT (rep_const) */			retVal = 0;
12636: /* MUTANT (rep_const) */			retVal = 1;
12636: /* MUTANT (rep_const) */			retVal = ((-1)+1);
12636: /* MUTANT (rep_const) */			retVal = ((-1)-1);
12641: /* MUTANT (del_stmt) */ /* 	return retVal; */ 
12647: /* MUTANT (del_stmt) */ /* 	return yaffs_do_getxattr( path, name, data, size, 1); */ 
12647: /* MUTANT (rep_const) */	return yaffs_do_getxattr( path, name, data, size, 0);
12647: /* MUTANT (rep_const) */	return yaffs_do_getxattr( path, name, data, size, -1);
12647: /* MUTANT (rep_const) */	return yaffs_do_getxattr( path, name, data, size, ((1)+1));
12651: /* MUTANT (del_stmt) */ /* 	return yaffs_do_getxattr( path, name, data, size, 0); */ 
12651: /* MUTANT (rep_const) */	return yaffs_do_getxattr( path, name, data, size, 1);
12651: /* MUTANT (rep_const) */	return yaffs_do_getxattr( path, name, data, size, -1);
12658: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj; */ 
12660: /* MUTANT (del_stmt) */ /* 	int retVal = -1; */ 
12660: /* MUTANT (rep_const) */	int retVal = 0;
12660: /* MUTANT (rep_const) */	int retVal = 1;
12660: /* MUTANT (rep_const) */	int retVal = ((-1)+1);
12660: /* MUTANT (rep_const) */	int retVal = ((-1)-1);
12662: /* MUTANT (rep_op) */	if(!name && !data ){
12662: /* MUTANT (negate) */	if(!(!name || !data )){
12663: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EFAULT); */ 
12664: /* MUTANT (del_stmt) */ /* 		return -1; */ 
12664: /* MUTANT (rep_const) */		return 0;
12664: /* MUTANT (rep_const) */		return 1;
12664: /* MUTANT (rep_const) */		return ((-1)+1);
12664: /* MUTANT (rep_const) */		return ((-1)-1);
12668: /* MUTANT (del_stmt) */ /* 	obj = yaffsfs_HandleToObject(fd); */ 
12670: /* MUTANT (negate) */	if(!(obj)) {
12671: /* MUTANT (del_stmt) */ /* 		retVal = yaffs_get_xattrib(obj,name,data,size); */ 
12672: /* MUTANT (rep_op) */		if(retVal<= 0){
12672: /* MUTANT (rep_op) */		if(retVal> 0){
12672: /* MUTANT (rep_op) */		if(retVal>= 0){
12672: /* MUTANT (rep_op) */		if(retVal== 0){
12672: /* MUTANT (rep_op) */		if(retVal!= 0){
12672: /* MUTANT (rep_const) */		if(retVal< 1){
12672: /* MUTANT (rep_const) */		if(retVal< -1){
12672: /* MUTANT (negate) */		if(!(retVal< 0)){
12673: /* MUTANT (del_stmt) */ /* 			yaffsfs_SetError(retVal); */ 
12674: /* MUTANT (del_stmt) */ /* 			retVal = -1; */ 
12674: /* MUTANT (rep_const) */			retVal = 0;
12674: /* MUTANT (rep_const) */			retVal = 1;
12674: /* MUTANT (rep_const) */			retVal = ((-1)+1);
12674: /* MUTANT (rep_const) */			retVal = ((-1)-1);
12680: /* MUTANT (del_stmt) */ /* 	yaffsfs_Unlock(); */ 
12682: /* MUTANT (del_stmt) */ /* 	return retVal; */ 
12687: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj=NULL; */ 
12688: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *dir=NULL; */ 
12689: /* MUTANT (del_stmt) */ /* 	int retVal = -1; */ 
12689: /* MUTANT (rep_const) */	int retVal = 0;
12689: /* MUTANT (rep_const) */	int retVal = 1;
12689: /* MUTANT (rep_const) */	int retVal = ((-1)+1);
12689: /* MUTANT (rep_const) */	int retVal = ((-1)-1);
12690: /* MUTANT (del_stmt) */ /* 	int notDir = 0; */ 
12690: /* MUTANT (rep_const) */	int notDir = 1;
12690: /* MUTANT (rep_const) */	int notDir = -1;
12691: /* MUTANT (del_stmt) */ /* 	int loop = 0; */ 
12691: /* MUTANT (rep_const) */	int loop = 1;
12691: /* MUTANT (rep_const) */	int loop = -1;
12693: /* MUTANT (rep_op) */	if(!path && !data ){
12693: /* MUTANT (negate) */	if(!(!path || !data )){
12694: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EFAULT); */ 
12695: /* MUTANT (del_stmt) */ /* 		return -1; */ 
12695: /* MUTANT (rep_const) */		return 0;
12695: /* MUTANT (rep_const) */		return 1;
12695: /* MUTANT (rep_const) */		return ((-1)+1);
12695: /* MUTANT (rep_const) */		return ((-1)-1);
12698: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) <= 0){
12698: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) > 0){
12698: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) >= 0){
12698: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) == 0){
12698: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) != 0){
12698: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < 1){
12698: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < -1){
12698: /* MUTANT (negate) */	if(!(yaffsfs_CheckPath(path) < 0)){
12699: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-ENAMETOOLONG); */ 
12700: /* MUTANT (del_stmt) */ /* 		return -1; */ 
12700: /* MUTANT (rep_const) */		return 0;
12700: /* MUTANT (rep_const) */		return 1;
12700: /* MUTANT (rep_const) */		return ((-1)+1);
12700: /* MUTANT (rep_const) */		return ((-1)-1);
12705: /* MUTANT (del_stmt) */ /* 	obj = yaffsfs_FindObject(NULL,path,0,1,&dir,&notDir,&loop); */ 
12705: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,1,1,&dir,&notDir,&loop);
12705: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,-1,1,&dir,&notDir,&loop);
12705: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,0,0,&dir,&notDir,&loop);
12705: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,0,-1,&dir,&notDir,&loop);
12705: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,0,((1)+1),&dir,&notDir,&loop);
12707: /* MUTANT (negate) */	if(!(follow))
12708: /* MUTANT (rep_const) */		obj = yaffsfs_FollowLink(obj,1,&loop);
12708: /* MUTANT (rep_const) */		obj = yaffsfs_FollowLink(obj,-1,&loop);
12710: /* MUTANT (rep_op) */	if(!dir || notDir)
12710: /* MUTANT (negate) */	if(!(!dir && notDir))
12712: /* MUTANT (negate) */	else if(!(loop))
12714: /* MUTANT (rep_op) */	else if(!dir && !obj)
12714: /* MUTANT (negate) */	else if(!(!dir || !obj))
12717: /* MUTANT (del_stmt) */ /* 		retVal = yaffs_list_xattrib(obj, data,size); */ 
12718: /* MUTANT (rep_op) */		if(retVal<= 0){
12718: /* MUTANT (rep_op) */		if(retVal> 0){
12718: /* MUTANT (rep_op) */		if(retVal>= 0){
12718: /* MUTANT (rep_op) */		if(retVal== 0){
12718: /* MUTANT (rep_op) */		if(retVal!= 0){
12718: /* MUTANT (rep_const) */		if(retVal< 1){
12718: /* MUTANT (rep_const) */		if(retVal< -1){
12718: /* MUTANT (negate) */		if(!(retVal< 0)){
12719: /* MUTANT (del_stmt) */ /* 			yaffsfs_SetError(retVal); */ 
12720: /* MUTANT (del_stmt) */ /* 			retVal = -1; */ 
12720: /* MUTANT (rep_const) */			retVal = 0;
12720: /* MUTANT (rep_const) */			retVal = 1;
12720: /* MUTANT (rep_const) */			retVal = ((-1)+1);
12720: /* MUTANT (rep_const) */			retVal = ((-1)-1);
12726: /* MUTANT (del_stmt) */ /* 	return retVal; */ 
12732: /* MUTANT (del_stmt) */ /* 	return yaffs_do_listxattr(path, data, size, 1); */ 
12732: /* MUTANT (rep_const) */	return yaffs_do_listxattr(path, data, size, 0);
12732: /* MUTANT (rep_const) */	return yaffs_do_listxattr(path, data, size, -1);
12732: /* MUTANT (rep_const) */	return yaffs_do_listxattr(path, data, size, ((1)+1));
12737: /* MUTANT (del_stmt) */ /* 	return yaffs_do_listxattr(path, data, size, 0); */ 
12737: /* MUTANT (rep_const) */	return yaffs_do_listxattr(path, data, size, 1);
12737: /* MUTANT (rep_const) */	return yaffs_do_listxattr(path, data, size, -1);
12742: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj; */ 
12744: /* MUTANT (del_stmt) */ /* 	int retVal = -1; */ 
12744: /* MUTANT (rep_const) */	int retVal = 0;
12744: /* MUTANT (rep_const) */	int retVal = 1;
12744: /* MUTANT (rep_const) */	int retVal = ((-1)+1);
12744: /* MUTANT (rep_const) */	int retVal = ((-1)-1);
12746: /* MUTANT (negate) */	if(!(!data )){
12747: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EFAULT); */ 
12748: /* MUTANT (del_stmt) */ /* 		return -1; */ 
12748: /* MUTANT (rep_const) */		return 0;
12748: /* MUTANT (rep_const) */		return 1;
12748: /* MUTANT (rep_const) */		return ((-1)+1);
12748: /* MUTANT (rep_const) */		return ((-1)-1);
12752: /* MUTANT (del_stmt) */ /* 	obj = yaffsfs_HandleToObject(fd); */ 
12754: /* MUTANT (negate) */	if(!(obj)) {
12755: /* MUTANT (del_stmt) */ /* 		retVal = yaffs_list_xattrib(obj,data,size); */ 
12756: /* MUTANT (rep_op) */		if(retVal<= 0){
12756: /* MUTANT (rep_op) */		if(retVal> 0){
12756: /* MUTANT (rep_op) */		if(retVal>= 0){
12756: /* MUTANT (rep_op) */		if(retVal== 0){
12756: /* MUTANT (rep_op) */		if(retVal!= 0){
12756: /* MUTANT (rep_const) */		if(retVal< 1){
12756: /* MUTANT (rep_const) */		if(retVal< -1){
12756: /* MUTANT (negate) */		if(!(retVal< 0)){
12757: /* MUTANT (del_stmt) */ /* 			yaffsfs_SetError(retVal); */ 
12758: /* MUTANT (del_stmt) */ /* 			retVal = -1; */ 
12758: /* MUTANT (rep_const) */			retVal = 0;
12758: /* MUTANT (rep_const) */			retVal = 1;
12758: /* MUTANT (rep_const) */			retVal = ((-1)+1);
12758: /* MUTANT (rep_const) */			retVal = ((-1)-1);
12764: /* MUTANT (del_stmt) */ /* 	yaffsfs_Unlock(); */ 
12766: /* MUTANT (del_stmt) */ /* 	return retVal; */ 
12771: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj=NULL; */ 
12772: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *dir=NULL; */ 
12773: /* MUTANT (del_stmt) */ /* 	int notDir = 0; */ 
12773: /* MUTANT (rep_const) */	int notDir = 1;
12773: /* MUTANT (rep_const) */	int notDir = -1;
12774: /* MUTANT (del_stmt) */ /* 	int loop = 0; */ 
12774: /* MUTANT (rep_const) */	int loop = 1;
12774: /* MUTANT (rep_const) */	int loop = -1;
12775: /* MUTANT (del_stmt) */ /* 	int retVal = -1; */ 
12775: /* MUTANT (rep_const) */	int retVal = 0;
12775: /* MUTANT (rep_const) */	int retVal = 1;
12775: /* MUTANT (rep_const) */	int retVal = ((-1)+1);
12775: /* MUTANT (rep_const) */	int retVal = ((-1)-1);
12777: /* MUTANT (rep_op) */	if(!path && !name){
12777: /* MUTANT (negate) */	if(!(!path || !name)){
12778: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EFAULT); */ 
12779: /* MUTANT (del_stmt) */ /* 		return -1; */ 
12779: /* MUTANT (rep_const) */		return 0;
12779: /* MUTANT (rep_const) */		return 1;
12779: /* MUTANT (rep_const) */		return ((-1)+1);
12779: /* MUTANT (rep_const) */		return ((-1)-1);
12782: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) <= 0){
12782: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) > 0){
12782: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) >= 0){
12782: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) == 0){
12782: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) != 0){
12782: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < 1){
12782: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < -1){
12782: /* MUTANT (negate) */	if(!(yaffsfs_CheckPath(path) < 0)){
12783: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-ENAMETOOLONG); */ 
12784: /* MUTANT (del_stmt) */ /* 		return -1; */ 
12784: /* MUTANT (rep_const) */		return 0;
12784: /* MUTANT (rep_const) */		return 1;
12784: /* MUTANT (rep_const) */		return ((-1)+1);
12784: /* MUTANT (rep_const) */		return ((-1)-1);
12789: /* MUTANT (del_stmt) */ /* 	obj = yaffsfs_FindObject(NULL,path,0,1, &dir,&notDir,&loop); */ 
12789: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,1,1, &dir,&notDir,&loop);
12789: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,-1,1, &dir,&notDir,&loop);
12789: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,0,0, &dir,&notDir,&loop);
12789: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,0,-1, &dir,&notDir,&loop);
12789: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,0,((1)+1), &dir,&notDir,&loop);
12791: /* MUTANT (negate) */	if(!(follow))
12792: /* MUTANT (rep_const) */		obj = yaffsfs_FollowLink(obj,1,&loop);
12792: /* MUTANT (rep_const) */		obj = yaffsfs_FollowLink(obj,-1,&loop);
12794: /* MUTANT (rep_op) */	if(!dir || notDir)
12794: /* MUTANT (negate) */	if(!(!dir && notDir))
12796: /* MUTANT (negate) */	else if(!(loop))
12798: /* MUTANT (rep_op) */	else if(!dir && !obj)
12798: /* MUTANT (negate) */	else if(!(!dir || !obj))
12801: /* MUTANT (del_stmt) */ /* 		retVal = yaffs_remove_xattrib(obj,name); */ 
12802: /* MUTANT (rep_op) */		if(retVal<= 0){
12802: /* MUTANT (rep_op) */		if(retVal> 0){
12802: /* MUTANT (rep_op) */		if(retVal>= 0){
12802: /* MUTANT (rep_op) */		if(retVal== 0){
12802: /* MUTANT (rep_op) */		if(retVal!= 0){
12802: /* MUTANT (rep_const) */		if(retVal< 1){
12802: /* MUTANT (rep_const) */		if(retVal< -1){
12802: /* MUTANT (negate) */		if(!(retVal< 0)){
12803: /* MUTANT (del_stmt) */ /* 			yaffsfs_SetError(retVal); */ 
12804: /* MUTANT (del_stmt) */ /* 			retVal = -1; */ 
12804: /* MUTANT (rep_const) */			retVal = 0;
12804: /* MUTANT (rep_const) */			retVal = 1;
12804: /* MUTANT (rep_const) */			retVal = ((-1)+1);
12804: /* MUTANT (rep_const) */			retVal = ((-1)-1);
12810: /* MUTANT (del_stmt) */ /* 	return retVal; */ 
12816: /* MUTANT (del_stmt) */ /* 	return yaffs_do_removexattr(path, name, 1); */ 
12816: /* MUTANT (rep_const) */	return yaffs_do_removexattr(path, name, 0);
12816: /* MUTANT (rep_const) */	return yaffs_do_removexattr(path, name, -1);
12816: /* MUTANT (rep_const) */	return yaffs_do_removexattr(path, name, ((1)+1));
12821: /* MUTANT (del_stmt) */ /* 	return yaffs_do_removexattr(path, name, 0); */ 
12821: /* MUTANT (rep_const) */	return yaffs_do_removexattr(path, name, 1);
12821: /* MUTANT (rep_const) */	return yaffs_do_removexattr(path, name, -1);
12826: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj; */ 
12828: /* MUTANT (del_stmt) */ /* 	int retVal = -1; */ 
12828: /* MUTANT (rep_const) */	int retVal = 0;
12828: /* MUTANT (rep_const) */	int retVal = 1;
12828: /* MUTANT (rep_const) */	int retVal = ((-1)+1);
12828: /* MUTANT (rep_const) */	int retVal = ((-1)-1);
12830: /* MUTANT (negate) */	if(!(!name)){
12831: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EFAULT); */ 
12832: /* MUTANT (del_stmt) */ /* 		return -1; */ 
12832: /* MUTANT (rep_const) */		return 0;
12832: /* MUTANT (rep_const) */		return 1;
12832: /* MUTANT (rep_const) */		return ((-1)+1);
12832: /* MUTANT (rep_const) */		return ((-1)-1);
12836: /* MUTANT (del_stmt) */ /* 	obj = yaffsfs_HandleToObject(fd); */ 
12838: /* MUTANT (negate) */	if(!(obj)){
12839: /* MUTANT (del_stmt) */ /* 		retVal = yaffs_remove_xattrib(obj,name); */ 
12840: /* MUTANT (rep_op) */		if(retVal<= 0){
12840: /* MUTANT (rep_op) */		if(retVal> 0){
12840: /* MUTANT (rep_op) */		if(retVal>= 0){
12840: /* MUTANT (rep_op) */		if(retVal== 0){
12840: /* MUTANT (rep_op) */		if(retVal!= 0){
12840: /* MUTANT (rep_const) */		if(retVal< 1){
12840: /* MUTANT (rep_const) */		if(retVal< -1){
12840: /* MUTANT (negate) */		if(!(retVal< 0)){
12841: /* MUTANT (del_stmt) */ /* 			yaffsfs_SetError(retVal); */ 
12842: /* MUTANT (del_stmt) */ /* 			retVal = -1; */ 
12842: /* MUTANT (rep_const) */			retVal = 0;
12842: /* MUTANT (rep_const) */			retVal = 1;
12842: /* MUTANT (rep_const) */			retVal = ((-1)+1);
12842: /* MUTANT (rep_const) */			retVal = ((-1)-1);
12848: /* MUTANT (del_stmt) */ /* 	yaffsfs_Unlock(); */ 
12850: /* MUTANT (del_stmt) */ /* 	return retVal; */ 
12857: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj; */ 
12859: /* MUTANT (del_stmt) */ /* 	int retVal = -1; */ 
12859: /* MUTANT (rep_const) */	int retVal = 0;
12859: /* MUTANT (rep_const) */	int retVal = 1;
12859: /* MUTANT (rep_const) */	int retVal = ((-1)+1);
12859: /* MUTANT (rep_const) */	int retVal = ((-1)-1);
12861: /* MUTANT (del_stmt) */ /* 	yaffsfs_Lock(); */ 
12862: /* MUTANT (del_stmt) */ /* 	obj = yaffsfs_HandleToObject(fd); */ 
12864: /* MUTANT (negate) */	if(!(obj)){
12866: /* MUTANT (negate) */		if(!(wctime)){
12867: /* MUTANT (del_stmt) */ /* 			wctime[0] = obj->win_ctime[0]; */ 
12867: /* MUTANT (rep_const) */			wctime[1] = obj->win_ctime[0];
12867: /* MUTANT (rep_const) */			wctime[-1] = obj->win_ctime[0];
12867: /* MUTANT (rep_const) */			wctime[0] = obj->win_ctime[1];
12867: /* MUTANT (rep_const) */			wctime[0] = obj->win_ctime[-1];
12868: /* MUTANT (del_stmt) */ /* 			wctime[1] = obj->win_ctime[1]; */ 
12868: /* MUTANT (rep_const) */			wctime[0] = obj->win_ctime[1];
12868: /* MUTANT (rep_const) */			wctime[-1] = obj->win_ctime[1];
12868: /* MUTANT (rep_const) */			wctime[((1)+1)] = obj->win_ctime[1];
12868: /* MUTANT (rep_const) */			wctime[1] = obj->win_ctime[0];
12868: /* MUTANT (rep_const) */			wctime[1] = obj->win_ctime[-1];
12868: /* MUTANT (rep_const) */			wctime[1] = obj->win_ctime[((1)+1)];
12870: /* MUTANT (negate) */		if(!(watime)){
12871: /* MUTANT (del_stmt) */ /* 			watime[0] = obj->win_atime[0]; */ 
12871: /* MUTANT (rep_const) */			watime[1] = obj->win_atime[0];
12871: /* MUTANT (rep_const) */			watime[-1] = obj->win_atime[0];
12871: /* MUTANT (rep_const) */			watime[0] = obj->win_atime[1];
12871: /* MUTANT (rep_const) */			watime[0] = obj->win_atime[-1];
12872: /* MUTANT (del_stmt) */ /* 			watime[1] = obj->win_atime[1]; */ 
12872: /* MUTANT (rep_const) */			watime[0] = obj->win_atime[1];
12872: /* MUTANT (rep_const) */			watime[-1] = obj->win_atime[1];
12872: /* MUTANT (rep_const) */			watime[((1)+1)] = obj->win_atime[1];
12872: /* MUTANT (rep_const) */			watime[1] = obj->win_atime[0];
12872: /* MUTANT (rep_const) */			watime[1] = obj->win_atime[-1];
12872: /* MUTANT (rep_const) */			watime[1] = obj->win_atime[((1)+1)];
12874: /* MUTANT (negate) */		if(!(wmtime)){
12875: /* MUTANT (del_stmt) */ /* 			wmtime[0] = obj->win_mtime[0]; */ 
12875: /* MUTANT (rep_const) */			wmtime[1] = obj->win_mtime[0];
12875: /* MUTANT (rep_const) */			wmtime[-1] = obj->win_mtime[0];
12875: /* MUTANT (rep_const) */			wmtime[0] = obj->win_mtime[1];
12875: /* MUTANT (rep_const) */			wmtime[0] = obj->win_mtime[-1];
12876: /* MUTANT (del_stmt) */ /* 			wmtime[1] = obj->win_mtime[1]; */ 
12876: /* MUTANT (rep_const) */			wmtime[0] = obj->win_mtime[1];
12876: /* MUTANT (rep_const) */			wmtime[-1] = obj->win_mtime[1];
12876: /* MUTANT (rep_const) */			wmtime[((1)+1)] = obj->win_mtime[1];
12876: /* MUTANT (rep_const) */			wmtime[1] = obj->win_mtime[0];
12876: /* MUTANT (rep_const) */			wmtime[1] = obj->win_mtime[-1];
12876: /* MUTANT (rep_const) */			wmtime[1] = obj->win_mtime[((1)+1)];
12880: /* MUTANT (rep_const) */		retVal = 1;
12880: /* MUTANT (rep_const) */		retVal = -1;
12885: /* MUTANT (del_stmt) */ /* 	yaffsfs_Unlock(); */ 
12887: /* MUTANT (del_stmt) */ /* 	return retVal; */ 
12896: /* MUTANT (del_stmt) */ /*         struct yaffs_obj *obj; */ 
12897: /* MUTANT (del_stmt) */ /*         int result; */ 
12898: /* MUTANT (del_stmt) */ /*         int retVal = -1; */ 
12898: /* MUTANT (rep_const) */        int retVal = 0;
12898: /* MUTANT (rep_const) */        int retVal = 1;
12898: /* MUTANT (rep_const) */        int retVal = ((-1)+1);
12898: /* MUTANT (rep_const) */        int retVal = ((-1)-1);
12900: /* MUTANT (del_stmt) */ /*         yaffsfs_Lock(); */ 
12901: /* MUTANT (del_stmt) */ /* 	obj = yaffsfs_HandleToObject(fd); */ 
12903: /* MUTANT (negate) */	if(!(obj)){
12905: /* MUTANT (negate) */		if(!(wctime)){
12906: /* MUTANT (del_stmt) */ /* 			obj->win_ctime[0] = wctime[0]; */ 
12906: /* MUTANT (rep_const) */			obj->win_ctime[1] = wctime[0];
12906: /* MUTANT (rep_const) */			obj->win_ctime[-1] = wctime[0];
12906: /* MUTANT (rep_const) */			obj->win_ctime[0] = wctime[1];
12906: /* MUTANT (rep_const) */			obj->win_ctime[0] = wctime[-1];
12907: /* MUTANT (del_stmt) */ /* 			obj->win_ctime[1] = wctime[1]; */ 
12907: /* MUTANT (rep_const) */			obj->win_ctime[0] = wctime[1];
12907: /* MUTANT (rep_const) */			obj->win_ctime[-1] = wctime[1];
12907: /* MUTANT (rep_const) */			obj->win_ctime[((1)+1)] = wctime[1];
12907: /* MUTANT (rep_const) */			obj->win_ctime[1] = wctime[0];
12907: /* MUTANT (rep_const) */			obj->win_ctime[1] = wctime[-1];
12907: /* MUTANT (rep_const) */			obj->win_ctime[1] = wctime[((1)+1)];
12909: /* MUTANT (negate) */		if(!(watime)){
12910: /* MUTANT (del_stmt) */ /*                         obj->win_atime[0] = watime[0]; */ 
12910: /* MUTANT (rep_const) */                        obj->win_atime[1] = watime[0];
12910: /* MUTANT (rep_const) */                        obj->win_atime[-1] = watime[0];
12910: /* MUTANT (rep_const) */                        obj->win_atime[0] = watime[1];
12910: /* MUTANT (rep_const) */                        obj->win_atime[0] = watime[-1];
12911: /* MUTANT (del_stmt) */ /*                         obj->win_atime[1] = watime[1]; */ 
12911: /* MUTANT (rep_const) */                        obj->win_atime[0] = watime[1];
12911: /* MUTANT (rep_const) */                        obj->win_atime[-1] = watime[1];
12911: /* MUTANT (rep_const) */                        obj->win_atime[((1)+1)] = watime[1];
12911: /* MUTANT (rep_const) */                        obj->win_atime[1] = watime[0];
12911: /* MUTANT (rep_const) */                        obj->win_atime[1] = watime[-1];
12911: /* MUTANT (rep_const) */                        obj->win_atime[1] = watime[((1)+1)];
12913: /* MUTANT (negate) */                if(!(wmtime)){
12914: /* MUTANT (del_stmt) */ /*                         obj->win_mtime[0] = wmtime[0]; */ 
12914: /* MUTANT (rep_const) */                        obj->win_mtime[1] = wmtime[0];
12914: /* MUTANT (rep_const) */                        obj->win_mtime[-1] = wmtime[0];
12914: /* MUTANT (rep_const) */                        obj->win_mtime[0] = wmtime[1];
12914: /* MUTANT (rep_const) */                        obj->win_mtime[0] = wmtime[-1];
12915: /* MUTANT (del_stmt) */ /*                         obj->win_mtime[1] = wmtime[1]; */ 
12915: /* MUTANT (rep_const) */                        obj->win_mtime[0] = wmtime[1];
12915: /* MUTANT (rep_const) */                        obj->win_mtime[-1] = wmtime[1];
12915: /* MUTANT (rep_const) */                        obj->win_mtime[((1)+1)] = wmtime[1];
12915: /* MUTANT (rep_const) */                        obj->win_mtime[1] = wmtime[0];
12915: /* MUTANT (rep_const) */                        obj->win_mtime[1] = wmtime[-1];
12915: /* MUTANT (rep_const) */                        obj->win_mtime[1] = wmtime[((1)+1)];
12918: /* MUTANT (rep_const) */                obj->dirty = 0;
12918: /* MUTANT (rep_const) */                obj->dirty = -1;
12918: /* MUTANT (rep_const) */                obj->dirty = ((1)+1);
12919: /* MUTANT (del_stmt) */ /*                 result = yaffs_flush_file(obj,0,0); */ 
12919: /* MUTANT (rep_const) */                result = yaffs_flush_file(obj,1,0);
12919: /* MUTANT (rep_const) */                result = yaffs_flush_file(obj,-1,0);
12919: /* MUTANT (rep_const) */                result = yaffs_flush_file(obj,0,1);
12919: /* MUTANT (rep_const) */                result = yaffs_flush_file(obj,0,-1);
12920: /* MUTANT (del_stmt) */ /*                 retVal = 0; */ 
12920: /* MUTANT (rep_const) */                retVal = 1;
12920: /* MUTANT (rep_const) */                retVal = -1;
12925: /* MUTANT (del_stmt) */ /* 	yaffsfs_Unlock(); */ 
12927: /* MUTANT (del_stmt) */ /* 	return retVal; */ 
12935: /* MUTANT (del_stmt) */ /* 	int result = -1; */ 
12935: /* MUTANT (rep_const) */	int result = 0;
12935: /* MUTANT (rep_const) */	int result = 1;
12935: /* MUTANT (rep_const) */	int result = ((-1)+1);
12935: /* MUTANT (rep_const) */	int result = ((-1)-1);
12937: /* MUTANT (negate) */	if(!(obj))
12940: /* MUTANT (negate) */	if(!(obj)) {
12941: /* MUTANT (del_stmt) */ /* 		obj->yst_mode = mode; */ 
12942: /* MUTANT (del_stmt) */ /* 		obj->dirty = 1; */ 
12942: /* MUTANT (rep_const) */		obj->dirty = 0;
12942: /* MUTANT (rep_const) */		obj->dirty = -1;
12942: /* MUTANT (rep_const) */		obj->dirty = ((1)+1);
12943: /* MUTANT (del_stmt) */ /* 		result = yaffs_flush_file(obj,0,0); */ 
12943: /* MUTANT (rep_const) */		result = yaffs_flush_file(obj,1,0);
12943: /* MUTANT (rep_const) */		result = yaffs_flush_file(obj,-1,0);
12943: /* MUTANT (rep_const) */		result = yaffs_flush_file(obj,0,1);
12943: /* MUTANT (rep_const) */		result = yaffs_flush_file(obj,0,-1);
12946: /* MUTANT (rep_op) */	return result != YAFFS_OK ? 0 : -1;
12946: /* MUTANT (rep_const) */	return result == YAFFS_OK ? 1 : -1;
12946: /* MUTANT (rep_const) */	return result == YAFFS_OK ? -1 : -1;
12946: /* MUTANT (rep_const) */	return result == YAFFS_OK ? 0 : 0;
12946: /* MUTANT (rep_const) */	return result == YAFFS_OK ? 0 : 1;
12946: /* MUTANT (rep_const) */	return result == YAFFS_OK ? 0 : ((-1)+1);
12946: /* MUTANT (rep_const) */	return result == YAFFS_OK ? 0 : ((-1)-1);
12952: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj=NULL; */ 
12953: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *dir=NULL; */ 
12954: /* MUTANT (del_stmt) */ /* 	int notDir = 0; */ 
12954: /* MUTANT (rep_const) */	int notDir = 1;
12954: /* MUTANT (rep_const) */	int notDir = -1;
12955: /* MUTANT (del_stmt) */ /* 	int loop = 0; */ 
12955: /* MUTANT (rep_const) */	int loop = 1;
12955: /* MUTANT (rep_const) */	int loop = -1;
12956: /* MUTANT (del_stmt) */ /* 	int retval = -1; */ 
12956: /* MUTANT (rep_const) */	int retval = 0;
12956: /* MUTANT (rep_const) */	int retval = 1;
12956: /* MUTANT (rep_const) */	int retval = ((-1)+1);
12956: /* MUTANT (rep_const) */	int retval = ((-1)-1);
12958: /* MUTANT (negate) */	if(!(!path)){
12959: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EFAULT); */ 
12960: /* MUTANT (del_stmt) */ /* 		return -1; */ 
12960: /* MUTANT (rep_const) */		return 0;
12960: /* MUTANT (rep_const) */		return 1;
12960: /* MUTANT (rep_const) */		return ((-1)+1);
12960: /* MUTANT (rep_const) */		return ((-1)-1);
12963: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) <= 0){
12963: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) > 0){
12963: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) >= 0){
12963: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) == 0){
12963: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) != 0){
12963: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < 1){
12963: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < -1){
12963: /* MUTANT (negate) */	if(!(yaffsfs_CheckPath(path) < 0)){
12964: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-ENAMETOOLONG); */ 
12965: /* MUTANT (del_stmt) */ /* 		return -1; */ 
12965: /* MUTANT (rep_const) */		return 0;
12965: /* MUTANT (rep_const) */		return 1;
12965: /* MUTANT (rep_const) */		return ((-1)+1);
12965: /* MUTANT (rep_const) */		return ((-1)-1);
12968: /* MUTANT (rep_op) */	if(amode & ~(R_OK & W_OK | X_OK)){
12968: /* MUTANT (rep_op) */	if(amode & ~(R_OK | W_OK & X_OK)){
12968: /* MUTANT (negate) */	if(!(amode & ~(R_OK | W_OK | X_OK))){
12969: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EINVAL); */ 
12970: /* MUTANT (del_stmt) */ /* 		return -1; */ 
12970: /* MUTANT (rep_const) */		return 0;
12970: /* MUTANT (rep_const) */		return 1;
12970: /* MUTANT (rep_const) */		return ((-1)+1);
12970: /* MUTANT (rep_const) */		return ((-1)-1);
12975: /* MUTANT (del_stmt) */ /* 	obj = yaffsfs_FindObject(NULL,path,0,1, &dir,&notDir,&loop); */ 
12975: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,1,1, &dir,&notDir,&loop);
12975: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,-1,1, &dir,&notDir,&loop);
12975: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,0,0, &dir,&notDir,&loop);
12975: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,0,-1, &dir,&notDir,&loop);
12975: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,0,((1)+1), &dir,&notDir,&loop);
12976: /* MUTANT (del_stmt) */ /* 	obj = yaffsfs_FollowLink(obj,0,&loop); */ 
12976: /* MUTANT (rep_const) */	obj = yaffsfs_FollowLink(obj,1,&loop);
12976: /* MUTANT (rep_const) */	obj = yaffsfs_FollowLink(obj,-1,&loop);
12978: /* MUTANT (rep_op) */	if(!dir || notDir)
12978: /* MUTANT (negate) */	if(!(!dir && notDir))
12980: /* MUTANT (negate) */	else if(!(loop))
12982: /* MUTANT (rep_op) */	else if(!dir && !obj)
12982: /* MUTANT (negate) */	else if(!(!dir || !obj))
12984: /* MUTANT (rep_op) */	else if((amode & W_OK) || obj->my_dev->read_only)
12984: /* MUTANT (negate) */	else if(!((amode & W_OK) && obj->my_dev->read_only))
12987: /* MUTANT (del_stmt) */ /* 		int access_ok = 1; */ 
12987: /* MUTANT (rep_const) */		int access_ok = 0;
12987: /* MUTANT (rep_const) */		int access_ok = -1;
12987: /* MUTANT (rep_const) */		int access_ok = ((1)+1);
12989: /* MUTANT (rep_op) */		if((amode & R_OK) || !(obj->yst_mode & S_IREAD))
12989: /* MUTANT (negate) */		if(!((amode & R_OK) && !(obj->yst_mode & S_IREAD)))
12990: /* MUTANT (rep_const) */			access_ok = 1;
12990: /* MUTANT (rep_const) */			access_ok = -1;
12991: /* MUTANT (rep_op) */		if((amode & W_OK) || !(obj->yst_mode & S_IWRITE))
12991: /* MUTANT (negate) */		if(!((amode & W_OK) && !(obj->yst_mode & S_IWRITE)))
12992: /* MUTANT (rep_const) */			access_ok = 1;
12992: /* MUTANT (rep_const) */			access_ok = -1;
12993: /* MUTANT (rep_op) */		if((amode & X_OK) || !(obj->yst_mode & S_IEXEC))
12993: /* MUTANT (negate) */		if(!((amode & X_OK) && !(obj->yst_mode & S_IEXEC)))
12994: /* MUTANT (rep_const) */			access_ok = 1;
12994: /* MUTANT (rep_const) */			access_ok = -1;
12996: /* MUTANT (negate) */		if(!(!access_ok))
12999: /* MUTANT (rep_const) */			retval = 1;
12999: /* MUTANT (rep_const) */			retval = -1;
13004: /* MUTANT (del_stmt) */ /* 	return retval; */ 
13011: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj=NULL; */ 
13012: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *dir=NULL; */ 
13013: /* MUTANT (del_stmt) */ /* 	int retVal = -1; */ 
13013: /* MUTANT (rep_const) */	int retVal = 0;
13013: /* MUTANT (rep_const) */	int retVal = 1;
13013: /* MUTANT (rep_const) */	int retVal = ((-1)+1);
13013: /* MUTANT (rep_const) */	int retVal = ((-1)-1);
13014: /* MUTANT (del_stmt) */ /* 	int notDir = 0; */ 
13014: /* MUTANT (rep_const) */	int notDir = 1;
13014: /* MUTANT (rep_const) */	int notDir = -1;
13015: /* MUTANT (del_stmt) */ /* 	int loop = 0; */ 
13015: /* MUTANT (rep_const) */	int loop = 1;
13015: /* MUTANT (rep_const) */	int loop = -1;
13017: /* MUTANT (negate) */	if(!(!path)){
13018: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EFAULT); */ 
13019: /* MUTANT (del_stmt) */ /* 		return -1; */ 
13019: /* MUTANT (rep_const) */		return 0;
13019: /* MUTANT (rep_const) */		return 1;
13019: /* MUTANT (rep_const) */		return ((-1)+1);
13019: /* MUTANT (rep_const) */		return ((-1)-1);
13022: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) <= 0){
13022: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) > 0){
13022: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) >= 0){
13022: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) == 0){
13022: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) != 0){
13022: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < 1){
13022: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < -1){
13022: /* MUTANT (negate) */	if(!(yaffsfs_CheckPath(path) < 0)){
13023: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-ENAMETOOLONG); */ 
13024: /* MUTANT (del_stmt) */ /* 		return -1; */ 
13024: /* MUTANT (rep_const) */		return 0;
13024: /* MUTANT (rep_const) */		return 1;
13024: /* MUTANT (rep_const) */		return ((-1)+1);
13024: /* MUTANT (rep_const) */		return ((-1)-1);
13027: /* MUTANT (rep_const) */	if(mode & ~(0)){
13027: /* MUTANT (rep_const) */	if(mode & ~(1)){
13027: /* MUTANT (rep_const) */	if(mode & ~(-1)){
13027: /* MUTANT (rep_const) */	if(mode & ~(((0777)+1))){
13027: /* MUTANT (rep_const) */	if(mode & ~(((0777)-1))){
13027: /* MUTANT (negate) */	if(!(mode & ~(0777))){
13028: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EINVAL); */ 
13029: /* MUTANT (del_stmt) */ /* 		return -1; */ 
13029: /* MUTANT (rep_const) */		return 0;
13029: /* MUTANT (rep_const) */		return 1;
13029: /* MUTANT (rep_const) */		return ((-1)+1);
13029: /* MUTANT (rep_const) */		return ((-1)-1);
13034: /* MUTANT (del_stmt) */ /* 	obj = yaffsfs_FindObject(NULL,path,0,1, &dir, &notDir,&loop); */ 
13034: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,1,1, &dir, &notDir,&loop);
13034: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,-1,1, &dir, &notDir,&loop);
13034: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,0,0, &dir, &notDir,&loop);
13034: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,0,-1, &dir, &notDir,&loop);
13034: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,0,((1)+1), &dir, &notDir,&loop);
13035: /* MUTANT (del_stmt) */ /* 	obj = yaffsfs_FollowLink(obj,0,&loop); */ 
13035: /* MUTANT (rep_const) */	obj = yaffsfs_FollowLink(obj,1,&loop);
13035: /* MUTANT (rep_const) */	obj = yaffsfs_FollowLink(obj,-1,&loop);
13037: /* MUTANT (rep_op) */	if(!dir || notDir)
13037: /* MUTANT (negate) */	if(!(!dir && notDir))
13039: /* MUTANT (negate) */	else if(!(loop))
13041: /* MUTANT (rep_op) */	else if(!dir && !obj)
13041: /* MUTANT (negate) */	else if(!(!dir || !obj))
13043: /* MUTANT (negate) */	else if(!(obj->my_dev->read_only))
13048: /* MUTANT (del_stmt) */ /* 	yaffsfs_Unlock(); */ 
13050: /* MUTANT (del_stmt) */ /* 	return retVal; */ 
13057: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj; */ 
13058: /* MUTANT (del_stmt) */ /* 	int retVal = -1; */ 
13058: /* MUTANT (rep_const) */	int retVal = 0;
13058: /* MUTANT (rep_const) */	int retVal = 1;
13058: /* MUTANT (rep_const) */	int retVal = ((-1)+1);
13058: /* MUTANT (rep_const) */	int retVal = ((-1)-1);
13060: /* MUTANT (rep_const) */	if(mode & ~(0)){
13060: /* MUTANT (rep_const) */	if(mode & ~(1)){
13060: /* MUTANT (rep_const) */	if(mode & ~(-1)){
13060: /* MUTANT (rep_const) */	if(mode & ~(((0777)+1))){
13060: /* MUTANT (rep_const) */	if(mode & ~(((0777)-1))){
13060: /* MUTANT (negate) */	if(!(mode & ~(0777))){
13061: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EINVAL); */ 
13062: /* MUTANT (del_stmt) */ /* 		return -1; */ 
13062: /* MUTANT (rep_const) */		return 0;
13062: /* MUTANT (rep_const) */		return 1;
13062: /* MUTANT (rep_const) */		return ((-1)+1);
13062: /* MUTANT (rep_const) */		return ((-1)-1);
13066: /* MUTANT (del_stmt) */ /* 	obj = yaffsfs_HandleToObject(fd); */ 
13068: /* MUTANT (negate) */	if(!(!obj))
13070: /* MUTANT (negate) */	else if(!(obj->my_dev->read_only))
13075: /* MUTANT (del_stmt) */ /* 	yaffsfs_Unlock(); */ 
13077: /* MUTANT (del_stmt) */ /* 	return retVal; */ 
13082: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *parent = NULL; */ 
13083: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *dir = NULL; */ 
13084: /* MUTANT (del_stmt) */ /* 	YCHAR *name; */ 
13085: /* MUTANT (del_stmt) */ /* 	YCHAR *alt_path = NULL; */ 
13086: /* MUTANT (del_stmt) */ /* 	int retVal= -1; */ 
13086: /* MUTANT (rep_const) */	int retVal= 0;
13086: /* MUTANT (rep_const) */	int retVal= 1;
13086: /* MUTANT (rep_const) */	int retVal= ((-1)+1);
13086: /* MUTANT (rep_const) */	int retVal= ((-1)-1);
13087: /* MUTANT (del_stmt) */ /* 	int notDir = 0; */ 
13087: /* MUTANT (rep_const) */	int notDir = 1;
13087: /* MUTANT (rep_const) */	int notDir = -1;
13088: /* MUTANT (del_stmt) */ /* 	int loop = 0; */ 
13088: /* MUTANT (rep_const) */	int loop = 1;
13088: /* MUTANT (rep_const) */	int loop = -1;
13090: /* MUTANT (negate) */	if(!(!path)){
13091: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EFAULT); */ 
13092: /* MUTANT (del_stmt) */ /* 		return -1; */ 
13092: /* MUTANT (rep_const) */		return 0;
13092: /* MUTANT (rep_const) */		return 1;
13092: /* MUTANT (rep_const) */		return ((-1)+1);
13092: /* MUTANT (rep_const) */		return ((-1)-1);
13095: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) <= 0){
13095: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) > 0){
13095: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) >= 0){
13095: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) == 0){
13095: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) != 0){
13095: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < 1){
13095: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < -1){
13095: /* MUTANT (negate) */	if(!(yaffsfs_CheckPath(path) < 0)){
13096: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-ENAMETOOLONG); */ 
13097: /* MUTANT (del_stmt) */ /* 		return -1; */ 
13097: /* MUTANT (rep_const) */		return 0;
13097: /* MUTANT (rep_const) */		return 1;
13097: /* MUTANT (rep_const) */		return ((-1)+1);
13097: /* MUTANT (rep_const) */		return ((-1)-1);
13100: /* MUTANT (rep_op) */	if(yaffsfs_alt_dir_path(path, &alt_path) <= 0){
13100: /* MUTANT (rep_op) */	if(yaffsfs_alt_dir_path(path, &alt_path) > 0){
13100: /* MUTANT (rep_op) */	if(yaffsfs_alt_dir_path(path, &alt_path) >= 0){
13100: /* MUTANT (rep_op) */	if(yaffsfs_alt_dir_path(path, &alt_path) == 0){
13100: /* MUTANT (rep_op) */	if(yaffsfs_alt_dir_path(path, &alt_path) != 0){
13100: /* MUTANT (rep_const) */	if(yaffsfs_alt_dir_path(path, &alt_path) < 1){
13100: /* MUTANT (rep_const) */	if(yaffsfs_alt_dir_path(path, &alt_path) < -1){
13100: /* MUTANT (negate) */	if(!(yaffsfs_alt_dir_path(path, &alt_path) < 0)){
13101: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-ENOMEM); */ 
13102: /* MUTANT (del_stmt) */ /* 		return -1; */ 
13102: /* MUTANT (rep_const) */		return 0;
13102: /* MUTANT (rep_const) */		return 1;
13102: /* MUTANT (rep_const) */		return ((-1)+1);
13102: /* MUTANT (rep_const) */		return ((-1)-1);
13104: /* MUTANT (negate) */	if(!(alt_path))
13107: /* MUTANT (del_stmt) */ /* 	yaffsfs_Lock(); */ 
13108: /* MUTANT (del_stmt) */ /* 	parent = yaffsfs_FindDirectory(NULL,path,&name,0,&notDir,&loop); */ 
13108: /* MUTANT (rep_const) */	parent = yaffsfs_FindDirectory(NULL,path,&name,1,&notDir,&loop);
13108: /* MUTANT (rep_const) */	parent = yaffsfs_FindDirectory(NULL,path,&name,-1,&notDir,&loop);
13109: /* MUTANT (rep_op) */	if(!parent || notDir)
13109: /* MUTANT (negate) */	if(!(!parent && notDir))
13111: /* MUTANT (negate) */	else if(!(loop))
13113: /* MUTANT (negate) */	else if(!(!parent))
13115: /* MUTANT (rep_op) */	else if(mystrnlen(name,5) != 0){
13115: /* MUTANT (rep_const) */	else if(mystrnlen(name,0) == 0){
13115: /* MUTANT (rep_const) */	else if(mystrnlen(name,1) == 0){
13115: /* MUTANT (rep_const) */	else if(mystrnlen(name,-1) == 0){
13115: /* MUTANT (rep_const) */	else if(mystrnlen(name,((5)+1)) == 0){
13115: /* MUTANT (rep_const) */	else if(mystrnlen(name,((5)-1)) == 0){
13115: /* MUTANT (rep_const) */	else if(mystrnlen(name,5) == 1){
13115: /* MUTANT (rep_const) */	else if(mystrnlen(name,5) == -1){
13115: /* MUTANT (negate) */	else if(!(mystrnlen(name,5) == 0)){
13117: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EEXIST); */ 
13118: /* MUTANT (negate) */	} else if(!(parent->my_dev->read_only))
13121: /* MUTANT (del_stmt) */ /* 		dir = yaffs_create_dir(parent,name,mode,0,0); */ 
13121: /* MUTANT (rep_const) */		dir = yaffs_create_dir(parent,name,mode,1,0);
13121: /* MUTANT (rep_const) */		dir = yaffs_create_dir(parent,name,mode,-1,0);
13121: /* MUTANT (rep_const) */		dir = yaffs_create_dir(parent,name,mode,0,1);
13121: /* MUTANT (rep_const) */		dir = yaffs_create_dir(parent,name,mode,0,-1);
13122: /* MUTANT (negate) */		if(!(dir))
13123: /* MUTANT (rep_const) */			retVal = 1;
13123: /* MUTANT (rep_const) */			retVal = -1;
13124: /* MUTANT (negate) */		else if(! (yaffs_find_by_name(parent,name)))
13132: /* MUTANT (negate) */	if(!(alt_path))
13135: /* MUTANT (del_stmt) */ /* 	return retVal; */ 
13140: /* MUTANT (del_stmt) */ /* 	int result; */ 
13141: /* MUTANT (del_stmt) */ /* 	YCHAR *alt_path; */ 
13143: /* MUTANT (negate) */	if(!(!path)){
13144: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EFAULT); */ 
13145: /* MUTANT (del_stmt) */ /* 		return -1; */ 
13145: /* MUTANT (rep_const) */		return 0;
13145: /* MUTANT (rep_const) */		return 1;
13145: /* MUTANT (rep_const) */		return ((-1)+1);
13145: /* MUTANT (rep_const) */		return ((-1)-1);
13148: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) <= 0){
13148: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) > 0){
13148: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) >= 0){
13148: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) == 0){
13148: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) != 0){
13148: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < 1){
13148: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < -1){
13148: /* MUTANT (negate) */	if(!(yaffsfs_CheckPath(path) < 0)){
13149: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-ENAMETOOLONG); */ 
13150: /* MUTANT (del_stmt) */ /* 		return -1; */ 
13150: /* MUTANT (rep_const) */		return 0;
13150: /* MUTANT (rep_const) */		return 1;
13150: /* MUTANT (rep_const) */		return ((-1)+1);
13150: /* MUTANT (rep_const) */		return ((-1)-1);
13153: /* MUTANT (rep_op) */	if(yaffsfs_alt_dir_path(path, &alt_path) <= 0){
13153: /* MUTANT (rep_op) */	if(yaffsfs_alt_dir_path(path, &alt_path) > 0){
13153: /* MUTANT (rep_op) */	if(yaffsfs_alt_dir_path(path, &alt_path) >= 0){
13153: /* MUTANT (rep_op) */	if(yaffsfs_alt_dir_path(path, &alt_path) == 0){
13153: /* MUTANT (rep_op) */	if(yaffsfs_alt_dir_path(path, &alt_path) != 0){
13153: /* MUTANT (rep_const) */	if(yaffsfs_alt_dir_path(path, &alt_path) < 1){
13153: /* MUTANT (rep_const) */	if(yaffsfs_alt_dir_path(path, &alt_path) < -1){
13153: /* MUTANT (negate) */	if(!(yaffsfs_alt_dir_path(path, &alt_path) < 0)){
13154: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-ENOMEM); */ 
13155: /* MUTANT (del_stmt) */ /* 		return -1; */ 
13155: /* MUTANT (rep_const) */		return 0;
13155: /* MUTANT (rep_const) */		return 1;
13155: /* MUTANT (rep_const) */		return ((-1)+1);
13155: /* MUTANT (rep_const) */		return ((-1)-1);
13157: /* MUTANT (negate) */	if(!(alt_path))
13159: /* MUTANT (del_stmt) */ /* 	result =  yaffsfs_DoUnlink(path,1); */ 
13159: /* MUTANT (rep_const) */	result =  yaffsfs_DoUnlink(path,0);
13159: /* MUTANT (rep_const) */	result =  yaffsfs_DoUnlink(path,-1);
13159: /* MUTANT (rep_const) */	result =  yaffsfs_DoUnlink(path,((1)+1));
13160: /* MUTANT (negate) */	if(!(alt_path))
13162: /* MUTANT (del_stmt) */ /* 	return result; */ 
13168: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev=NULL; */ 
13169: /* MUTANT (del_stmt) */ /* 	YCHAR *dummy; */ 
13170: /* MUTANT (del_stmt) */ /* 	dev = yaffsfs_FindDevice(path,&dummy); */ 
13171: /* MUTANT (del_stmt) */ /* 	return (void *)dev; */ 
13176: /* MUTANT (del_stmt) */ /* 	int retVal=-1; */ 
13176: /* MUTANT (rep_const) */	int retVal=0;
13176: /* MUTANT (rep_const) */	int retVal=1;
13176: /* MUTANT (rep_const) */	int retVal=((-1)+1);
13176: /* MUTANT (rep_const) */	int retVal=((-1)-1);
13177: /* MUTANT (del_stmt) */ /* 	int result=YAFFS_FAIL; */ 
13178: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev=NULL; */ 
13180: /* MUTANT (negate) */	if(!(!path)){
13181: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EFAULT); */ 
13182: /* MUTANT (del_stmt) */ /* 		return -1; */ 
13182: /* MUTANT (rep_const) */		return 0;
13182: /* MUTANT (rep_const) */		return 1;
13182: /* MUTANT (rep_const) */		return ((-1)+1);
13182: /* MUTANT (rep_const) */		return ((-1)-1);
13187: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) <= 0){
13187: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) > 0){
13187: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) >= 0){
13187: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) == 0){
13187: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) != 0){
13187: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < 1){
13187: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < -1){
13187: /* MUTANT (negate) */	if(!(yaffsfs_CheckPath(path) < 0)){
13188: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-ENAMETOOLONG); */ 
13189: /* MUTANT (del_stmt) */ /* 		return -1; */ 
13189: /* MUTANT (rep_const) */		return 0;
13189: /* MUTANT (rep_const) */		return 1;
13189: /* MUTANT (rep_const) */		return ((-1)+1);
13189: /* MUTANT (rep_const) */		return ((-1)-1);
13194: /* MUTANT (del_stmt) */ /* 	yaffsfs_InitHandles(); */ 
13196: /* MUTANT (del_stmt) */ /* 	dev = yaffsfs_FindMountPoint(path); */ 
13197: /* MUTANT (negate) */	if(!(dev)){
13198: /* MUTANT (negate) */		if(!(!dev->is_mounted)){
13199: /* MUTANT (del_stmt) */ /* 			dev->read_only = read_only ? 1 : 0; */ 
13199: /* MUTANT (rep_const) */			dev->read_only = read_only ? 0 : 0;
13199: /* MUTANT (rep_const) */			dev->read_only = read_only ? -1 : 0;
13199: /* MUTANT (rep_const) */			dev->read_only = read_only ? ((1)+1) : 0;
13199: /* MUTANT (rep_const) */			dev->read_only = read_only ? 1 : 1;
13199: /* MUTANT (rep_const) */			dev->read_only = read_only ? 1 : -1;
13200: /* MUTANT (del_stmt) */ /* 			result = yaffs_guts_initialise(dev); */ 
13201: /* MUTANT (rep_op) */			if(result != YAFFS_FAIL)
13201: /* MUTANT (negate) */			if(!(result == YAFFS_FAIL))
13203: /* MUTANT (del_stmt) */ /* 			retVal = result ? 0 : -1; */ 
13203: /* MUTANT (rep_const) */			retVal = result ? 1 : -1;
13203: /* MUTANT (rep_const) */			retVal = result ? -1 : -1;
13203: /* MUTANT (rep_const) */			retVal = result ? 0 : 0;
13203: /* MUTANT (rep_const) */			retVal = result ? 0 : 1;
13203: /* MUTANT (rep_const) */			retVal = result ? 0 : ((-1)+1);
13203: /* MUTANT (rep_const) */			retVal = result ? 0 : ((-1)-1);
13211: /* MUTANT (del_stmt) */ /* 	yaffsfs_Unlock(); */ 
13212: /* MUTANT (del_stmt) */ /* 	return retVal; */ 
13218: /* MUTANT (del_stmt) */ /* 	return yaffs_mount2(path,0); */ 
13218: /* MUTANT (rep_const) */	return yaffs_mount2(path,1);
13218: /* MUTANT (rep_const) */	return yaffs_mount2(path,-1);
13223: /* MUTANT (del_stmt) */ /*         int retVal=-1; */ 
13223: /* MUTANT (rep_const) */        int retVal=0;
13223: /* MUTANT (rep_const) */        int retVal=1;
13223: /* MUTANT (rep_const) */        int retVal=((-1)+1);
13223: /* MUTANT (rep_const) */        int retVal=((-1)-1);
13224: /* MUTANT (del_stmt) */ /*         struct yaffs_dev *dev=NULL; */ 
13225: /* MUTANT (del_stmt) */ /*         YCHAR *dummy; */ 
13227: /* MUTANT (negate) */	if(!(!path)){
13228: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EFAULT); */ 
13229: /* MUTANT (del_stmt) */ /* 		return -1; */ 
13229: /* MUTANT (rep_const) */		return 0;
13229: /* MUTANT (rep_const) */		return 1;
13229: /* MUTANT (rep_const) */		return ((-1)+1);
13229: /* MUTANT (rep_const) */		return ((-1)-1);
13232: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) <= 0){
13232: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) > 0){
13232: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) >= 0){
13232: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) == 0){
13232: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) != 0){
13232: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < 1){
13232: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < -1){
13232: /* MUTANT (negate) */	if(!(yaffsfs_CheckPath(path) < 0)){
13233: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-ENAMETOOLONG); */ 
13234: /* MUTANT (del_stmt) */ /* 		return -1; */ 
13234: /* MUTANT (rep_const) */		return 0;
13234: /* MUTANT (rep_const) */		return 1;
13234: /* MUTANT (rep_const) */		return ((-1)+1);
13234: /* MUTANT (rep_const) */		return ((-1)-1);
13238: /* MUTANT (del_stmt) */ /*         dev = yaffsfs_FindDevice(path,&dummy); */ 
13239: /* MUTANT (negate) */        if(!(dev)){
13240: /* MUTANT (negate) */                if(!(!dev->is_mounted))
13242: /* MUTANT (negate) */		else if(!(dev->read_only))
13246: /* MUTANT (del_stmt) */ /*                         yaffs_flush_whole_cache(dev); */ 
13247: /* MUTANT (del_stmt) */ /*                         yaffs_checkpoint_save(dev); */ 
13248: /* MUTANT (del_stmt) */ /*                         retVal = 0; */ 
13248: /* MUTANT (rep_const) */                        retVal = 1;
13248: /* MUTANT (rep_const) */                        retVal = -1;
13254: /* MUTANT (del_stmt) */ /*         yaffsfs_Unlock(); */ 
13255: /* MUTANT (del_stmt) */ /*         return retVal; */ 
13261: /* MUTANT (del_stmt) */ /* 	int i; */ 
13262: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj; */ 
13264: /* MUTANT (rep_op) */	for(i = 0; i <= YAFFSFS_N_HANDLES; i++){
13264: /* MUTANT (rep_op) */	for(i = 0; i > YAFFSFS_N_HANDLES; i++){
13264: /* MUTANT (rep_op) */	for(i = 0; i >= YAFFSFS_N_HANDLES; i++){
13264: /* MUTANT (rep_op) */	for(i = 0; i == YAFFSFS_N_HANDLES; i++){
13264: /* MUTANT (rep_op) */	for(i = 0; i != YAFFSFS_N_HANDLES; i++){
13264: /* MUTANT (rep_op) */	for(i = 0; i < YAFFSFS_N_HANDLES; i--){
13264: /* MUTANT (rep_const) */	for(i = 1; i < YAFFSFS_N_HANDLES; i++){
13264: /* MUTANT (rep_const) */	for(i = -1; i < YAFFSFS_N_HANDLES; i++){
13265: /* MUTANT (del_stmt) */ /* 		obj = yaffsfs_HandleToObject(i); */ 
13266: /* MUTANT (rep_op) */		if(obj || obj->my_dev == dev)
13266: /* MUTANT (rep_op) */		if(obj && obj->my_dev != dev)
13266: /* MUTANT (negate) */		if(!(obj && obj->my_dev == dev))
13267: /* MUTANT (rep_const) */		return 0;
13267: /* MUTANT (rep_const) */		return -1;
13267: /* MUTANT (rep_const) */		return ((1)+1);
13269: /* MUTANT (rep_const) */	return 1;
13269: /* MUTANT (rep_const) */	return -1;
13275: /* MUTANT (del_stmt) */ /*         int retVal=-1; */ 
13275: /* MUTANT (rep_const) */        int retVal=0;
13275: /* MUTANT (rep_const) */        int retVal=1;
13275: /* MUTANT (rep_const) */        int retVal=((-1)+1);
13275: /* MUTANT (rep_const) */        int retVal=((-1)-1);
13276: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev=NULL; */ 
13278: /* MUTANT (negate) */	if(!(!path)){
13279: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EFAULT); */ 
13280: /* MUTANT (del_stmt) */ /* 		return -1; */ 
13280: /* MUTANT (rep_const) */		return 0;
13280: /* MUTANT (rep_const) */		return 1;
13280: /* MUTANT (rep_const) */		return ((-1)+1);
13280: /* MUTANT (rep_const) */		return ((-1)-1);
13283: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) <= 0){
13283: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) > 0){
13283: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) >= 0){
13283: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) == 0){
13283: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) != 0){
13283: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < 1){
13283: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < -1){
13283: /* MUTANT (negate) */	if(!(yaffsfs_CheckPath(path) < 0)){
13284: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-ENAMETOOLONG); */ 
13285: /* MUTANT (del_stmt) */ /* 		return -1; */ 
13285: /* MUTANT (rep_const) */		return 0;
13285: /* MUTANT (rep_const) */		return 1;
13285: /* MUTANT (rep_const) */		return ((-1)+1);
13285: /* MUTANT (rep_const) */		return ((-1)-1);
13289: /* MUTANT (del_stmt) */ /* 	dev = yaffsfs_FindMountPoint(path); */ 
13290: /* MUTANT (negate) */	if(!(dev)){
13291: /* MUTANT (negate) */		if(!(dev->is_mounted)){
13292: /* MUTANT (del_stmt) */ /* 			yaffs_flush_whole_cache(dev); */ 
13294: /* MUTANT (rep_op) */			if(force && ! yaffsfs_IsDevBusy(dev)){
13294: /* MUTANT (negate) */			if(!(force || ! yaffsfs_IsDevBusy(dev))){
13295: /* MUTANT (negate) */				if(!(read_only))
13297: /* MUTANT (del_stmt) */ /* 				dev->read_only =  read_only ? 1 : 0; */ 
13297: /* MUTANT (rep_const) */				dev->read_only =  read_only ? 0 : 0;
13297: /* MUTANT (rep_const) */				dev->read_only =  read_only ? -1 : 0;
13297: /* MUTANT (rep_const) */				dev->read_only =  read_only ? ((1)+1) : 0;
13297: /* MUTANT (rep_const) */				dev->read_only =  read_only ? 1 : 1;
13297: /* MUTANT (rep_const) */				dev->read_only =  read_only ? 1 : -1;
13298: /* MUTANT (del_stmt) */ /* 				retVal = 0; */ 
13298: /* MUTANT (rep_const) */				retVal = 1;
13298: /* MUTANT (rep_const) */				retVal = -1;
13309: /* MUTANT (del_stmt) */ /* 	yaffsfs_Unlock(); */ 
13310: /* MUTANT (del_stmt) */ /* 	return retVal; */ 
13316: /* MUTANT (del_stmt) */ /*         int retVal=-1; */ 
13316: /* MUTANT (rep_const) */        int retVal=0;
13316: /* MUTANT (rep_const) */        int retVal=1;
13316: /* MUTANT (rep_const) */        int retVal=((-1)+1);
13316: /* MUTANT (rep_const) */        int retVal=((-1)-1);
13317: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev=NULL; */ 
13319: /* MUTANT (negate) */	if(!(!path)){
13320: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EFAULT); */ 
13321: /* MUTANT (del_stmt) */ /* 		return -1; */ 
13321: /* MUTANT (rep_const) */		return 0;
13321: /* MUTANT (rep_const) */		return 1;
13321: /* MUTANT (rep_const) */		return ((-1)+1);
13321: /* MUTANT (rep_const) */		return ((-1)-1);
13324: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) <= 0){
13324: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) > 0){
13324: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) >= 0){
13324: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) == 0){
13324: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) != 0){
13324: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < 1){
13324: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < -1){
13324: /* MUTANT (negate) */	if(!(yaffsfs_CheckPath(path) < 0)){
13325: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-ENAMETOOLONG); */ 
13326: /* MUTANT (del_stmt) */ /* 		return -1; */ 
13326: /* MUTANT (rep_const) */		return 0;
13326: /* MUTANT (rep_const) */		return 1;
13326: /* MUTANT (rep_const) */		return ((-1)+1);
13326: /* MUTANT (rep_const) */		return ((-1)-1);
13330: /* MUTANT (del_stmt) */ /* 	dev = yaffsfs_FindMountPoint(path); */ 
13331: /* MUTANT (negate) */	if(!(dev)){
13332: /* MUTANT (negate) */		if(!(dev->is_mounted)){
13333: /* MUTANT (del_stmt) */ /* 			int inUse; */ 
13334: /* MUTANT (del_stmt) */ /* 			yaffs_flush_whole_cache(dev); */ 
13335: /* MUTANT (del_stmt) */ /* 			yaffs_checkpoint_save(dev); */ 
13336: /* MUTANT (del_stmt) */ /* 			inUse = yaffsfs_IsDevBusy(dev); */ 
13337: /* MUTANT (rep_op) */			if(!inUse && force){
13337: /* MUTANT (negate) */			if(!(!inUse || force)){
13338: /* MUTANT (negate) */				if(!(inUse))
13340: /* MUTANT (del_stmt) */ /* 				yaffs_deinitialise(dev); */ 
13342: /* MUTANT (del_stmt) */ /* 				retVal = 0; */ 
13342: /* MUTANT (rep_const) */				retVal = 1;
13342: /* MUTANT (rep_const) */				retVal = -1;
13352: /* MUTANT (del_stmt) */ /* 	yaffsfs_Unlock(); */ 
13353: /* MUTANT (del_stmt) */ /* 	return retVal; */ 
13359: /* MUTANT (del_stmt) */ /* 	return yaffs_unmount2(path,0); */ 
13359: /* MUTANT (rep_const) */	return yaffs_unmount2(path,1);
13359: /* MUTANT (rep_const) */	return yaffs_unmount2(path,-1);
13364: /* MUTANT (del_stmt) */ /* 	loff_t retVal=-1; */ 
13364: /* MUTANT (rep_const) */	loff_t retVal=0;
13364: /* MUTANT (rep_const) */	loff_t retVal=1;
13364: /* MUTANT (rep_const) */	loff_t retVal=((-1)+1);
13364: /* MUTANT (rep_const) */	loff_t retVal=((-1)-1);
13365: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev=NULL; */ 
13366: /* MUTANT (del_stmt) */ /* 	YCHAR *dummy; */ 
13368: /* MUTANT (negate) */	if(!(!path)){
13369: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EFAULT); */ 
13370: /* MUTANT (del_stmt) */ /* 		return -1; */ 
13370: /* MUTANT (rep_const) */		return 0;
13370: /* MUTANT (rep_const) */		return 1;
13370: /* MUTANT (rep_const) */		return ((-1)+1);
13370: /* MUTANT (rep_const) */		return ((-1)-1);
13373: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) <= 0){
13373: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) > 0){
13373: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) >= 0){
13373: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) == 0){
13373: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) != 0){
13373: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < 1){
13373: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < -1){
13373: /* MUTANT (negate) */	if(!(yaffsfs_CheckPath(path) < 0)){
13374: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-ENAMETOOLONG); */ 
13375: /* MUTANT (del_stmt) */ /* 		return -1; */ 
13375: /* MUTANT (rep_const) */		return 0;
13375: /* MUTANT (rep_const) */		return 1;
13375: /* MUTANT (rep_const) */		return ((-1)+1);
13375: /* MUTANT (rep_const) */		return ((-1)-1);
13379: /* MUTANT (del_stmt) */ /* 	dev = yaffsfs_FindDevice(path,&dummy); */ 
13380: /* MUTANT (rep_op) */	if(dev  || dev->is_mounted){
13380: /* MUTANT (negate) */	if(!(dev  && dev->is_mounted)){
13381: /* MUTANT (del_stmt) */ /* 		retVal = yaffs_get_n_free_chunks(dev); */ 
13382: /* MUTANT (del_stmt) */ /* 		retVal *= dev->data_bytes_per_chunk; */ 
13382: /* MUTANT (rep_op) */		retVal += dev->data_bytes_per_chunk;
13382: /* MUTANT (rep_op) */		retVal -= dev->data_bytes_per_chunk;
13382: /* MUTANT (rep_op) */		retVal %= dev->data_bytes_per_chunk;
13387: /* MUTANT (del_stmt) */ /* 	yaffsfs_Unlock(); */ 
13388: /* MUTANT (del_stmt) */ /* 	return retVal; */ 
13393: /* MUTANT (del_stmt) */ /* 	loff_t retVal=-1; */ 
13393: /* MUTANT (rep_const) */	loff_t retVal=0;
13393: /* MUTANT (rep_const) */	loff_t retVal=1;
13393: /* MUTANT (rep_const) */	loff_t retVal=((-1)+1);
13393: /* MUTANT (rep_const) */	loff_t retVal=((-1)-1);
13394: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev=NULL; */ 
13395: /* MUTANT (del_stmt) */ /* 	YCHAR *dummy; */ 
13397: /* MUTANT (negate) */	if(!(!path)){
13398: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EFAULT); */ 
13399: /* MUTANT (del_stmt) */ /* 		return -1; */ 
13399: /* MUTANT (rep_const) */		return 0;
13399: /* MUTANT (rep_const) */		return 1;
13399: /* MUTANT (rep_const) */		return ((-1)+1);
13399: /* MUTANT (rep_const) */		return ((-1)-1);
13402: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) <= 0){
13402: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) > 0){
13402: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) >= 0){
13402: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) == 0){
13402: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) != 0){
13402: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < 1){
13402: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < -1){
13402: /* MUTANT (negate) */	if(!(yaffsfs_CheckPath(path) < 0)){
13403: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-ENAMETOOLONG); */ 
13404: /* MUTANT (del_stmt) */ /* 		return -1; */ 
13404: /* MUTANT (rep_const) */		return 0;
13404: /* MUTANT (rep_const) */		return 1;
13404: /* MUTANT (rep_const) */		return ((-1)+1);
13404: /* MUTANT (rep_const) */		return ((-1)-1);
13408: /* MUTANT (del_stmt) */ /* 	dev = yaffsfs_FindDevice(path,&dummy); */ 
13409: /* MUTANT (rep_op) */	if(dev  || dev->is_mounted){
13409: /* MUTANT (negate) */	if(!(dev  && dev->is_mounted)){
13410: /* MUTANT (rep_op) */		retVal = (dev->param.end_block - dev->param.start_block - 1) -
13410: /* MUTANT (rep_op) */		retVal = (dev->param.end_block - dev->param.start_block * 1) -
13410: /* MUTANT (rep_op) */		retVal = (dev->param.end_block - dev->param.start_block % 1) -
13410: /* MUTANT (rep_const) */		retVal = (dev->param.end_block - dev->param.start_block + 0) -
13410: /* MUTANT (rep_const) */		retVal = (dev->param.end_block - dev->param.start_block + -1) -
13410: /* MUTANT (rep_const) */		retVal = (dev->param.end_block - dev->param.start_block + ((1)+1)) -
13412: /* MUTANT (del_stmt) */ /* 		retVal *= dev->param.chunks_per_block; */ 
13412: /* MUTANT (rep_op) */		retVal += dev->param.chunks_per_block;
13412: /* MUTANT (rep_op) */		retVal -= dev->param.chunks_per_block;
13412: /* MUTANT (rep_op) */		retVal %= dev->param.chunks_per_block;
13413: /* MUTANT (del_stmt) */ /* 		retVal *= dev->data_bytes_per_chunk; */ 
13413: /* MUTANT (rep_op) */		retVal += dev->data_bytes_per_chunk;
13413: /* MUTANT (rep_op) */		retVal -= dev->data_bytes_per_chunk;
13413: /* MUTANT (rep_op) */		retVal %= dev->data_bytes_per_chunk;
13418: /* MUTANT (del_stmt) */ /* 	yaffsfs_Unlock(); */ 
13419: /* MUTANT (del_stmt) */ /* 	return retVal; */ 
13424: /* MUTANT (del_stmt) */ /* 	loff_t retVal= -1; */ 
13424: /* MUTANT (rep_const) */	loff_t retVal= 0;
13424: /* MUTANT (rep_const) */	loff_t retVal= 1;
13424: /* MUTANT (rep_const) */	loff_t retVal= ((-1)+1);
13424: /* MUTANT (rep_const) */	loff_t retVal= ((-1)-1);
13425: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev=NULL; */ 
13426: /* MUTANT (del_stmt) */ /* 	YCHAR *dummy; */ 
13428: /* MUTANT (negate) */	if(!(!path)){
13429: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EFAULT); */ 
13430: /* MUTANT (del_stmt) */ /* 		return -1; */ 
13430: /* MUTANT (rep_const) */		return 0;
13430: /* MUTANT (rep_const) */		return 1;
13430: /* MUTANT (rep_const) */		return ((-1)+1);
13430: /* MUTANT (rep_const) */		return ((-1)-1);
13433: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) <= 0){
13433: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) > 0){
13433: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) >= 0){
13433: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) == 0){
13433: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) != 0){
13433: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < 1){
13433: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < -1){
13433: /* MUTANT (negate) */	if(!(yaffsfs_CheckPath(path) < 0)){
13434: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-ENAMETOOLONG); */ 
13435: /* MUTANT (del_stmt) */ /* 		return -1; */ 
13435: /* MUTANT (rep_const) */		return 0;
13435: /* MUTANT (rep_const) */		return 1;
13435: /* MUTANT (rep_const) */		return ((-1)+1);
13435: /* MUTANT (rep_const) */		return ((-1)-1);
13439: /* MUTANT (del_stmt) */ /* 	dev = yaffsfs_FindDevice(path,&dummy); */ 
13440: /* MUTANT (rep_op) */	if(dev  || dev->is_mounted) {
13440: /* MUTANT (negate) */	if(!(dev  && dev->is_mounted)) {
13441: /* MUTANT (del_stmt) */ /* 	   int n_obj = dev->n_obj; */ 
13442: /* MUTANT (rep_op) */	   if(n_obj <= dev->n_hardlinks)
13442: /* MUTANT (rep_op) */	   if(n_obj < dev->n_hardlinks)
13442: /* MUTANT (rep_op) */	   if(n_obj >= dev->n_hardlinks)
13442: /* MUTANT (rep_op) */	   if(n_obj == dev->n_hardlinks)
13442: /* MUTANT (rep_op) */	   if(n_obj != dev->n_hardlinks)
13442: /* MUTANT (negate) */	   if(!(n_obj > dev->n_hardlinks))
13446: /* MUTANT (rep_op) */	if(retVal <= 0)
13446: /* MUTANT (rep_op) */	if(retVal > 0)
13446: /* MUTANT (rep_op) */	if(retVal >= 0)
13446: /* MUTANT (rep_op) */	if(retVal == 0)
13446: /* MUTANT (rep_op) */	if(retVal != 0)
13446: /* MUTANT (rep_const) */	if(retVal < 1)
13446: /* MUTANT (rep_const) */	if(retVal < -1)
13446: /* MUTANT (negate) */	if(!(retVal < 0))
13449: /* MUTANT (del_stmt) */ /* 	yaffsfs_Unlock(); */ 
13450: /* MUTANT (del_stmt) */ /* 	return retVal; */ 
13456: /* MUTANT (del_stmt) */ /* 	dev->is_mounted = 0; */ 
13456: /* MUTANT (rep_const) */	dev->is_mounted = 1;
13456: /* MUTANT (rep_const) */	dev->is_mounted = -1;
13457: /* MUTANT (del_stmt) */ /* 	dev->param.remove_obj_fn = yaffsfs_RemoveObjectCallback; */ 
13459: /* MUTANT (negate) */	if(!(!dev->dev_list.next))
13462: /* MUTANT (del_stmt) */ /* 	list_add(&dev->dev_list,&yaffsfs_deviceList); */ 
13467: /* MUTANT (del_stmt) */ /* 	list_del_init(&dev->dev_list); */ 
13484: /* MUTANT (del_stmt) */ /* 	u32 magic; */ 
13485: /* MUTANT (del_stmt) */ /* 	yaffs_dirent de; */ 		/* directory entry being used by this dsc */
13486: /* MUTANT (del_stmt) */ /* 	YCHAR name[NAME_MAX+1]; */ 		/* name of directory being searched */
13486: /* MUTANT (rep_op) */	YCHAR name[NAME_MAX-1];		/* name of directory being searched */
13486: /* MUTANT (rep_op) */	YCHAR name[NAME_MAX*1];		/* name of directory being searched */
13486: /* MUTANT (rep_op) */	YCHAR name[NAME_MAX%1];		/* name of directory being searched */
13486: /* MUTANT (rep_const) */	YCHAR name[NAME_MAX+0];		/* name of directory being searched */
13486: /* MUTANT (rep_const) */	YCHAR name[NAME_MAX+-1];		/* name of directory being searched */
13486: /* MUTANT (rep_const) */	YCHAR name[NAME_MAX+((1)+1)];		/* name of directory being searched */
13487: /* MUTANT (del_stmt) */ /*         struct yaffs_obj *dirObj; */            /* ptr to directory being searched */
13488: /* MUTANT (del_stmt) */ /*         struct yaffs_obj *nextReturn; */        /* obj to be returned by next readddir */
13489: /* MUTANT (del_stmt) */ /*         int offset; */ 
13490: /* MUTANT (del_stmt) */ /*         struct list_head others; */ 
13491: /* MUTANT (del_stmt) */ /* } yaffsfs_DirectorySearchContext; */ 
13495: /* MUTANT (del_stmt) */ /* static struct list_head search_contexts; */ 
13500: /* MUTANT (rep_op) */	if(dsc ||
13501: /* MUTANT (rep_op) */	   dsc->dirObj ||
13502: /* MUTANT (rep_op) */	   dsc->dirObj->variant_type != YAFFS_OBJECT_TYPE_DIRECTORY){
13504: /* MUTANT (del_stmt) */ /*            dsc->offset = 0; */ 
13504: /* MUTANT (rep_const) */           dsc->offset = 1;
13504: /* MUTANT (rep_const) */           dsc->offset = -1;
13506: /* MUTANT (negate) */           if(!( list_empty(&dsc->dirObj->variant.dir_variant.children)))
13518: /* MUTANT (rep_op) */	if(dsc ||
13519: /* MUTANT (rep_op) */	   dsc->dirObj ||
13520: /* MUTANT (rep_op) */           dsc->dirObj->variant_type != YAFFS_OBJECT_TYPE_DIRECTORY){
13522: /* MUTANT (rep_op) */           if( dsc->nextReturn != NULL ||
13522: /* MUTANT (rep_op) */           if( dsc->nextReturn == NULL &&
13526: /* MUTANT (del_stmt) */ /*                    struct list_head *next = dsc->nextReturn->siblings.next; */ 
13528: /* MUTANT (rep_op) */                   if( next != &dsc->dirObj->variant.dir_variant.children)
13528: /* MUTANT (negate) */                   if(!( next == &dsc->dirObj->variant.dir_variant.children))
13541: /* MUTANT (del_stmt) */ /*         struct list_head *i; */ 
13542: /* MUTANT (del_stmt) */ /*         yaffsfs_DirectorySearchContext *dsc; */ 
13545: /* MUTANT (negate) */        if(!(!search_contexts.next))
13553: /* MUTANT (negate) */                if(! (i)) {
13554: /* MUTANT (del_stmt) */ /*                         dsc = list_entry(i, yaffsfs_DirectorySearchContext,others); */ 
13555: /* MUTANT (rep_op) */                        if(dsc->nextReturn != obj)
13555: /* MUTANT (negate) */                        if(!(dsc->nextReturn == obj))
13564: /* MUTANT (del_stmt) */ /* 	yaffs_DIR *dir = NULL; */ 
13565: /* MUTANT (del_stmt) */ /*  	struct yaffs_obj *obj = NULL; */ 
13566: /* MUTANT (del_stmt) */ /* 	yaffsfs_DirectorySearchContext *dsc = NULL; */ 
13567: /* MUTANT (del_stmt) */ /* 	int notDir = 0; */ 
13567: /* MUTANT (rep_const) */	int notDir = 1;
13567: /* MUTANT (rep_const) */	int notDir = -1;
13568: /* MUTANT (del_stmt) */ /* 	int loop = 0; */ 
13568: /* MUTANT (rep_const) */	int loop = 1;
13568: /* MUTANT (rep_const) */	int loop = -1;
13570: /* MUTANT (negate) */	if(!(!dirname)){
13571: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EFAULT); */ 
13572: /* MUTANT (del_stmt) */ /* 		return NULL; */ 
13575: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(dirname) <= 0){
13575: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(dirname) > 0){
13575: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(dirname) >= 0){
13575: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(dirname) == 0){
13575: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(dirname) != 0){
13575: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(dirname) < 1){
13575: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(dirname) < -1){
13575: /* MUTANT (negate) */	if(!(yaffsfs_CheckPath(dirname) < 0)){
13576: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-ENAMETOOLONG); */ 
13577: /* MUTANT (del_stmt) */ /* 		return NULL; */ 
13582: /* MUTANT (del_stmt) */ /* 	obj = yaffsfs_FindObject(NULL,dirname,0,1,NULL,&notDir,&loop); */ 
13582: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,dirname,1,1,NULL,&notDir,&loop);
13582: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,dirname,-1,1,NULL,&notDir,&loop);
13582: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,dirname,0,0,NULL,&notDir,&loop);
13582: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,dirname,0,-1,NULL,&notDir,&loop);
13582: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,dirname,0,((1)+1),NULL,&notDir,&loop);
13584: /* MUTANT (rep_op) */	if(!obj || notDir)
13584: /* MUTANT (negate) */	if(!(!obj && notDir))
13586: /* MUTANT (negate) */	else if(!(loop))
13588: /* MUTANT (negate) */	else if(!(!obj))
13590: /* MUTANT (rep_op) */	else if(obj->variant_type == YAFFS_OBJECT_TYPE_DIRECTORY)
13590: /* MUTANT (negate) */	else if(!(obj->variant_type != YAFFS_OBJECT_TYPE_DIRECTORY))
13594: /* MUTANT (del_stmt) */ /* 		dsc = kmalloc(sizeof(yaffsfs_DirectorySearchContext), 0); */ 
13594: /* MUTANT (rep_const) */		dsc = kmalloc(sizeof(yaffsfs_DirectorySearchContext), 1);
13594: /* MUTANT (rep_const) */		dsc = kmalloc(sizeof(yaffsfs_DirectorySearchContext), -1);
13595: /* MUTANT (del_stmt) */ /* 		dir = (yaffs_DIR *)dsc; */ 
13597: /* MUTANT (negate) */		if(!(dsc)){
13598: /* MUTANT (del_stmt) */ /* 			mymemset(dsc,0,sizeof(yaffsfs_DirectorySearchContext)); */ 
13598: /* MUTANT (rep_const) */			mymemset(dsc,1,sizeof(yaffsfs_DirectorySearchContext));
13598: /* MUTANT (rep_const) */			mymemset(dsc,-1,sizeof(yaffsfs_DirectorySearchContext));
13599: /* MUTANT (del_stmt) */ /*                         dsc->magic = YAFFS_MAGIC; */ 
13600: /* MUTANT (del_stmt) */ /*                         dsc->dirObj = obj; */ 
13601: /* MUTANT (del_stmt) */ /*                         mystrncpy(dsc->name,dirname,NAME_MAX); */ 
13602: /* MUTANT (del_stmt) */ /*                         INIT_LIST_HEAD(&dsc->others); */ 
13604: /* MUTANT (negate) */                        if(!(!search_contexts.next))
13607: /* MUTANT (del_stmt) */ /*                         list_add(&dsc->others,&search_contexts); */ 
13608: /* MUTANT (del_stmt) */ /*                         yaffsfs_SetDirRewound(dsc); */ 
13615: /* MUTANT (del_stmt) */ /* 	return dir; */ 
13620: /* MUTANT (del_stmt) */ /* 	yaffsfs_DirectorySearchContext *dsc = (yaffsfs_DirectorySearchContext *)dirp; */ 
13621: /* MUTANT (del_stmt) */ /* 	struct yaffs_dirent *retVal = NULL; */ 
13623: /* MUTANT (del_stmt) */ /* 	yaffsfs_Lock(); */ 
13625: /* MUTANT (rep_op) */	if(dsc || dsc->magic == YAFFS_MAGIC){
13625: /* MUTANT (rep_op) */	if(dsc && dsc->magic != YAFFS_MAGIC){
13625: /* MUTANT (negate) */	if(!(dsc && dsc->magic == YAFFS_MAGIC)){
13626: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(0); */ 
13626: /* MUTANT (rep_const) */		yaffsfs_SetError(1);
13626: /* MUTANT (rep_const) */		yaffsfs_SetError(-1);
13627: /* MUTANT (negate) */		if(!(dsc->nextReturn)){
13628: /* MUTANT (del_stmt) */ /* 			dsc->de.d_ino = yaffs_get_equivalent_obj(dsc->nextReturn)->obj_id; */ 
13629: /* MUTANT (del_stmt) */ /* 			dsc->de.d_dont_use = (unsigned)dsc->nextReturn; */ 
13630: /* MUTANT (del_stmt) */ /* 			dsc->de.d_off = dsc->offset++; */ 
13630: /* MUTANT (rep_op) */			dsc->de.d_off = dsc->offset--;
13631: /* MUTANT (del_stmt) */ /* 			yaffs_get_obj_name(dsc->nextReturn,dsc->de.d_name,NAME_MAX); */ 
13632: /* MUTANT (rep_op) */			if(mystrnlen(dsc->de.d_name,NAME_MAX-1) == 0)
13632: /* MUTANT (rep_op) */			if(mystrnlen(dsc->de.d_name,NAME_MAX*1) == 0)
13632: /* MUTANT (rep_op) */			if(mystrnlen(dsc->de.d_name,NAME_MAX%1) == 0)
13632: /* MUTANT (rep_op) */			if(mystrnlen(dsc->de.d_name,NAME_MAX+1) != 0)
13632: /* MUTANT (rep_const) */			if(mystrnlen(dsc->de.d_name,NAME_MAX+0) == 0)
13632: /* MUTANT (rep_const) */			if(mystrnlen(dsc->de.d_name,NAME_MAX+-1) == 0)
13632: /* MUTANT (rep_const) */			if(mystrnlen(dsc->de.d_name,NAME_MAX+((1)+1)) == 0)
13632: /* MUTANT (rep_const) */			if(mystrnlen(dsc->de.d_name,NAME_MAX+1) == 1)
13632: /* MUTANT (rep_const) */			if(mystrnlen(dsc->de.d_name,NAME_MAX+1) == -1)
13632: /* MUTANT (negate) */			if(!(mystrnlen(dsc->de.d_name,NAME_MAX+1) == 0))
13635: /* MUTANT (del_stmt) */ /* 				mystrcpy(dsc->de.d_name,_Y("zz")); */ 
13638: /* MUTANT (del_stmt) */ /* 			retVal = &dsc->de; */ 
13639: /* MUTANT (del_stmt) */ /* 			yaffsfs_DirAdvance(dsc); */ 
13645: /* MUTANT (del_stmt) */ /* 	yaffsfs_Unlock(); */ 
13647: /* MUTANT (del_stmt) */ /* 	return retVal; */ 
13654: /* MUTANT (del_stmt) */ /* 	yaffsfs_DirectorySearchContext *dsc = (yaffsfs_DirectorySearchContext *)dirp; */ 
13656: /* MUTANT (del_stmt) */ /* 	yaffsfs_Lock(); */ 
13658: /* MUTANT (del_stmt) */ /* 	yaffsfs_SetDirRewound(dsc); */ 
13660: /* MUTANT (del_stmt) */ /* 	yaffsfs_Unlock(); */ 
13666: /* MUTANT (del_stmt) */ /* 	yaffsfs_DirectorySearchContext *dsc = (yaffsfs_DirectorySearchContext *)dirp; */ 
13668: /* MUTANT (negate) */	if(!(!dsc)){
13669: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EFAULT); */ 
13670: /* MUTANT (del_stmt) */ /* 		return -1; */ 
13670: /* MUTANT (rep_const) */		return 0;
13670: /* MUTANT (rep_const) */		return 1;
13670: /* MUTANT (rep_const) */		return ((-1)+1);
13670: /* MUTANT (rep_const) */		return ((-1)-1);
13674: /* MUTANT (del_stmt) */ /*         dsc->magic = 0; */ 
13674: /* MUTANT (rep_const) */        dsc->magic = 1;
13674: /* MUTANT (rep_const) */        dsc->magic = -1;
13675: /* MUTANT (del_stmt) */ /*         list_del(&dsc->others); */  /* unhook from list */
13676: /* MUTANT (del_stmt) */ /*         kfree(dsc); */ 
13677: /* MUTANT (del_stmt) */ /*         yaffsfs_Unlock(); */ 
13678: /* MUTANT (del_stmt) */ /*         return 0; */ 
13678: /* MUTANT (rep_const) */        return 1;
13678: /* MUTANT (rep_const) */        return -1;
13686: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *parent = NULL; */ 
13687: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj; */ 
13688: /* MUTANT (del_stmt) */ /* 	YCHAR *name; */ 
13689: /* MUTANT (del_stmt) */ /* 	int retVal= -1; */ 
13689: /* MUTANT (rep_const) */	int retVal= 0;
13689: /* MUTANT (rep_const) */	int retVal= 1;
13689: /* MUTANT (rep_const) */	int retVal= ((-1)+1);
13689: /* MUTANT (rep_const) */	int retVal= ((-1)-1);
13690: /* MUTANT (del_stmt) */ /* 	int mode = 0; */  /* ignore for now */
13690: /* MUTANT (rep_const) */	int mode = 1; /* ignore for now */
13690: /* MUTANT (rep_const) */	int mode = -1; /* ignore for now */
13691: /* MUTANT (del_stmt) */ /* 	int notDir = 0; */ 
13691: /* MUTANT (rep_const) */	int notDir = 1;
13691: /* MUTANT (rep_const) */	int notDir = -1;
13692: /* MUTANT (del_stmt) */ /* 	int loop = 0; */ 
13692: /* MUTANT (rep_const) */	int loop = 1;
13692: /* MUTANT (rep_const) */	int loop = -1;
13694: /* MUTANT (rep_op) */	if(!oldpath && !newpath){
13694: /* MUTANT (negate) */	if(!(!oldpath || !newpath)){
13695: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EFAULT); */ 
13696: /* MUTANT (del_stmt) */ /* 		return -1; */ 
13696: /* MUTANT (rep_const) */		return 0;
13696: /* MUTANT (rep_const) */		return 1;
13696: /* MUTANT (rep_const) */		return ((-1)+1);
13696: /* MUTANT (rep_const) */		return ((-1)-1);
13699: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(newpath) <= 0 ||
13699: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(newpath) > 0 ||
13699: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(newpath) >= 0 ||
13699: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(newpath) == 0 ||
13699: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(newpath) != 0 ||
13699: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(newpath) < 0 &&
13699: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(newpath) < 1 ||
13699: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(newpath) < -1 ||
13700: /* MUTANT (rep_op) */		yaffsfs_CheckPath(oldpath) <= 0){
13700: /* MUTANT (rep_op) */		yaffsfs_CheckPath(oldpath) > 0){
13700: /* MUTANT (rep_op) */		yaffsfs_CheckPath(oldpath) >= 0){
13700: /* MUTANT (rep_op) */		yaffsfs_CheckPath(oldpath) == 0){
13700: /* MUTANT (rep_op) */		yaffsfs_CheckPath(oldpath) != 0){
13700: /* MUTANT (rep_const) */		yaffsfs_CheckPath(oldpath) < 1){
13700: /* MUTANT (rep_const) */		yaffsfs_CheckPath(oldpath) < -1){
13701: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-ENAMETOOLONG); */ 
13702: /* MUTANT (del_stmt) */ /* 		return -1; */ 
13702: /* MUTANT (rep_const) */		return 0;
13702: /* MUTANT (rep_const) */		return 1;
13702: /* MUTANT (rep_const) */		return ((-1)+1);
13702: /* MUTANT (rep_const) */		return ((-1)-1);
13706: /* MUTANT (del_stmt) */ /* 	parent = yaffsfs_FindDirectory(NULL,newpath,&name,0,&notDir,&loop); */ 
13706: /* MUTANT (rep_const) */	parent = yaffsfs_FindDirectory(NULL,newpath,&name,1,&notDir,&loop);
13706: /* MUTANT (rep_const) */	parent = yaffsfs_FindDirectory(NULL,newpath,&name,-1,&notDir,&loop);
13707: /* MUTANT (rep_op) */	if(!parent || notDir)
13707: /* MUTANT (negate) */	if(!(!parent && notDir))
13709: /* MUTANT (negate) */	else if(!(loop))
13711: /* MUTANT (rep_op) */	else if( !parent && mystrnlen(name,5) < 1)
13711: /* MUTANT (rep_op) */	else if( !parent || mystrnlen(name,5) <= 1)
13711: /* MUTANT (rep_op) */	else if( !parent || mystrnlen(name,5) > 1)
13711: /* MUTANT (rep_op) */	else if( !parent || mystrnlen(name,5) >= 1)
13711: /* MUTANT (rep_op) */	else if( !parent || mystrnlen(name,5) == 1)
13711: /* MUTANT (rep_op) */	else if( !parent || mystrnlen(name,5) != 1)
13711: /* MUTANT (rep_const) */	else if( !parent || mystrnlen(name,0) < 1)
13711: /* MUTANT (rep_const) */	else if( !parent || mystrnlen(name,1) < 1)
13711: /* MUTANT (rep_const) */	else if( !parent || mystrnlen(name,-1) < 1)
13711: /* MUTANT (rep_const) */	else if( !parent || mystrnlen(name,((5)+1)) < 1)
13711: /* MUTANT (rep_const) */	else if( !parent || mystrnlen(name,((5)-1)) < 1)
13711: /* MUTANT (rep_const) */	else if( !parent || mystrnlen(name,5) < 0)
13711: /* MUTANT (rep_const) */	else if( !parent || mystrnlen(name,5) < -1)
13711: /* MUTANT (rep_const) */	else if( !parent || mystrnlen(name,5) < ((1)+1))
13711: /* MUTANT (negate) */	else if(!( !parent || mystrnlen(name,5) < 1))
13713: /* MUTANT (negate) */	else if(!(parent->my_dev->read_only))
13715: /* MUTANT (negate) */	else if(!(parent)){
13716: /* MUTANT (del_stmt) */ /* 		obj = yaffs_create_symlink(parent,name,mode,0,0,oldpath); */ 
13716: /* MUTANT (rep_const) */		obj = yaffs_create_symlink(parent,name,mode,1,0,oldpath);
13716: /* MUTANT (rep_const) */		obj = yaffs_create_symlink(parent,name,mode,-1,0,oldpath);
13716: /* MUTANT (rep_const) */		obj = yaffs_create_symlink(parent,name,mode,0,1,oldpath);
13716: /* MUTANT (rep_const) */		obj = yaffs_create_symlink(parent,name,mode,0,-1,oldpath);
13717: /* MUTANT (negate) */		if(!(obj))
13718: /* MUTANT (rep_const) */			retVal = 1;
13718: /* MUTANT (rep_const) */			retVal = -1;
13719: /* MUTANT (rep_const) */		else if (yaffsfs_FindObject(NULL,newpath,1,0, NULL,NULL,NULL))
13719: /* MUTANT (rep_const) */		else if (yaffsfs_FindObject(NULL,newpath,-1,0, NULL,NULL,NULL))
13719: /* MUTANT (rep_const) */		else if (yaffsfs_FindObject(NULL,newpath,0,1, NULL,NULL,NULL))
13719: /* MUTANT (rep_const) */		else if (yaffsfs_FindObject(NULL,newpath,0,-1, NULL,NULL,NULL))
13719: /* MUTANT (negate) */		else if(! (yaffsfs_FindObject(NULL,newpath,0,0, NULL,NULL,NULL)))
13727: /* MUTANT (del_stmt) */ /* 	return retVal; */ 
13733: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj = NULL; */ 
13734: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *dir = NULL; */ 
13735: /* MUTANT (del_stmt) */ /* 	int retVal= -1; */ 
13735: /* MUTANT (rep_const) */	int retVal= 0;
13735: /* MUTANT (rep_const) */	int retVal= 1;
13735: /* MUTANT (rep_const) */	int retVal= ((-1)+1);
13735: /* MUTANT (rep_const) */	int retVal= ((-1)-1);
13736: /* MUTANT (del_stmt) */ /* 	int notDir = 0; */ 
13736: /* MUTANT (rep_const) */	int notDir = 1;
13736: /* MUTANT (rep_const) */	int notDir = -1;
13737: /* MUTANT (del_stmt) */ /* 	int loop = 0; */ 
13737: /* MUTANT (rep_const) */	int loop = 1;
13737: /* MUTANT (rep_const) */	int loop = -1;
13739: /* MUTANT (rep_op) */	if(!path && !buf){
13739: /* MUTANT (negate) */	if(!(!path || !buf)){
13740: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EFAULT); */ 
13741: /* MUTANT (del_stmt) */ /* 		return -1; */ 
13741: /* MUTANT (rep_const) */		return 0;
13741: /* MUTANT (rep_const) */		return 1;
13741: /* MUTANT (rep_const) */		return ((-1)+1);
13741: /* MUTANT (rep_const) */		return ((-1)-1);
13746: /* MUTANT (del_stmt) */ /* 	obj = yaffsfs_FindObject(NULL,path,0,1, &dir,&notDir,&loop); */ 
13746: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,1,1, &dir,&notDir,&loop);
13746: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,-1,1, &dir,&notDir,&loop);
13746: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,0,0, &dir,&notDir,&loop);
13746: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,0,-1, &dir,&notDir,&loop);
13746: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,0,((1)+1), &dir,&notDir,&loop);
13748: /* MUTANT (rep_op) */	if(!dir || notDir)
13748: /* MUTANT (negate) */	if(!(!dir && notDir))
13750: /* MUTANT (negate) */	else if(!(loop))
13752: /* MUTANT (rep_op) */	else if(!dir && !obj)
13752: /* MUTANT (negate) */	else if(!(!dir || !obj))
13754: /* MUTANT (rep_op) */	else if(obj->variant_type == YAFFS_OBJECT_TYPE_SYMLINK)
13754: /* MUTANT (negate) */	else if(!(obj->variant_type != YAFFS_OBJECT_TYPE_SYMLINK))
13757: /* MUTANT (del_stmt) */ /* 		YCHAR *alias = obj->variant.symlink_variant.alias; */ 
13758: /* MUTANT (del_stmt) */ /* 		mymemset(buf,0,bufsiz); */ 
13758: /* MUTANT (rep_const) */		mymemset(buf,1,bufsiz);
13758: /* MUTANT (rep_const) */		mymemset(buf,-1,bufsiz);
13759: /* MUTANT (del_stmt) */ /* 		mystrncpy(buf,alias,bufsiz - 1); */ 
13759: /* MUTANT (rep_const) */		mystrncpy(buf,alias,bufsiz - 0);
13759: /* MUTANT (rep_const) */		mystrncpy(buf,alias,bufsiz - -1);
13759: /* MUTANT (rep_const) */		mystrncpy(buf,alias,bufsiz - ((1)+1));
13760: /* MUTANT (del_stmt) */ /* 		retVal = 0; */ 
13760: /* MUTANT (rep_const) */		retVal = 1;
13760: /* MUTANT (rep_const) */		retVal = -1;
13763: /* MUTANT (del_stmt) */ /* 	return retVal; */ 
13769: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj = NULL; */ 
13770: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *lnk = NULL; */ 
13771: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj_dir = NULL; */ 
13772: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *lnk_dir = NULL; */ 
13773: /* MUTANT (del_stmt) */ /* 	int retVal = -1; */ 
13773: /* MUTANT (rep_const) */	int retVal = 0;
13773: /* MUTANT (rep_const) */	int retVal = 1;
13773: /* MUTANT (rep_const) */	int retVal = ((-1)+1);
13773: /* MUTANT (rep_const) */	int retVal = ((-1)-1);
13774: /* MUTANT (del_stmt) */ /* 	int notDirObj = 0; */ 
13774: /* MUTANT (rep_const) */	int notDirObj = 1;
13774: /* MUTANT (rep_const) */	int notDirObj = -1;
13775: /* MUTANT (del_stmt) */ /* 	int notDirLnk = 0; */ 
13775: /* MUTANT (rep_const) */	int notDirLnk = 1;
13775: /* MUTANT (rep_const) */	int notDirLnk = -1;
13776: /* MUTANT (del_stmt) */ /* 	int objLoop = 0; */ 
13776: /* MUTANT (rep_const) */	int objLoop = 1;
13776: /* MUTANT (rep_const) */	int objLoop = -1;
13777: /* MUTANT (del_stmt) */ /* 	int lnkLoop = 0; */ 
13777: /* MUTANT (rep_const) */	int lnkLoop = 1;
13777: /* MUTANT (rep_const) */	int lnkLoop = -1;
13778: /* MUTANT (del_stmt) */ /* 	YCHAR *newname; */ 
13780: /* MUTANT (rep_op) */	if(!oldpath && !linkpath){
13780: /* MUTANT (negate) */	if(!(!oldpath || !linkpath)){
13781: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EFAULT); */ 
13782: /* MUTANT (del_stmt) */ /* 		return -1; */ 
13782: /* MUTANT (rep_const) */		return 0;
13782: /* MUTANT (rep_const) */		return 1;
13782: /* MUTANT (rep_const) */		return ((-1)+1);
13782: /* MUTANT (rep_const) */		return ((-1)-1);
13785: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(linkpath) <= 0 ||
13785: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(linkpath) > 0 ||
13785: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(linkpath) >= 0 ||
13785: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(linkpath) == 0 ||
13785: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(linkpath) != 0 ||
13785: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(linkpath) < 0 &&
13785: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(linkpath) < 1 ||
13785: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(linkpath) < -1 ||
13786: /* MUTANT (rep_op) */		yaffsfs_CheckPath(oldpath) <= 0){
13786: /* MUTANT (rep_op) */		yaffsfs_CheckPath(oldpath) > 0){
13786: /* MUTANT (rep_op) */		yaffsfs_CheckPath(oldpath) >= 0){
13786: /* MUTANT (rep_op) */		yaffsfs_CheckPath(oldpath) == 0){
13786: /* MUTANT (rep_op) */		yaffsfs_CheckPath(oldpath) != 0){
13786: /* MUTANT (rep_const) */		yaffsfs_CheckPath(oldpath) < 1){
13786: /* MUTANT (rep_const) */		yaffsfs_CheckPath(oldpath) < -1){
13787: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-ENAMETOOLONG); */ 
13788: /* MUTANT (del_stmt) */ /* 		return -1; */ 
13788: /* MUTANT (rep_const) */		return 0;
13788: /* MUTANT (rep_const) */		return 1;
13788: /* MUTANT (rep_const) */		return ((-1)+1);
13788: /* MUTANT (rep_const) */		return ((-1)-1);
13793: /* MUTANT (del_stmt) */ /* 	obj = yaffsfs_FindObject(NULL,oldpath,0,1,&obj_dir,&notDirObj,&objLoop); */ 
13793: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,oldpath,1,1,&obj_dir,&notDirObj,&objLoop);
13793: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,oldpath,-1,1,&obj_dir,&notDirObj,&objLoop);
13793: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,oldpath,0,0,&obj_dir,&notDirObj,&objLoop);
13793: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,oldpath,0,-1,&obj_dir,&notDirObj,&objLoop);
13793: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,oldpath,0,((1)+1),&obj_dir,&notDirObj,&objLoop);
13794: /* MUTANT (del_stmt) */ /* 	lnk = yaffsfs_FindObject(NULL,linkpath,0,0,NULL,NULL,NULL); */ 
13794: /* MUTANT (rep_const) */	lnk = yaffsfs_FindObject(NULL,linkpath,1,0,NULL,NULL,NULL);
13794: /* MUTANT (rep_const) */	lnk = yaffsfs_FindObject(NULL,linkpath,-1,0,NULL,NULL,NULL);
13794: /* MUTANT (rep_const) */	lnk = yaffsfs_FindObject(NULL,linkpath,0,1,NULL,NULL,NULL);
13794: /* MUTANT (rep_const) */	lnk = yaffsfs_FindObject(NULL,linkpath,0,-1,NULL,NULL,NULL);
13795: /* MUTANT (del_stmt) */ /* 	lnk_dir = yaffsfs_FindDirectory(NULL,linkpath,&newname,0,&notDirLnk,&lnkLoop); */ 
13795: /* MUTANT (rep_const) */	lnk_dir = yaffsfs_FindDirectory(NULL,linkpath,&newname,1,&notDirLnk,&lnkLoop);
13795: /* MUTANT (rep_const) */	lnk_dir = yaffsfs_FindDirectory(NULL,linkpath,&newname,-1,&notDirLnk,&lnkLoop);
13797: /* MUTANT (rep_op) */	if((!obj_dir || notDirObj) || (!lnk_dir && notDirLnk))
13797: /* MUTANT (rep_op) */	if((!obj_dir && notDirObj) && (!lnk_dir && notDirLnk))
13797: /* MUTANT (rep_op) */	if((!obj_dir && notDirObj) || (!lnk_dir || notDirLnk))
13797: /* MUTANT (negate) */	if(!((!obj_dir && notDirObj) || (!lnk_dir && notDirLnk)))
13799: /* MUTANT (rep_op) */	else if(objLoop && lnkLoop)
13799: /* MUTANT (negate) */	else if(!(objLoop || lnkLoop))
13801: /* MUTANT (rep_op) */	else if(!obj_dir && !lnk_dir || !obj)
13801: /* MUTANT (rep_op) */	else if(!obj_dir || !lnk_dir && !obj)
13801: /* MUTANT (negate) */	else if(!(!obj_dir || !lnk_dir || !obj))
13803: /* MUTANT (negate) */	else if(!(obj->my_dev->read_only))
13805: /* MUTANT (negate) */	else if(!(lnk))
13807: /* MUTANT (rep_op) */	else if(lnk_dir->my_dev == obj->my_dev)
13807: /* MUTANT (negate) */	else if(!(lnk_dir->my_dev != obj->my_dev))
13810: /* MUTANT (del_stmt) */ /* 		retVal = yaffsfs_CheckNameLength(newname); */ 
13812: /* MUTANT (rep_op) */		if(retVal != 0) {
13812: /* MUTANT (rep_const) */		if(retVal == 1) {
13812: /* MUTANT (rep_const) */		if(retVal == -1) {
13812: /* MUTANT (negate) */		if(!(retVal == 0)) {
13813: /* MUTANT (del_stmt) */ /* 			lnk = yaffs_link_obj(lnk_dir,newname,obj); */ 
13814: /* MUTANT (negate) */			if(!(lnk))
13815: /* MUTANT (rep_const) */				retVal = 1;
13815: /* MUTANT (rep_const) */				retVal = -1;
13817: /* MUTANT (del_stmt) */ /* 				yaffsfs_SetError(-ENOSPC); */ 
13818: /* MUTANT (del_stmt) */ /* 				retVal = -1; */ 
13818: /* MUTANT (rep_const) */				retVal = 0;
13818: /* MUTANT (rep_const) */				retVal = 1;
13818: /* MUTANT (rep_const) */				retVal = ((-1)+1);
13818: /* MUTANT (rep_const) */				retVal = ((-1)-1);
13824: /* MUTANT (del_stmt) */ /* 	return retVal; */ 
13829: /* MUTANT (del_stmt) */ /* 	pathname=pathname; */ 
13830: /* MUTANT (del_stmt) */ /* 	mode=mode; */ 
13831: /* MUTANT (del_stmt) */ /* 	dev=dev; */ 
13833: /* MUTANT (del_stmt) */ /* 	yaffsfs_SetError(-EINVAL); */ 
13834: /* MUTANT (del_stmt) */ /* 	return -1; */ 
13834: /* MUTANT (rep_const) */	return 0;
13834: /* MUTANT (rep_const) */	return 1;
13834: /* MUTANT (rep_const) */	return ((-1)+1);
13834: /* MUTANT (rep_const) */	return ((-1)-1);
13848: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj; */ 
13850: /* MUTANT (negate) */	if(!(!path)){
13851: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-EFAULT); */ 
13852: /* MUTANT (del_stmt) */ /* 		return -1; */ 
13852: /* MUTANT (rep_const) */		return 0;
13852: /* MUTANT (rep_const) */		return 1;
13852: /* MUTANT (rep_const) */		return ((-1)+1);
13852: /* MUTANT (rep_const) */		return ((-1)-1);
13855: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) <= 0){
13855: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) > 0){
13855: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) >= 0){
13855: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) == 0){
13855: /* MUTANT (rep_op) */	if(yaffsfs_CheckPath(path) != 0){
13855: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < 1){
13855: /* MUTANT (rep_const) */	if(yaffsfs_CheckPath(path) < -1){
13855: /* MUTANT (negate) */	if(!(yaffsfs_CheckPath(path) < 0)){
13856: /* MUTANT (del_stmt) */ /* 		yaffsfs_SetError(-ENAMETOOLONG); */ 
13857: /* MUTANT (del_stmt) */ /* 		return -1; */ 
13857: /* MUTANT (rep_const) */		return 0;
13857: /* MUTANT (rep_const) */		return 1;
13857: /* MUTANT (rep_const) */		return ((-1)+1);
13857: /* MUTANT (rep_const) */		return ((-1)-1);
13860: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,1,1,NULL,NULL,NULL);
13860: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,-1,1,NULL,NULL,NULL);
13860: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,0,0,NULL,NULL,NULL);
13860: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,0,-1,NULL,NULL,NULL);
13860: /* MUTANT (rep_const) */	obj = yaffsfs_FindObject(NULL,path,0,((1)+1),NULL,NULL,NULL);
13862: /* MUTANT (negate) */	if(!(obj))
13865: /* MUTANT (rep_const) */		return 0;
13865: /* MUTANT (rep_const) */		return 1;
13865: /* MUTANT (rep_const) */		return ((-1)+1);
13865: /* MUTANT (rep_const) */		return ((-1)-1);
13870: /* MUTANT (del_stmt) */ /* 	return yaffsfs_GetLastError(); */ 
13875: /* MUTANT (del_stmt) */ /* 	yaffsfs_SetError(error); */ 
13876: /* MUTANT (del_stmt) */ /* 	return 0; */ 
13876: /* MUTANT (rep_const) */	return 1;
13876: /* MUTANT (rep_const) */	return -1;
13881: #if 0 /* MUTANT (rep_const) */
13881: #if -1 /* MUTANT (rep_const) */
13881: #if ((1)+1) /* MUTANT (rep_const) */
13886: /* MUTANT (del_stmt) */ /* 	struct yaffs_obj *obj = yaffsfs_FindRoot(path,&rest); */ 
13888: /* MUTANT (negate) */	if(!(obj)){
13889: /* MUTANT (del_stmt) */ /* 		struct yaffs_dev *dev = obj->my_dev; */ 
13910: /* MUTANT (rep_const) */	return 1;
13910: /* MUTANT (rep_const) */	return -1;
13949: /* MUTANT (del_stmt) */ /* 	int retval = 0; */ 
13949: /* MUTANT (rep_const) */	int retval = 1;
13949: /* MUTANT (rep_const) */	int retval = -1;
13950: /* MUTANT (del_stmt) */ /* 	struct yaffs_packed_tags2 pt; */ 
13951: /* MUTANT (del_stmt) */ /* 	void *spare; */ 
13952: /* MUTANT (del_stmt) */ /* 	unsigned spareSize = 0; */ 
13952: /* MUTANT (rep_const) */	unsigned spareSize = 1;
13952: /* MUTANT (rep_const) */	unsigned spareSize = -1;
13953: /* MUTANT (del_stmt) */ /* 	ynandif_Geometry *geometry = (ynandif_Geometry *)(dev->driver_context); */ 
13953: /* MUTANT (negate) */	ynandif(!_Geometry *geometry = (ynandif_Geometry *))(dev->driver_context);
13965: /* MUTANT (negate) */	if(!(dev->param.inband_tags)){
13966: /* MUTANT (del_stmt) */ /* 		struct yaffs_packed_tags2_tags_only *pt2tp; */ 
13968: /* MUTANT (rep_op) */			(data - dev->data_bytes_per_chunk);
13968: /* MUTANT (rep_op) */			(data * dev->data_bytes_per_chunk);
13968: /* MUTANT (rep_op) */			(data % dev->data_bytes_per_chunk);
13969: /* MUTANT (del_stmt) */ /* 		yaffs_pack_tags2_tags_only(pt2tp,tags); */ 
13970: /* MUTANT (del_stmt) */ /* 		spare = NULL; */ 
13971: /* MUTANT (del_stmt) */ /* 		spareSize = 0; */ 
13971: /* MUTANT (rep_const) */		spareSize = 1;
13971: /* MUTANT (rep_const) */		spareSize = -1;
13974: /* MUTANT (del_stmt) */ /* 		yaffs_pack_tags2(&pt, tags,!dev->param.no_tags_ecc); */ 
13975: /* MUTANT (del_stmt) */ /* 		spare = &pt; */ 
13976: /* MUTANT (del_stmt) */ /* 		spareSize = sizeof(struct yaffs_packed_tags2); */ 
13983: /* MUTANT (del_stmt) */ /* 	return retval; */ 
13989: /* MUTANT (del_stmt) */ /* 	struct yaffs_packed_tags2 pt; */ 
13990: /* MUTANT (del_stmt) */ /* 	int localData = 0; */ 
13990: /* MUTANT (rep_const) */	int localData = 1;
13990: /* MUTANT (rep_const) */	int localData = -1;
13991: /* MUTANT (del_stmt) */ /* 	void *spare = NULL; */ 
13992: /* MUTANT (del_stmt) */ /* 	unsigned spareSize; */ 
13993: /* MUTANT (del_stmt) */ /* 	int retval = 0; */ 
13993: /* MUTANT (rep_const) */	int retval = 1;
13993: /* MUTANT (rep_const) */	int retval = -1;
13994: /* MUTANT (del_stmt) */ /* 	int eccStatus; */  //0 = ok, 1 = fixed, -1 = unfixed
13995: /* MUTANT (del_stmt) */ /* 	ynandif_Geometry *geometry = (ynandif_Geometry *)(dev->driver_context); */ 
13995: /* MUTANT (negate) */	ynandif(!_Geometry *geometry = (ynandif_Geometry *))(dev->driver_context);
14001: /* MUTANT (negate) */	if(!(!tags)){
14002: /* MUTANT (del_stmt) */ /* 		spare = NULL; */ 
14003: /* MUTANT (del_stmt) */ /* 		spareSize = 0; */ 
14003: /* MUTANT (rep_const) */		spareSize = 1;
14003: /* MUTANT (rep_const) */		spareSize = -1;
14004: /* MUTANT (negate) */	}else if(!(dev->param.inband_tags)){
14006: /* MUTANT (negate) */		if(!(!data)) {
14007: /* MUTANT (del_stmt) */ /* 			localData = 1; */ 
14007: /* MUTANT (rep_const) */			localData = 0;
14007: /* MUTANT (rep_const) */			localData = -1;
14007: /* MUTANT (rep_const) */			localData = ((1)+1);
14008: /* MUTANT (del_stmt) */ /* 			data = yaffs_get_temp_buffer(dev); */ 
14011: /* MUTANT (del_stmt) */ /* 		spareSize = 0; */ 
14011: /* MUTANT (rep_const) */		spareSize = 1;
14011: /* MUTANT (rep_const) */		spareSize = -1;
14014: /* MUTANT (del_stmt) */ /* 		spare = &pt; */ 
14015: /* MUTANT (del_stmt) */ /* 		spareSize = sizeof(struct yaffs_packed_tags2); */ 
14020: /* MUTANT (rep_const) */					 data ? dev->param.total_bytes_per_chunk : 1,
14020: /* MUTANT (rep_const) */					 data ? dev->param.total_bytes_per_chunk : -1,
14024: /* MUTANT (negate) */	if(!(dev->param.inband_tags)){
14025: /* MUTANT (negate) */		if(!(tags)){
14026: /* MUTANT (del_stmt) */ /* 			struct yaffs_packed_tags2_tags_only * pt2tp; */ 
14027: /* MUTANT (del_stmt) */ /* 			pt2tp = (struct yaffs_packed_tags2_tags_only *)&data[dev->data_bytes_per_chunk]; */ 	
14028: /* MUTANT (del_stmt) */ /* 			yaffs_unpack_tags2_tags_only(tags,pt2tp); */ 
14032: /* MUTANT (negate) */		if(! (tags)){
14033: /* MUTANT (del_stmt) */ /* 			yaffs_unpack_tags2(tags, &pt,!dev->param.no_tags_ecc); */ 
14037: /* MUTANT (rep_op) */	if(tags || tags->chunk_used){
14037: /* MUTANT (negate) */	if(!(tags && tags->chunk_used)){
14038: /* MUTANT (rep_op) */		if(eccStatus <= 0 || 
14038: /* MUTANT (rep_op) */		if(eccStatus > 0 || 
14038: /* MUTANT (rep_op) */		if(eccStatus >= 0 || 
14038: /* MUTANT (rep_op) */		if(eccStatus == 0 || 
14038: /* MUTANT (rep_op) */		if(eccStatus != 0 || 
14038: /* MUTANT (rep_op) */		if(eccStatus < 0 && 
14038: /* MUTANT (rep_const) */		if(eccStatus < 1 || 
14038: /* MUTANT (rep_const) */		if(eccStatus < -1 || 
14039: /* MUTANT (rep_op) */		   tags->ecc_result != YAFFS_ECC_RESULT_UNFIXED)
14041: /* MUTANT (rep_op) */		else if(eccStatus <= 0 ||
14041: /* MUTANT (rep_op) */		else if(eccStatus < 0 ||
14041: /* MUTANT (rep_op) */		else if(eccStatus >= 0 ||
14041: /* MUTANT (rep_op) */		else if(eccStatus == 0 ||
14041: /* MUTANT (rep_op) */		else if(eccStatus != 0 ||
14041: /* MUTANT (rep_op) */		else if(eccStatus > 0 &&
14041: /* MUTANT (rep_const) */		else if(eccStatus > 1 ||
14041: /* MUTANT (rep_const) */		else if(eccStatus > -1 ||
14042: /* MUTANT (rep_op) */			     tags->ecc_result != YAFFS_ECC_RESULT_FIXED)
14048: /* MUTANT (negate) */	if(!(localData))
14051: /* MUTANT (del_stmt) */ /* 	return retval; */ 
14054: /* MUTANT (negate) */int ynandif(!_MarkNANDBlockBad(struct yaffs_dev *dev, int blockId))
14056: /* MUTANT (del_stmt) */ /* 	ynandif_Geometry *geometry = (ynandif_Geometry *)(dev->driver_context); */ 
14056: /* MUTANT (negate) */	ynandif(!_Geometry *geometry = (ynandif_Geometry *))(dev->driver_context);
14058: /* MUTANT (del_stmt) */ /* 	return geometry->markBlockBad(dev,blockId); */ 
14061: /* MUTANT (negate) */int ynandif(!_EraseBlockInNAND(struct yaffs_dev *dev, int blockId))
14063: /* MUTANT (del_stmt) */ /* 	ynandif_Geometry *geometry = (ynandif_Geometry *)(dev->driver_context); */ 
14063: /* MUTANT (negate) */	ynandif(!_Geometry *geometry = (ynandif_Geometry *))(dev->driver_context);
14065: /* MUTANT (del_stmt) */ /* 	return geometry->eraseBlock(dev,blockId); */ 
14070: /* MUTANT (negate) */static int ynandif(!_IsBlockOk(struct yaffs_dev *dev, int blockId))
14072: /* MUTANT (del_stmt) */ /* 	ynandif_Geometry *geometry = (ynandif_Geometry *)(dev->driver_context); */ 
14072: /* MUTANT (negate) */	ynandif(!_Geometry *geometry = (ynandif_Geometry *))(dev->driver_context);
14074: /* MUTANT (del_stmt) */ /* 	return geometry->checkBlockOk(dev,blockId); */ 
14080: /* MUTANT (del_stmt) */ /* 	unsigned chunkNo; */ 
14081: /* MUTANT (del_stmt) */ /* 	struct yaffs_ext_tags tags; */ 
14083: /* MUTANT (del_stmt) */ /* 	*seq_number = 0; */ 
14083: /* MUTANT (rep_const) */	*seq_number = 1;
14083: /* MUTANT (rep_const) */	*seq_number = -1;
14085: /* MUTANT (del_stmt) */ /* 	chunkNo = blockId * dev->param.chunks_per_block; */ 
14087: /* MUTANT (negate) */	if(!(!ynandif_IsBlockOk(dev,blockId))){
14088: /* MUTANT (del_stmt) */ /* 		*state = YAFFS_BLOCK_STATE_DEAD; */ 
14092: /* MUTANT (del_stmt) */ /* 		ynandif_ReadChunkWithTagsFromNAND(dev,chunkNo,NULL,&tags); */ 
14092: /* MUTANT (negate) */		ynandif(!_ReadChunkWithTagsFromNAND(dev,chunkNo,NULL,&tags));
14094: /* MUTANT (negate) */		if(!(!tags.chunk_used))
14096: /* MUTANT (del_stmt) */ /* 			*state = YAFFS_BLOCK_STATE_EMPTY; */ 
14100: /* MUTANT (del_stmt) */ /* 			*state = YAFFS_BLOCK_STATE_NEEDS_SCAN; */ 
14101: /* MUTANT (del_stmt) */ /* 			*seq_number = tags.seq_number; */ 
14109: /* MUTANT (negate) */int ynandif(!_InitialiseNAND(struct yaffs_dev *dev))
14111: /* MUTANT (del_stmt) */ /* 	ynandif_Geometry *geometry = (ynandif_Geometry *)(dev->driver_context); */ 
14111: /* MUTANT (negate) */	ynandif(!_Geometry *geometry = (ynandif_Geometry *))(dev->driver_context);
14113: /* MUTANT (del_stmt) */ /* 	geometry->initialise(dev); */ 
14115: /* MUTANT (del_stmt) */ /* 	return YAFFS_OK; */ 
14118: /* MUTANT (negate) */int ynandif(!_Deinitialise_flash_fn(struct yaffs_dev *dev))
14120: /* MUTANT (del_stmt) */ /* 	ynandif_Geometry *geometry = (ynandif_Geometry *)(dev->driver_context); */ 
14120: /* MUTANT (negate) */	ynandif(!_Geometry *geometry = (ynandif_Geometry *))(dev->driver_context);
14122: /* MUTANT (del_stmt) */ /* 	geometry->deinitialise(dev); */ 
14124: /* MUTANT (del_stmt) */ /* 	return YAFFS_OK; */ 
14132: /* MUTANT (del_stmt) */ /* 	YCHAR *clonedName = malloc(sizeof(YCHAR) * (mystrnlen(name,YAFFS_MAX_NAME_LENGTH)+1)); */ 
14132: /* MUTANT (rep_op) */	YCHAR *clonedName = malloc(sizeof(YCHAR) * (mystrnlen(name,YAFFS_MAX_NAME_LENGTH)-1));
14132: /* MUTANT (rep_op) */	YCHAR *clonedName = malloc(sizeof(YCHAR) * (mystrnlen(name,YAFFS_MAX_NAME_LENGTH)*1));
14132: /* MUTANT (rep_op) */	YCHAR *clonedName = malloc(sizeof(YCHAR) * (mystrnlen(name,YAFFS_MAX_NAME_LENGTH)%1));
14132: /* MUTANT (rep_const) */	YCHAR *clonedName = malloc(sizeof(YCHAR) * (mystrnlen(name,YAFFS_MAX_NAME_LENGTH)+0));
14132: /* MUTANT (rep_const) */	YCHAR *clonedName = malloc(sizeof(YCHAR) * (mystrnlen(name,YAFFS_MAX_NAME_LENGTH)+-1));
14132: /* MUTANT (rep_const) */	YCHAR *clonedName = malloc(sizeof(YCHAR) * (mystrnlen(name,YAFFS_MAX_NAME_LENGTH)+((1)+1)));
14133: /* MUTANT (del_stmt) */ /* 	struct yaffs_dev *dev = malloc(sizeof(struct yaffs_dev)); */ 
14135: /* MUTANT (rep_op) */	if(dev || clonedName){
14135: /* MUTANT (negate) */	if(!(dev && clonedName)){
14136: /* MUTANT (del_stmt) */ /* 		mymemset(dev,0,sizeof(struct yaffs_dev)); */ 
14136: /* MUTANT (rep_const) */		mymemset(dev,1,sizeof(struct yaffs_dev));
14136: /* MUTANT (rep_const) */		mymemset(dev,-1,sizeof(struct yaffs_dev));
14137: /* MUTANT (del_stmt) */ /* 		mystrcpy(clonedName,name); */ 
14139: /* MUTANT (del_stmt) */ /* 		dev->param.name = clonedName; */ 
14140: /* MUTANT (del_stmt) */ /* 		dev->param.write_chunk_tags_fn = ynandif_WriteChunkWithTagsToNAND; */ 
14141: /* MUTANT (del_stmt) */ /* 		dev->param.read_chunk_tags_fn = ynandif_ReadChunkWithTagsFromNAND; */ 
14142: /* MUTANT (del_stmt) */ /* 		dev->param.erase_fn = ynandif_EraseBlockInNAND; */ 
14143: /* MUTANT (del_stmt) */ /* 		dev->param.initialise_flash_fn = ynandif_InitialiseNAND; */ 
14144: /* MUTANT (del_stmt) */ /* 		dev->param.query_block_fn = ynandif_QueryNANDBlock; */ 
14145: /* MUTANT (del_stmt) */ /* 		dev->param.bad_block_fn = ynandif_MarkNANDBlockBad; */ 
14146: /* MUTANT (del_stmt) */ /* 		dev->param.n_caches = 20; */ 
14146: /* MUTANT (rep_const) */		dev->param.n_caches = 0;
14146: /* MUTANT (rep_const) */		dev->param.n_caches = 1;
14146: /* MUTANT (rep_const) */		dev->param.n_caches = -1;
14146: /* MUTANT (rep_const) */		dev->param.n_caches = ((20)+1);
14146: /* MUTANT (rep_const) */		dev->param.n_caches = ((20)-1);
14147: /* MUTANT (del_stmt) */ /* 		dev->param.start_block = geometry->start_block; */ 
14148: /* MUTANT (del_stmt) */ /* 		dev->param.end_block   = geometry->end_block; */ 
14149: /* MUTANT (del_stmt) */ /* 		dev->param.total_bytes_per_chunk  = geometry->dataSize; */ 
14150: /* MUTANT (del_stmt) */ /* 		dev->param.spare_bytes_per_chunk  = geometry->spareSize; */ 
14151: /* MUTANT (del_stmt) */ /* 		dev->param.inband_tags		  = geometry->inband_tags; */ 
14152: /* MUTANT (del_stmt) */ /* 		dev->param.chunks_per_block	  = geometry->pagesPerBlock; */ 
14153: /* MUTANT (del_stmt) */ /* 		dev->param.use_nand_ecc		  = geometry->hasECC; */ 
14154: /* MUTANT (del_stmt) */ /* 		dev->param.is_yaffs2		  = geometry->useYaffs2; */ 
14155: /* MUTANT (del_stmt) */ /* 		dev->param.n_reserved_blocks	  = 5; */ 
14155: /* MUTANT (rep_const) */		dev->param.n_reserved_blocks	  = 0;
14155: /* MUTANT (rep_const) */		dev->param.n_reserved_blocks	  = 1;
14155: /* MUTANT (rep_const) */		dev->param.n_reserved_blocks	  = -1;
14155: /* MUTANT (rep_const) */		dev->param.n_reserved_blocks	  = ((5)+1);
14155: /* MUTANT (rep_const) */		dev->param.n_reserved_blocks	  = ((5)-1);
14156: /* MUTANT (del_stmt) */ /* 		dev->driver_context		  = (void *)geometry; */ 
14158: /* MUTANT (del_stmt) */ /* 		yaffs_add_device(dev); */ 
14160: /* MUTANT (del_stmt) */ /* 		return dev; */ 
14163: /* MUTANT (negate) */	if(!(dev))
14165: /* MUTANT (negate) */	if(!(clonedName))
14168: /* MUTANT (del_stmt) */ /* 	return NULL; */ 
14200: #define EXTRA_HEADER_INFO_FLAG	1x80000000 /* MUTANT (rep_const) */
14200: #define EXTRA_HEADER_INFO_FLAG	-1x80000000 /* MUTANT (rep_const) */
14201: #define EXTRA_SHRINK_FLAG	1x40000000 /* MUTANT (rep_const) */
14201: #define EXTRA_SHRINK_FLAG	-1x40000000 /* MUTANT (rep_const) */
14202: #define EXTRA_SHADOWS_FLAG	1x20000000 /* MUTANT (rep_const) */
14202: #define EXTRA_SHADOWS_FLAG	-1x20000000 /* MUTANT (rep_const) */
14203: #define EXTRA_SPARE_FLAGS	1x10000000 /* MUTANT (rep_const) */
14203: #define EXTRA_SPARE_FLAGS	-1x10000000 /* MUTANT (rep_const) */
14205: #define ALL_EXTRA_FLAGS		1xf0000000 /* MUTANT (rep_const) */
14205: #define ALL_EXTRA_FLAGS		-1xf0000000 /* MUTANT (rep_const) */
14208: #define EXTRA_OBJECT_TYPE_SHIFT (0) /* MUTANT (rep_const) */
14208: #define EXTRA_OBJECT_TYPE_SHIFT (1) /* MUTANT (rep_const) */
14208: #define EXTRA_OBJECT_TYPE_SHIFT (-1) /* MUTANT (rep_const) */
14208: #define EXTRA_OBJECT_TYPE_SHIFT (((28)+1)) /* MUTANT (rep_const) */
14208: #define EXTRA_OBJECT_TYPE_SHIFT (((28)-1)) /* MUTANT (rep_const) */
14209: #define EXTRA_OBJECT_TYPE_MASK  ((1x0f) << EXTRA_OBJECT_TYPE_SHIFT) /* MUTANT (rep_const) */
14209: #define EXTRA_OBJECT_TYPE_MASK  ((-1x0f) << EXTRA_OBJECT_TYPE_SHIFT) /* MUTANT (rep_const) */
14221: /* MUTANT (del_stmt) */ /* 	yaffs_dump_packed_tags2_tags_only(&pt->t); */ 
14237: /* MUTANT (del_stmt) */ /* 	ptt->chunk_id = t->chunk_id; */ 
14238: /* MUTANT (del_stmt) */ /* 	ptt->seq_number = t->seq_number; */ 
14239: /* MUTANT (del_stmt) */ /* 	ptt->n_bytes = t->n_bytes; */ 
14240: /* MUTANT (del_stmt) */ /* 	ptt->obj_id = t->obj_id; */ 
14242: /* MUTANT (rep_op) */	if (t->chunk_id != 0 && t->extra_available) {
14242: /* MUTANT (rep_op) */	if (t->chunk_id == 0 || t->extra_available) {
14242: /* MUTANT (rep_const) */	if (t->chunk_id == 1 && t->extra_available) {
14242: /* MUTANT (rep_const) */	if (t->chunk_id == -1 && t->extra_available) {
14242: /* MUTANT (negate) */	if(! (t->chunk_id == 0 && t->extra_available)) {
14245: /* MUTANT (del_stmt) */ /* 		ptt->chunk_id = EXTRA_HEADER_INFO_FLAG | t->extra_parent_id; */ 
14245: /* MUTANT (rep_op) */		ptt->chunk_id = EXTRA_HEADER_INFO_FLAG & t->extra_parent_id;
14246: /* MUTANT (negate) */		if(! (t->extra_is_shrink))
14248: /* MUTANT (negate) */		if(! (t->extra_shadows))
14251: /* MUTANT (del_stmt) */ /* 		ptt->obj_id &= ~EXTRA_OBJECT_TYPE_MASK; */ 
14252: /* MUTANT (del_stmt) */ /* 		ptt->obj_id |= (t->extra_obj_type << EXTRA_OBJECT_TYPE_SHIFT); */ 
14254: /* MUTANT (rep_op) */		if (t->extra_obj_type != YAFFS_OBJECT_TYPE_HARDLINK)
14254: /* MUTANT (negate) */		if(! (t->extra_obj_type == YAFFS_OBJECT_TYPE_HARDLINK))
14256: /* MUTANT (rep_op) */		else if (t->extra_obj_type != YAFFS_OBJECT_TYPE_FILE)
14256: /* MUTANT (negate) */		else if(! (t->extra_obj_type == YAFFS_OBJECT_TYPE_FILE))
14259: /* MUTANT (rep_const) */			ptt->n_bytes = 1;
14259: /* MUTANT (rep_const) */			ptt->n_bytes = -1;
14263: /* MUTANT (del_stmt) */ /* 	yaffs_dump_tags2(t); */ 
14269: /* MUTANT (del_stmt) */ /* 	yaffs_pack_tags2_tags_only(&pt->t, t); */ 
14271: /* MUTANT (negate) */	if(! (tags_ecc))
14280: /* MUTANT (del_stmt) */ /* 	mymemset(t, 0, sizeof(struct yaffs_ext_tags)); */ 
14280: /* MUTANT (rep_const) */	mymemset(t, 1, sizeof(struct yaffs_ext_tags));
14280: /* MUTANT (rep_const) */	mymemset(t, -1, sizeof(struct yaffs_ext_tags));
14282: /* MUTANT (rep_op) */	if (ptt->seq_number != 0xffffffff)
14282: /* MUTANT (rep_const) */	if (ptt->seq_number == 1xffffffff)
14282: /* MUTANT (rep_const) */	if (ptt->seq_number == -1xffffffff)
14282: /* MUTANT (negate) */	if(! (ptt->seq_number == 0xffffffff))
14285: /* MUTANT (del_stmt) */ /* 	t->block_bad = 0; */ 
14285: /* MUTANT (rep_const) */	t->block_bad = 1;
14285: /* MUTANT (rep_const) */	t->block_bad = -1;
14286: /* MUTANT (del_stmt) */ /* 	t->chunk_used = 1; */ 
14286: /* MUTANT (rep_const) */	t->chunk_used = 0;
14286: /* MUTANT (rep_const) */	t->chunk_used = -1;
14286: /* MUTANT (rep_const) */	t->chunk_used = ((1)+1);
14287: /* MUTANT (del_stmt) */ /* 	t->obj_id = ptt->obj_id; */ 
14288: /* MUTANT (del_stmt) */ /* 	t->chunk_id = ptt->chunk_id; */ 
14289: /* MUTANT (del_stmt) */ /* 	t->n_bytes = ptt->n_bytes; */ 
14290: /* MUTANT (del_stmt) */ /* 	t->is_deleted = 0; */ 
14290: /* MUTANT (rep_const) */	t->is_deleted = 1;
14290: /* MUTANT (rep_const) */	t->is_deleted = -1;
14291: /* MUTANT (del_stmt) */ /* 	t->serial_number = 0; */ 
14291: /* MUTANT (rep_const) */	t->serial_number = 1;
14291: /* MUTANT (rep_const) */	t->serial_number = -1;
14292: /* MUTANT (del_stmt) */ /* 	t->seq_number = ptt->seq_number; */ 
14295: /* MUTANT (negate) */	if(! (ptt->chunk_id & EXTRA_HEADER_INFO_FLAG)) {
14296: /* MUTANT (del_stmt) */ /* 		t->chunk_id = 0; */ 
14296: /* MUTANT (rep_const) */		t->chunk_id = 1;
14296: /* MUTANT (rep_const) */		t->chunk_id = -1;
14297: /* MUTANT (del_stmt) */ /* 		t->n_bytes = 0; */ 
14297: /* MUTANT (rep_const) */		t->n_bytes = 1;
14297: /* MUTANT (rep_const) */		t->n_bytes = -1;
14299: /* MUTANT (del_stmt) */ /* 		t->extra_available = 1; */ 
14299: /* MUTANT (rep_const) */		t->extra_available = 0;
14299: /* MUTANT (rep_const) */		t->extra_available = -1;
14299: /* MUTANT (rep_const) */		t->extra_available = ((1)+1);
14300: /* MUTANT (del_stmt) */ /* 		t->extra_parent_id = ptt->chunk_id & (~(ALL_EXTRA_FLAGS)); */ 
14301: /* MUTANT (del_stmt) */ /* 		t->extra_is_shrink = ptt->chunk_id & EXTRA_SHRINK_FLAG ? 1 : 0; */ 
14301: /* MUTANT (rep_const) */		t->extra_is_shrink = ptt->chunk_id & EXTRA_SHRINK_FLAG ? 0 : 0;
14301: /* MUTANT (rep_const) */		t->extra_is_shrink = ptt->chunk_id & EXTRA_SHRINK_FLAG ? -1 : 0;
14301: /* MUTANT (rep_const) */		t->extra_is_shrink = ptt->chunk_id & EXTRA_SHRINK_FLAG ? ((1)+1) : 0;
14301: /* MUTANT (rep_const) */		t->extra_is_shrink = ptt->chunk_id & EXTRA_SHRINK_FLAG ? 1 : 1;
14301: /* MUTANT (rep_const) */		t->extra_is_shrink = ptt->chunk_id & EXTRA_SHRINK_FLAG ? 1 : -1;
14302: /* MUTANT (del_stmt) */ /* 		t->extra_shadows = ptt->chunk_id & EXTRA_SHADOWS_FLAG ? 1 : 0; */ 
14302: /* MUTANT (rep_const) */		t->extra_shadows = ptt->chunk_id & EXTRA_SHADOWS_FLAG ? 0 : 0;
14302: /* MUTANT (rep_const) */		t->extra_shadows = ptt->chunk_id & EXTRA_SHADOWS_FLAG ? -1 : 0;
14302: /* MUTANT (rep_const) */		t->extra_shadows = ptt->chunk_id & EXTRA_SHADOWS_FLAG ? ((1)+1) : 0;
14302: /* MUTANT (rep_const) */		t->extra_shadows = ptt->chunk_id & EXTRA_SHADOWS_FLAG ? 1 : 1;
14302: /* MUTANT (rep_const) */		t->extra_shadows = ptt->chunk_id & EXTRA_SHADOWS_FLAG ? 1 : -1;
14303: /* MUTANT (del_stmt) */ /* 		t->extra_obj_type = ptt->obj_id >> EXTRA_OBJECT_TYPE_SHIFT; */ 
14304: /* MUTANT (del_stmt) */ /* 		t->obj_id &= ~EXTRA_OBJECT_TYPE_MASK; */ 
14306: /* MUTANT (rep_op) */		if (t->extra_obj_type != YAFFS_OBJECT_TYPE_HARDLINK)
14306: /* MUTANT (negate) */		if(! (t->extra_obj_type == YAFFS_OBJECT_TYPE_HARDLINK))
14312: /* MUTANT (del_stmt) */ /* 	yaffs_dump_tags2(t); */ 
14318: /* MUTANT (del_stmt) */ /* 	enum yaffs_ecc_result ecc_result = YAFFS_ECC_RESULT_NO_ERROR; */ 
14320: /* MUTANT (rep_op) */	if (pt->t.seq_number == 0xffffffff && tags_ecc) {
14320: /* MUTANT (rep_op) */	if (pt->t.seq_number != 0xffffffff || tags_ecc) {
14320: /* MUTANT (rep_const) */	if (pt->t.seq_number != 1xffffffff && tags_ecc) {
14320: /* MUTANT (rep_const) */	if (pt->t.seq_number != -1xffffffff && tags_ecc) {
14320: /* MUTANT (negate) */	if(! (pt->t.seq_number != 0xffffffff && tags_ecc)) {
14323: /* MUTANT (del_stmt) */ /* 		struct yaffs_ecc_other ecc; */ 
14324: /* MUTANT (del_stmt) */ /* 		int result; */ 
14333: /* MUTANT (rep_const) */		case 1:
14333: /* MUTANT (rep_const) */		case -1:
14335: /* MUTANT (del_stmt) */ /* 			break; */ 
14336: /* MUTANT (rep_const) */		case 0:
14336: /* MUTANT (rep_const) */		case -1:
14336: /* MUTANT (rep_const) */		case ((1)+1):
14338: /* MUTANT (del_stmt) */ /* 			break; */ 
14339: /* MUTANT (rep_const) */		case 0:
14339: /* MUTANT (rep_const) */		case 1:
14339: /* MUTANT (rep_const) */		case ((-1)+1):
14339: /* MUTANT (rep_const) */		case ((-1)-1):
14341: /* MUTANT (del_stmt) */ /* 			break; */ 
14348: /* MUTANT (del_stmt) */ /* 	t->ecc_result = ecc_result; */ 
14350: /* MUTANT (del_stmt) */ /* 	yaffs_dump_packed_tags2(pt); */ 
14351: /* MUTANT (del_stmt) */ /* 	yaffs_dump_tags2(t); */ 
14380: /* MUTANT (del_stmt) */ /* 	yaffs_ecc_calc(data, spare->ecc1); */ 
14381: /* MUTANT (del_stmt) */ /* 	yaffs_ecc_calc(&data[256], spare->ecc2); */ 
14381: /* MUTANT (rep_const) */	yaffs_ecc_calc(&data[0], spare->ecc2);
14381: /* MUTANT (rep_const) */	yaffs_ecc_calc(&data[1], spare->ecc2);
14381: /* MUTANT (rep_const) */	yaffs_ecc_calc(&data[-1], spare->ecc2);
14381: /* MUTANT (rep_const) */	yaffs_ecc_calc(&data[((256)+1)], spare->ecc2);
14381: /* MUTANT (rep_const) */	yaffs_ecc_calc(&data[((256)-1)], spare->ecc2);
14387: /* MUTANT (del_stmt) */ /* 	unsigned char *b = ((union yaffs_tags_union *)tags)->as_bytes; */ 
14388: /* MUTANT (del_stmt) */ /* 	unsigned i, j; */ 
14389: /* MUTANT (del_stmt) */ /* 	unsigned ecc = 0; */ 
14389: /* MUTANT (rep_const) */	unsigned ecc = 1;
14389: /* MUTANT (rep_const) */	unsigned ecc = -1;
14390: /* MUTANT (del_stmt) */ /* 	unsigned bit = 0; */ 
14390: /* MUTANT (rep_const) */	unsigned bit = 1;
14390: /* MUTANT (rep_const) */	unsigned bit = -1;
14392: /* MUTANT (del_stmt) */ /* 	tags->ecc = 0; */ 
14392: /* MUTANT (rep_const) */	tags->ecc = 1;
14392: /* MUTANT (rep_const) */	tags->ecc = -1;
14394: /* MUTANT (rep_op) */	for (i = 0; i <= 8; i++) {
14394: /* MUTANT (rep_op) */	for (i = 0; i > 8; i++) {
14394: /* MUTANT (rep_op) */	for (i = 0; i >= 8; i++) {
14394: /* MUTANT (rep_op) */	for (i = 0; i == 8; i++) {
14394: /* MUTANT (rep_op) */	for (i = 0; i != 8; i++) {
14394: /* MUTANT (rep_op) */	for (i = 0; i < 8; i--) {
14394: /* MUTANT (rep_const) */	for (i = 1; i < 8; i++) {
14394: /* MUTANT (rep_const) */	for (i = -1; i < 8; i++) {
14394: /* MUTANT (rep_const) */	for (i = 0; i < 0; i++) {
14394: /* MUTANT (rep_const) */	for (i = 0; i < 1; i++) {
14394: /* MUTANT (rep_const) */	for (i = 0; i < -1; i++) {
14394: /* MUTANT (rep_const) */	for (i = 0; i < ((8)+1); i++) {
14394: /* MUTANT (rep_const) */	for (i = 0; i < ((8)-1); i++) {
14395: /* MUTANT (rep_const) */		for (j = 0; j & 0xff; j <<= 1) {
14395: /* MUTANT (rep_const) */		for (j = -1; j & 0xff; j <<= 1) {
14395: /* MUTANT (rep_const) */		for (j = ((1)+1); j & 0xff; j <<= 1) {
14395: /* MUTANT (rep_const) */		for (j = 1; j & 1xff; j <<= 1) {
14395: /* MUTANT (rep_const) */		for (j = 1; j & -1xff; j <<= 1) {
14395: /* MUTANT (rep_const) */		for (j = 1; j & 0xff; j <<= 0) {
14395: /* MUTANT (rep_const) */		for (j = 1; j & 0xff; j <<= -1) {
14395: /* MUTANT (rep_const) */		for (j = 1; j & 0xff; j <<= ((1)+1)) {
14396: /* MUTANT (del_stmt) */ /* 			bit++; */ 
14396: /* MUTANT (rep_op) */			bit--;
14397: /* MUTANT (negate) */			if(! (b[i] & j))
14406: /* MUTANT (del_stmt) */ /* 	unsigned ecc = tags->ecc; */ 
14408: /* MUTANT (del_stmt) */ /* 	yaffs_calc_tags_ecc(tags); */ 
14410: /* MUTANT (del_stmt) */ /* 	ecc ^= tags->ecc; */ 
14412: /* MUTANT (rep_op) */	if (ecc || ecc <= 64) {
14412: /* MUTANT (rep_op) */	if (ecc && ecc < 64) {
14412: /* MUTANT (rep_op) */	if (ecc && ecc > 64) {
14412: /* MUTANT (rep_op) */	if (ecc && ecc >= 64) {
14412: /* MUTANT (rep_op) */	if (ecc && ecc == 64) {
14412: /* MUTANT (rep_op) */	if (ecc && ecc != 64) {
14412: /* MUTANT (rep_const) */	if (ecc && ecc <= 0) {
14412: /* MUTANT (rep_const) */	if (ecc && ecc <= 1) {
14412: /* MUTANT (rep_const) */	if (ecc && ecc <= -1) {
14412: /* MUTANT (rep_const) */	if (ecc && ecc <= ((64)+1)) {
14412: /* MUTANT (rep_const) */	if (ecc && ecc <= ((64)-1)) {
14412: /* MUTANT (negate) */	if(! (ecc && ecc <= 64)) {
14414: /* MUTANT (del_stmt) */ /* 		unsigned char *b = ((union yaffs_tags_union *)tags)->as_bytes; */ 
14416: /* MUTANT (del_stmt) */ /* 		ecc--; */ 
14416: /* MUTANT (rep_op) */		ecc++;
14418: /* MUTANT (del_stmt) */ /* 		b[ecc / 8] ^= (1 << (ecc & 7)); */ 
14418: /* MUTANT (rep_const) */		b[ecc / 0] ^= (1 << (ecc & 7));
14418: /* MUTANT (rep_const) */		b[ecc / 1] ^= (1 << (ecc & 7));
14418: /* MUTANT (rep_const) */		b[ecc / -1] ^= (1 << (ecc & 7));
14418: /* MUTANT (rep_const) */		b[ecc / ((8)+1)] ^= (1 << (ecc & 7));
14418: /* MUTANT (rep_const) */		b[ecc / ((8)-1)] ^= (1 << (ecc & 7));
14418: /* MUTANT (rep_const) */		b[ecc / 8] ^= (0 << (ecc & 7));
14418: /* MUTANT (rep_const) */		b[ecc / 8] ^= (-1 << (ecc & 7));
14418: /* MUTANT (rep_const) */		b[ecc / 8] ^= (((1)+1) << (ecc & 7));
14418: /* MUTANT (rep_const) */		b[ecc / 8] ^= (1 << (ecc & 0));
14418: /* MUTANT (rep_const) */		b[ecc / 8] ^= (1 << (ecc & 1));
14418: /* MUTANT (rep_const) */		b[ecc / 8] ^= (1 << (ecc & -1));
14418: /* MUTANT (rep_const) */		b[ecc / 8] ^= (1 << (ecc & ((7)+1)));
14418: /* MUTANT (rep_const) */		b[ecc / 8] ^= (1 << (ecc & ((7)-1)));
14421: /* MUTANT (del_stmt) */ /* 		yaffs_calc_tags_ecc(tags); */ 
14423: /* MUTANT (del_stmt) */ /* 		return 1; */ 	/* recovered error */
14423: /* MUTANT (rep_const) */		return 0;	/* recovered error */
14423: /* MUTANT (rep_const) */		return -1;	/* recovered error */
14423: /* MUTANT (rep_const) */		return ((1)+1);	/* recovered error */
14424: /* MUTANT (negate) */	} else if(! (ecc)) {
14427: /* MUTANT (del_stmt) */ /* 		return -1; */ 	/* unrecovered error */
14427: /* MUTANT (rep_const) */		return 0;	/* unrecovered error */
14427: /* MUTANT (rep_const) */		return 1;	/* unrecovered error */
14427: /* MUTANT (rep_const) */		return ((-1)+1);	/* unrecovered error */
14427: /* MUTANT (rep_const) */		return ((-1)-1);	/* unrecovered error */
14429: /* MUTANT (rep_const) */	return 1;
14429: /* MUTANT (rep_const) */	return -1;
14437: /* MUTANT (del_stmt) */ /* 	union yaffs_tags_union *tu = (union yaffs_tags_union *)tags_ptr; */ 
14439: /* MUTANT (del_stmt) */ /* 	yaffs_calc_tags_ecc(tags_ptr); */ 
14441: /* MUTANT (del_stmt) */ /* 	spare_ptr->tb0 = tu->as_bytes[0]; */ 
14441: /* MUTANT (rep_const) */	spare_ptr->tb0 = tu->as_bytes[1];
14441: /* MUTANT (rep_const) */	spare_ptr->tb0 = tu->as_bytes[-1];
14442: /* MUTANT (del_stmt) */ /* 	spare_ptr->tb1 = tu->as_bytes[1]; */ 
14442: /* MUTANT (rep_const) */	spare_ptr->tb1 = tu->as_bytes[0];
14442: /* MUTANT (rep_const) */	spare_ptr->tb1 = tu->as_bytes[-1];
14442: /* MUTANT (rep_const) */	spare_ptr->tb1 = tu->as_bytes[((1)+1)];
14443: /* MUTANT (del_stmt) */ /* 	spare_ptr->tb2 = tu->as_bytes[2]; */ 
14443: /* MUTANT (rep_const) */	spare_ptr->tb2 = tu->as_bytes[0];
14443: /* MUTANT (rep_const) */	spare_ptr->tb2 = tu->as_bytes[1];
14443: /* MUTANT (rep_const) */	spare_ptr->tb2 = tu->as_bytes[-1];
14443: /* MUTANT (rep_const) */	spare_ptr->tb2 = tu->as_bytes[((2)+1)];
14443: /* MUTANT (rep_const) */	spare_ptr->tb2 = tu->as_bytes[((2)-1)];
14444: /* MUTANT (del_stmt) */ /* 	spare_ptr->tb3 = tu->as_bytes[3]; */ 
14444: /* MUTANT (rep_const) */	spare_ptr->tb3 = tu->as_bytes[0];
14444: /* MUTANT (rep_const) */	spare_ptr->tb3 = tu->as_bytes[1];
14444: /* MUTANT (rep_const) */	spare_ptr->tb3 = tu->as_bytes[-1];
14444: /* MUTANT (rep_const) */	spare_ptr->tb3 = tu->as_bytes[((3)+1)];
14444: /* MUTANT (rep_const) */	spare_ptr->tb3 = tu->as_bytes[((3)-1)];
14445: /* MUTANT (del_stmt) */ /* 	spare_ptr->tb4 = tu->as_bytes[4]; */ 
14445: /* MUTANT (rep_const) */	spare_ptr->tb4 = tu->as_bytes[0];
14445: /* MUTANT (rep_const) */	spare_ptr->tb4 = tu->as_bytes[1];
14445: /* MUTANT (rep_const) */	spare_ptr->tb4 = tu->as_bytes[-1];
14445: /* MUTANT (rep_const) */	spare_ptr->tb4 = tu->as_bytes[((4)+1)];
14445: /* MUTANT (rep_const) */	spare_ptr->tb4 = tu->as_bytes[((4)-1)];
14446: /* MUTANT (del_stmt) */ /* 	spare_ptr->tb5 = tu->as_bytes[5]; */ 
14446: /* MUTANT (rep_const) */	spare_ptr->tb5 = tu->as_bytes[0];
14446: /* MUTANT (rep_const) */	spare_ptr->tb5 = tu->as_bytes[1];
14446: /* MUTANT (rep_const) */	spare_ptr->tb5 = tu->as_bytes[-1];
14446: /* MUTANT (rep_const) */	spare_ptr->tb5 = tu->as_bytes[((5)+1)];
14446: /* MUTANT (rep_const) */	spare_ptr->tb5 = tu->as_bytes[((5)-1)];
14447: /* MUTANT (del_stmt) */ /* 	spare_ptr->tb6 = tu->as_bytes[6]; */ 
14447: /* MUTANT (rep_const) */	spare_ptr->tb6 = tu->as_bytes[0];
14447: /* MUTANT (rep_const) */	spare_ptr->tb6 = tu->as_bytes[1];
14447: /* MUTANT (rep_const) */	spare_ptr->tb6 = tu->as_bytes[-1];
14447: /* MUTANT (rep_const) */	spare_ptr->tb6 = tu->as_bytes[((6)+1)];
14447: /* MUTANT (rep_const) */	spare_ptr->tb6 = tu->as_bytes[((6)-1)];
14448: /* MUTANT (del_stmt) */ /* 	spare_ptr->tb7 = tu->as_bytes[7]; */ 
14448: /* MUTANT (rep_const) */	spare_ptr->tb7 = tu->as_bytes[0];
14448: /* MUTANT (rep_const) */	spare_ptr->tb7 = tu->as_bytes[1];
14448: /* MUTANT (rep_const) */	spare_ptr->tb7 = tu->as_bytes[-1];
14448: /* MUTANT (rep_const) */	spare_ptr->tb7 = tu->as_bytes[((7)+1)];
14448: /* MUTANT (rep_const) */	spare_ptr->tb7 = tu->as_bytes[((7)-1)];
14455: /* MUTANT (del_stmt) */ /* 	union yaffs_tags_union *tu = (union yaffs_tags_union *)tags_ptr; */ 
14456: /* MUTANT (del_stmt) */ /* 	int result; */ 
14458: /* MUTANT (del_stmt) */ /* 	tu->as_bytes[0] = spare_ptr->tb0; */ 
14458: /* MUTANT (rep_const) */	tu->as_bytes[1] = spare_ptr->tb0;
14458: /* MUTANT (rep_const) */	tu->as_bytes[-1] = spare_ptr->tb0;
14459: /* MUTANT (del_stmt) */ /* 	tu->as_bytes[1] = spare_ptr->tb1; */ 
14459: /* MUTANT (rep_const) */	tu->as_bytes[0] = spare_ptr->tb1;
14459: /* MUTANT (rep_const) */	tu->as_bytes[-1] = spare_ptr->tb1;
14459: /* MUTANT (rep_const) */	tu->as_bytes[((1)+1)] = spare_ptr->tb1;
14460: /* MUTANT (del_stmt) */ /* 	tu->as_bytes[2] = spare_ptr->tb2; */ 
14460: /* MUTANT (rep_const) */	tu->as_bytes[0] = spare_ptr->tb2;
14460: /* MUTANT (rep_const) */	tu->as_bytes[1] = spare_ptr->tb2;
14460: /* MUTANT (rep_const) */	tu->as_bytes[-1] = spare_ptr->tb2;
14460: /* MUTANT (rep_const) */	tu->as_bytes[((2)+1)] = spare_ptr->tb2;
14460: /* MUTANT (rep_const) */	tu->as_bytes[((2)-1)] = spare_ptr->tb2;
14461: /* MUTANT (del_stmt) */ /* 	tu->as_bytes[3] = spare_ptr->tb3; */ 
14461: /* MUTANT (rep_const) */	tu->as_bytes[0] = spare_ptr->tb3;
14461: /* MUTANT (rep_const) */	tu->as_bytes[1] = spare_ptr->tb3;
14461: /* MUTANT (rep_const) */	tu->as_bytes[-1] = spare_ptr->tb3;
14461: /* MUTANT (rep_const) */	tu->as_bytes[((3)+1)] = spare_ptr->tb3;
14461: /* MUTANT (rep_const) */	tu->as_bytes[((3)-1)] = spare_ptr->tb3;
14462: /* MUTANT (del_stmt) */ /* 	tu->as_bytes[4] = spare_ptr->tb4; */ 
14462: /* MUTANT (rep_const) */	tu->as_bytes[0] = spare_ptr->tb4;
14462: /* MUTANT (rep_const) */	tu->as_bytes[1] = spare_ptr->tb4;
14462: /* MUTANT (rep_const) */	tu->as_bytes[-1] = spare_ptr->tb4;
14462: /* MUTANT (rep_const) */	tu->as_bytes[((4)+1)] = spare_ptr->tb4;
14462: /* MUTANT (rep_const) */	tu->as_bytes[((4)-1)] = spare_ptr->tb4;
14463: /* MUTANT (del_stmt) */ /* 	tu->as_bytes[5] = spare_ptr->tb5; */ 
14463: /* MUTANT (rep_const) */	tu->as_bytes[0] = spare_ptr->tb5;
14463: /* MUTANT (rep_const) */	tu->as_bytes[1] = spare_ptr->tb5;
14463: /* MUTANT (rep_const) */	tu->as_bytes[-1] = spare_ptr->tb5;
14463: /* MUTANT (rep_const) */	tu->as_bytes[((5)+1)] = spare_ptr->tb5;
14463: /* MUTANT (rep_const) */	tu->as_bytes[((5)-1)] = spare_ptr->tb5;
14464: /* MUTANT (del_stmt) */ /* 	tu->as_bytes[6] = spare_ptr->tb6; */ 
14464: /* MUTANT (rep_const) */	tu->as_bytes[0] = spare_ptr->tb6;
14464: /* MUTANT (rep_const) */	tu->as_bytes[1] = spare_ptr->tb6;
14464: /* MUTANT (rep_const) */	tu->as_bytes[-1] = spare_ptr->tb6;
14464: /* MUTANT (rep_const) */	tu->as_bytes[((6)+1)] = spare_ptr->tb6;
14464: /* MUTANT (rep_const) */	tu->as_bytes[((6)-1)] = spare_ptr->tb6;
14465: /* MUTANT (del_stmt) */ /* 	tu->as_bytes[7] = spare_ptr->tb7; */ 
14465: /* MUTANT (rep_const) */	tu->as_bytes[0] = spare_ptr->tb7;
14465: /* MUTANT (rep_const) */	tu->as_bytes[1] = spare_ptr->tb7;
14465: /* MUTANT (rep_const) */	tu->as_bytes[-1] = spare_ptr->tb7;
14465: /* MUTANT (rep_const) */	tu->as_bytes[((7)+1)] = spare_ptr->tb7;
14465: /* MUTANT (rep_const) */	tu->as_bytes[((7)-1)] = spare_ptr->tb7;
14467: /* MUTANT (del_stmt) */ /* 	result = yaffs_check_tags_ecc(tags_ptr); */ 
14468: /* MUTANT (rep_op) */	if (result <= 0)
14468: /* MUTANT (rep_op) */	if (result < 0)
14468: /* MUTANT (rep_op) */	if (result >= 0)
14468: /* MUTANT (rep_op) */	if (result == 0)
14468: /* MUTANT (rep_op) */	if (result != 0)
14468: /* MUTANT (rep_const) */	if (result > 1)
14468: /* MUTANT (rep_const) */	if (result > -1)
14468: /* MUTANT (negate) */	if(! (result > 0))
14469: /* MUTANT (rep_op) */		dev->n_tags_ecc_fixed--;
14470: /* MUTANT (rep_op) */	else if (result <= 0)
14470: /* MUTANT (rep_op) */	else if (result > 0)
14470: /* MUTANT (rep_op) */	else if (result >= 0)
14470: /* MUTANT (rep_op) */	else if (result == 0)
14470: /* MUTANT (rep_op) */	else if (result != 0)
14470: /* MUTANT (rep_const) */	else if (result < 1)
14470: /* MUTANT (rep_const) */	else if (result < -1)
14470: /* MUTANT (negate) */	else if(! (result < 0))
14471: /* MUTANT (rep_op) */		dev->n_tags_ecc_unfixed--;
14476: /* MUTANT (del_stmt) */ /* 	mymemset(spare, 0xff, sizeof(struct yaffs_spare)); */ 
14476: /* MUTANT (rep_const) */	mymemset(spare, 1xff, sizeof(struct yaffs_spare));
14476: /* MUTANT (rep_const) */	mymemset(spare, -1xff, sizeof(struct yaffs_spare));
14483: /* MUTANT (rep_op) */	if (nand_chunk <= dev->param.start_block * dev->param.chunks_per_block) {
14483: /* MUTANT (rep_op) */	if (nand_chunk > dev->param.start_block * dev->param.chunks_per_block) {
14483: /* MUTANT (rep_op) */	if (nand_chunk >= dev->param.start_block * dev->param.chunks_per_block) {
14483: /* MUTANT (rep_op) */	if (nand_chunk == dev->param.start_block * dev->param.chunks_per_block) {
14483: /* MUTANT (rep_op) */	if (nand_chunk != dev->param.start_block * dev->param.chunks_per_block) {
14483: /* MUTANT (negate) */	if(! (nand_chunk < dev->param.start_block * dev->param.chunks_per_block)) {
14487: /* MUTANT (del_stmt) */ /* 		return YAFFS_FAIL; */ 
14500: /* MUTANT (del_stmt) */ /* 	int ret_val; */ 
14501: /* MUTANT (del_stmt) */ /* 	struct yaffs_spare local_spare; */ 
14503: /* MUTANT (negate) */	if(! (!spare)) {
14506: /* MUTANT (del_stmt) */ /* 		spare = &local_spare; */ 
14509: /* MUTANT (negate) */	if(! (!dev->param.use_nand_ecc)) {
14512: /* MUTANT (rep_op) */		if (data || correct_errors) {
14512: /* MUTANT (negate) */		if(! (data && correct_errors)) {
14515: /* MUTANT (del_stmt) */ /* 			int ecc_result1, ecc_result2; */ 
14516: /* MUTANT (del_stmt) */ /* 			u8 calc_ecc[3]; */ 
14516: /* MUTANT (rep_const) */			u8 calc_ecc[0];
14516: /* MUTANT (rep_const) */			u8 calc_ecc[1];
14516: /* MUTANT (rep_const) */			u8 calc_ecc[-1];
14516: /* MUTANT (rep_const) */			u8 calc_ecc[((3)+1)];
14516: /* MUTANT (rep_const) */			u8 calc_ecc[((3)-1)];
14518: /* MUTANT (del_stmt) */ /* 			yaffs_ecc_calc(data, calc_ecc); */ 
14521: /* MUTANT (del_stmt) */ /* 			yaffs_ecc_calc(&data[256], calc_ecc); */ 
14521: /* MUTANT (rep_const) */			yaffs_ecc_calc(&data[0], calc_ecc);
14521: /* MUTANT (rep_const) */			yaffs_ecc_calc(&data[1], calc_ecc);
14521: /* MUTANT (rep_const) */			yaffs_ecc_calc(&data[-1], calc_ecc);
14521: /* MUTANT (rep_const) */			yaffs_ecc_calc(&data[((256)+1)], calc_ecc);
14521: /* MUTANT (rep_const) */			yaffs_ecc_calc(&data[((256)-1)], calc_ecc);
14523: /* MUTANT (rep_const) */			    yaffs_ecc_correct(&data[0], spare->ecc2,
14523: /* MUTANT (rep_const) */			    yaffs_ecc_correct(&data[1], spare->ecc2,
14523: /* MUTANT (rep_const) */			    yaffs_ecc_correct(&data[-1], spare->ecc2,
14523: /* MUTANT (rep_const) */			    yaffs_ecc_correct(&data[((256)+1)], spare->ecc2,
14523: /* MUTANT (rep_const) */			    yaffs_ecc_correct(&data[((256)-1)], spare->ecc2,
14526: /* MUTANT (rep_op) */			if (ecc_result1 <= 0) {
14526: /* MUTANT (rep_op) */			if (ecc_result1 < 0) {
14526: /* MUTANT (rep_op) */			if (ecc_result1 >= 0) {
14526: /* MUTANT (rep_op) */			if (ecc_result1 == 0) {
14526: /* MUTANT (rep_op) */			if (ecc_result1 != 0) {
14526: /* MUTANT (rep_const) */			if (ecc_result1 > 1) {
14526: /* MUTANT (rep_const) */			if (ecc_result1 > -1) {
14526: /* MUTANT (negate) */			if(! (ecc_result1 > 0)) {
14528: /* MUTANT (rep_const) */					"**>>yaffs ecc error fix performed on chunk %d:1",
14528: /* MUTANT (rep_const) */					"**>>yaffs ecc error fix performed on chunk %d:-1",
14530: /* MUTANT (del_stmt) */ /* 				dev->n_ecc_fixed++; */ 
14530: /* MUTANT (rep_op) */				dev->n_ecc_fixed--;
14531: /* MUTANT (rep_op) */			} else if (ecc_result1 <= 0) {
14531: /* MUTANT (rep_op) */			} else if (ecc_result1 > 0) {
14531: /* MUTANT (rep_op) */			} else if (ecc_result1 >= 0) {
14531: /* MUTANT (rep_op) */			} else if (ecc_result1 == 0) {
14531: /* MUTANT (rep_op) */			} else if (ecc_result1 != 0) {
14531: /* MUTANT (rep_const) */			} else if (ecc_result1 < 1) {
14531: /* MUTANT (rep_const) */			} else if (ecc_result1 < -1) {
14531: /* MUTANT (negate) */			} else if(! (ecc_result1 < 0)) {
14533: /* MUTANT (rep_const) */					"**>>yaffs ecc error unfixed on chunk %d:1",
14533: /* MUTANT (rep_const) */					"**>>yaffs ecc error unfixed on chunk %d:-1",
14535: /* MUTANT (del_stmt) */ /* 				dev->n_ecc_unfixed++; */ 
14535: /* MUTANT (rep_op) */				dev->n_ecc_unfixed--;
14538: /* MUTANT (rep_op) */			if (ecc_result2 <= 0) {
14538: /* MUTANT (rep_op) */			if (ecc_result2 < 0) {
14538: /* MUTANT (rep_op) */			if (ecc_result2 >= 0) {
14538: /* MUTANT (rep_op) */			if (ecc_result2 == 0) {
14538: /* MUTANT (rep_op) */			if (ecc_result2 != 0) {
14538: /* MUTANT (rep_const) */			if (ecc_result2 > 1) {
14538: /* MUTANT (rep_const) */			if (ecc_result2 > -1) {
14538: /* MUTANT (negate) */			if(! (ecc_result2 > 0)) {
14540: /* MUTANT (rep_const) */					"**>>yaffs ecc error fix performed on chunk %d:0",
14540: /* MUTANT (rep_const) */					"**>>yaffs ecc error fix performed on chunk %d:-1",
14540: /* MUTANT (rep_const) */					"**>>yaffs ecc error fix performed on chunk %d:((1)+1)",
14542: /* MUTANT (del_stmt) */ /* 				dev->n_ecc_fixed++; */ 
14542: /* MUTANT (rep_op) */				dev->n_ecc_fixed--;
14543: /* MUTANT (rep_op) */			} else if (ecc_result2 <= 0) {
14543: /* MUTANT (rep_op) */			} else if (ecc_result2 > 0) {
14543: /* MUTANT (rep_op) */			} else if (ecc_result2 >= 0) {
14543: /* MUTANT (rep_op) */			} else if (ecc_result2 == 0) {
14543: /* MUTANT (rep_op) */			} else if (ecc_result2 != 0) {
14543: /* MUTANT (rep_const) */			} else if (ecc_result2 < 1) {
14543: /* MUTANT (rep_const) */			} else if (ecc_result2 < -1) {
14543: /* MUTANT (negate) */			} else if(! (ecc_result2 < 0)) {
14545: /* MUTANT (rep_const) */					"**>>yaffs ecc error unfixed on chunk %d:0",
14545: /* MUTANT (rep_const) */					"**>>yaffs ecc error unfixed on chunk %d:-1",
14545: /* MUTANT (rep_const) */					"**>>yaffs ecc error unfixed on chunk %d:((1)+1)",
14547: /* MUTANT (del_stmt) */ /* 				dev->n_ecc_unfixed++; */ 
14547: /* MUTANT (rep_op) */				dev->n_ecc_unfixed--;
14550: /* MUTANT (rep_op) */			if (ecc_result1 && ecc_result2) {
14550: /* MUTANT (negate) */			if(! (ecc_result1 || ecc_result2)) {
14552: /* MUTANT (del_stmt) */ /* 				yaffs_handle_rd_data_error(dev, nand_chunk); */ 
14555: /* MUTANT (rep_op) */			if (ecc_result1 <= 0 || ecc_result2 < 0)
14555: /* MUTANT (rep_op) */			if (ecc_result1 > 0 || ecc_result2 < 0)
14555: /* MUTANT (rep_op) */			if (ecc_result1 >= 0 || ecc_result2 < 0)
14555: /* MUTANT (rep_op) */			if (ecc_result1 == 0 || ecc_result2 < 0)
14555: /* MUTANT (rep_op) */			if (ecc_result1 != 0 || ecc_result2 < 0)
14555: /* MUTANT (rep_op) */			if (ecc_result1 < 0 && ecc_result2 < 0)
14555: /* MUTANT (rep_op) */			if (ecc_result1 < 0 || ecc_result2 <= 0)
14555: /* MUTANT (rep_op) */			if (ecc_result1 < 0 || ecc_result2 > 0)
14555: /* MUTANT (rep_op) */			if (ecc_result1 < 0 || ecc_result2 >= 0)
14555: /* MUTANT (rep_op) */			if (ecc_result1 < 0 || ecc_result2 == 0)
14555: /* MUTANT (rep_op) */			if (ecc_result1 < 0 || ecc_result2 != 0)
14555: /* MUTANT (rep_const) */			if (ecc_result1 < 1 || ecc_result2 < 0)
14555: /* MUTANT (rep_const) */			if (ecc_result1 < -1 || ecc_result2 < 0)
14555: /* MUTANT (rep_const) */			if (ecc_result1 < 0 || ecc_result2 < 1)
14555: /* MUTANT (rep_const) */			if (ecc_result1 < 0 || ecc_result2 < -1)
14555: /* MUTANT (negate) */			if(! (ecc_result1 < 0 || ecc_result2 < 0))
14557: /* MUTANT (rep_op) */			else if (ecc_result1 <= 0 || ecc_result2 > 0)
14557: /* MUTANT (rep_op) */			else if (ecc_result1 < 0 || ecc_result2 > 0)
14557: /* MUTANT (rep_op) */			else if (ecc_result1 >= 0 || ecc_result2 > 0)
14557: /* MUTANT (rep_op) */			else if (ecc_result1 == 0 || ecc_result2 > 0)
14557: /* MUTANT (rep_op) */			else if (ecc_result1 != 0 || ecc_result2 > 0)
14557: /* MUTANT (rep_op) */			else if (ecc_result1 > 0 && ecc_result2 > 0)
14557: /* MUTANT (rep_op) */			else if (ecc_result1 > 0 || ecc_result2 <= 0)
14557: /* MUTANT (rep_op) */			else if (ecc_result1 > 0 || ecc_result2 < 0)
14557: /* MUTANT (rep_op) */			else if (ecc_result1 > 0 || ecc_result2 >= 0)
14557: /* MUTANT (rep_op) */			else if (ecc_result1 > 0 || ecc_result2 == 0)
14557: /* MUTANT (rep_op) */			else if (ecc_result1 > 0 || ecc_result2 != 0)
14557: /* MUTANT (rep_const) */			else if (ecc_result1 > 1 || ecc_result2 > 0)
14557: /* MUTANT (rep_const) */			else if (ecc_result1 > -1 || ecc_result2 > 0)
14557: /* MUTANT (rep_const) */			else if (ecc_result1 > 0 || ecc_result2 > 1)
14557: /* MUTANT (rep_const) */			else if (ecc_result1 > 0 || ecc_result2 > -1)
14557: /* MUTANT (negate) */			else if(! (ecc_result1 > 0 || ecc_result2 > 0))
14565: /* MUTANT (del_stmt) */ /* 		struct yaffs_nand_spare nspare; */ 
14567: /* MUTANT (del_stmt) */ /* 		mymemset(&nspare, 0, sizeof(nspare)); */ 
14567: /* MUTANT (rep_const) */		mymemset(&nspare, 1, sizeof(nspare));
14567: /* MUTANT (rep_const) */		mymemset(&nspare, -1, sizeof(nspare));
14572: /* MUTANT (del_stmt) */ /* 		mymemcpy(spare, &nspare, sizeof(struct yaffs_spare)); */ 
14573: /* MUTANT (rep_op) */		if (data || correct_errors) {
14573: /* MUTANT (negate) */		if(! (data && correct_errors)) {
14574: /* MUTANT (rep_op) */			if (nspare.eccres1 <= 0) {
14574: /* MUTANT (rep_op) */			if (nspare.eccres1 < 0) {
14574: /* MUTANT (rep_op) */			if (nspare.eccres1 >= 0) {
14574: /* MUTANT (rep_op) */			if (nspare.eccres1 == 0) {
14574: /* MUTANT (rep_op) */			if (nspare.eccres1 != 0) {
14574: /* MUTANT (rep_const) */			if (nspare.eccres1 > 1) {
14574: /* MUTANT (rep_const) */			if (nspare.eccres1 > -1) {
14574: /* MUTANT (negate) */			if(! (nspare.eccres1 > 0)) {
14576: /* MUTANT (rep_const) */					"**>>mtd ecc error fix performed on chunk %d:1",
14576: /* MUTANT (rep_const) */					"**>>mtd ecc error fix performed on chunk %d:-1",
14578: /* MUTANT (rep_op) */			} else if (nspare.eccres1 <= 0) {
14578: /* MUTANT (rep_op) */			} else if (nspare.eccres1 > 0) {
14578: /* MUTANT (rep_op) */			} else if (nspare.eccres1 >= 0) {
14578: /* MUTANT (rep_op) */			} else if (nspare.eccres1 == 0) {
14578: /* MUTANT (rep_op) */			} else if (nspare.eccres1 != 0) {
14578: /* MUTANT (rep_const) */			} else if (nspare.eccres1 < 1) {
14578: /* MUTANT (rep_const) */			} else if (nspare.eccres1 < -1) {
14578: /* MUTANT (negate) */			} else if(! (nspare.eccres1 < 0)) {
14580: /* MUTANT (rep_const) */					"**>>mtd ecc error unfixed on chunk %d:1",
14580: /* MUTANT (rep_const) */					"**>>mtd ecc error unfixed on chunk %d:-1",
14584: /* MUTANT (rep_op) */			if (nspare.eccres2 <= 0) {
14584: /* MUTANT (rep_op) */			if (nspare.eccres2 < 0) {
14584: /* MUTANT (rep_op) */			if (nspare.eccres2 >= 0) {
14584: /* MUTANT (rep_op) */			if (nspare.eccres2 == 0) {
14584: /* MUTANT (rep_op) */			if (nspare.eccres2 != 0) {
14584: /* MUTANT (rep_const) */			if (nspare.eccres2 > 1) {
14584: /* MUTANT (rep_const) */			if (nspare.eccres2 > -1) {
14584: /* MUTANT (negate) */			if(! (nspare.eccres2 > 0)) {
14586: /* MUTANT (rep_const) */					"**>>mtd ecc error fix performed on chunk %d:0",
14586: /* MUTANT (rep_const) */					"**>>mtd ecc error fix performed on chunk %d:-1",
14586: /* MUTANT (rep_const) */					"**>>mtd ecc error fix performed on chunk %d:((1)+1)",
14588: /* MUTANT (rep_op) */			} else if (nspare.eccres2 <= 0) {
14588: /* MUTANT (rep_op) */			} else if (nspare.eccres2 > 0) {
14588: /* MUTANT (rep_op) */			} else if (nspare.eccres2 >= 0) {
14588: /* MUTANT (rep_op) */			} else if (nspare.eccres2 == 0) {
14588: /* MUTANT (rep_op) */			} else if (nspare.eccres2 != 0) {
14588: /* MUTANT (rep_const) */			} else if (nspare.eccres2 < 1) {
14588: /* MUTANT (rep_const) */			} else if (nspare.eccres2 < -1) {
14588: /* MUTANT (negate) */			} else if(! (nspare.eccres2 < 0)) {
14590: /* MUTANT (rep_const) */					"**>>mtd ecc error unfixed on chunk %d:0",
14590: /* MUTANT (rep_const) */					"**>>mtd ecc error unfixed on chunk %d:-1",
14590: /* MUTANT (rep_const) */					"**>>mtd ecc error unfixed on chunk %d:((1)+1)",
14594: /* MUTANT (rep_op) */			if (nspare.eccres1 && nspare.eccres2) {
14594: /* MUTANT (negate) */			if(! (nspare.eccres1 || nspare.eccres2)) {
14596: /* MUTANT (del_stmt) */ /* 				yaffs_handle_rd_data_error(dev, nand_chunk); */ 
14599: /* MUTANT (rep_op) */			if (nspare.eccres1 <= 0 || nspare.eccres2 < 0)
14599: /* MUTANT (rep_op) */			if (nspare.eccres1 > 0 || nspare.eccres2 < 0)
14599: /* MUTANT (rep_op) */			if (nspare.eccres1 >= 0 || nspare.eccres2 < 0)
14599: /* MUTANT (rep_op) */			if (nspare.eccres1 == 0 || nspare.eccres2 < 0)
14599: /* MUTANT (rep_op) */			if (nspare.eccres1 != 0 || nspare.eccres2 < 0)
14599: /* MUTANT (rep_op) */			if (nspare.eccres1 < 0 && nspare.eccres2 < 0)
14599: /* MUTANT (rep_op) */			if (nspare.eccres1 < 0 || nspare.eccres2 <= 0)
14599: /* MUTANT (rep_op) */			if (nspare.eccres1 < 0 || nspare.eccres2 > 0)
14599: /* MUTANT (rep_op) */			if (nspare.eccres1 < 0 || nspare.eccres2 >= 0)
14599: /* MUTANT (rep_op) */			if (nspare.eccres1 < 0 || nspare.eccres2 == 0)
14599: /* MUTANT (rep_op) */			if (nspare.eccres1 < 0 || nspare.eccres2 != 0)
14599: /* MUTANT (rep_const) */			if (nspare.eccres1 < 1 || nspare.eccres2 < 0)
14599: /* MUTANT (rep_const) */			if (nspare.eccres1 < -1 || nspare.eccres2 < 0)
14599: /* MUTANT (rep_const) */			if (nspare.eccres1 < 0 || nspare.eccres2 < 1)
14599: /* MUTANT (rep_const) */			if (nspare.eccres1 < 0 || nspare.eccres2 < -1)
14599: /* MUTANT (negate) */			if(! (nspare.eccres1 < 0 || nspare.eccres2 < 0))
14601: /* MUTANT (rep_op) */			else if (nspare.eccres1 <= 0 || nspare.eccres2 > 0)
14601: /* MUTANT (rep_op) */			else if (nspare.eccres1 < 0 || nspare.eccres2 > 0)
14601: /* MUTANT (rep_op) */			else if (nspare.eccres1 >= 0 || nspare.eccres2 > 0)
14601: /* MUTANT (rep_op) */			else if (nspare.eccres1 == 0 || nspare.eccres2 > 0)
14601: /* MUTANT (rep_op) */			else if (nspare.eccres1 != 0 || nspare.eccres2 > 0)
14601: /* MUTANT (rep_op) */			else if (nspare.eccres1 > 0 && nspare.eccres2 > 0)
14601: /* MUTANT (rep_op) */			else if (nspare.eccres1 > 0 || nspare.eccres2 <= 0)
14601: /* MUTANT (rep_op) */			else if (nspare.eccres1 > 0 || nspare.eccres2 < 0)
14601: /* MUTANT (rep_op) */			else if (nspare.eccres1 > 0 || nspare.eccres2 >= 0)
14601: /* MUTANT (rep_op) */			else if (nspare.eccres1 > 0 || nspare.eccres2 == 0)
14601: /* MUTANT (rep_op) */			else if (nspare.eccres1 > 0 || nspare.eccres2 != 0)
14601: /* MUTANT (rep_const) */			else if (nspare.eccres1 > 1 || nspare.eccres2 > 0)
14601: /* MUTANT (rep_const) */			else if (nspare.eccres1 > -1 || nspare.eccres2 > 0)
14601: /* MUTANT (rep_const) */			else if (nspare.eccres1 > 0 || nspare.eccres2 > 1)
14601: /* MUTANT (rep_const) */			else if (nspare.eccres1 > 0 || nspare.eccres2 > -1)
14601: /* MUTANT (negate) */			else if(! (nspare.eccres1 > 0 || nspare.eccres2 > 0))
14617: /* MUTANT (del_stmt) */ /* 	int flash_block = nand_chunk / dev->param.chunks_per_block; */ 
14620: /* MUTANT (rep_op) */	yaffs_get_block_info(dev, flash_block - dev->block_offset)->
14620: /* MUTANT (rep_op) */	yaffs_get_block_info(dev, flash_block * dev->block_offset)->
14620: /* MUTANT (rep_op) */	yaffs_get_block_info(dev, flash_block % dev->block_offset)->
14621: /* MUTANT (rep_const) */		needs_retiring = 0;
14621: /* MUTANT (rep_const) */		needs_retiring = -1;
14621: /* MUTANT (rep_const) */		needs_retiring = ((1)+1);
14622: /* MUTANT (rep_op) */	yaffs_trace(YAFFS_TRACE_ERROR & YAFFS_TRACE_BAD_BLOCKS,
14637: /* MUTANT (del_stmt) */ /* 	struct yaffs_spare spare; */ 
14638: /* MUTANT (del_stmt) */ /* 	struct yaffs_tags tags; */ 
14640: /* MUTANT (del_stmt) */ /* 	yaffs_spare_init(&spare); */ 
14642: /* MUTANT (negate) */	if(! (ext_tags->is_deleted))
14643: /* MUTANT (rep_const) */		spare.page_status = 1;
14643: /* MUTANT (rep_const) */		spare.page_status = -1;
14645: /* MUTANT (del_stmt) */ /* 		tags.obj_id = ext_tags->obj_id; */ 
14646: /* MUTANT (del_stmt) */ /* 		tags.chunk_id = ext_tags->chunk_id; */ 
14648: /* MUTANT (del_stmt) */ /* 		tags.n_bytes_lsb = ext_tags->n_bytes & (1024 - 1); */ 
14648: /* MUTANT (rep_const) */		tags.n_bytes_lsb = ext_tags->n_bytes & (0 - 1);
14648: /* MUTANT (rep_const) */		tags.n_bytes_lsb = ext_tags->n_bytes & (1 - 1);
14648: /* MUTANT (rep_const) */		tags.n_bytes_lsb = ext_tags->n_bytes & (-1 - 1);
14648: /* MUTANT (rep_const) */		tags.n_bytes_lsb = ext_tags->n_bytes & (((1024)+1) - 1);
14648: /* MUTANT (rep_const) */		tags.n_bytes_lsb = ext_tags->n_bytes & (((1024)-1) - 1);
14648: /* MUTANT (rep_const) */		tags.n_bytes_lsb = ext_tags->n_bytes & (1024 - 0);
14648: /* MUTANT (rep_const) */		tags.n_bytes_lsb = ext_tags->n_bytes & (1024 - -1);
14648: /* MUTANT (rep_const) */		tags.n_bytes_lsb = ext_tags->n_bytes & (1024 - ((1)+1));
14650: /* MUTANT (rep_op) */		if (dev->data_bytes_per_chunk <= 1024)
14650: /* MUTANT (rep_op) */		if (dev->data_bytes_per_chunk < 1024)
14650: /* MUTANT (rep_op) */		if (dev->data_bytes_per_chunk > 1024)
14650: /* MUTANT (rep_op) */		if (dev->data_bytes_per_chunk == 1024)
14650: /* MUTANT (rep_op) */		if (dev->data_bytes_per_chunk != 1024)
14650: /* MUTANT (rep_const) */		if (dev->data_bytes_per_chunk >= 0)
14650: /* MUTANT (rep_const) */		if (dev->data_bytes_per_chunk >= 1)
14650: /* MUTANT (rep_const) */		if (dev->data_bytes_per_chunk >= -1)
14650: /* MUTANT (rep_const) */		if (dev->data_bytes_per_chunk >= ((1024)+1))
14650: /* MUTANT (rep_const) */		if (dev->data_bytes_per_chunk >= ((1024)-1))
14650: /* MUTANT (negate) */		if(! (dev->data_bytes_per_chunk >= 1024))
14651: /* MUTANT (rep_const) */			tags.n_bytes_msb = (ext_tags->n_bytes >> 0) & 3;
14651: /* MUTANT (rep_const) */			tags.n_bytes_msb = (ext_tags->n_bytes >> 1) & 3;
14651: /* MUTANT (rep_const) */			tags.n_bytes_msb = (ext_tags->n_bytes >> -1) & 3;
14651: /* MUTANT (rep_const) */			tags.n_bytes_msb = (ext_tags->n_bytes >> ((10)+1)) & 3;
14651: /* MUTANT (rep_const) */			tags.n_bytes_msb = (ext_tags->n_bytes >> ((10)-1)) & 3;
14651: /* MUTANT (rep_const) */			tags.n_bytes_msb = (ext_tags->n_bytes >> 10) & 0;
14651: /* MUTANT (rep_const) */			tags.n_bytes_msb = (ext_tags->n_bytes >> 10) & 1;
14651: /* MUTANT (rep_const) */			tags.n_bytes_msb = (ext_tags->n_bytes >> 10) & -1;
14651: /* MUTANT (rep_const) */			tags.n_bytes_msb = (ext_tags->n_bytes >> 10) & ((3)+1);
14651: /* MUTANT (rep_const) */			tags.n_bytes_msb = (ext_tags->n_bytes >> 10) & ((3)-1);
14653: /* MUTANT (rep_const) */			tags.n_bytes_msb = 0;
14653: /* MUTANT (rep_const) */			tags.n_bytes_msb = 1;
14653: /* MUTANT (rep_const) */			tags.n_bytes_msb = -1;
14653: /* MUTANT (rep_const) */			tags.n_bytes_msb = ((3)+1);
14653: /* MUTANT (rep_const) */			tags.n_bytes_msb = ((3)-1);
14655: /* MUTANT (del_stmt) */ /* 		tags.serial_number = ext_tags->serial_number; */ 
14657: /* MUTANT (rep_op) */		if (!dev->param.use_nand_ecc || data)
14657: /* MUTANT (negate) */		if(! (!dev->param.use_nand_ecc && data))
14660: /* MUTANT (del_stmt) */ /* 		yaffs_load_tags_to_spare(&spare, &tags); */ 
14669: /* MUTANT (del_stmt) */ /* 	struct yaffs_spare spare; */ 
14670: /* MUTANT (del_stmt) */ /* 	struct yaffs_tags tags; */ 
14671: /* MUTANT (del_stmt) */ /* 	enum yaffs_ecc_result ecc_result = YAFFS_ECC_RESULT_UNKNOWN; */ 
14672: /* MUTANT (del_stmt) */ /* 	static struct yaffs_spare spare_ff; */ 
14673: /* MUTANT (del_stmt) */ /* 	static int init; */ 
14674: /* MUTANT (del_stmt) */ /* 	int deleted; */ 
14676: /* MUTANT (negate) */	if(! (!init)) {
14677: /* MUTANT (del_stmt) */ /* 		mymemset(&spare_ff, 0xff, sizeof(spare_ff)); */ 
14677: /* MUTANT (rep_const) */		mymemset(&spare_ff, 1xff, sizeof(spare_ff));
14677: /* MUTANT (rep_const) */		mymemset(&spare_ff, -1xff, sizeof(spare_ff));
14678: /* MUTANT (del_stmt) */ /* 		init = 1; */ 
14678: /* MUTANT (rep_const) */		init = 0;
14678: /* MUTANT (rep_const) */		init = -1;
14678: /* MUTANT (rep_const) */		init = ((1)+1);
14682: /* MUTANT (rep_const) */					data, &spare, &ecc_result, 0))
14682: /* MUTANT (rep_const) */					data, &spare, &ecc_result, -1))
14682: /* MUTANT (rep_const) */					data, &spare, &ecc_result, ((1)+1)))
14686: /* MUTANT (negate) */	if(! (!ext_tags))
14689: /* MUTANT (del_stmt) */ /* 	deleted = (hweight8(spare.page_status) < 7) ? 1 : 0; */ 
14689: /* MUTANT (rep_op) */	deleted = (hweight8(spare.page_status) <= 7) ? 1 : 0;
14689: /* MUTANT (rep_op) */	deleted = (hweight8(spare.page_status) > 7) ? 1 : 0;
14689: /* MUTANT (rep_op) */	deleted = (hweight8(spare.page_status) >= 7) ? 1 : 0;
14689: /* MUTANT (rep_op) */	deleted = (hweight8(spare.page_status) == 7) ? 1 : 0;
14689: /* MUTANT (rep_op) */	deleted = (hweight8(spare.page_status) != 7) ? 1 : 0;
14689: /* MUTANT (rep_const) */	deleted = (hweight8(spare.page_status) < 0) ? 1 : 0;
14689: /* MUTANT (rep_const) */	deleted = (hweight8(spare.page_status) < 1) ? 1 : 0;
14689: /* MUTANT (rep_const) */	deleted = (hweight8(spare.page_status) < -1) ? 1 : 0;
14689: /* MUTANT (rep_const) */	deleted = (hweight8(spare.page_status) < ((7)+1)) ? 1 : 0;
14689: /* MUTANT (rep_const) */	deleted = (hweight8(spare.page_status) < ((7)-1)) ? 1 : 0;
14689: /* MUTANT (rep_const) */	deleted = (hweight8(spare.page_status) < 7) ? 0 : 0;
14689: /* MUTANT (rep_const) */	deleted = (hweight8(spare.page_status) < 7) ? -1 : 0;
14689: /* MUTANT (rep_const) */	deleted = (hweight8(spare.page_status) < 7) ? ((1)+1) : 0;
14689: /* MUTANT (rep_const) */	deleted = (hweight8(spare.page_status) < 7) ? 1 : 1;
14689: /* MUTANT (rep_const) */	deleted = (hweight8(spare.page_status) < 7) ? 1 : -1;
14691: /* MUTANT (del_stmt) */ /* 	ext_tags->is_deleted = deleted; */ 
14692: /* MUTANT (del_stmt) */ /* 	ext_tags->ecc_result = ecc_result; */ 
14693: /* MUTANT (del_stmt) */ /* 	ext_tags->block_bad = 0; */ 	/* We're reading it */
14693: /* MUTANT (rep_const) */	ext_tags->block_bad = 1;	/* We're reading it */
14693: /* MUTANT (rep_const) */	ext_tags->block_bad = -1;	/* We're reading it */
14696: /* MUTANT (rep_const) */		mymemcmp(&spare_ff, &spare, sizeof(spare_ff)) ? 0 : 0;
14696: /* MUTANT (rep_const) */		mymemcmp(&spare_ff, &spare, sizeof(spare_ff)) ? -1 : 0;
14696: /* MUTANT (rep_const) */		mymemcmp(&spare_ff, &spare, sizeof(spare_ff)) ? ((1)+1) : 0;
14696: /* MUTANT (rep_const) */		mymemcmp(&spare_ff, &spare, sizeof(spare_ff)) ? 1 : 1;
14696: /* MUTANT (rep_const) */		mymemcmp(&spare_ff, &spare, sizeof(spare_ff)) ? 1 : -1;
14698: /* MUTANT (negate) */	if(! (ext_tags->chunk_used)) {
14699: /* MUTANT (del_stmt) */ /* 		yaffs_get_tags_from_spare(dev, &spare, &tags); */ 
14700: /* MUTANT (del_stmt) */ /* 		ext_tags->obj_id = tags.obj_id; */ 
14701: /* MUTANT (del_stmt) */ /* 		ext_tags->chunk_id = tags.chunk_id; */ 
14702: /* MUTANT (del_stmt) */ /* 		ext_tags->n_bytes = tags.n_bytes_lsb; */ 
14704: /* MUTANT (rep_op) */		if (dev->data_bytes_per_chunk <= 1024)
14704: /* MUTANT (rep_op) */		if (dev->data_bytes_per_chunk < 1024)
14704: /* MUTANT (rep_op) */		if (dev->data_bytes_per_chunk > 1024)
14704: /* MUTANT (rep_op) */		if (dev->data_bytes_per_chunk == 1024)
14704: /* MUTANT (rep_op) */		if (dev->data_bytes_per_chunk != 1024)
14704: /* MUTANT (rep_const) */		if (dev->data_bytes_per_chunk >= 0)
14704: /* MUTANT (rep_const) */		if (dev->data_bytes_per_chunk >= 1)
14704: /* MUTANT (rep_const) */		if (dev->data_bytes_per_chunk >= -1)
14704: /* MUTANT (rep_const) */		if (dev->data_bytes_per_chunk >= ((1024)+1))
14704: /* MUTANT (rep_const) */		if (dev->data_bytes_per_chunk >= ((1024)-1))
14704: /* MUTANT (negate) */		if(! (dev->data_bytes_per_chunk >= 1024))
14706: /* MUTANT (rep_const) */				(((unsigned)tags.n_bytes_msb) << 0);
14706: /* MUTANT (rep_const) */				(((unsigned)tags.n_bytes_msb) << 1);
14706: /* MUTANT (rep_const) */				(((unsigned)tags.n_bytes_msb) << -1);
14706: /* MUTANT (rep_const) */				(((unsigned)tags.n_bytes_msb) << ((10)+1));
14706: /* MUTANT (rep_const) */				(((unsigned)tags.n_bytes_msb) << ((10)-1));
14708: /* MUTANT (del_stmt) */ /* 		ext_tags->serial_number = tags.serial_number; */ 
14716: /* MUTANT (del_stmt) */ /* 	struct yaffs_spare spare; */ 
14718: /* MUTANT (del_stmt) */ /* 	mymemset(&spare, 0xff, sizeof(struct yaffs_spare)); */ 
14718: /* MUTANT (rep_const) */	mymemset(&spare, 1xff, sizeof(struct yaffs_spare));
14718: /* MUTANT (rep_const) */	mymemset(&spare, -1xff, sizeof(struct yaffs_spare));
14720: /* MUTANT (del_stmt) */ /* 	spare.block_status = 'Y'; */ 
14724: /* MUTANT (rep_op) */	yaffs_wr_nand(dev, flash_block * dev->param.chunks_per_block - 1,
14724: /* MUTANT (rep_op) */	yaffs_wr_nand(dev, flash_block * dev->param.chunks_per_block * 1,
14724: /* MUTANT (rep_op) */	yaffs_wr_nand(dev, flash_block * dev->param.chunks_per_block % 1,
14724: /* MUTANT (rep_const) */	yaffs_wr_nand(dev, flash_block * dev->param.chunks_per_block + 0,
14724: /* MUTANT (rep_const) */	yaffs_wr_nand(dev, flash_block * dev->param.chunks_per_block + -1,
14724: /* MUTANT (rep_const) */	yaffs_wr_nand(dev, flash_block * dev->param.chunks_per_block + ((1)+1),
14727: /* MUTANT (del_stmt) */ /* 	return YAFFS_OK; */ 
14735: /* MUTANT (del_stmt) */ /* 	struct yaffs_spare spare0, spare1; */ 
14736: /* MUTANT (del_stmt) */ /* 	static struct yaffs_spare spare_ff; */ 
14737: /* MUTANT (del_stmt) */ /* 	static int init; */ 
14738: /* MUTANT (del_stmt) */ /* 	enum yaffs_ecc_result dummy; */ 
14740: /* MUTANT (negate) */	if(! (!init)) {
14741: /* MUTANT (del_stmt) */ /* 		mymemset(&spare_ff, 0xff, sizeof(spare_ff)); */ 
14741: /* MUTANT (rep_const) */		mymemset(&spare_ff, 1xff, sizeof(spare_ff));
14741: /* MUTANT (rep_const) */		mymemset(&spare_ff, -1xff, sizeof(spare_ff));
14742: /* MUTANT (del_stmt) */ /* 		init = 1; */ 
14742: /* MUTANT (rep_const) */		init = 0;
14742: /* MUTANT (rep_const) */		init = -1;
14742: /* MUTANT (rep_const) */		init = ((1)+1);
14745: /* MUTANT (rep_const) */	*seq_number = 1;
14745: /* MUTANT (rep_const) */	*seq_number = -1;
14748: /* MUTANT (rep_const) */			    &spare0, &dummy, 0);
14748: /* MUTANT (rep_const) */			    &spare0, &dummy, -1);
14748: /* MUTANT (rep_const) */			    &spare0, &dummy, ((1)+1));
14749: /* MUTANT (rep_op) */	yaffs_rd_chunk_nand(dev, block_no * dev->param.chunks_per_block - 1,
14749: /* MUTANT (rep_op) */	yaffs_rd_chunk_nand(dev, block_no * dev->param.chunks_per_block * 1,
14749: /* MUTANT (rep_op) */	yaffs_rd_chunk_nand(dev, block_no * dev->param.chunks_per_block % 1,
14749: /* MUTANT (rep_const) */	yaffs_rd_chunk_nand(dev, block_no * dev->param.chunks_per_block + 0,
14749: /* MUTANT (rep_const) */	yaffs_rd_chunk_nand(dev, block_no * dev->param.chunks_per_block + -1,
14749: /* MUTANT (rep_const) */	yaffs_rd_chunk_nand(dev, block_no * dev->param.chunks_per_block + ((1)+1),
14750: /* MUTANT (rep_const) */			    NULL, &spare1, &dummy, 0);
14750: /* MUTANT (rep_const) */			    NULL, &spare1, &dummy, -1);
14750: /* MUTANT (rep_const) */			    NULL, &spare1, &dummy, ((1)+1));
14752: /* MUTANT (rep_op) */	if (hweight8(spare0.block_status & spare1.block_status) <= 7)
14752: /* MUTANT (rep_op) */	if (hweight8(spare0.block_status & spare1.block_status) > 7)
14752: /* MUTANT (rep_op) */	if (hweight8(spare0.block_status & spare1.block_status) >= 7)
14752: /* MUTANT (rep_op) */	if (hweight8(spare0.block_status & spare1.block_status) == 7)
14752: /* MUTANT (rep_op) */	if (hweight8(spare0.block_status & spare1.block_status) != 7)
14752: /* MUTANT (rep_const) */	if (hweight8(spare0.block_status & spare1.block_status) < 0)
14752: /* MUTANT (rep_const) */	if (hweight8(spare0.block_status & spare1.block_status) < 1)
14752: /* MUTANT (rep_const) */	if (hweight8(spare0.block_status & spare1.block_status) < -1)
14752: /* MUTANT (rep_const) */	if (hweight8(spare0.block_status & spare1.block_status) < ((7)+1))
14752: /* MUTANT (rep_const) */	if (hweight8(spare0.block_status & spare1.block_status) < ((7)-1))
14752: /* MUTANT (negate) */	if(! (hweight8(spare0.block_status & spare1.block_status) < 7))
14754: /* MUTANT (rep_op) */	else if (mymemcmp(&spare_ff, &spare0, sizeof(spare_ff)) != 0)
14754: /* MUTANT (rep_const) */	else if (mymemcmp(&spare_ff, &spare0, sizeof(spare_ff)) == 1)
14754: /* MUTANT (rep_const) */	else if (mymemcmp(&spare_ff, &spare0, sizeof(spare_ff)) == -1)
14754: /* MUTANT (negate) */	else if(! (mymemcmp(&spare_ff, &spare0, sizeof(spare_ff)) == 0))
14759: /* MUTANT (del_stmt) */ /* 	return YAFFS_OK; */ 
